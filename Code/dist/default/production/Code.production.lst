

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon May 04 00:31:35 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    82  0000                     
    83                           	psect	idataBANK0
    84  003820                     __pidataBANK0:
    85                           	opt stack 0
    86                           
    87                           ;initializer for main@premiere_fois
    88  003820  01                 	db	1
    89                           
    90                           	psect	smallconst
    91  000300                     __psmallconst:
    92                           	opt stack 0
    93  000300  00                 	db	0
    94  000301                     sin@coeff_a:
    95                           	opt stack 0
    96  000301  F4                 	db	244
    97  000302  4A                 	db	74
    98  000303  48                 	db	72
    99  000304  95                 	db	149
   100  000305  95                 	db	149
   101  000306  C7                 	db	199
   102  000307  C1                 	db	193
   103  000308  DC                 	db	220
   104  000309  45                 	db	69
   105  00030A  DC                 	db	220
   106  00030B  6D                 	db	109
   107  00030C  C3                 	db	195
   108  00030D  B3                 	db	179
   109  00030E  33                 	db	51
   110  00030F  40                 	db	64
   111  000310                     __end_ofsin@coeff_a:
   112                           	opt stack 0
   113  000310                     sin@coeff_b:
   114                           	opt stack 0
   115  000310  34                 	db	52
   116  000311  01                 	db	1
   117  000312  48                 	db	72
   118  000313  9D                 	db	157
   119  000314  B0                 	db	176
   120  000315  45                 	db	69
   121  000316  00                 	db	0
   122  000317  DA                 	db	218
   123  000318  42                 	db	66
   124  000319  00                 	db	0
   125  00031A  80                 	db	128
   126  00031B  3F                 	db	63
   127  00031C                     __end_ofsin@coeff_b:
   128                           	opt stack 0
   129  0000                     _TMR1	set	4046
   130  0000                     _ANSEL0	set	4024
   131  0000                     _BAUDCONbits	set	4010
   132  0000                     _CAP1CONbits	set	3939
   133  0000                     _DFLTCONbits	set	3936
   134  0000                     _INTCON2bits	set	4081
   135  0000                     _INTCON3bits	set	4080
   136  0000                     _INTCONbits	set	4082
   137  0000                     _IPR1bits	set	3999
   138  0000                     _IPR2bits	set	4002
   139  0000                     _IPR3bits	set	4005
   140  0000                     _LATCbits	set	3979
   141  0000                     _MAXCNTH	set	3941
   142  0000                     _MAXCNTL	set	3940
   143  0000                     _PDC0H	set	3960
   144  0000                     _PDC0L	set	3961
   145  0000                     _PDC1H	set	3958
   146  0000                     _PDC1L	set	3959
   147  0000                     _PDC2H	set	3956
   148  0000                     _PDC2L	set	3957
   149  0000                     _PDC3H	set	3954
   150  0000                     _PDC3L	set	3955
   151  0000                     _PIE1bits	set	3997
   152  0000                     _PIE2bits	set	4000
   153  0000                     _PIE3bits	set	4003
   154  0000                     _PIR1bits	set	3998
   155  0000                     _PIR2bits	set	4001
   156  0000                     _PIR3bits	set	4004
   157  0000                     _PORTBbits	set	3969
   158  0000                     _PORTCbits	set	3970
   159  0000                     _PORTDbits	set	3971
   160  0000                     _POSCNTH	set	3943
   161  0000                     _POSCNTL	set	3942
   162  0000                     _PTCON0bits	set	3967
   163  0000                     _PTCON1bits	set	3966
   164  0000                     _PTPERH	set	3962
   165  0000                     _PTPERL	set	3963
   166  0000                     _PWMCON0bits	set	3951
   167  0000                     _PWMCON1bits	set	3950
   168  0000                     _QEICONbits	set	4022
   169  0000                     _RCONbits	set	4048
   170  0000                     _RCREG	set	4014
   171  0000                     _RCSTAbits	set	4011
   172  0000                     _SPBRG	set	4015
   173  0000                     _T0CONbits	set	4053
   174  0000                     _T1CONbits	set	4045
   175  0000                     _TMR0L	set	4054
   176  0000                     _TRISAbits	set	3986
   177  0000                     _TRISBbits	set	3987
   178  0000                     _TRISCbits	set	3988
   179  0000                     _TRISDbits	set	3989
   180  0000                     _TRISEbits	set	3990
   181  0000                     _TXREG	set	4013
   182  0000                     _TXSTAbits	set	4012
   183  0000                     _LATA0	set	31816
   184  0000                     _LATA1	set	31817
   185  0000                     _LATA2	set	31818
   186  0000                     _LATA3	set	31819
   187  0000                     _LATA4	set	31820
   188  0000                     _LATA5	set	31821
   189  0000                     _LATA6	set	31822
   190  0000                     _LATA7	set	31823
   191  0000                     _LATB0	set	31824
   192  0000                     _LATB1	set	31825
   193  0000                     _LATB2	set	31826
   194  0000                     _LATB3	set	31827
   195  0000                     _LATB4	set	31828
   196  0000                     _LATB5	set	31829
   197  0000                     _LATB6	set	31830
   198  0000                     _LATB7	set	31831
   199  0000                     _LATC0	set	31832
   200  0000                     _LATC1	set	31833
   201  0000                     _LATC2	set	31834
   202  0000                     _LATC3	set	31835
   203  0000                     _LATC4	set	31836
   204  0000                     _LATC5	set	31837
   205  0000                     _LATC6	set	31838
   206  0000                     _LATC7	set	31839
   207  0000                     _LATD0	set	31840
   208  0000                     _LATD1	set	31841
   209  0000                     _LATD2	set	31842
   210  0000                     _LATD3	set	31843
   211  0000                     _LATD4	set	31844
   212  0000                     _LATD5	set	31845
   213  0000                     _LATD6	set	31846
   214  0000                     _LATD7	set	31847
   215  0000                     _LATE0	set	31848
   216  0000                     _LATE1	set	31849
   217  0000                     _LATE2	set	31850
   218  0000                     _TMR0ON	set	32431
   219  0000                     _TMR1ON	set	32360
   220  00031C                     STR_2:
   221                           
   222                           ; BSR set to: 1
   223  00031C  0A                 	db	10
   224  00031D  0A                 	db	10
   225  00031E  50                 	db	80	;'P'
   226  00031F  72                 	db	114	;'r'
   227  000320  6F                 	db	111	;'o'
   228  000321  62                 	db	98	;'b'
   229  000322  6C                 	db	108	;'l'
   230  000323  65                 	db	101	;'e'
   231  000324  6D                 	db	109	;'m'
   232  000325  65                 	db	101	;'e'
   233  000326  20                 	db	32
   234  000327  64                 	db	100	;'d'
   235  000328  65                 	db	101	;'e'
   236  000329  20                 	db	32
   237  00032A  64                 	db	100	;'d'
   238  00032B  65                 	db	101	;'e'
   239  00032C  74                 	db	116	;'t'
   240  00032D  65                 	db	101	;'e'
   241  00032E  63                 	db	99	;'c'
   242  00032F  74                 	db	116	;'t'
   243  000330  69                 	db	105	;'i'
   244  000331  6F                 	db	111	;'o'
   245  000332  6E                 	db	110	;'n'
   246  000333  20                 	db	32
   247  000334  64                 	db	100	;'d'
   248  000335  65                 	db	101	;'e'
   249  000336  20                 	db	32
   250  000337  62                 	db	98	;'b'
   251  000338  61                 	db	97	;'a'
   252  000339  6C                 	db	108	;'l'
   253  00033A  69                 	db	105	;'i'
   254  00033B  73                 	db	115	;'s'
   255  00033C  65                 	db	101	;'e'
   256  00033D  73                 	db	115	;'s'
   257  00033E  20                 	db	32
   258  00033F  2E                 	db	46
   259  000340  2E                 	db	46
   260  000341  2E                 	db	46
   261  000342  2E                 	db	46
   262  000343  20                 	db	32
   263  000344  3A                 	db	58	;':'
   264  000345  20                 	db	32
   265  000346  00                 	db	0
   266  000347                     
   267                           ; BSR set to: 1
   268  000347  0A                 	db	10
   269  000348  0D                 	db	13
   270  000349  20                 	db	32
   271  00034A  52                 	db	82	;'R'
   272  00034B  4F                 	db	79	;'O'
   273  00034C  54                 	db	84	;'T'
   274  00034D  41                 	db	65	;'A'
   275  00034E  54                 	db	84	;'T'
   276  00034F  49                 	db	73	;'I'
   277  000350  4F                 	db	79	;'O'
   278  000351  4E                 	db	78	;'N'
   279  000352  20                 	db	32
   280  000353  41                 	db	65	;'A'
   281  000354  20                 	db	32
   282  000355  47                 	db	71	;'G'
   283  000356  41                 	db	65	;'A'
   284  000357  55                 	db	85	;'U'
   285  000358  43                 	db	67	;'C'
   286  000359  48                 	db	72	;'H'
   287  00035A  45                 	db	69	;'E'
   288  00035B  20                 	db	32
   289  00035C  0A                 	db	10
   290  00035D  0D                 	db	13
   291  00035E  00                 	db	0
   292  00035F                     
   293                           ; BSR set to: 1
   294  00035F  0A                 	db	10
   295  000360  0D                 	db	13
   296  000361  20                 	db	32
   297  000362  52                 	db	82	;'R'
   298  000363  4F                 	db	79	;'O'
   299  000364  54                 	db	84	;'T'
   300  000365  41                 	db	65	;'A'
   301  000366  54                 	db	84	;'T'
   302  000367  49                 	db	73	;'I'
   303  000368  4F                 	db	79	;'O'
   304  000369  4E                 	db	78	;'N'
   305  00036A  20                 	db	32
   306  00036B  41                 	db	65	;'A'
   307  00036C  20                 	db	32
   308  00036D  44                 	db	68	;'D'
   309  00036E  52                 	db	82	;'R'
   310  00036F  4F                 	db	79	;'O'
   311  000370  49                 	db	73	;'I'
   312  000371  54                 	db	84	;'T'
   313  000372  45                 	db	69	;'E'
   314  000373  20                 	db	32
   315  000374  0A                 	db	10
   316  000375  0D                 	db	13
   317  000376  00                 	db	0
   318  000377                     STR_3:
   319                           
   320                           ; BSR set to: 1
   321  000377  20                 	db	32
   322  000378  42                 	db	66	;'B'
   323  000379  61                 	db	97	;'a'
   324  00037A  6C                 	db	108	;'l'
   325  00037B  69                 	db	105	;'i'
   326  00037C  73                 	db	115	;'s'
   327  00037D  65                 	db	101	;'e'
   328  00037E  73                 	db	115	;'s'
   329  00037F  20                 	db	32
   330  000380  64                 	db	100	;'d'
   331  000381  65                 	db	101	;'e'
   332  000382  74                 	db	116	;'t'
   333  000383  65                 	db	101	;'e'
   334  000384  63                 	db	99	;'c'
   335  000385  74                 	db	116	;'t'
   336  000386  65                 	db	101	;'e'
   337  000387  65                 	db	101	;'e'
   338  000388  73                 	db	115	;'s'
   339  000389  20                 	db	32
   340  00038A  0A                 	db	10
   341  00038B  0A                 	db	10
   342  00038C  0A                 	db	10
   343  00038D  0D                 	db	13
   344  00038E  00                 	db	0
   345  00038F                     STR_1:
   346                           
   347                           ; BSR set to: 1
   348  00038F  42                 	db	66	;'B'
   349  000390  6F                 	db	111	;'o'
   350  000391  6E                 	db	110	;'n'
   351  000392  6A                 	db	106	;'j'
   352  000393  6F                 	db	111	;'o'
   353  000394  75                 	db	117	;'u'
   354  000395  72                 	db	114	;'r'
   355  000396  20                 	db	32
   356  000397  6C                 	db	108	;'l'
   357  000398  65                 	db	101	;'e'
   358  000399  73                 	db	115	;'s'
   359  00039A  20                 	db	32
   360  00039B  61                 	db	97	;'a'
   361  00039C  6D                 	db	109	;'m'
   362  00039D  69                 	db	105	;'i'
   363  00039E  73                 	db	115	;'s'
   364  00039F  20                 	db	32
   365  0003A0  21                 	db	33
   366  0003A1  21                 	db	33
   367  0003A2  21                 	db	33
   368  0003A3  20                 	db	32
   369  0003A4  3D                 	db	61	;'='
   370  0003A5  29                 	db	41
   371  0003A6  00                 	db	0
   372  0003A7                     
   373                           ; BSR set to: 1
   374  0003A7  20                 	db	32
   375  0003A8  64                 	db	100	;'d'
   376  0003A9  61                 	db	97	;'a'
   377  0003AA  6E                 	db	110	;'n'
   378  0003AB  73                 	db	115	;'s'
   379  0003AC  20                 	db	32
   380  0003AD  6C                 	db	108	;'l'
   381  0003AE  65                 	db	101	;'e'
   382  0003AF  20                 	db	32
   383  0003B0  62                 	db	98	;'b'
   384  0003B1  75                 	db	117	;'u'
   385  0003B2  66                 	db	102	;'f'
   386  0003B3  66                 	db	102	;'f'
   387  0003B4  65                 	db	101	;'e'
   388  0003B5  72                 	db	114	;'r'
   389  0003B6  20                 	db	32
   390  0003B7  0A                 	db	10
   391  0003B8  0A                 	db	10
   392  0003B9  0D                 	db	13
   393  0003BA  00                 	db	0
   394  0003BB                     STR_8:
   395                           
   396                           ; BSR set to: 1
   397  0003BB  50                 	db	80	;'P'
   398  0003BC  6F                 	db	111	;'o'
   399  0003BD  73                 	db	115	;'s'
   400  0003BE  69                 	db	105	;'i'
   401  0003BF  74                 	db	116	;'t'
   402  0003C0  69                 	db	105	;'i'
   403  0003C1  6F                 	db	111	;'o'
   404  0003C2  6E                 	db	110	;'n'
   405  0003C3  20                 	db	32
   406  0003C4  3A                 	db	58	;':'
   407  0003C5  20                 	db	32
   408  0003C6  58                 	db	88	;'X'
   409  0003C7  20                 	db	32
   410  0003C8  3A                 	db	58	;':'
   411  0003C9  20                 	db	32
   412  0003CA  00                 	db	0
   413  0003CB                     
   414                           ; BSR set to: 1
   415  0003CB  49                 	db	73	;'I'
   416  0003CC  4C                 	db	76	;'L'
   417  0003CD  20                 	db	32
   418  0003CE  79                 	db	121	;'y'
   419  0003CF  20                 	db	32
   420  0003D0  61                 	db	97	;'a'
   421  0003D1  20                 	db	32
   422  0003D2  00                 	db	0
   423  0003D3                     STR_9:
   424                           
   425                           ; BSR set to: 1
   426  0003D3  20                 	db	32
   427  0003D4  59                 	db	89	;'Y'
   428  0003D5  20                 	db	32
   429  0003D6  3A                 	db	58	;':'
   430  0003D7  20                 	db	32
   431  0003D8  00                 	db	0
   432  0000                     
   433                           ; #config settings
   434  0003D9  00                 	db	0	; dummy byte at the end
   435  0000                     
   436                           	psect	cinit
   437  003574                     __pcinit:
   438                           	opt stack 0
   439  003574                     start_initialization:
   440                           	opt stack 0
   441  003574                     __initialization:
   442                           	opt stack 0
   443                           
   444                           ; Clear objects allocated to BANK1 (142 bytes)
   445  003574  EE01  F000         	lfsr	0,__pbssBANK1
   446  003578  0E8E               	movlw	142
   447  00357A                     clear_0:
   448  00357A  6AEE               	clrf	postinc0,c
   449  00357C  06E8               	decf	wreg,f,c
   450  00357E  E1FD               	bnz	clear_0
   451                           
   452                           ; Clear objects allocated to BANK0 (59 bytes)
   453  003580  EE00  F0C4         	lfsr	0,__pbssBANK0
   454  003584  0E3B               	movlw	59
   455  003586                     clear_1:
   456  003586  6AEE               	clrf	postinc0,c
   457  003588  06E8               	decf	wreg,f,c
   458  00358A  E1FD               	bnz	clear_1
   459                           
   460                           ; Clear objects allocated to COMRAM (34 bytes)
   461  00358C  EE00  F026         	lfsr	0,__pbssCOMRAM
   462  003590  0E22               	movlw	34
   463  003592                     clear_2:
   464  003592  6AEE               	clrf	postinc0,c
   465  003594  06E8               	decf	wreg,f,c
   466  003596  E1FD               	bnz	clear_2
   467                           
   468                           ; Initialize objects allocated to BANK0 (1 bytes)
   469                           ; load TBLPTR registers with __pidataBANK0
   470  003598  0E20               	movlw	low __pidataBANK0
   471  00359A  6EF6               	movwf	tblptrl,c
   472  00359C  0E38               	movlw	high __pidataBANK0
   473  00359E  6EF7               	movwf	tblptrh,c
   474  0035A0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   475  0035A2  6EF8               	movwf	tblptru,c
   476  0035A4  0009               	tblrd		*+	;fetch initializer
   477  0035A6  CFF5 F0FF          	movff	tablat,__pdataBANK0
   478  0035AA                     end_of_initialization:
   479                           	opt stack 0
   480  0035AA                     __end_of__initialization:
   481                           	opt stack 0
   482  0035AA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   483  0035AC  6EF8               	movwf	tblptru,c
   484  0035AE  0100               	movlb	0
   485  0035B0  EF8F  F006         	goto	_main	;jump to C main() function
   486                           tblptru	equ	0xFF8
   487                           tblptrh	equ	0xFF7
   488                           tblptrl	equ	0xFF6
   489                           tablat	equ	0xFF5
   490                           postinc0	equ	0xFEE
   491                           wreg	equ	0xFE8
   492                           
   493                           	psect	bssCOMRAM
   494  000026                     __pbssCOMRAM:
   495                           	opt stack 0
   496  000026                     _position:
   497                           	opt stack 0
   498  000026                     	ds	11
   499  000031                     fonction_PID@commande:
   500                           	opt stack 0
   501  000031                     	ds	3
   502  000034                     _errno:
   503                           	opt stack 0
   504  000034                     	ds	2
   505  000036                     _OVERFLOW_CODEUR:
   506                           	opt stack 0
   507  000036                     	ds	1
   508  000037                     _flag_cpateur:
   509                           	opt stack 0
   510  000037                     	ds	1
   511  000038                     _uart_logiciel:
   512                           	opt stack 0
   513  000038                     	ds	13
   514  000045                     asserv@commande:
   515                           	opt stack 0
   516  000045                     	ds	3
   517                           tblptru	equ	0xFF8
   518                           tblptrh	equ	0xFF7
   519                           tblptrl	equ	0xFF6
   520                           tablat	equ	0xFF5
   521                           postinc0	equ	0xFEE
   522                           wreg	equ	0xFE8
   523                           
   524                           	psect	bssBANK0
   525  0000C4                     __pbssBANK0:
   526                           	opt stack 0
   527  0000C4                     _ERREUR_VITESSE:
   528                           	opt stack 0
   529  0000C4                     	ds	9
   530  0000CD                     _VITESSE:
   531                           	opt stack 0
   532  0000CD                     	ds	6
   533  0000D3                     main@ancien_x:
   534                           	opt stack 0
   535  0000D3                     	ds	3
   536  0000D6                     main@ancien_y:
   537                           	opt stack 0
   538  0000D6                     	ds	3
   539  0000D9                     _capteur:
   540                           	opt stack 0
   541  0000D9                     	ds	29
   542  0000F6                     main@x:
   543                           	opt stack 0
   544  0000F6                     	ds	9
   545                           tblptru	equ	0xFF8
   546                           tblptrh	equ	0xFF7
   547                           tblptrl	equ	0xFF6
   548                           tablat	equ	0xFF5
   549                           postinc0	equ	0xFEE
   550                           wreg	equ	0xFE8
   551                           
   552                           	psect	dataBANK0
   553  0000FF                     __pdataBANK0:
   554                           	opt stack 0
   555  0000FF                     main@premiere_fois:
   556                           	opt stack 0
   557  0000FF                     	ds	1
   558                           tblptru	equ	0xFF8
   559                           tblptrh	equ	0xFF7
   560                           tblptrl	equ	0xFF6
   561                           tablat	equ	0xFF5
   562                           postinc0	equ	0xFEE
   563                           wreg	equ	0xFE8
   564                           
   565                           	psect	bssBANK1
   566  000100                     __pbssBANK1:
   567                           	opt stack 0
   568  000100                     _PID:
   569                           	opt stack 0
   570  000100                     	ds	9
   571  000109                     main@distance:
   572                           	opt stack 0
   573  000109                     	ds	9
   574  000112                     get_valeur_codeur@res:
   575                           	opt stack 0
   576  000112                     	ds	4
   577  000116                     _uart_reception:
   578                           	opt stack 0
   579  000116                     	ds	103
   580  00017D                     main@y:
   581                           	opt stack 0
   582  00017D                     	ds	9
   583  000186                     IntToC@out:
   584                           	opt stack 0
   585  000186                     	ds	8
   586                           tblptru	equ	0xFF8
   587                           tblptrh	equ	0xFF7
   588                           tblptrl	equ	0xFF6
   589                           tablat	equ	0xFF5
   590                           postinc0	equ	0xFEE
   591                           wreg	equ	0xFE8
   592                           
   593                           	psect	cstackBANK1
   594  00018E                     __pcstackBANK1:
   595                           	opt stack 0
   596  00018E                     triangulation@x:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x0
   600  00018E                     	ds	2
   601  000190                     triangulation@y:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x2
   605  000190                     	ds	2
   606  000192                     triangulation@angle1:
   607                           	opt stack 0
   608                           
   609                           ; 3 bytes @ 0x4
   610  000192                     	ds	3
   611  000195                     triangulation@angle2:
   612                           	opt stack 0
   613                           
   614                           ; 3 bytes @ 0x7
   615  000195                     	ds	3
   616  000198                     triangulation@angle3:
   617                           	opt stack 0
   618                           
   619                           ; 3 bytes @ 0xA
   620  000198                     	ds	3
   621  00019B                     triangulation@x1:
   622                           	opt stack 0
   623                           
   624                           ; 3 bytes @ 0xD
   625  00019B                     	ds	3
   626  00019E                     triangulation@y1:
   627                           	opt stack 0
   628                           
   629                           ; 3 bytes @ 0x10
   630  00019E                     	ds	3
   631  0001A1                     triangulation@x3:
   632                           	opt stack 0
   633                           
   634                           ; 3 bytes @ 0x13
   635  0001A1                     	ds	3
   636  0001A4                     triangulation@y3:
   637                           	opt stack 0
   638                           
   639                           ; 3 bytes @ 0x16
   640  0001A4                     	ds	3
   641  0001A7                     triangulation@c31x:
   642                           	opt stack 0
   643                           
   644                           ; 3 bytes @ 0x19
   645  0001A7                     	ds	3
   646  0001AA                     triangulation@c31y:
   647                           	opt stack 0
   648                           
   649                           ; 3 bytes @ 0x1C
   650  0001AA                     	ds	3
   651  0001AD                     triangulation@k31:
   652                           	opt stack 0
   653                           
   654                           ; 3 bytes @ 0x1F
   655  0001AD                     	ds	3
   656  0001B0                     triangulation@D:
   657                           	opt stack 0
   658                           
   659                           ; 3 bytes @ 0x22
   660  0001B0                     	ds	3
   661  0001B3                     triangulation@invD:
   662                           	opt stack 0
   663                           
   664                           ; 3 bytes @ 0x25
   665  0001B3                     	ds	3
   666  0001B6                     _triangulation$3246:
   667                           	opt stack 0
   668                           
   669                           ; 3 bytes @ 0x28
   670  0001B6                     	ds	3
   671  0001B9                     triangulation@c12x:
   672                           	opt stack 0
   673                           
   674                           ; 3 bytes @ 0x2B
   675  0001B9                     	ds	3
   676  0001BC                     triangulation@c12y:
   677                           	opt stack 0
   678                           
   679                           ; 3 bytes @ 0x2E
   680  0001BC                     	ds	3
   681  0001BF                     triangulation@K:
   682                           	opt stack 0
   683                           
   684                           ; 3 bytes @ 0x31
   685  0001BF                     	ds	3
   686  0001C2                     _triangulation$3242:
   687                           	opt stack 0
   688                           
   689                           ; 3 bytes @ 0x34
   690  0001C2                     	ds	3
   691  0001C5                     _triangulation$3245:
   692                           	opt stack 0
   693                           
   694                           ; 3 bytes @ 0x37
   695  0001C5                     	ds	3
   696  0001C8                     triangulation@x2:
   697                           	opt stack 0
   698                           
   699                           ; 3 bytes @ 0x3A
   700  0001C8                     	ds	3
   701  0001CB                     triangulation@y2:
   702                           	opt stack 0
   703                           
   704                           ; 3 bytes @ 0x3D
   705  0001CB                     	ds	3
   706  0001CE                     triangulation@c23x:
   707                           	opt stack 0
   708                           
   709                           ; 3 bytes @ 0x40
   710  0001CE                     	ds	3
   711  0001D1                     triangulation@c23y:
   712                           	opt stack 0
   713                           
   714                           ; 3 bytes @ 0x43
   715  0001D1                     	ds	3
   716  0001D4                     _triangulation$3243:
   717                           	opt stack 0
   718                           
   719                           ; 3 bytes @ 0x46
   720  0001D4                     	ds	3
   721  0001D7                     triangulation@cot_31:
   722                           	opt stack 0
   723                           
   724                           ; 3 bytes @ 0x49
   725  0001D7                     	ds	3
   726  0001DA                     _triangulation$3244:
   727                           	opt stack 0
   728                           
   729                           ; 3 bytes @ 0x4C
   730  0001DA                     	ds	3
   731  0001DD                     triangulation@cot_12:
   732                           	opt stack 0
   733                           
   734                           ; 3 bytes @ 0x4F
   735  0001DD                     	ds	3
   736  0001E0                     triangulation@cot_23:
   737                           	opt stack 0
   738                           
   739                           ; 3 bytes @ 0x52
   740  0001E0                     	ds	3
   741  0001E3                     triangulation@x1_:
   742                           	opt stack 0
   743                           
   744                           ; 3 bytes @ 0x55
   745  0001E3                     	ds	3
   746  0001E6                     triangulation@y1_:
   747                           	opt stack 0
   748                           
   749                           ; 3 bytes @ 0x58
   750  0001E6                     	ds	3
   751  0001E9                     triangulation@x3_:
   752                           	opt stack 0
   753                           
   754                           ; 3 bytes @ 0x5B
   755  0001E9                     	ds	3
   756  0001EC                     triangulation@y3_:
   757                           	opt stack 0
   758                           
   759                           ; 3 bytes @ 0x5E
   760  0001EC                     	ds	3
   761  0001EF                     
   762                           ; 2 bytes @ 0x61
   763  0001EF                     	ds	2
   764  0001F1                     
   765                           ; 3 bytes @ 0x63
   766  0001F1                     	ds	3
   767  0001F4                     main@i:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x66
   771  0001F4                     	ds	2
   772                           tblptru	equ	0xFF8
   773                           tblptrh	equ	0xFF7
   774                           tblptrl	equ	0xFF6
   775                           tablat	equ	0xFF5
   776                           postinc0	equ	0xFEE
   777                           wreg	equ	0xFE8
   778                           
   779                           	psect	cstackBANK0
   780  000060                     __pcstackBANK0:
   781                           	opt stack 0
   782  000060                     ?___wmul:
   783                           	opt stack 0
   784  000060                     ?___ftpack:
   785                           	opt stack 0
   786  000060                     ?___fttol:
   787                           	opt stack 0
   788  000060                     ___wmul@multiplier:
   789                           	opt stack 0
   790  000060                     ___ftpack@arg:
   791                           	opt stack 0
   792  000060                     ___fttol@f1:
   793                           	opt stack 0
   794  000060                     frexp@value:
   795                           	opt stack 0
   796                           
   797                           ; 3 bytes @ 0x0
   798  000060                     	ds	2
   799  000062                     ___wmul@multiplicand:
   800                           	opt stack 0
   801                           
   802                           ; 2 bytes @ 0x2
   803  000062                     	ds	1
   804  000063                     ___ftpack@exp:
   805                           	opt stack 0
   806  000063                     frexp@eptr:
   807                           	opt stack 0
   808                           
   809                           ; 2 bytes @ 0x3
   810  000063                     	ds	1
   811  000064                     ??___fttol:
   812  000064                     ___ftpack@sign:
   813                           	opt stack 0
   814  000064                     ___wmul@product:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0x4
   818  000064                     	ds	1
   819  000065                     ??___ftpack:
   820  000065                     ??_frexp:
   821                           
   822                           ; 0 bytes @ 0x5
   823  000065                     	ds	1
   824  000066                     ?___awdiv:
   825                           	opt stack 0
   826  000066                     ___awdiv@dividend:
   827                           	opt stack 0
   828                           
   829                           ; 2 bytes @ 0x6
   830  000066                     	ds	2
   831  000068                     ?___ftmul:
   832                           	opt stack 0
   833  000068                     ?___lwtoft:
   834                           	opt stack 0
   835  000068                     ___awdiv@divisor:
   836                           	opt stack 0
   837  000068                     ___lwtoft@c:
   838                           	opt stack 0
   839  000068                     ___ftmul@f1:
   840                           	opt stack 0
   841                           
   842                           ; 3 bytes @ 0x8
   843  000068                     	ds	1
   844  000069                     ___fttol@sign1:
   845                           	opt stack 0
   846                           
   847                           ; 1 bytes @ 0x9
   848  000069                     	ds	1
   849  00006A                     ___awdiv@counter:
   850                           	opt stack 0
   851  00006A                     ___fttol@lval:
   852                           	opt stack 0
   853                           
   854                           ; 4 bytes @ 0xA
   855  00006A                     	ds	1
   856  00006B                     ___awdiv@sign:
   857                           	opt stack 0
   858  00006B                     ___ftmul@f2:
   859                           	opt stack 0
   860                           
   861                           ; 3 bytes @ 0xB
   862  00006B                     	ds	1
   863  00006C                     ___awdiv@quotient:
   864                           	opt stack 0
   865                           
   866                           ; 2 bytes @ 0xC
   867  00006C                     	ds	2
   868  00006E                     ??___ftmul:
   869  00006E                     ?_IntToC:
   870                           	opt stack 0
   871  00006E                     PutcUART@octet:
   872                           	opt stack 0
   873  00006E                     ___fttol@exp1:
   874                           	opt stack 0
   875  00006E                     IntToC@nb:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0xE
   879  00006E                     	ds	1
   880  00006F                     ??_PutcUART:
   881  00006F                     ?___altoft:
   882                           	opt stack 0
   883  00006F                     ___altoft@c:
   884                           	opt stack 0
   885                           
   886                           ; 4 bytes @ 0xF
   887  00006F                     	ds	1
   888  000070                     ??_IntToC:
   889                           
   890                           ; 0 bytes @ 0x10
   891  000070                     	ds	1
   892  000071                     ___ftmul@exp:
   893                           	opt stack 0
   894                           
   895                           ; 1 bytes @ 0x11
   896  000071                     	ds	1
   897  000072                     ___ftmul@f3_as_product:
   898                           	opt stack 0
   899  000072                     IntToC@i:
   900                           	opt stack 0
   901                           
   902                           ; 10 bytes @ 0x12
   903  000072                     	ds	1
   904  000073                     ??___altoft:
   905                           
   906                           ; 0 bytes @ 0x13
   907  000073                     	ds	2
   908  000075                     PutcUART@type_uart:
   909                           	opt stack 0
   910  000075                     ___ftmul@cntr:
   911                           	opt stack 0
   912                           
   913                           ; 1 bytes @ 0x15
   914  000075                     	ds	1
   915  000076                     ___ftmul@sign:
   916                           	opt stack 0
   917                           
   918                           ; 1 bytes @ 0x16
   919  000076                     	ds	1
   920  000077                     ?___ftneg:
   921                           	opt stack 0
   922  000077                     ___altoft@exp:
   923                           	opt stack 0
   924  000077                     ___ftneg@f1:
   925                           	opt stack 0
   926                           
   927                           ; 3 bytes @ 0x17
   928  000077                     	ds	1
   929  000078                     ___altoft@sign:
   930                           	opt stack 0
   931                           
   932                           ; 1 bytes @ 0x18
   933  000078                     	ds	2
   934  00007A                     ?___ftadd:
   935                           	opt stack 0
   936  00007A                     ___ftadd@f1:
   937                           	opt stack 0
   938  00007A                     ___ftge@ff1:
   939                           	opt stack 0
   940                           
   941                           ; 3 bytes @ 0x1A
   942  00007A                     	ds	2
   943  00007C                     IntToC@j:
   944                           	opt stack 0
   945                           
   946                           ; 2 bytes @ 0x1C
   947  00007C                     	ds	1
   948  00007D                     ___ftadd@f2:
   949                           	opt stack 0
   950  00007D                     ___ftge@ff2:
   951                           	opt stack 0
   952                           
   953                           ; 3 bytes @ 0x1D
   954  00007D                     	ds	1
   955  00007E                     PutsUART@chaine:
   956                           	opt stack 0
   957                           
   958                           ; 2 bytes @ 0x1E
   959  00007E                     	ds	2
   960  000080                     ??_PutsUART:
   961  000080                     ??___ftadd:
   962  000080                     ??___ftge:
   963                           
   964                           ; 0 bytes @ 0x20
   965  000080                     	ds	2
   966  000082                     PutsUART@type_uart:
   967                           	opt stack 0
   968                           
   969                           ; 1 bytes @ 0x22
   970  000082                     	ds	1
   971  000083                     ?_saturation:
   972                           	opt stack 0
   973  000083                     ___ftadd@sign:
   974                           	opt stack 0
   975  000083                     PutIntUART@nb:
   976                           	opt stack 0
   977  000083                     envoit_pwm@valeur:
   978                           	opt stack 0
   979  000083                     saturation@valeur:
   980                           	opt stack 0
   981                           
   982                           ; 3 bytes @ 0x23
   983  000083                     	ds	1
   984  000084                     ___ftadd@exp2:
   985                           	opt stack 0
   986                           
   987                           ; 1 bytes @ 0x24
   988  000084                     	ds	1
   989  000085                     PutIntUART@type_uart:
   990                           	opt stack 0
   991  000085                     ___ftadd@exp1:
   992                           	opt stack 0
   993                           
   994                           ; 1 bytes @ 0x25
   995  000085                     	ds	1
   996  000086                     ?_floor:
   997                           	opt stack 0
   998  000086                     ?_eval_poly:
   999                           	opt stack 0
  1000  000086                     envoit_pwm@abs_valeur:
  1001                           	opt stack 0
  1002  000086                     saturation@maximum:
  1003                           	opt stack 0
  1004  000086                     affichage_position@x:
  1005                           	opt stack 0
  1006  000086                     eval_poly@x:
  1007                           	opt stack 0
  1008  000086                     floor@x:
  1009                           	opt stack 0
  1010                           
  1011                           ; 3 bytes @ 0x26
  1012  000086                     	ds	3
  1013  000089                     eval_poly@d:
  1014                           	opt stack 0
  1015  000089                     affichage_position@y:
  1016                           	opt stack 0
  1017  000089                     floor@i:
  1018                           	opt stack 0
  1019                           
  1020                           ; 3 bytes @ 0x29
  1021  000089                     	ds	2
  1022  00008B                     eval_poly@n:
  1023                           	opt stack 0
  1024                           
  1025                           ; 2 bytes @ 0x2B
  1026  00008B                     	ds	1
  1027  00008C                     floor@expon:
  1028                           	opt stack 0
  1029                           
  1030                           ; 2 bytes @ 0x2C
  1031  00008C                     	ds	1
  1032  00008D                     ??_eval_poly:
  1033                           
  1034                           ; 0 bytes @ 0x2D
  1035  00008D                     	ds	1
  1036  00008E                     ?___ftsub:
  1037                           	opt stack 0
  1038  00008E                     ___ftsub@f1:
  1039                           	opt stack 0
  1040                           
  1041                           ; 3 bytes @ 0x2E
  1042  00008E                     	ds	1
  1043  00008F                     eval_poly@res:
  1044                           	opt stack 0
  1045                           
  1046                           ; 3 bytes @ 0x2F
  1047  00008F                     	ds	2
  1048  000091                     ___ftsub@f2:
  1049                           	opt stack 0
  1050                           
  1051                           ; 3 bytes @ 0x31
  1052  000091                     	ds	1
  1053  000092                     ?___ftdiv:
  1054                           	opt stack 0
  1055  000092                     ___ftdiv@f1:
  1056                           	opt stack 0
  1057                           
  1058                           ; 3 bytes @ 0x32
  1059  000092                     	ds	2
  1060  000094                     ?_sqrt:
  1061                           	opt stack 0
  1062  000094                     sqrt@y:
  1063                           	opt stack 0
  1064                           
  1065                           ; 3 bytes @ 0x34
  1066  000094                     	ds	1
  1067  000095                     ___ftdiv@f2:
  1068                           	opt stack 0
  1069                           
  1070                           ; 3 bytes @ 0x35
  1071  000095                     	ds	2
  1072  000097                     ??_sqrt:
  1073                           
  1074                           ; 0 bytes @ 0x37
  1075  000097                     	ds	1
  1076  000098                     ??___ftdiv:
  1077                           
  1078                           ; 0 bytes @ 0x38
  1079  000098                     	ds	2
  1080  00009A                     sqrt@og:
  1081                           	opt stack 0
  1082                           
  1083                           ; 3 bytes @ 0x3A
  1084  00009A                     	ds	1
  1085  00009B                     ___ftdiv@cntr:
  1086                           	opt stack 0
  1087                           
  1088                           ; 1 bytes @ 0x3B
  1089  00009B                     	ds	1
  1090  00009C                     ___ftdiv@f3:
  1091                           	opt stack 0
  1092                           
  1093                           ; 3 bytes @ 0x3C
  1094  00009C                     	ds	1
  1095  00009D                     sqrt@z:
  1096                           	opt stack 0
  1097                           
  1098                           ; 3 bytes @ 0x3D
  1099  00009D                     	ds	2
  1100  00009F                     ___ftdiv@exp:
  1101                           	opt stack 0
  1102                           
  1103                           ; 1 bytes @ 0x3F
  1104  00009F                     	ds	1
  1105  0000A0                     ___ftdiv@sign:
  1106                           	opt stack 0
  1107  0000A0                     sqrt@i:
  1108                           	opt stack 0
  1109                           
  1110                           ; 1 bytes @ 0x40
  1111  0000A0                     	ds	1
  1112  0000A1                     ?_obtention_angle:
  1113                           	opt stack 0
  1114  0000A1                     ?_conversion_degre_radian:
  1115                           	opt stack 0
  1116  0000A1                     ?_sin:
  1117                           	opt stack 0
  1118  0000A1                     obtention_angle@position:
  1119                           	opt stack 0
  1120  0000A1                     conversion_degre_radian@angle:
  1121                           	opt stack 0
  1122  0000A1                     sqrt@q:
  1123                           	opt stack 0
  1124  0000A1                     sin@f:
  1125                           	opt stack 0
  1126                           
  1127                           ; 3 bytes @ 0x41
  1128  0000A1                     	ds	3
  1129  0000A4                     obtention_angle@angle:
  1130                           	opt stack 0
  1131  0000A4                     sqrt@x:
  1132                           	opt stack 0
  1133  0000A4                     sin@y:
  1134                           	opt stack 0
  1135                           
  1136                           ; 3 bytes @ 0x44
  1137  0000A4                     	ds	3
  1138  0000A7                     ?_get_distance:
  1139                           	opt stack 0
  1140  0000A7                     get_distance@ancien_x:
  1141                           	opt stack 0
  1142  0000A7                     _sin$3253:
  1143                           	opt stack 0
  1144                           
  1145                           ; 3 bytes @ 0x47
  1146  0000A7                     	ds	3
  1147  0000AA                     get_distance@ancien_y:
  1148                           	opt stack 0
  1149  0000AA                     sin@x2:
  1150                           	opt stack 0
  1151                           
  1152                           ; 3 bytes @ 0x4A
  1153  0000AA                     	ds	3
  1154  0000AD                     sin@sgn:
  1155                           	opt stack 0
  1156  0000AD                     get_distance@x:
  1157                           	opt stack 0
  1158                           
  1159                           ; 3 bytes @ 0x4D
  1160  0000AD                     	ds	1
  1161  0000AE                     ?_cos:
  1162                           	opt stack 0
  1163  0000AE                     cos@f:
  1164                           	opt stack 0
  1165                           
  1166                           ; 3 bytes @ 0x4E
  1167  0000AE                     	ds	2
  1168  0000B0                     get_distance@y:
  1169                           	opt stack 0
  1170                           
  1171                           ; 3 bytes @ 0x50
  1172  0000B0                     	ds	1
  1173  0000B1                     _cos$3252:
  1174                           	opt stack 0
  1175                           
  1176                           ; 3 bytes @ 0x51
  1177  0000B1                     	ds	2
  1178  0000B3                     get_distance@distance:
  1179                           	opt stack 0
  1180                           
  1181                           ; 3 bytes @ 0x53
  1182  0000B3                     	ds	1
  1183  0000B4                     ?_tan:
  1184                           	opt stack 0
  1185  0000B4                     tan@x:
  1186                           	opt stack 0
  1187                           
  1188                           ; 3 bytes @ 0x54
  1189  0000B4                     	ds	2
  1190  0000B6                     _get_distance$3249:
  1191                           	opt stack 0
  1192                           
  1193                           ; 3 bytes @ 0x56
  1194  0000B6                     	ds	1
  1195  0000B7                     _tan$3250:
  1196                           	opt stack 0
  1197                           
  1198                           ; 3 bytes @ 0x57
  1199  0000B7                     	ds	2
  1200  0000B9                     get_distance@delta_x:
  1201                           	opt stack 0
  1202                           
  1203                           ; 3 bytes @ 0x59
  1204  0000B9                     	ds	1
  1205  0000BA                     _tan$3251:
  1206                           	opt stack 0
  1207                           
  1208                           ; 3 bytes @ 0x5A
  1209  0000BA                     	ds	2
  1210  0000BC                     get_distance@delta_y:
  1211                           	opt stack 0
  1212                           
  1213                           ; 3 bytes @ 0x5C
  1214  0000BC                     	ds	1
  1215  0000BD                     ?_Cot:
  1216                           	opt stack 0
  1217  0000BD                     Cot@angle:
  1218                           	opt stack 0
  1219                           
  1220                           ; 3 bytes @ 0x5D
  1221  0000BD                     	ds	3
  1222  0000C0                     _Cot$3247:
  1223                           	opt stack 0
  1224                           
  1225                           ; 3 bytes @ 0x60
  1226  0000C0                     	ds	3
  1227  0000C3                     ??_main:
  1228                           
  1229                           ; 0 bytes @ 0x63
  1230  0000C3                     	ds	1
  1231                           tblptru	equ	0xFF8
  1232                           tblptrh	equ	0xFF7
  1233                           tblptrl	equ	0xFF6
  1234                           tablat	equ	0xFF5
  1235                           postinc0	equ	0xFEE
  1236                           wreg	equ	0xFE8
  1237                           
  1238                           	psect	cstackCOMRAM
  1239  000001                     __pcstackCOMRAM:
  1240                           	opt stack 0
  1241  000001                     ??_interruption_timer1:
  1242  000001                     ??_interruption_INT0:
  1243  000001                     interrupt_RX@temp:
  1244                           	opt stack 0
  1245                           
  1246                           ; 1 bytes @ 0x0
  1247  000001                     	ds	2
  1248  000003                     subroutine_interruptions@priorite:
  1249                           	opt stack 0
  1250                           
  1251                           ; 1 bytes @ 0x2
  1252  000003                     	ds	1
  1253  000004                     ??_low_isr:
  1254                           
  1255                           ; 0 bytes @ 0x3
  1256  000004                     	ds	17
  1257  000015                     ??i2_interruption_timer1:
  1258  000015                     ??i2_interruption_INT0:
  1259  000015                     i2interrupt_RX@temp:
  1260                           	opt stack 0
  1261                           
  1262                           ; 1 bytes @ 0x14
  1263  000015                     	ds	2
  1264  000017                     i2subroutine_interruptions@priorite:
  1265                           	opt stack 0
  1266                           
  1267                           ; 1 bytes @ 0x16
  1268  000017                     	ds	1
  1269  000018                     ??_high_isr:
  1270                           
  1271                           ; 0 bytes @ 0x17
  1272  000018                     	ds	14
  1273                           tblptru	equ	0xFF8
  1274                           tblptrh	equ	0xFF7
  1275                           tblptrl	equ	0xFF6
  1276                           tablat	equ	0xFF5
  1277                           postinc0	equ	0xFEE
  1278                           wreg	equ	0xFE8
  1279                           
  1280 ;;
  1281 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1282 ;;
  1283 ;; *************** function _main *****************
  1284 ;; Defined at:
  1285 ;;		line 83 in file "main.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  argc            2   97[BANK1 ] int 
  1288 ;;  argv            3   99[BANK1 ] PTR PTR unsigned char 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  i               2  102[BANK1 ] int 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  2   97[BANK1 ] int 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1300 ;;      Params:         0       0       5       0
  1301 ;;      Locals:         0       0       2       0
  1302 ;;      Temps:          0       1       0       0
  1303 ;;      Totals:         0       1       7       0
  1304 ;;Total ram usage:        8 bytes
  1305 ;; Hardware stack levels required when called:   14
  1306 ;; This function calls:
  1307 ;;		_PutIntUART
  1308 ;;		_PutsUART
  1309 ;;		___ftge
  1310 ;;		___wmul
  1311 ;;		_affichage_position
  1312 ;;		_envoit_pwm
  1313 ;;		_get_distance
  1314 ;;		_init_system
  1315 ;;		_obtention_angle
  1316 ;;		_triangulation
  1317 ;; This function is called by:
  1318 ;;		Startup code after reset
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text0
  1323  000D1E                     __ptext0:
  1324                           	opt stack 0
  1325  000D1E                     _main:
  1326                           	opt stack 17
  1327                           
  1328                           ;main.c: 86: init_system ();
  1329                           
  1330                           ; BSR set to: 1
  1331                           ;incstack = 0
  1332  000D1E  EC7C  F01B         	call	_init_system	;wreg free
  1333                           
  1334                           ;main.c: 87: int i = 0;
  1335  000D22  0E00               	movlw	0
  1336  000D24  0101               	movlb	1	; () banked
  1337  000D26  6FF5               	movwf	(main@i+1)& (0+255),b
  1338  000D28  0E00               	movlw	0
  1339  000D2A  6FF4               	movwf	main@i& (0+255),b
  1340                           
  1341                           ; BSR set to: 1
  1342                           ;main.c: 89: PORTDbits.RD1 = 1;
  1343  000D2C  8283               	bsf	3971,1,c	;volatile
  1344                           
  1345                           ; BSR set to: 1
  1346                           ;main.c: 90: LATCbits.LATC2 = 1;
  1347  000D2E  848B               	bsf	3979,2,c	;volatile
  1348                           
  1349                           ; BSR set to: 1
  1350                           ;main.c: 91: PORTBbits.RB0 = 1;
  1351  000D30  8081               	bsf	3969,0,c	;volatile
  1352                           
  1353                           ; BSR set to: 1
  1354                           ;main.c: 93: PutsUART(0, "Bonjour les amis !!! =)");
  1355  000D32  0E8F               	movlw	low STR_1
  1356  000D34  0100               	movlb	0	; () banked
  1357  000D36  6F7E               	movwf	PutsUART@chaine& (0+255),b
  1358  000D38  0E03               	movlw	high STR_1
  1359  000D3A  0100               	movlb	0	; () banked
  1360  000D3C  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  1361  000D3E  0E00               	movlw	0
  1362  000D40  ECB4  F018         	call	_PutsUART
  1363                           
  1364                           ;main.c: 95: while(PORTCbits.RC4 == 0);
  1365  000D44  D000               	goto	l31
  1366  000D46                     l31:
  1367  000D46  A882               	btfss	3970,4,c	;volatile
  1368  000D48  D7FE               	goto	l31
  1369                           
  1370                           ;main.c: 96: PORTBbits.RB0= 0;
  1371  000D4A  9081               	bcf	3969,0,c	;volatile
  1372                           
  1373                           ;main.c: 97: PORTBbits.RB4 =1;
  1374  000D4C  8881               	bsf	3969,4,c	;volatile
  1375                           
  1376                           ;main.c: 98: envoit_pwm(60);
  1377  000D4E  0E00               	movlw	0
  1378  000D50  0100               	movlb	0	; () banked
  1379  000D52  6F83               	movwf	envoit_pwm@valeur& (0+255),b
  1380  000D54  0E70               	movlw	112
  1381  000D56  0100               	movlb	0	; () banked
  1382  000D58  6F84               	movwf	(envoit_pwm@valeur+1)& (0+255),b
  1383  000D5A  0E42               	movlw	66
  1384  000D5C  0100               	movlb	0	; () banked
  1385  000D5E  6F85               	movwf	(envoit_pwm@valeur+2)& (0+255),b
  1386  000D60  EC5D  F014         	call	_envoit_pwm	;wreg free
  1387                           
  1388                           ;main.c: 101: _delay((unsigned long)((10)*(40000000/4000.0)));
  1389  000D64  0E82               	movlw	130
  1390  000D66  0100               	movlb	0	; () banked
  1391  000D68  6FC3               	movwf	??_main& (0+255),b
  1392  000D6A  0EDE               	movlw	222
  1393  000D6C                     u4407:
  1394  000D6C  2EE8               	decfsz	wreg,f,c
  1395  000D6E  D7FE               	goto	u4407
  1396  000D70  2FC3               	decfsz	??_main& (0+255),f,b
  1397  000D72  D7FC               	goto	u4407
  1398                           
  1399                           ;main.c: 102: _delay((unsigned long)((10)*(40000000/4000.0)));
  1400  000D74  0E82               	movlw	130
  1401  000D76  0100               	movlb	0	; () banked
  1402  000D78  6FC3               	movwf	??_main& (0+255),b
  1403  000D7A  0EDE               	movlw	222
  1404  000D7C                     u4417:
  1405  000D7C  2EE8               	decfsz	wreg,f,c
  1406  000D7E  D7FE               	goto	u4417
  1407  000D80  2FC3               	decfsz	??_main& (0+255),f,b
  1408  000D82  D7FC               	goto	u4417
  1409                           
  1410                           ;main.c: 103: _delay((unsigned long)((10)*(40000000/4000.0)));
  1411  000D84  0E82               	movlw	130
  1412  000D86  0100               	movlb	0	; () banked
  1413  000D88  6FC3               	movwf	??_main& (0+255),b
  1414  000D8A  0EDE               	movlw	222
  1415  000D8C                     u4427:
  1416  000D8C  2EE8               	decfsz	wreg,f,c
  1417  000D8E  D7FE               	goto	u4427
  1418  000D90  2FC3               	decfsz	??_main& (0+255),f,b
  1419  000D92  D7FC               	goto	u4427
  1420                           
  1421                           ;main.c: 104: _delay((unsigned long)((10)*(40000000/4000.0)));
  1422  000D94  0E82               	movlw	130
  1423  000D96  0100               	movlb	0	; () banked
  1424  000D98  6FC3               	movwf	??_main& (0+255),b
  1425  000D9A  0EDE               	movlw	222
  1426  000D9C                     u4437:
  1427  000D9C  2EE8               	decfsz	wreg,f,c
  1428  000D9E  D7FE               	goto	u4437
  1429  000DA0  2FC3               	decfsz	??_main& (0+255),f,b
  1430  000DA2  D7FC               	goto	u4437
  1431                           
  1432                           ;main.c: 105: _delay((unsigned long)((10)*(40000000/4000.0)));
  1433  000DA4  0E82               	movlw	130
  1434  000DA6  0100               	movlb	0	; () banked
  1435  000DA8  6FC3               	movwf	??_main& (0+255),b
  1436  000DAA  0EDE               	movlw	222
  1437  000DAC                     u4447:
  1438  000DAC  2EE8               	decfsz	wreg,f,c
  1439  000DAE  D7FE               	goto	u4447
  1440  000DB0  2FC3               	decfsz	??_main& (0+255),f,b
  1441  000DB2  D7FC               	goto	u4447
  1442                           
  1443                           ;main.c: 106: _delay((unsigned long)((10)*(40000000/4000.0)));
  1444  000DB4  0E82               	movlw	130
  1445  000DB6  0100               	movlb	0	; () banked
  1446  000DB8  6FC3               	movwf	??_main& (0+255),b
  1447  000DBA  0EDE               	movlw	222
  1448  000DBC                     u4457:
  1449  000DBC  2EE8               	decfsz	wreg,f,c
  1450  000DBE  D7FE               	goto	u4457
  1451  000DC0  2FC3               	decfsz	??_main& (0+255),f,b
  1452  000DC2  D7FC               	goto	u4457
  1453                           
  1454                           ;main.c: 107: _delay((unsigned long)((10)*(40000000/4000.0)));
  1455  000DC4  0E82               	movlw	130
  1456  000DC6  0100               	movlb	0	; () banked
  1457  000DC8  6FC3               	movwf	??_main& (0+255),b
  1458  000DCA  0EDE               	movlw	222
  1459  000DCC                     u4467:
  1460  000DCC  2EE8               	decfsz	wreg,f,c
  1461  000DCE  D7FE               	goto	u4467
  1462  000DD0  2FC3               	decfsz	??_main& (0+255),f,b
  1463  000DD2  D7FC               	goto	u4467
  1464                           
  1465                           ;main.c: 108: _delay((unsigned long)((10)*(40000000/4000.0)));
  1466  000DD4  0E82               	movlw	130
  1467  000DD6  0100               	movlb	0	; () banked
  1468  000DD8  6FC3               	movwf	??_main& (0+255),b
  1469  000DDA  0EDE               	movlw	222
  1470  000DDC                     u4477:
  1471  000DDC  2EE8               	decfsz	wreg,f,c
  1472  000DDE  D7FE               	goto	u4477
  1473  000DE0  2FC3               	decfsz	??_main& (0+255),f,b
  1474  000DE2  D7FC               	goto	u4477
  1475                           
  1476                           ;main.c: 109: _delay((unsigned long)((10)*(40000000/4000.0)));
  1477  000DE4  0E82               	movlw	130
  1478  000DE6  0100               	movlb	0	; () banked
  1479  000DE8  6FC3               	movwf	??_main& (0+255),b
  1480  000DEA  0EDE               	movlw	222
  1481  000DEC                     u4487:
  1482  000DEC  2EE8               	decfsz	wreg,f,c
  1483  000DEE  D7FE               	goto	u4487
  1484  000DF0  2FC3               	decfsz	??_main& (0+255),f,b
  1485  000DF2  D7FC               	goto	u4487
  1486                           
  1487                           ;main.c: 110: _delay((unsigned long)((10)*(40000000/4000.0)));
  1488  000DF4  0E82               	movlw	130
  1489  000DF6  0100               	movlb	0	; () banked
  1490  000DF8  6FC3               	movwf	??_main& (0+255),b
  1491  000DFA  0EDE               	movlw	222
  1492  000DFC                     u4497:
  1493  000DFC  2EE8               	decfsz	wreg,f,c
  1494  000DFE  D7FE               	goto	u4497
  1495  000E00  2FC3               	decfsz	??_main& (0+255),f,b
  1496  000E02  D7FC               	goto	u4497
  1497                           
  1498                           ;main.c: 111: _delay((unsigned long)((10)*(40000000/4000.0)));
  1499  000E04  0E82               	movlw	130
  1500  000E06  0100               	movlb	0	; () banked
  1501  000E08  6FC3               	movwf	??_main& (0+255),b
  1502  000E0A  0EDE               	movlw	222
  1503  000E0C                     u4507:
  1504  000E0C  2EE8               	decfsz	wreg,f,c
  1505  000E0E  D7FE               	goto	u4507
  1506  000E10  2FC3               	decfsz	??_main& (0+255),f,b
  1507  000E12  D7FC               	goto	u4507
  1508                           
  1509                           ;main.c: 112: _delay((unsigned long)((10)*(40000000/4000.0)));
  1510  000E14  0E82               	movlw	130
  1511  000E16  0100               	movlb	0	; () banked
  1512  000E18  6FC3               	movwf	??_main& (0+255),b
  1513  000E1A  0EDE               	movlw	222
  1514  000E1C                     u4517:
  1515  000E1C  2EE8               	decfsz	wreg,f,c
  1516  000E1E  D7FE               	goto	u4517
  1517  000E20  2FC3               	decfsz	??_main& (0+255),f,b
  1518  000E22  D7FC               	goto	u4517
  1519                           
  1520                           ;main.c: 113: _delay((unsigned long)((10)*(40000000/4000.0)));
  1521  000E24  0E82               	movlw	130
  1522  000E26  0100               	movlb	0	; () banked
  1523  000E28  6FC3               	movwf	??_main& (0+255),b
  1524  000E2A  0EDE               	movlw	222
  1525  000E2C                     u4527:
  1526  000E2C  2EE8               	decfsz	wreg,f,c
  1527  000E2E  D7FE               	goto	u4527
  1528  000E30  2FC3               	decfsz	??_main& (0+255),f,b
  1529  000E32  D7FC               	goto	u4527
  1530                           
  1531                           ;main.c: 114: _delay((unsigned long)((10)*(40000000/4000.0)));
  1532  000E34  0E82               	movlw	130
  1533  000E36  0100               	movlb	0	; () banked
  1534  000E38  6FC3               	movwf	??_main& (0+255),b
  1535  000E3A  0EDE               	movlw	222
  1536  000E3C                     u4537:
  1537  000E3C  2EE8               	decfsz	wreg,f,c
  1538  000E3E  D7FE               	goto	u4537
  1539  000E40  2FC3               	decfsz	??_main& (0+255),f,b
  1540  000E42  D7FC               	goto	u4537
  1541                           
  1542                           ;main.c: 115: _delay((unsigned long)((10)*(40000000/4000.0)));
  1543  000E44  0E82               	movlw	130
  1544  000E46  0100               	movlb	0	; () banked
  1545  000E48  6FC3               	movwf	??_main& (0+255),b
  1546  000E4A  0EDE               	movlw	222
  1547  000E4C                     u4547:
  1548  000E4C  2EE8               	decfsz	wreg,f,c
  1549  000E4E  D7FE               	goto	u4547
  1550  000E50  2FC3               	decfsz	??_main& (0+255),f,b
  1551  000E52  D7FC               	goto	u4547
  1552                           
  1553                           ;main.c: 116: _delay((unsigned long)((10)*(40000000/4000.0)));
  1554  000E54  0E82               	movlw	130
  1555  000E56  0100               	movlb	0	; () banked
  1556  000E58  6FC3               	movwf	??_main& (0+255),b
  1557  000E5A  0EDE               	movlw	222
  1558  000E5C                     u4557:
  1559  000E5C  2EE8               	decfsz	wreg,f,c
  1560  000E5E  D7FE               	goto	u4557
  1561  000E60  2FC3               	decfsz	??_main& (0+255),f,b
  1562  000E62  D7FC               	goto	u4557
  1563                           
  1564                           ;main.c: 117: _delay((unsigned long)((10)*(40000000/4000.0)));
  1565  000E64  0E82               	movlw	130
  1566  000E66  0100               	movlb	0	; () banked
  1567  000E68  6FC3               	movwf	??_main& (0+255),b
  1568  000E6A  0EDE               	movlw	222
  1569  000E6C                     u4567:
  1570  000E6C  2EE8               	decfsz	wreg,f,c
  1571  000E6E  D7FE               	goto	u4567
  1572  000E70  2FC3               	decfsz	??_main& (0+255),f,b
  1573  000E72  D7FC               	goto	u4567
  1574                           
  1575                           ;main.c: 118: _delay((unsigned long)((10)*(40000000/4000.0)));
  1576  000E74  0E82               	movlw	130
  1577  000E76  0100               	movlb	0	; () banked
  1578  000E78  6FC3               	movwf	??_main& (0+255),b
  1579  000E7A  0EDE               	movlw	222
  1580  000E7C                     u4577:
  1581  000E7C  2EE8               	decfsz	wreg,f,c
  1582  000E7E  D7FE               	goto	u4577
  1583  000E80  2FC3               	decfsz	??_main& (0+255),f,b
  1584  000E82  D7FC               	goto	u4577
  1585                           
  1586                           ;main.c: 119: _delay((unsigned long)((10)*(40000000/4000.0)));
  1587  000E84  0E82               	movlw	130
  1588  000E86  0100               	movlb	0	; () banked
  1589  000E88  6FC3               	movwf	??_main& (0+255),b
  1590  000E8A  0EDE               	movlw	222
  1591  000E8C                     u4587:
  1592  000E8C  2EE8               	decfsz	wreg,f,c
  1593  000E8E  D7FE               	goto	u4587
  1594  000E90  2FC3               	decfsz	??_main& (0+255),f,b
  1595  000E92  D7FC               	goto	u4587
  1596                           
  1597                           ;main.c: 120: _delay((unsigned long)((10)*(40000000/4000.0)));
  1598  000E94  0E82               	movlw	130
  1599  000E96  0100               	movlb	0	; () banked
  1600  000E98  6FC3               	movwf	??_main& (0+255),b
  1601  000E9A  0EDE               	movlw	222
  1602  000E9C                     u4597:
  1603  000E9C  2EE8               	decfsz	wreg,f,c
  1604  000E9E  D7FE               	goto	u4597
  1605  000EA0  2FC3               	decfsz	??_main& (0+255),f,b
  1606  000EA2  D7FC               	goto	u4597
  1607                           
  1608                           ;main.c: 121: _delay((unsigned long)((10)*(40000000/4000.0)));
  1609  000EA4  0E82               	movlw	130
  1610  000EA6  0100               	movlb	0	; () banked
  1611  000EA8  6FC3               	movwf	??_main& (0+255),b
  1612  000EAA  0EDE               	movlw	222
  1613  000EAC                     u4607:
  1614  000EAC  2EE8               	decfsz	wreg,f,c
  1615  000EAE  D7FE               	goto	u4607
  1616  000EB0  2FC3               	decfsz	??_main& (0+255),f,b
  1617  000EB2  D7FC               	goto	u4607
  1618                           
  1619                           ;main.c: 122: _delay((unsigned long)((10)*(40000000/4000.0)));
  1620  000EB4  0E82               	movlw	130
  1621  000EB6  0100               	movlb	0	; () banked
  1622  000EB8  6FC3               	movwf	??_main& (0+255),b
  1623  000EBA  0EDE               	movlw	222
  1624  000EBC                     u4617:
  1625  000EBC  2EE8               	decfsz	wreg,f,c
  1626  000EBE  D7FE               	goto	u4617
  1627  000EC0  2FC3               	decfsz	??_main& (0+255),f,b
  1628  000EC2  D7FC               	goto	u4617
  1629                           
  1630                           ;main.c: 123: _delay((unsigned long)((10)*(40000000/4000.0)));
  1631  000EC4  0E82               	movlw	130
  1632  000EC6  0100               	movlb	0	; () banked
  1633  000EC8  6FC3               	movwf	??_main& (0+255),b
  1634  000ECA  0EDE               	movlw	222
  1635  000ECC                     u4627:
  1636  000ECC  2EE8               	decfsz	wreg,f,c
  1637  000ECE  D7FE               	goto	u4627
  1638  000ED0  2FC3               	decfsz	??_main& (0+255),f,b
  1639  000ED2  D7FC               	goto	u4627
  1640  000ED4  D000               	goto	l4779
  1641  000ED6                     l4779:
  1642                           
  1643                           ;main.c: 126: {
  1644                           ;main.c: 127: static double x[3], y[3], distance[3], ancien_x = 0, ancien_y = 0;
  1645                           ;main.c: 128: static bool premiere_fois = 1;
  1646                           ;main.c: 130: capteur.indice = 0;
  1647  000ED6  0E00               	movlw	0
  1648  000ED8  0100               	movlb	0	; () banked
  1649  000EDA  6FF4               	movwf	(_capteur+27)& (0+255),b
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;main.c: 131: capteur.synchro_debut_tour = 1;
  1653  000EDC  0E01               	movlw	1
  1654  000EDE  0100               	movlb	0	; () banked
  1655  000EE0  6FDA               	movwf	(_capteur+1)& (0+255),b
  1656                           
  1657                           ; BSR set to: 0
  1658                           
  1659                           ;main.c: 133: while(capteur.synchro_debut_tour == 1);
  1660  000EE2  D000               	goto	l4783
  1661  000EE4                     l4783:
  1662                           
  1663                           ; BSR set to: 0
  1664  000EE4  0100               	movlb	0	; () banked
  1665  000EE6  05DA               	decf	(_capteur+1)& (0+255),w,b
  1666  000EE8  A4D8               	btfss	status,2,c
  1667  000EEA  D002               	goto	l4785
  1668  000EEC  D7FB               	goto	l4783
  1669                           
  1670                           ; BSR set to: 0
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;main.c: 134: while(capteur.tour_en_cours == 1);
  1674  000EEE  D000               	goto	l4785
  1675  000EF0                     l4785:
  1676                           
  1677                           ; BSR set to: 0
  1678  000EF0  0100               	movlb	0	; () banked
  1679  000EF2  05D9               	decf	_capteur& (0+255),w,b
  1680  000EF4  B4D8               	btfsc	status,2,c
  1681  000EF6  D7FC               	goto	l4785
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;main.c: 136: if (capteur.indice != 3)
  1685                           
  1686                           ; BSR set to: 0
  1687  000EF8  0E03               	movlw	3
  1688  000EFA  0100               	movlb	0	; () banked
  1689  000EFC  19F4               	xorwf	(_capteur+27)& (0+255),w,b
  1690  000EFE  B4D8               	btfsc	status,2,c
  1691  000F00  D01A               	goto	l4795
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;main.c: 137: {
  1695                           ;main.c: 138: PutsUART(0, "\n\nProbleme de detection de balises .... : ");
  1696  000F02  0E1C               	movlw	low STR_2
  1697  000F04  0100               	movlb	0	; () banked
  1698  000F06  6F7E               	movwf	PutsUART@chaine& (0+255),b
  1699  000F08  0E03               	movlw	high STR_2
  1700  000F0A  0100               	movlb	0	; () banked
  1701  000F0C  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  1702  000F0E  0E00               	movlw	0
  1703  000F10  ECB4  F018         	call	_PutsUART
  1704                           
  1705                           ;main.c: 139: PutIntUART(0, (uint16_t) capteur.indice);
  1706  000F14  C0F4  F083         	movff	_capteur+27,PutIntUART@nb
  1707  000F18  0100               	movlb	0	; () banked
  1708  000F1A  6B84               	clrf	(PutIntUART@nb+1)& (0+255),b
  1709  000F1C  0E00               	movlw	0
  1710  000F1E  ECB5  F01B         	call	_PutIntUART
  1711                           
  1712                           ;main.c: 140: PutsUART(0, " Balises detectees \n\n\n\r");
  1713  000F22  0E77               	movlw	low STR_3
  1714  000F24  0100               	movlb	0	; () banked
  1715  000F26  6F7E               	movwf	PutsUART@chaine& (0+255),b
  1716  000F28  0E03               	movlw	high STR_3
  1717  000F2A  0100               	movlb	0	; () banked
  1718  000F2C  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  1719  000F2E  0E00               	movlw	0
  1720  000F30  ECB4  F018         	call	_PutsUART
  1721                           
  1722                           ;main.c: 141: }
  1723  000F34  D7D0               	goto	l4779
  1724  000F36                     l4795:
  1725                           
  1726                           ;main.c: 142: else
  1727                           ;main.c: 143: {
  1728                           ;main.c: 144: for (i = 0; i < 3 ; i++)
  1729  000F36  0E00               	movlw	0
  1730  000F38  0101               	movlb	1	; () banked
  1731  000F3A  6FF5               	movwf	(main@i+1)& (0+255),b
  1732  000F3C  0E00               	movlw	0
  1733  000F3E  6FF4               	movwf	main@i& (0+255),b
  1734  000F40                     l4797:
  1735                           
  1736                           ; BSR set to: 1
  1737  000F40  0101               	movlb	1	; () banked
  1738  000F42  BFF5               	btfsc	(main@i+1)& (0+255),7,b
  1739  000F44  D00A               	goto	l4801
  1740  000F46  0101               	movlb	1	; () banked
  1741  000F48  51F5               	movf	(main@i+1)& (0+255),w,b
  1742  000F4A  E136               	bnz	l4807
  1743  000F4C  0E03               	movlw	3
  1744  000F4E  0101               	movlb	1	; () banked
  1745  000F50  5DF4               	subwf	main@i& (0+255),w,b
  1746  000F52  B0D8               	btfsc	status,0,c
  1747  000F54  D031               	goto	l4807
  1748  000F56  D001               	goto	l4801
  1749                           
  1750                           ; BSR set to: 1
  1751  000F58  D02F               	goto	l4807
  1752  000F5A                     l4801:
  1753                           
  1754                           ; BSR set to: 1
  1755                           ;main.c: 145: capteur.angle[i] = obtention_angle(capteur.position[i]);
  1756  000F5A  C1F4  F060         	movff	main@i,___wmul@multiplier
  1757  000F5E  C1F5  F061         	movff	main@i+1,___wmul@multiplier+1
  1758  000F62  0E00               	movlw	0
  1759  000F64  0100               	movlb	0	; () banked
  1760  000F66  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1761  000F68  0E03               	movlw	3
  1762  000F6A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1763  000F6C  EC32  F01B         	call	___wmul	;wreg free
  1764  000F70  0EDC               	movlw	low (_capteur+3)
  1765  000F72  0100               	movlb	0	; () banked
  1766  000F74  2560               	addwf	?___wmul& (0+255),w,b
  1767  000F76  6ED9               	movwf	fsr2l,c
  1768  000F78  0E00               	movlw	high (_capteur+3)
  1769  000F7A  0100               	movlb	0	; () banked
  1770  000F7C  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1771  000F7E  6EDA               	movwf	fsr2h,c
  1772  000F80  90D8               	bcf	status,0,c
  1773  000F82  0101               	movlb	1	; () banked
  1774  000F84  35F4               	rlcf	main@i& (0+255),w,b
  1775  000F86  6EE1               	movwf	fsr1l,c
  1776  000F88  0101               	movlb	1	; () banked
  1777  000F8A  35F5               	rlcf	(main@i+1)& (0+255),w,b
  1778  000F8C  6EE2               	movwf	fsr1h,c
  1779  000F8E  0EEE               	movlw	low (_capteur+21)
  1780  000F90  26E1               	addwf	fsr1l,f,c
  1781  000F92  0E00               	movlw	high (_capteur+21)
  1782  000F94  22E2               	addwfc	fsr1h,f,c
  1783  000F96  CFE6 F0A1          	movff	postinc1,obtention_angle@position
  1784  000F9A  CFE5 F0A2          	movff	postdec1,obtention_angle@position+1
  1785  000F9E  EC3E  F018         	call	_obtention_angle	;wreg free
  1786  000FA2  C0A1  FFDE         	movff	?_obtention_angle,postinc2
  1787  000FA6  C0A2  FFDE         	movff	?_obtention_angle+1,postinc2
  1788  000FAA  C0A3  FFDE         	movff	?_obtention_angle+2,postinc2
  1789  000FAE  0101               	movlb	1	; () banked
  1790  000FB0  4BF4               	infsnz	main@i& (0+255),f,b
  1791  000FB2  2BF5               	incf	(main@i+1)& (0+255),f,b
  1792  000FB4  D7C5               	goto	l4797
  1793                           
  1794                           ; BSR set to: 1
  1795  000FB6  D000               	goto	l4807
  1796  000FB8                     l4807:
  1797                           
  1798                           ; BSR set to: 1
  1799                           ;main.c: 150: if (premiere_fois == 1)
  1800  000FB8  0100               	movlb	0	; () banked
  1801  000FBA  05FF               	decf	main@premiere_fois& (0+255),w,b
  1802  000FBC  A4D8               	btfss	status,2,c
  1803  000FBE  D030               	goto	l4817
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;main.c: 151: {
  1807                           ;main.c: 152: triangulation(&x[0], &y[0], capteur.angle[0], capteur.angle[1], capteur.an
      +                          gle[2]);
  1808  000FC0  0EF6               	movlw	low main@x
  1809  000FC2  0101               	movlb	1	; () banked
  1810  000FC4  6F8E               	movwf	triangulation@x& (0+255),b
  1811  000FC6  0E00               	movlw	high main@x
  1812  000FC8  0101               	movlb	1	; () banked
  1813  000FCA  6F8F               	movwf	(triangulation@x+1)& (0+255),b
  1814  000FCC  0E7D               	movlw	low main@y
  1815  000FCE  0101               	movlb	1	; () banked
  1816  000FD0  6F90               	movwf	triangulation@y& (0+255),b
  1817  000FD2  0E01               	movlw	high main@y
  1818  000FD4  0101               	movlb	1	; () banked
  1819  000FD6  6F91               	movwf	(triangulation@y+1)& (0+255),b
  1820  000FD8  C0DC  F192         	movff	_capteur+3,triangulation@angle1
  1821  000FDC  C0DD  F193         	movff	_capteur+4,triangulation@angle1+1
  1822  000FE0  C0DE  F194         	movff	_capteur+5,triangulation@angle1+2
  1823  000FE4  C0DF  F195         	movff	_capteur+6,triangulation@angle2
  1824  000FE8  C0E0  F196         	movff	_capteur+7,triangulation@angle2+1
  1825  000FEC  C0E1  F197         	movff	_capteur+8,triangulation@angle2+2
  1826  000FF0  C0E2  F198         	movff	_capteur+9,triangulation@angle3
  1827  000FF4  C0E3  F199         	movff	_capteur+10,triangulation@angle3+1
  1828  000FF8  C0E4  F19A         	movff	_capteur+11,triangulation@angle3+2
  1829  000FFC  ECED  F001         	call	_triangulation	;wreg free
  1830                           
  1831                           ;main.c: 153: ancien_x = x[0];
  1832  001000  C0F6  F0D3         	movff	main@x,main@ancien_x
  1833  001004  C0F7  F0D4         	movff	main@x+1,main@ancien_x+1
  1834  001008  C0F8  F0D5         	movff	main@x+2,main@ancien_x+2
  1835                           
  1836                           ;main.c: 154: ancien_y = y[0];
  1837  00100C  C17D  F0D6         	movff	main@y,main@ancien_y
  1838  001010  C17E  F0D7         	movff	main@y+1,main@ancien_y+1
  1839  001014  C17F  F0D8         	movff	main@y+2,main@ancien_y+2
  1840                           
  1841                           ;main.c: 155: premiere_fois = 0;
  1842  001018  0E00               	movlw	0
  1843  00101A  0100               	movlb	0	; () banked
  1844  00101C  6FFF               	movwf	main@premiere_fois& (0+255),b
  1845                           
  1846                           ;main.c: 156: }
  1847  00101E  D137               	goto	l4841
  1848  001020                     l4817:
  1849                           
  1850                           ; BSR set to: 0
  1851                           ;main.c: 157: else
  1852                           ;main.c: 158: {
  1853                           ;main.c: 159: triangulation(&x[0], &y[0], capteur.angle[0], capteur.angle[1], capteur.an
      +                          gle[2]);
  1854  001020  0EF6               	movlw	low main@x
  1855  001022  0101               	movlb	1	; () banked
  1856  001024  6F8E               	movwf	triangulation@x& (0+255),b
  1857  001026  0E00               	movlw	high main@x
  1858  001028  0101               	movlb	1	; () banked
  1859  00102A  6F8F               	movwf	(triangulation@x+1)& (0+255),b
  1860  00102C  0E7D               	movlw	low main@y
  1861  00102E  0101               	movlb	1	; () banked
  1862  001030  6F90               	movwf	triangulation@y& (0+255),b
  1863  001032  0E01               	movlw	high main@y
  1864  001034  0101               	movlb	1	; () banked
  1865  001036  6F91               	movwf	(triangulation@y+1)& (0+255),b
  1866  001038  C0DC  F192         	movff	_capteur+3,triangulation@angle1
  1867  00103C  C0DD  F193         	movff	_capteur+4,triangulation@angle1+1
  1868  001040  C0DE  F194         	movff	_capteur+5,triangulation@angle1+2
  1869  001044  C0DF  F195         	movff	_capteur+6,triangulation@angle2
  1870  001048  C0E0  F196         	movff	_capteur+7,triangulation@angle2+1
  1871  00104C  C0E1  F197         	movff	_capteur+8,triangulation@angle2+2
  1872  001050  C0E2  F198         	movff	_capteur+9,triangulation@angle3
  1873  001054  C0E3  F199         	movff	_capteur+10,triangulation@angle3+1
  1874  001058  C0E4  F19A         	movff	_capteur+11,triangulation@angle3+2
  1875  00105C  ECED  F001         	call	_triangulation	;wreg free
  1876                           
  1877                           ;main.c: 160: triangulation(&x[1], &y[1], capteur.angle[1], capteur.angle[2], capteur.an
      +                          gle[0]);
  1878  001060  0EF9               	movlw	low (main@x+3)
  1879  001062  0101               	movlb	1	; () banked
  1880  001064  6F8E               	movwf	triangulation@x& (0+255),b
  1881  001066  0E00               	movlw	high (main@x+3)
  1882  001068  0101               	movlb	1	; () banked
  1883  00106A  6F8F               	movwf	(triangulation@x+1)& (0+255),b
  1884  00106C  0E80               	movlw	low (main@y+3)
  1885  00106E  0101               	movlb	1	; () banked
  1886  001070  6F90               	movwf	triangulation@y& (0+255),b
  1887  001072  0E01               	movlw	high (main@y+3)
  1888  001074  0101               	movlb	1	; () banked
  1889  001076  6F91               	movwf	(triangulation@y+1)& (0+255),b
  1890  001078  C0DF  F192         	movff	_capteur+6,triangulation@angle1
  1891  00107C  C0E0  F193         	movff	_capteur+7,triangulation@angle1+1
  1892  001080  C0E1  F194         	movff	_capteur+8,triangulation@angle1+2
  1893  001084  C0E2  F195         	movff	_capteur+9,triangulation@angle2
  1894  001088  C0E3  F196         	movff	_capteur+10,triangulation@angle2+1
  1895  00108C  C0E4  F197         	movff	_capteur+11,triangulation@angle2+2
  1896  001090  C0DC  F198         	movff	_capteur+3,triangulation@angle3
  1897  001094  C0DD  F199         	movff	_capteur+4,triangulation@angle3+1
  1898  001098  C0DE  F19A         	movff	_capteur+5,triangulation@angle3+2
  1899  00109C  ECED  F001         	call	_triangulation	;wreg free
  1900                           
  1901                           ;main.c: 161: triangulation(&x[2], &y[2], capteur.angle[2], capteur.angle[0], capteur.an
      +                          gle[1]);
  1902  0010A0  0EFC               	movlw	low (main@x+6)
  1903  0010A2  0101               	movlb	1	; () banked
  1904  0010A4  6F8E               	movwf	triangulation@x& (0+255),b
  1905  0010A6  0E00               	movlw	high (main@x+6)
  1906  0010A8  0101               	movlb	1	; () banked
  1907  0010AA  6F8F               	movwf	(triangulation@x+1)& (0+255),b
  1908  0010AC  0E83               	movlw	low (main@y+6)
  1909  0010AE  0101               	movlb	1	; () banked
  1910  0010B0  6F90               	movwf	triangulation@y& (0+255),b
  1911  0010B2  0E01               	movlw	high (main@y+6)
  1912  0010B4  0101               	movlb	1	; () banked
  1913  0010B6  6F91               	movwf	(triangulation@y+1)& (0+255),b
  1914  0010B8  C0E2  F192         	movff	_capteur+9,triangulation@angle1
  1915  0010BC  C0E3  F193         	movff	_capteur+10,triangulation@angle1+1
  1916  0010C0  C0E4  F194         	movff	_capteur+11,triangulation@angle1+2
  1917  0010C4  C0DC  F195         	movff	_capteur+3,triangulation@angle2
  1918  0010C8  C0DD  F196         	movff	_capteur+4,triangulation@angle2+1
  1919  0010CC  C0DE  F197         	movff	_capteur+5,triangulation@angle2+2
  1920  0010D0  C0DF  F198         	movff	_capteur+6,triangulation@angle3
  1921  0010D4  C0E0  F199         	movff	_capteur+7,triangulation@angle3+1
  1922  0010D8  C0E1  F19A         	movff	_capteur+8,triangulation@angle3+2
  1923  0010DC  ECED  F001         	call	_triangulation	;wreg free
  1924                           
  1925                           ;main.c: 163: for (i = 0 ; i < 3 ; i++)
  1926  0010E0  0E00               	movlw	0
  1927  0010E2  0101               	movlb	1	; () banked
  1928  0010E4  6FF5               	movwf	(main@i+1)& (0+255),b
  1929  0010E6  0E00               	movlw	0
  1930  0010E8  6FF4               	movwf	main@i& (0+255),b
  1931  0010EA                     l4821:
  1932                           
  1933                           ; BSR set to: 1
  1934  0010EA  0101               	movlb	1	; () banked
  1935  0010EC  BFF5               	btfsc	(main@i+1)& (0+255),7,b
  1936  0010EE  D00A               	goto	l4825
  1937  0010F0  0101               	movlb	1	; () banked
  1938  0010F2  51F5               	movf	(main@i+1)& (0+255),w,b
  1939  0010F4  E165               	bnz	l4831
  1940  0010F6  0E03               	movlw	3
  1941  0010F8  0101               	movlb	1	; () banked
  1942  0010FA  5DF4               	subwf	main@i& (0+255),w,b
  1943  0010FC  B0D8               	btfsc	status,0,c
  1944  0010FE  D060               	goto	l4831
  1945  001100  D001               	goto	l4825
  1946                           
  1947                           ; BSR set to: 1
  1948  001102  D05E               	goto	l4831
  1949  001104                     l4825:
  1950                           
  1951                           ; BSR set to: 1
  1952                           ;main.c: 164: distance[i] = get_distance(ancien_x, ancien_y, x[i], y[i]);
  1953  001104  C1F4  F060         	movff	main@i,___wmul@multiplier
  1954  001108  C1F5  F061         	movff	main@i+1,___wmul@multiplier+1
  1955  00110C  0E00               	movlw	0
  1956  00110E  0100               	movlb	0	; () banked
  1957  001110  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1958  001112  0E03               	movlw	3
  1959  001114  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1960  001116  EC32  F01B         	call	___wmul	;wreg free
  1961  00111A  0E09               	movlw	low main@distance
  1962  00111C  0100               	movlb	0	; () banked
  1963  00111E  2560               	addwf	?___wmul& (0+255),w,b
  1964  001120  6ED9               	movwf	fsr2l,c
  1965  001122  0E01               	movlw	high main@distance
  1966  001124  0100               	movlb	0	; () banked
  1967  001126  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1968  001128  6EDA               	movwf	fsr2h,c
  1969  00112A  C0D3  F0A7         	movff	main@ancien_x,get_distance@ancien_x
  1970  00112E  C0D4  F0A8         	movff	main@ancien_x+1,get_distance@ancien_x+1
  1971  001132  C0D5  F0A9         	movff	main@ancien_x+2,get_distance@ancien_x+2
  1972  001136  C0D6  F0AA         	movff	main@ancien_y,get_distance@ancien_y
  1973  00113A  C0D7  F0AB         	movff	main@ancien_y+1,get_distance@ancien_y+1
  1974  00113E  C0D8  F0AC         	movff	main@ancien_y+2,get_distance@ancien_y+2
  1975  001142  C1F4  F060         	movff	main@i,___wmul@multiplier
  1976  001146  C1F5  F061         	movff	main@i+1,___wmul@multiplier+1
  1977  00114A  0E00               	movlw	0
  1978  00114C  0100               	movlb	0	; () banked
  1979  00114E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1980  001150  0E03               	movlw	3
  1981  001152  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1982  001154  EC32  F01B         	call	___wmul	;wreg free
  1983  001158  0EF6               	movlw	low main@x
  1984  00115A  0100               	movlb	0	; () banked
  1985  00115C  2560               	addwf	?___wmul& (0+255),w,b
  1986  00115E  6EE1               	movwf	fsr1l,c
  1987  001160  0E00               	movlw	high main@x
  1988  001162  0100               	movlb	0	; () banked
  1989  001164  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1990  001166  6EE2               	movwf	fsr1h,c
  1991  001168  CFE6 F0AD          	movff	postinc1,get_distance@x
  1992  00116C  CFE6 F0AE          	movff	postinc1,get_distance@x+1
  1993  001170  CFE5 F0AF          	movff	postdec1,get_distance@x+2
  1994  001174  C1F4  F060         	movff	main@i,___wmul@multiplier
  1995  001178  C1F5  F061         	movff	main@i+1,___wmul@multiplier+1
  1996  00117C  0E00               	movlw	0
  1997  00117E  0100               	movlb	0	; () banked
  1998  001180  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1999  001182  0E03               	movlw	3
  2000  001184  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2001  001186  EC32  F01B         	call	___wmul	;wreg free
  2002  00118A  0E7D               	movlw	low main@y
  2003  00118C  0100               	movlb	0	; () banked
  2004  00118E  2560               	addwf	?___wmul& (0+255),w,b
  2005  001190  6EE1               	movwf	fsr1l,c
  2006  001192  0E01               	movlw	high main@y
  2007  001194  0100               	movlb	0	; () banked
  2008  001196  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2009  001198  6EE2               	movwf	fsr1h,c
  2010  00119A  CFE6 F0B0          	movff	postinc1,get_distance@y
  2011  00119E  CFE6 F0B1          	movff	postinc1,get_distance@y+1
  2012  0011A2  CFE5 F0B2          	movff	postdec1,get_distance@y+2
  2013  0011A6  EC68  F013         	call	_get_distance	;wreg free
  2014  0011AA  C0A7  FFDE         	movff	?_get_distance,postinc2
  2015  0011AE  C0A8  FFDE         	movff	?_get_distance+1,postinc2
  2016  0011B2  C0A9  FFDE         	movff	?_get_distance+2,postinc2
  2017  0011B6  0101               	movlb	1	; () banked
  2018  0011B8  4BF4               	infsnz	main@i& (0+255),f,b
  2019  0011BA  2BF5               	incf	(main@i+1)& (0+255),f,b
  2020  0011BC  D796               	goto	l4821
  2021                           
  2022                           ; BSR set to: 1
  2023  0011BE  D000               	goto	l4831
  2024  0011C0                     l4831:
  2025                           
  2026                           ; BSR set to: 1
  2027                           ;main.c: 166: if (distance[0] < distance[1])
  2028  0011C0  C109  F07A         	movff	main@distance,___ftge@ff1
  2029  0011C4  C10A  F07B         	movff	main@distance+1,___ftge@ff1+1
  2030  0011C8  C10B  F07C         	movff	main@distance+2,___ftge@ff1+2
  2031  0011CC  C10C  F07D         	movff	main@distance+3,___ftge@ff2
  2032  0011D0  C10D  F07E         	movff	main@distance+4,___ftge@ff2+1
  2033  0011D4  C10E  F07F         	movff	main@distance+5,___ftge@ff2+2
  2034  0011D8  EC36  F015         	call	___ftge	;wreg free
  2035  0011DC  0100               	movlb	0	; () banked
  2036  0011DE  B0D8               	btfsc	status,0,c
  2037  0011E0  D02B               	goto	l4837
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;main.c: 167: {
  2041                           ;main.c: 168: if (distance[0] < distance[2])
  2042  0011E2  C109  F07A         	movff	main@distance,___ftge@ff1
  2043  0011E6  C10A  F07B         	movff	main@distance+1,___ftge@ff1+1
  2044  0011EA  C10B  F07C         	movff	main@distance+2,___ftge@ff1+2
  2045  0011EE  C10F  F07D         	movff	main@distance+6,___ftge@ff2
  2046  0011F2  C110  F07E         	movff	main@distance+7,___ftge@ff2+1
  2047  0011F6  C111  F07F         	movff	main@distance+8,___ftge@ff2+2
  2048  0011FA  EC36  F015         	call	___ftge	;wreg free
  2049  0011FE  0100               	movlb	0	; () banked
  2050  001200  B0D8               	btfsc	status,0,c
  2051  001202  D00D               	goto	l62
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;main.c: 169: {
  2055                           ;main.c: 170: ancien_x = x[0];
  2056  001204  C0F6  F0D3         	movff	main@x,main@ancien_x
  2057  001208  C0F7  F0D4         	movff	main@x+1,main@ancien_x+1
  2058  00120C  C0F8  F0D5         	movff	main@x+2,main@ancien_x+2
  2059                           
  2060                           ;main.c: 171: ancien_y = y[0];
  2061  001210  C17D  F0D6         	movff	main@y,main@ancien_y
  2062  001214  C17E  F0D7         	movff	main@y+1,main@ancien_y+1
  2063  001218  C17F  F0D8         	movff	main@y+2,main@ancien_y+2
  2064                           
  2065                           ;main.c: 173: }
  2066  00121C  D038               	goto	l4841
  2067  00121E                     l62:
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;main.c: 174: else
  2071                           ;main.c: 175: {
  2072                           ;main.c: 177: ancien_x = x[2];
  2073  00121E  C0FC  F0D3         	movff	main@x+6,main@ancien_x
  2074  001222  C0FD  F0D4         	movff	main@x+7,main@ancien_x+1
  2075  001226  C0FE  F0D5         	movff	main@x+8,main@ancien_x+2
  2076                           
  2077                           ;main.c: 178: ancien_y = y[2];
  2078  00122A  C183  F0D6         	movff	main@y+6,main@ancien_y
  2079  00122E  C184  F0D7         	movff	main@y+7,main@ancien_y+1
  2080  001232  C185  F0D8         	movff	main@y+8,main@ancien_y+2
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;main.c: 179: }
  2084                           ;main.c: 180: }
  2085  001236  D02B               	goto	l4841
  2086  001238                     l4837:
  2087                           
  2088                           ; BSR set to: 0
  2089                           ;main.c: 181: else if (distance[1] < distance[2])
  2090  001238  C10C  F07A         	movff	main@distance+3,___ftge@ff1
  2091  00123C  C10D  F07B         	movff	main@distance+4,___ftge@ff1+1
  2092  001240  C10E  F07C         	movff	main@distance+5,___ftge@ff1+2
  2093  001244  C10F  F07D         	movff	main@distance+6,___ftge@ff2
  2094  001248  C110  F07E         	movff	main@distance+7,___ftge@ff2+1
  2095  00124C  C111  F07F         	movff	main@distance+8,___ftge@ff2+2
  2096  001250  EC36  F015         	call	___ftge	;wreg free
  2097  001254  0100               	movlb	0	; () banked
  2098  001256  B0D8               	btfsc	status,0,c
  2099  001258  D00D               	goto	l65
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;main.c: 182: {
  2103                           ;main.c: 184: ancien_x = x[1];
  2104  00125A  C0F9  F0D3         	movff	main@x+3,main@ancien_x
  2105  00125E  C0FA  F0D4         	movff	main@x+4,main@ancien_x+1
  2106  001262  C0FB  F0D5         	movff	main@x+5,main@ancien_x+2
  2107                           
  2108                           ;main.c: 185: ancien_y = y[1];
  2109  001266  C180  F0D6         	movff	main@y+3,main@ancien_y
  2110  00126A  C181  F0D7         	movff	main@y+4,main@ancien_y+1
  2111  00126E  C182  F0D8         	movff	main@y+5,main@ancien_y+2
  2112                           
  2113                           ;main.c: 186: }
  2114  001272  D00D               	goto	l4841
  2115  001274                     l65:
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;main.c: 187: else
  2119                           ;main.c: 188: {
  2120                           ;main.c: 190: ancien_x = x[2];
  2121  001274  C0FC  F0D3         	movff	main@x+6,main@ancien_x
  2122  001278  C0FD  F0D4         	movff	main@x+7,main@ancien_x+1
  2123  00127C  C0FE  F0D5         	movff	main@x+8,main@ancien_x+2
  2124                           
  2125                           ;main.c: 191: ancien_y = y[2];
  2126  001280  C183  F0D6         	movff	main@y+6,main@ancien_y
  2127  001284  C184  F0D7         	movff	main@y+7,main@ancien_y+1
  2128  001288  C185  F0D8         	movff	main@y+8,main@ancien_y+2
  2129                           
  2130                           ; BSR set to: 0
  2131                           
  2132                           ; BSR set to: 0
  2133  00128C  D000               	goto	l4841
  2134  00128E                     l4841:
  2135                           
  2136                           ; BSR set to: 0
  2137                           ;main.c: 192: }
  2138                           ;main.c: 194: }
  2139                           ;main.c: 196: affichage_position(ancien_x, ancien_y);
  2140  00128E  C0D3  F086         	movff	main@ancien_x,affichage_position@x
  2141  001292  C0D4  F087         	movff	main@ancien_x+1,affichage_position@x+1
  2142  001296  C0D5  F088         	movff	main@ancien_x+2,affichage_position@x+2
  2143  00129A  C0D6  F089         	movff	main@ancien_y,affichage_position@y
  2144  00129E  C0D7  F08A         	movff	main@ancien_y+1,affichage_position@y+1
  2145  0012A2  C0D8  F08B         	movff	main@ancien_y+2,affichage_position@y+2
  2146  0012A6  EC7A  F018         	call	_affichage_position	;wreg free
  2147                           
  2148                           ;main.c: 266: for (i = 0 ; i < 3 ; i++)
  2149  0012AA  0E00               	movlw	0
  2150  0012AC  0101               	movlb	1	; () banked
  2151  0012AE  6FF5               	movwf	(main@i+1)& (0+255),b
  2152  0012B0  0E00               	movlw	0
  2153  0012B2  6FF4               	movwf	main@i& (0+255),b
  2154                           
  2155                           ; BSR set to: 1
  2156  0012B4  0101               	movlb	1	; () banked
  2157  0012B6  BFF5               	btfsc	(main@i+1)& (0+255),7,b
  2158  0012B8  D00A               	goto	l4849
  2159  0012BA  0101               	movlb	1	; () banked
  2160  0012BC  51F5               	movf	(main@i+1)& (0+255),w,b
  2161  0012BE  E106               	bnz	u4300
  2162  0012C0  0E03               	movlw	3
  2163  0012C2  0101               	movlb	1	; () banked
  2164  0012C4  5DF4               	subwf	main@i& (0+255),w,b
  2165  0012C6  B0D8               	btfsc	status,0,c
  2166  0012C8  D606               	goto	l4779
  2167  0012CA  D001               	goto	l4849
  2168  0012CC                     u4300:
  2169                           
  2170                           ; BSR set to: 1
  2171  0012CC  D604               	goto	l4779
  2172  0012CE                     l4849:
  2173                           
  2174                           ; BSR set to: 1
  2175                           ;main.c: 267: capteur.ancien_angle[i] = capteur.angle[i];
  2176  0012CE  C1F4  F060         	movff	main@i,___wmul@multiplier
  2177  0012D2  C1F5  F061         	movff	main@i+1,___wmul@multiplier+1
  2178  0012D6  0E00               	movlw	0
  2179  0012D8  0100               	movlb	0	; () banked
  2180  0012DA  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2181  0012DC  0E03               	movlw	3
  2182  0012DE  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2183  0012E0  EC32  F01B         	call	___wmul	;wreg free
  2184  0012E4  0EDC               	movlw	low (_capteur+3)
  2185  0012E6  0100               	movlb	0	; () banked
  2186  0012E8  2560               	addwf	?___wmul& (0+255),w,b
  2187  0012EA  6ED9               	movwf	fsr2l,c
  2188  0012EC  0E00               	movlw	high (_capteur+3)
  2189  0012EE  0100               	movlb	0	; () banked
  2190  0012F0  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2191  0012F2  6EDA               	movwf	fsr2h,c
  2192  0012F4  C1F4  F060         	movff	main@i,___wmul@multiplier
  2193  0012F8  C1F5  F061         	movff	main@i+1,___wmul@multiplier+1
  2194  0012FC  0E00               	movlw	0
  2195  0012FE  0100               	movlb	0	; () banked
  2196  001300  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2197  001302  0E03               	movlw	3
  2198  001304  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2199  001306  EC32  F01B         	call	___wmul	;wreg free
  2200  00130A  0EE5               	movlw	low (_capteur+12)
  2201  00130C  0100               	movlb	0	; () banked
  2202  00130E  2560               	addwf	?___wmul& (0+255),w,b
  2203  001310  6EE1               	movwf	fsr1l,c
  2204  001312  0E00               	movlw	high (_capteur+12)
  2205  001314  0100               	movlb	0	; () banked
  2206  001316  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2207  001318  6EE2               	movwf	fsr1h,c
  2208  00131A  CFDE FFE6          	movff	postinc2,postinc1
  2209  00131E  CFDE FFE6          	movff	postinc2,postinc1
  2210  001322  CFDE FFE6          	movff	postinc2,postinc1
  2211                           
  2212                           ; BSR set to: 0
  2213  001326  0101               	movlb	1	; () banked
  2214  001328  4BF4               	infsnz	main@i& (0+255),f,b
  2215  00132A  2BF5               	incf	(main@i+1)& (0+255),f,b
  2216                           
  2217                           ; BSR set to: 1
  2218  00132C  0101               	movlb	1	; () banked
  2219  00132E  BFF5               	btfsc	(main@i+1)& (0+255),7,b
  2220  001330  D7CE               	goto	l4849
  2221  001332  0101               	movlb	1	; () banked
  2222  001334  51F5               	movf	(main@i+1)& (0+255),w,b
  2223  001336  E101               	bnz	u4310
  2224  001338  D7C3               	goto	L1
  2225  00133A                     u4310:
  2226                           
  2227                           ; BSR set to: 1
  2228                           
  2229                           ; BSR set to: 1
  2230                           
  2231                           ; BSR set to: 1
  2232  00133A  D5CD               	goto	l4779
  2233  00133C  D7FF               	goto	l72
  2234                           
  2235                           ;main.c: 311: return (0);
  2236                           ;	Return value of _main is never used
  2237  00133E  EF54  F000         	goto	start
  2238  001342                     __end_of_main:
  2239                           	opt stack 0
  2240                           tblptru	equ	0xFF8
  2241                           tblptrh	equ	0xFF7
  2242                           tblptrl	equ	0xFF6
  2243                           tablat	equ	0xFF5
  2244                           postinc0	equ	0xFEE
  2245                           wreg	equ	0xFE8
  2246                           postinc1	equ	0xFE6
  2247                           postdec1	equ	0xFE5
  2248                           fsr1h	equ	0xFE2
  2249                           fsr1l	equ	0xFE1
  2250                           postinc2	equ	0xFDE
  2251                           fsr2h	equ	0xFDA
  2252                           fsr2l	equ	0xFD9
  2253                           status	equ	0xFD8
  2254                           
  2255 ;; *************** function _triangulation *****************
  2256 ;; Defined at:
  2257 ;;		line 24 in file "triangulation.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  x               2    0[BANK1 ] PTR 
  2260 ;;		 -> main@x(9), 
  2261 ;;  y               2    2[BANK1 ] PTR 
  2262 ;;		 -> main@y(9), 
  2263 ;;  angle1          3    4[BANK1 ] PTR 
  2264 ;;  angle2          3    7[BANK1 ] PTR 
  2265 ;;  angle3          3   10[BANK1 ] PTR 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  y3_             3   94[BANK1 ] PTR 
  2268 ;;  x3_             3   91[BANK1 ] PTR 
  2269 ;;  y1_             3   88[BANK1 ] PTR 
  2270 ;;  x1_             3   85[BANK1 ] PTR 
  2271 ;;  cot_23          3   82[BANK1 ] PTR 
  2272 ;;  cot_12          3   79[BANK1 ] PTR 
  2273 ;;  cot_31          3   73[BANK1 ] PTR 
  2274 ;;  c23y            3   67[BANK1 ] PTR 
  2275 ;;  c23x            3   64[BANK1 ] PTR 
  2276 ;;  y2              3   61[BANK1 ] const 
  2277 ;;  x2              3   58[BANK1 ] const 
  2278 ;;  K               3   49[BANK1 ] const 
  2279 ;;  c12y            3   46[BANK1 ] const 
  2280 ;;  c12x            3   43[BANK1 ] const 
  2281 ;;  invD            3   37[BANK1 ] const 
  2282 ;;  D               3   34[BANK1 ] const 
  2283 ;;  k31             3   31[BANK1 ] const 
  2284 ;;  c31y            3   28[BANK1 ] const 
  2285 ;;  c31x            3   25[BANK1 ] const 
  2286 ;;  y3              3   22[BANK1 ] const 
  2287 ;;  x3              3   19[BANK1 ] const 
  2288 ;;  y1              3   16[BANK1 ] const 
  2289 ;;  x1              3   13[BANK1 ] const 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;		None               void
  2292 ;; Registers used:
  2293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2299 ;;      Params:         0       0      13       0
  2300 ;;      Locals:         0       0      84       0
  2301 ;;      Temps:          0       0       0       0
  2302 ;;      Totals:         0       0      97       0
  2303 ;;Total ram usage:       97 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; Hardware stack levels required when called:   13
  2306 ;; This function calls:
  2307 ;;		_Cot
  2308 ;;		___ftadd
  2309 ;;		___ftdiv
  2310 ;;		___ftmul
  2311 ;;		___ftneg
  2312 ;;		_saturation
  2313 ;; This function is called by:
  2314 ;;		_main
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text1
  2319  0003DA                     __ptext1:
  2320                           	opt stack 0
  2321  0003DA                     _triangulation:
  2322                           	opt stack 17
  2323                           
  2324                           ;triangulation.c: 26: const double x1 = 2062., y1 = 3062., x2 = -62., y2 = 3062., x3 = 1
      +                          000., y3 = -62.;
  2325                           
  2326                           ;incstack = 0
  2327  0003DA  0EE0               	movlw	224
  2328  0003DC  0101               	movlb	1	; () banked
  2329  0003DE  6F9B               	movwf	triangulation@x1& (0+255),b
  2330  0003E0  0E00               	movlw	0
  2331  0003E2  0101               	movlb	1	; () banked
  2332  0003E4  6F9C               	movwf	(triangulation@x1+1)& (0+255),b
  2333  0003E6  0E45               	movlw	69
  2334  0003E8  0101               	movlb	1	; () banked
  2335  0003EA  6F9D               	movwf	(triangulation@x1+2)& (0+255),b
  2336  0003EC  0E60               	movlw	96
  2337  0003EE  0101               	movlb	1	; () banked
  2338  0003F0  6F9E               	movwf	triangulation@y1& (0+255),b
  2339  0003F2  0E3F               	movlw	63
  2340  0003F4  0101               	movlb	1	; () banked
  2341  0003F6  6F9F               	movwf	(triangulation@y1+1)& (0+255),b
  2342  0003F8  0E45               	movlw	69
  2343  0003FA  0101               	movlb	1	; () banked
  2344  0003FC  6FA0               	movwf	(triangulation@y1+2)& (0+255),b
  2345  0003FE  0E00               	movlw	0
  2346  000400  0101               	movlb	1	; () banked
  2347  000402  6FC8               	movwf	triangulation@x2& (0+255),b
  2348  000404  0E78               	movlw	120
  2349  000406  0101               	movlb	1	; () banked
  2350  000408  6FC9               	movwf	(triangulation@x2+1)& (0+255),b
  2351  00040A  0EC2               	movlw	194
  2352  00040C  0101               	movlb	1	; () banked
  2353  00040E  6FCA               	movwf	(triangulation@x2+2)& (0+255),b
  2354  000410  0E60               	movlw	96
  2355  000412  0101               	movlb	1	; () banked
  2356  000414  6FCB               	movwf	triangulation@y2& (0+255),b
  2357  000416  0E3F               	movlw	63
  2358  000418  0101               	movlb	1	; () banked
  2359  00041A  6FCC               	movwf	(triangulation@y2+1)& (0+255),b
  2360  00041C  0E45               	movlw	69
  2361  00041E  0101               	movlb	1	; () banked
  2362  000420  6FCD               	movwf	(triangulation@y2+2)& (0+255),b
  2363  000422  0E00               	movlw	0
  2364  000424  0101               	movlb	1	; () banked
  2365  000426  6FA1               	movwf	triangulation@x3& (0+255),b
  2366  000428  0E7A               	movlw	122
  2367  00042A  0101               	movlb	1	; () banked
  2368  00042C  6FA2               	movwf	(triangulation@x3+1)& (0+255),b
  2369  00042E  0E44               	movlw	68
  2370  000430  0101               	movlb	1	; () banked
  2371  000432  6FA3               	movwf	(triangulation@x3+2)& (0+255),b
  2372  000434  0E00               	movlw	0
  2373  000436  0101               	movlb	1	; () banked
  2374  000438  6FA4               	movwf	triangulation@y3& (0+255),b
  2375  00043A  0E78               	movlw	120
  2376  00043C  0101               	movlb	1	; () banked
  2377  00043E  6FA5               	movwf	(triangulation@y3+1)& (0+255),b
  2378  000440  0EC2               	movlw	194
  2379  000442  0101               	movlb	1	; () banked
  2380  000444  6FA6               	movwf	(triangulation@y3+2)& (0+255),b
  2381                           
  2382                           ; BSR set to: 1
  2383                           ;triangulation.c: 28: double cot_12 = Cot( angle2 - angle1 ) ;
  2384  000446  C192  F077         	movff	triangulation@angle1,___ftneg@f1
  2385  00044A  C193  F078         	movff	triangulation@angle1+1,___ftneg@f1+1
  2386  00044E  C194  F079         	movff	triangulation@angle1+2,___ftneg@f1+2
  2387  000452  EC4E  F01B         	call	___ftneg	;wreg free
  2388  000456  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2389  00045A  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2390  00045E  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2391  000462  C195  F07D         	movff	triangulation@angle2,___ftadd@f2
  2392  000466  C196  F07E         	movff	triangulation@angle2+1,___ftadd@f2+1
  2393  00046A  C197  F07F         	movff	triangulation@angle2+2,___ftadd@f2+2
  2394  00046E  EC52  F00E         	call	___ftadd	;wreg free
  2395  000472  C07A  F1C2         	movff	?___ftadd,_triangulation$3242
  2396  000476  C07B  F1C3         	movff	?___ftadd+1,_triangulation$3242+1
  2397  00047A  C07C  F1C4         	movff	?___ftadd+2,_triangulation$3242+2
  2398                           
  2399                           ;triangulation.c: 28: double cot_12 = Cot( angle2 - angle1 ) ;
  2400  00047E  C1C2  F0BD         	movff	_triangulation$3242,Cot@angle
  2401  000482  C1C3  F0BE         	movff	_triangulation$3242+1,Cot@angle+1
  2402  000486  C1C4  F0BF         	movff	_triangulation$3242+2,Cot@angle+2
  2403  00048A  EC21  F019         	call	_Cot	;wreg free
  2404  00048E  C0BD  F1DD         	movff	?_Cot,triangulation@cot_12
  2405  000492  C0BE  F1DE         	movff	?_Cot+1,triangulation@cot_12+1
  2406  000496  C0BF  F1DF         	movff	?_Cot+2,triangulation@cot_12+2
  2407                           
  2408                           ;triangulation.c: 29: double cot_23 = Cot( angle3 - angle2 ) ;
  2409  00049A  C195  F077         	movff	triangulation@angle2,___ftneg@f1
  2410  00049E  C196  F078         	movff	triangulation@angle2+1,___ftneg@f1+1
  2411  0004A2  C197  F079         	movff	triangulation@angle2+2,___ftneg@f1+2
  2412  0004A6  EC4E  F01B         	call	___ftneg	;wreg free
  2413  0004AA  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2414  0004AE  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2415  0004B2  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2416  0004B6  C198  F07D         	movff	triangulation@angle3,___ftadd@f2
  2417  0004BA  C199  F07E         	movff	triangulation@angle3+1,___ftadd@f2+1
  2418  0004BE  C19A  F07F         	movff	triangulation@angle3+2,___ftadd@f2+2
  2419  0004C2  EC52  F00E         	call	___ftadd	;wreg free
  2420  0004C6  C07A  F1C2         	movff	?___ftadd,_triangulation$3242
  2421  0004CA  C07B  F1C3         	movff	?___ftadd+1,_triangulation$3242+1
  2422  0004CE  C07C  F1C4         	movff	?___ftadd+2,_triangulation$3242+2
  2423                           
  2424                           ;triangulation.c: 29: double cot_23 = Cot( angle3 - angle2 ) ;
  2425  0004D2  C1C2  F0BD         	movff	_triangulation$3242,Cot@angle
  2426  0004D6  C1C3  F0BE         	movff	_triangulation$3242+1,Cot@angle+1
  2427  0004DA  C1C4  F0BF         	movff	_triangulation$3242+2,Cot@angle+2
  2428  0004DE  EC21  F019         	call	_Cot	;wreg free
  2429  0004E2  C0BD  F1E0         	movff	?_Cot,triangulation@cot_23
  2430  0004E6  C0BE  F1E1         	movff	?_Cot+1,triangulation@cot_23+1
  2431  0004EA  C0BF  F1E2         	movff	?_Cot+2,triangulation@cot_23+2
  2432                           
  2433                           ;triangulation.c: 30: cot_12 = saturation( cot_12 , 100000000 ) ;
  2434  0004EE  C1DD  F083         	movff	triangulation@cot_12,saturation@valeur
  2435  0004F2  C1DE  F084         	movff	triangulation@cot_12+1,saturation@valeur+1
  2436  0004F6  C1DF  F085         	movff	triangulation@cot_12+2,saturation@valeur+2
  2437  0004FA  0EBC               	movlw	188
  2438  0004FC  0100               	movlb	0	; () banked
  2439  0004FE  6F86               	movwf	saturation@maximum& (0+255),b
  2440  000500  0EBE               	movlw	190
  2441  000502  0100               	movlb	0	; () banked
  2442  000504  6F87               	movwf	(saturation@maximum+1)& (0+255),b
  2443  000506  0E4C               	movlw	76
  2444  000508  0100               	movlb	0	; () banked
  2445  00050A  6F88               	movwf	(saturation@maximum+2)& (0+255),b
  2446  00050C  EC9F  F016         	call	_saturation	;wreg free
  2447  000510  C083  F1DD         	movff	?_saturation,triangulation@cot_12
  2448  000514  C084  F1DE         	movff	?_saturation+1,triangulation@cot_12+1
  2449  000518  C085  F1DF         	movff	?_saturation+2,triangulation@cot_12+2
  2450                           
  2451                           ;triangulation.c: 31: cot_23 = saturation( cot_23 , 100000000 ) ;
  2452  00051C  C1E0  F083         	movff	triangulation@cot_23,saturation@valeur
  2453  000520  C1E1  F084         	movff	triangulation@cot_23+1,saturation@valeur+1
  2454  000524  C1E2  F085         	movff	triangulation@cot_23+2,saturation@valeur+2
  2455  000528  0EBC               	movlw	188
  2456  00052A  0100               	movlb	0	; () banked
  2457  00052C  6F86               	movwf	saturation@maximum& (0+255),b
  2458  00052E  0EBE               	movlw	190
  2459  000530  0100               	movlb	0	; () banked
  2460  000532  6F87               	movwf	(saturation@maximum+1)& (0+255),b
  2461  000534  0E4C               	movlw	76
  2462  000536  0100               	movlb	0	; () banked
  2463  000538  6F88               	movwf	(saturation@maximum+2)& (0+255),b
  2464  00053A  EC9F  F016         	call	_saturation	;wreg free
  2465  00053E  C083  F1E0         	movff	?_saturation,triangulation@cot_23
  2466  000542  C084  F1E1         	movff	?_saturation+1,triangulation@cot_23+1
  2467  000546  C085  F1E2         	movff	?_saturation+2,triangulation@cot_23+2
  2468                           
  2469                           ;triangulation.c: 32: double cot_31 = ( 1.0 - cot_12 * cot_23 ) / ( cot_12 + cot_23 ) ;
  2470  00054A  0E00               	movlw	0
  2471  00054C  0100               	movlb	0	; () banked
  2472  00054E  6F7D               	movwf	___ftadd@f2& (0+255),b
  2473  000550  0E80               	movlw	128
  2474  000552  0100               	movlb	0	; () banked
  2475  000554  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2476  000556  0E3F               	movlw	63
  2477  000558  0100               	movlb	0	; () banked
  2478  00055A  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2479  00055C  C1E0  F06B         	movff	triangulation@cot_23,___ftmul@f2
  2480  000560  C1E1  F06C         	movff	triangulation@cot_23+1,___ftmul@f2+1
  2481  000564  C1E2  F06D         	movff	triangulation@cot_23+2,___ftmul@f2+2
  2482  000568  C1DD  F068         	movff	triangulation@cot_12,___ftmul@f1
  2483  00056C  C1DE  F069         	movff	triangulation@cot_12+1,___ftmul@f1+1
  2484  000570  C1DF  F06A         	movff	triangulation@cot_12+2,___ftmul@f1+2
  2485  000574  EC72  F010         	call	___ftmul	;wreg free
  2486  000578  C068  F077         	movff	?___ftmul,___ftneg@f1
  2487  00057C  C069  F078         	movff	?___ftmul+1,___ftneg@f1+1
  2488  000580  C06A  F079         	movff	?___ftmul+2,___ftneg@f1+2
  2489  000584  EC4E  F01B         	call	___ftneg	;wreg free
  2490  000588  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2491  00058C  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2492  000590  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2493  000594  EC52  F00E         	call	___ftadd	;wreg free
  2494  000598  C07A  F092         	movff	?___ftadd,___ftdiv@f1
  2495  00059C  C07B  F093         	movff	?___ftadd+1,___ftdiv@f1+1
  2496  0005A0  C07C  F094         	movff	?___ftadd+2,___ftdiv@f1+2
  2497  0005A4  C1E0  F07D         	movff	triangulation@cot_23,___ftadd@f2
  2498  0005A8  C1E1  F07E         	movff	triangulation@cot_23+1,___ftadd@f2+1
  2499  0005AC  C1E2  F07F         	movff	triangulation@cot_23+2,___ftadd@f2+2
  2500  0005B0  C1DD  F07A         	movff	triangulation@cot_12,___ftadd@f1
  2501  0005B4  C1DE  F07B         	movff	triangulation@cot_12+1,___ftadd@f1+1
  2502  0005B8  C1DF  F07C         	movff	triangulation@cot_12+2,___ftadd@f1+2
  2503  0005BC  EC52  F00E         	call	___ftadd	;wreg free
  2504  0005C0  C07A  F095         	movff	?___ftadd,___ftdiv@f2
  2505  0005C4  C07B  F096         	movff	?___ftadd+1,___ftdiv@f2+1
  2506  0005C8  C07C  F097         	movff	?___ftadd+2,___ftdiv@f2+2
  2507  0005CC  EC20  F011         	call	___ftdiv	;wreg free
  2508  0005D0  C092  F1D7         	movff	?___ftdiv,triangulation@cot_31
  2509  0005D4  C093  F1D8         	movff	?___ftdiv+1,triangulation@cot_31+1
  2510  0005D8  C094  F1D9         	movff	?___ftdiv+2,triangulation@cot_31+2
  2511                           
  2512                           ;triangulation.c: 33: cot_31 = saturation( cot_31 , 100000000 ) ;
  2513  0005DC  C1D7  F083         	movff	triangulation@cot_31,saturation@valeur
  2514  0005E0  C1D8  F084         	movff	triangulation@cot_31+1,saturation@valeur+1
  2515  0005E4  C1D9  F085         	movff	triangulation@cot_31+2,saturation@valeur+2
  2516  0005E8  0EBC               	movlw	188
  2517  0005EA  0100               	movlb	0	; () banked
  2518  0005EC  6F86               	movwf	saturation@maximum& (0+255),b
  2519  0005EE  0EBE               	movlw	190
  2520  0005F0  0100               	movlb	0	; () banked
  2521  0005F2  6F87               	movwf	(saturation@maximum+1)& (0+255),b
  2522  0005F4  0E4C               	movlw	76
  2523  0005F6  0100               	movlb	0	; () banked
  2524  0005F8  6F88               	movwf	(saturation@maximum+2)& (0+255),b
  2525  0005FA  EC9F  F016         	call	_saturation	;wreg free
  2526  0005FE  C083  F1D7         	movff	?_saturation,triangulation@cot_31
  2527  000602  C084  F1D8         	movff	?_saturation+1,triangulation@cot_31+1
  2528  000606  C085  F1D9         	movff	?_saturation+2,triangulation@cot_31+2
  2529                           
  2530                           ;triangulation.c: 34: double x1_ = x1 - x2 , y1_ = y1 - y2 , x3_ = x3 - x2 , y3_ = y3 - 
      +                          y2 ;
  2531  00060A  C1C8  F077         	movff	triangulation@x2,___ftneg@f1
  2532  00060E  C1C9  F078         	movff	triangulation@x2+1,___ftneg@f1+1
  2533  000612  C1CA  F079         	movff	triangulation@x2+2,___ftneg@f1+2
  2534  000616  EC4E  F01B         	call	___ftneg	;wreg free
  2535  00061A  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2536  00061E  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2537  000622  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2538  000626  C19B  F07D         	movff	triangulation@x1,___ftadd@f2
  2539  00062A  C19C  F07E         	movff	triangulation@x1+1,___ftadd@f2+1
  2540  00062E  C19D  F07F         	movff	triangulation@x1+2,___ftadd@f2+2
  2541  000632  EC52  F00E         	call	___ftadd	;wreg free
  2542  000636  C07A  F1E3         	movff	?___ftadd,triangulation@x1_
  2543  00063A  C07B  F1E4         	movff	?___ftadd+1,triangulation@x1_+1
  2544  00063E  C07C  F1E5         	movff	?___ftadd+2,triangulation@x1_+2
  2545  000642  C1CB  F077         	movff	triangulation@y2,___ftneg@f1
  2546  000646  C1CC  F078         	movff	triangulation@y2+1,___ftneg@f1+1
  2547  00064A  C1CD  F079         	movff	triangulation@y2+2,___ftneg@f1+2
  2548  00064E  EC4E  F01B         	call	___ftneg	;wreg free
  2549  000652  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2550  000656  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2551  00065A  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2552  00065E  C19E  F07D         	movff	triangulation@y1,___ftadd@f2
  2553  000662  C19F  F07E         	movff	triangulation@y1+1,___ftadd@f2+1
  2554  000666  C1A0  F07F         	movff	triangulation@y1+2,___ftadd@f2+2
  2555  00066A  EC52  F00E         	call	___ftadd	;wreg free
  2556  00066E  C07A  F1E6         	movff	?___ftadd,triangulation@y1_
  2557  000672  C07B  F1E7         	movff	?___ftadd+1,triangulation@y1_+1
  2558  000676  C07C  F1E8         	movff	?___ftadd+2,triangulation@y1_+2
  2559  00067A  C1C8  F077         	movff	triangulation@x2,___ftneg@f1
  2560  00067E  C1C9  F078         	movff	triangulation@x2+1,___ftneg@f1+1
  2561  000682  C1CA  F079         	movff	triangulation@x2+2,___ftneg@f1+2
  2562  000686  EC4E  F01B         	call	___ftneg	;wreg free
  2563  00068A  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2564  00068E  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2565  000692  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2566  000696  C1A1  F07D         	movff	triangulation@x3,___ftadd@f2
  2567  00069A  C1A2  F07E         	movff	triangulation@x3+1,___ftadd@f2+1
  2568  00069E  C1A3  F07F         	movff	triangulation@x3+2,___ftadd@f2+2
  2569  0006A2  EC52  F00E         	call	___ftadd	;wreg free
  2570  0006A6  C07A  F1E9         	movff	?___ftadd,triangulation@x3_
  2571  0006AA  C07B  F1EA         	movff	?___ftadd+1,triangulation@x3_+1
  2572  0006AE  C07C  F1EB         	movff	?___ftadd+2,triangulation@x3_+2
  2573  0006B2  C1CB  F077         	movff	triangulation@y2,___ftneg@f1
  2574  0006B6  C1CC  F078         	movff	triangulation@y2+1,___ftneg@f1+1
  2575  0006BA  C1CD  F079         	movff	triangulation@y2+2,___ftneg@f1+2
  2576  0006BE  EC4E  F01B         	call	___ftneg	;wreg free
  2577  0006C2  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2578  0006C6  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2579  0006CA  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2580  0006CE  C1A4  F07D         	movff	triangulation@y3,___ftadd@f2
  2581  0006D2  C1A5  F07E         	movff	triangulation@y3+1,___ftadd@f2+1
  2582  0006D6  C1A6  F07F         	movff	triangulation@y3+2,___ftadd@f2+2
  2583  0006DA  EC52  F00E         	call	___ftadd	;wreg free
  2584  0006DE  C07A  F1EC         	movff	?___ftadd,triangulation@y3_
  2585  0006E2  C07B  F1ED         	movff	?___ftadd+1,triangulation@y3_+1
  2586  0006E6  C07C  F1EE         	movff	?___ftadd+2,triangulation@y3_+2
  2587                           
  2588                           ;triangulation.c: 35: double c12x = x1_ + cot_12 * y1_ ;
  2589  0006EA  C1E6  F06B         	movff	triangulation@y1_,___ftmul@f2
  2590  0006EE  C1E7  F06C         	movff	triangulation@y1_+1,___ftmul@f2+1
  2591  0006F2  C1E8  F06D         	movff	triangulation@y1_+2,___ftmul@f2+2
  2592  0006F6  C1DD  F068         	movff	triangulation@cot_12,___ftmul@f1
  2593  0006FA  C1DE  F069         	movff	triangulation@cot_12+1,___ftmul@f1+1
  2594  0006FE  C1DF  F06A         	movff	triangulation@cot_12+2,___ftmul@f1+2
  2595  000702  EC72  F010         	call	___ftmul	;wreg free
  2596  000706  C068  F07A         	movff	?___ftmul,___ftadd@f1
  2597  00070A  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  2598  00070E  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  2599  000712  C1E3  F07D         	movff	triangulation@x1_,___ftadd@f2
  2600  000716  C1E4  F07E         	movff	triangulation@x1_+1,___ftadd@f2+1
  2601  00071A  C1E5  F07F         	movff	triangulation@x1_+2,___ftadd@f2+2
  2602  00071E  EC52  F00E         	call	___ftadd	;wreg free
  2603  000722  C07A  F1B9         	movff	?___ftadd,triangulation@c12x
  2604  000726  C07B  F1BA         	movff	?___ftadd+1,triangulation@c12x+1
  2605  00072A  C07C  F1BB         	movff	?___ftadd+2,triangulation@c12x+2
  2606                           
  2607                           ;triangulation.c: 36: double c12y = y1_ - cot_12 * x1_ ;
  2608  00072E  C1E3  F06B         	movff	triangulation@x1_,___ftmul@f2
  2609  000732  C1E4  F06C         	movff	triangulation@x1_+1,___ftmul@f2+1
  2610  000736  C1E5  F06D         	movff	triangulation@x1_+2,___ftmul@f2+2
  2611  00073A  C1DD  F068         	movff	triangulation@cot_12,___ftmul@f1
  2612  00073E  C1DE  F069         	movff	triangulation@cot_12+1,___ftmul@f1+1
  2613  000742  C1DF  F06A         	movff	triangulation@cot_12+2,___ftmul@f1+2
  2614  000746  EC72  F010         	call	___ftmul	;wreg free
  2615  00074A  C068  F077         	movff	?___ftmul,___ftneg@f1
  2616  00074E  C069  F078         	movff	?___ftmul+1,___ftneg@f1+1
  2617  000752  C06A  F079         	movff	?___ftmul+2,___ftneg@f1+2
  2618  000756  EC4E  F01B         	call	___ftneg	;wreg free
  2619  00075A  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2620  00075E  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2621  000762  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2622  000766  C1E6  F07D         	movff	triangulation@y1_,___ftadd@f2
  2623  00076A  C1E7  F07E         	movff	triangulation@y1_+1,___ftadd@f2+1
  2624  00076E  C1E8  F07F         	movff	triangulation@y1_+2,___ftadd@f2+2
  2625  000772  EC52  F00E         	call	___ftadd	;wreg free
  2626  000776  C07A  F1BC         	movff	?___ftadd,triangulation@c12y
  2627  00077A  C07B  F1BD         	movff	?___ftadd+1,triangulation@c12y+1
  2628  00077E  C07C  F1BE         	movff	?___ftadd+2,triangulation@c12y+2
  2629                           
  2630                           ;triangulation.c: 38: double c23x = x3_ - cot_23 * y3_ ;
  2631  000782  C1EC  F06B         	movff	triangulation@y3_,___ftmul@f2
  2632  000786  C1ED  F06C         	movff	triangulation@y3_+1,___ftmul@f2+1
  2633  00078A  C1EE  F06D         	movff	triangulation@y3_+2,___ftmul@f2+2
  2634  00078E  C1E0  F068         	movff	triangulation@cot_23,___ftmul@f1
  2635  000792  C1E1  F069         	movff	triangulation@cot_23+1,___ftmul@f1+1
  2636  000796  C1E2  F06A         	movff	triangulation@cot_23+2,___ftmul@f1+2
  2637  00079A  EC72  F010         	call	___ftmul	;wreg free
  2638  00079E  C068  F077         	movff	?___ftmul,___ftneg@f1
  2639  0007A2  C069  F078         	movff	?___ftmul+1,___ftneg@f1+1
  2640  0007A6  C06A  F079         	movff	?___ftmul+2,___ftneg@f1+2
  2641  0007AA  EC4E  F01B         	call	___ftneg	;wreg free
  2642  0007AE  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2643  0007B2  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2644  0007B6  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2645  0007BA  C1E9  F07D         	movff	triangulation@x3_,___ftadd@f2
  2646  0007BE  C1EA  F07E         	movff	triangulation@x3_+1,___ftadd@f2+1
  2647  0007C2  C1EB  F07F         	movff	triangulation@x3_+2,___ftadd@f2+2
  2648  0007C6  EC52  F00E         	call	___ftadd	;wreg free
  2649  0007CA  C07A  F1CE         	movff	?___ftadd,triangulation@c23x
  2650  0007CE  C07B  F1CF         	movff	?___ftadd+1,triangulation@c23x+1
  2651  0007D2  C07C  F1D0         	movff	?___ftadd+2,triangulation@c23x+2
  2652                           
  2653                           ;triangulation.c: 39: double c23y = y3_ + cot_23 * x3_ ;
  2654  0007D6  C1E9  F06B         	movff	triangulation@x3_,___ftmul@f2
  2655  0007DA  C1EA  F06C         	movff	triangulation@x3_+1,___ftmul@f2+1
  2656  0007DE  C1EB  F06D         	movff	triangulation@x3_+2,___ftmul@f2+2
  2657  0007E2  C1E0  F068         	movff	triangulation@cot_23,___ftmul@f1
  2658  0007E6  C1E1  F069         	movff	triangulation@cot_23+1,___ftmul@f1+1
  2659  0007EA  C1E2  F06A         	movff	triangulation@cot_23+2,___ftmul@f1+2
  2660  0007EE  EC72  F010         	call	___ftmul	;wreg free
  2661  0007F2  C068  F07A         	movff	?___ftmul,___ftadd@f1
  2662  0007F6  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  2663  0007FA  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  2664  0007FE  C1EC  F07D         	movff	triangulation@y3_,___ftadd@f2
  2665  000802  C1ED  F07E         	movff	triangulation@y3_+1,___ftadd@f2+1
  2666  000806  C1EE  F07F         	movff	triangulation@y3_+2,___ftadd@f2+2
  2667  00080A  EC52  F00E         	call	___ftadd	;wreg free
  2668  00080E  C07A  F1D1         	movff	?___ftadd,triangulation@c23y
  2669  000812  C07B  F1D2         	movff	?___ftadd+1,triangulation@c23y+1
  2670  000816  C07C  F1D3         	movff	?___ftadd+2,triangulation@c23y+2
  2671                           
  2672                           ;triangulation.c: 41: double c31x = (x3_ + x1_) + cot_31 * (y3_ - y1_) ;
  2673  00081A  C1D7  F06B         	movff	triangulation@cot_31,___ftmul@f2
  2674  00081E  C1D8  F06C         	movff	triangulation@cot_31+1,___ftmul@f2+1
  2675  000822  C1D9  F06D         	movff	triangulation@cot_31+2,___ftmul@f2+2
  2676  000826  C1EC  F07D         	movff	triangulation@y3_,___ftadd@f2
  2677  00082A  C1ED  F07E         	movff	triangulation@y3_+1,___ftadd@f2+1
  2678  00082E  C1EE  F07F         	movff	triangulation@y3_+2,___ftadd@f2+2
  2679  000832  C1E6  F077         	movff	triangulation@y1_,___ftneg@f1
  2680  000836  C1E7  F078         	movff	triangulation@y1_+1,___ftneg@f1+1
  2681  00083A  C1E8  F079         	movff	triangulation@y1_+2,___ftneg@f1+2
  2682  00083E  EC4E  F01B         	call	___ftneg	;wreg free
  2683  000842  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2684  000846  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2685  00084A  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2686  00084E  EC52  F00E         	call	___ftadd	;wreg free
  2687  000852  C07A  F068         	movff	?___ftadd,___ftmul@f1
  2688  000856  C07B  F069         	movff	?___ftadd+1,___ftmul@f1+1
  2689  00085A  C07C  F06A         	movff	?___ftadd+2,___ftmul@f1+2
  2690  00085E  EC72  F010         	call	___ftmul	;wreg free
  2691  000862  C068  F1D4         	movff	?___ftmul,_triangulation$3243
  2692  000866  C069  F1D5         	movff	?___ftmul+1,_triangulation$3243+1
  2693  00086A  C06A  F1D6         	movff	?___ftmul+2,_triangulation$3243+2
  2694                           
  2695                           ;triangulation.c: 41: double c31x = (x3_ + x1_) + cot_31 * (y3_ - y1_) ;
  2696  00086E  C1E9  F07D         	movff	triangulation@x3_,___ftadd@f2
  2697  000872  C1EA  F07E         	movff	triangulation@x3_+1,___ftadd@f2+1
  2698  000876  C1EB  F07F         	movff	triangulation@x3_+2,___ftadd@f2+2
  2699  00087A  C1D4  F07A         	movff	_triangulation$3243,___ftadd@f1
  2700  00087E  C1D5  F07B         	movff	_triangulation$3243+1,___ftadd@f1+1
  2701  000882  C1D6  F07C         	movff	_triangulation$3243+2,___ftadd@f1+2
  2702  000886  EC52  F00E         	call	___ftadd	;wreg free
  2703  00088A  C07A  F1DA         	movff	?___ftadd,_triangulation$3244
  2704  00088E  C07B  F1DB         	movff	?___ftadd+1,_triangulation$3244+1
  2705  000892  C07C  F1DC         	movff	?___ftadd+2,_triangulation$3244+2
  2706                           
  2707                           ;triangulation.c: 41: double c31x = (x3_ + x1_) + cot_31 * (y3_ - y1_) ;
  2708  000896  C1DA  F07A         	movff	_triangulation$3244,___ftadd@f1
  2709  00089A  C1DB  F07B         	movff	_triangulation$3244+1,___ftadd@f1+1
  2710  00089E  C1DC  F07C         	movff	_triangulation$3244+2,___ftadd@f1+2
  2711  0008A2  C1E3  F07D         	movff	triangulation@x1_,___ftadd@f2
  2712  0008A6  C1E4  F07E         	movff	triangulation@x1_+1,___ftadd@f2+1
  2713  0008AA  C1E5  F07F         	movff	triangulation@x1_+2,___ftadd@f2+2
  2714  0008AE  EC52  F00E         	call	___ftadd	;wreg free
  2715  0008B2  C07A  F1A7         	movff	?___ftadd,triangulation@c31x
  2716  0008B6  C07B  F1A8         	movff	?___ftadd+1,triangulation@c31x+1
  2717  0008BA  C07C  F1A9         	movff	?___ftadd+2,triangulation@c31x+2
  2718                           
  2719                           ;triangulation.c: 42: double c31y = (y3_ + y1_) - cot_31 * (x3_ - x1_) ;
  2720  0008BE  C1D7  F06B         	movff	triangulation@cot_31,___ftmul@f2
  2721  0008C2  C1D8  F06C         	movff	triangulation@cot_31+1,___ftmul@f2+1
  2722  0008C6  C1D9  F06D         	movff	triangulation@cot_31+2,___ftmul@f2+2
  2723  0008CA  C1E9  F07D         	movff	triangulation@x3_,___ftadd@f2
  2724  0008CE  C1EA  F07E         	movff	triangulation@x3_+1,___ftadd@f2+1
  2725  0008D2  C1EB  F07F         	movff	triangulation@x3_+2,___ftadd@f2+2
  2726  0008D6  C1E3  F077         	movff	triangulation@x1_,___ftneg@f1
  2727  0008DA  C1E4  F078         	movff	triangulation@x1_+1,___ftneg@f1+1
  2728  0008DE  C1E5  F079         	movff	triangulation@x1_+2,___ftneg@f1+2
  2729  0008E2  EC4E  F01B         	call	___ftneg	;wreg free
  2730  0008E6  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2731  0008EA  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2732  0008EE  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2733  0008F2  EC52  F00E         	call	___ftadd	;wreg free
  2734  0008F6  C07A  F068         	movff	?___ftadd,___ftmul@f1
  2735  0008FA  C07B  F069         	movff	?___ftadd+1,___ftmul@f1+1
  2736  0008FE  C07C  F06A         	movff	?___ftadd+2,___ftmul@f1+2
  2737  000902  EC72  F010         	call	___ftmul	;wreg free
  2738  000906  C068  F1C5         	movff	?___ftmul,_triangulation$3245
  2739  00090A  C069  F1C6         	movff	?___ftmul+1,_triangulation$3245+1
  2740  00090E  C06A  F1C7         	movff	?___ftmul+2,_triangulation$3245+2
  2741                           
  2742                           ;triangulation.c: 42: double c31y = (y3_ + y1_) - cot_31 * (x3_ - x1_) ;
  2743  000912  C1EC  F07D         	movff	triangulation@y3_,___ftadd@f2
  2744  000916  C1ED  F07E         	movff	triangulation@y3_+1,___ftadd@f2+1
  2745  00091A  C1EE  F07F         	movff	triangulation@y3_+2,___ftadd@f2+2
  2746  00091E  C1C5  F077         	movff	_triangulation$3245,___ftneg@f1
  2747  000922  C1C6  F078         	movff	_triangulation$3245+1,___ftneg@f1+1
  2748  000926  C1C7  F079         	movff	_triangulation$3245+2,___ftneg@f1+2
  2749  00092A  EC4E  F01B         	call	___ftneg	;wreg free
  2750  00092E  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2751  000932  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2752  000936  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2753  00093A  EC52  F00E         	call	___ftadd	;wreg free
  2754  00093E  C07A  F1DA         	movff	?___ftadd,_triangulation$3244
  2755  000942  C07B  F1DB         	movff	?___ftadd+1,_triangulation$3244+1
  2756  000946  C07C  F1DC         	movff	?___ftadd+2,_triangulation$3244+2
  2757                           
  2758                           ;triangulation.c: 42: double c31y = (y3_ + y1_) - cot_31 * (x3_ - x1_) ;
  2759  00094A  C1DA  F07A         	movff	_triangulation$3244,___ftadd@f1
  2760  00094E  C1DB  F07B         	movff	_triangulation$3244+1,___ftadd@f1+1
  2761  000952  C1DC  F07C         	movff	_triangulation$3244+2,___ftadd@f1+2
  2762  000956  C1E6  F07D         	movff	triangulation@y1_,___ftadd@f2
  2763  00095A  C1E7  F07E         	movff	triangulation@y1_+1,___ftadd@f2+1
  2764  00095E  C1E8  F07F         	movff	triangulation@y1_+2,___ftadd@f2+2
  2765  000962  EC52  F00E         	call	___ftadd	;wreg free
  2766  000966  C07A  F1AA         	movff	?___ftadd,triangulation@c31y
  2767  00096A  C07B  F1AB         	movff	?___ftadd+1,triangulation@c31y+1
  2768  00096E  C07C  F1AC         	movff	?___ftadd+2,triangulation@c31y+2
  2769                           
  2770                           ;triangulation.c: 43: double k31 = (x3_ * x1_) + (y3_ * y1_) + cot_31 * ( (y3_ * x1_) - 
      +                          (x3_ * y1_) ) ;
  2771  000972  C1E6  F06B         	movff	triangulation@y1_,___ftmul@f2
  2772  000976  C1E7  F06C         	movff	triangulation@y1_+1,___ftmul@f2+1
  2773  00097A  C1E8  F06D         	movff	triangulation@y1_+2,___ftmul@f2+2
  2774  00097E  C1E9  F068         	movff	triangulation@x3_,___ftmul@f1
  2775  000982  C1EA  F069         	movff	triangulation@x3_+1,___ftmul@f1+1
  2776  000986  C1EB  F06A         	movff	triangulation@x3_+2,___ftmul@f1+2
  2777  00098A  EC72  F010         	call	___ftmul	;wreg free
  2778  00098E  C068  F077         	movff	?___ftmul,___ftneg@f1
  2779  000992  C069  F078         	movff	?___ftmul+1,___ftneg@f1+1
  2780  000996  C06A  F079         	movff	?___ftmul+2,___ftneg@f1+2
  2781  00099A  EC4E  F01B         	call	___ftneg	;wreg free
  2782  00099E  C077  F07D         	movff	?___ftneg,___ftadd@f2
  2783  0009A2  C078  F07E         	movff	?___ftneg+1,___ftadd@f2+1
  2784  0009A6  C079  F07F         	movff	?___ftneg+2,___ftadd@f2+2
  2785  0009AA  C1E3  F06B         	movff	triangulation@x1_,___ftmul@f2
  2786  0009AE  C1E4  F06C         	movff	triangulation@x1_+1,___ftmul@f2+1
  2787  0009B2  C1E5  F06D         	movff	triangulation@x1_+2,___ftmul@f2+2
  2788  0009B6  C1EC  F068         	movff	triangulation@y3_,___ftmul@f1
  2789  0009BA  C1ED  F069         	movff	triangulation@y3_+1,___ftmul@f1+1
  2790  0009BE  C1EE  F06A         	movff	triangulation@y3_+2,___ftmul@f1+2
  2791  0009C2  EC72  F010         	call	___ftmul	;wreg free
  2792  0009C6  C068  F07A         	movff	?___ftmul,___ftadd@f1
  2793  0009CA  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  2794  0009CE  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  2795  0009D2  EC52  F00E         	call	___ftadd	;wreg free
  2796  0009D6  C07A  F1B6         	movff	?___ftadd,_triangulation$3246
  2797  0009DA  C07B  F1B7         	movff	?___ftadd+1,_triangulation$3246+1
  2798  0009DE  C07C  F1B8         	movff	?___ftadd+2,_triangulation$3246+2
  2799                           
  2800                           ;triangulation.c: 43: double k31 = (x3_ * x1_) + (y3_ * y1_) + cot_31 * ( (y3_ * x1_) - 
      +                          (x3_ * y1_) ) ;
  2801  0009E2  C1E6  F06B         	movff	triangulation@y1_,___ftmul@f2
  2802  0009E6  C1E7  F06C         	movff	triangulation@y1_+1,___ftmul@f2+1
  2803  0009EA  C1E8  F06D         	movff	triangulation@y1_+2,___ftmul@f2+2
  2804  0009EE  C1EC  F068         	movff	triangulation@y3_,___ftmul@f1
  2805  0009F2  C1ED  F069         	movff	triangulation@y3_+1,___ftmul@f1+1
  2806  0009F6  C1EE  F06A         	movff	triangulation@y3_+2,___ftmul@f1+2
  2807  0009FA  EC72  F010         	call	___ftmul	;wreg free
  2808  0009FE  C068  F07D         	movff	?___ftmul,___ftadd@f2
  2809  000A02  C069  F07E         	movff	?___ftmul+1,___ftadd@f2+1
  2810  000A06  C06A  F07F         	movff	?___ftmul+2,___ftadd@f2+2
  2811  000A0A  C1E3  F06B         	movff	triangulation@x1_,___ftmul@f2
  2812  000A0E  C1E4  F06C         	movff	triangulation@x1_+1,___ftmul@f2+1
  2813  000A12  C1E5  F06D         	movff	triangulation@x1_+2,___ftmul@f2+2
  2814  000A16  C1E9  F068         	movff	triangulation@x3_,___ftmul@f1
  2815  000A1A  C1EA  F069         	movff	triangulation@x3_+1,___ftmul@f1+1
  2816  000A1E  C1EB  F06A         	movff	triangulation@x3_+2,___ftmul@f1+2
  2817  000A22  EC72  F010         	call	___ftmul	;wreg free
  2818  000A26  C068  F07A         	movff	?___ftmul,___ftadd@f1
  2819  000A2A  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  2820  000A2E  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  2821  000A32  EC52  F00E         	call	___ftadd	;wreg free
  2822  000A36  C07A  F1DA         	movff	?___ftadd,_triangulation$3244
  2823  000A3A  C07B  F1DB         	movff	?___ftadd+1,_triangulation$3244+1
  2824  000A3E  C07C  F1DC         	movff	?___ftadd+2,_triangulation$3244+2
  2825                           
  2826                           ;triangulation.c: 43: double k31 = (x3_ * x1_) + (y3_ * y1_) + cot_31 * ( (y3_ * x1_) - 
      +                          (x3_ * y1_) ) ;
  2827  000A42  C1DA  F07A         	movff	_triangulation$3244,___ftadd@f1
  2828  000A46  C1DB  F07B         	movff	_triangulation$3244+1,___ftadd@f1+1
  2829  000A4A  C1DC  F07C         	movff	_triangulation$3244+2,___ftadd@f1+2
  2830  000A4E  C1D7  F06B         	movff	triangulation@cot_31,___ftmul@f2
  2831  000A52  C1D8  F06C         	movff	triangulation@cot_31+1,___ftmul@f2+1
  2832  000A56  C1D9  F06D         	movff	triangulation@cot_31+2,___ftmul@f2+2
  2833  000A5A  C1B6  F068         	movff	_triangulation$3246,___ftmul@f1
  2834  000A5E  C1B7  F069         	movff	_triangulation$3246+1,___ftmul@f1+1
  2835  000A62  C1B8  F06A         	movff	_triangulation$3246+2,___ftmul@f1+2
  2836  000A66  EC72  F010         	call	___ftmul	;wreg free
  2837  000A6A  C068  F07D         	movff	?___ftmul,___ftadd@f2
  2838  000A6E  C069  F07E         	movff	?___ftmul+1,___ftadd@f2+1
  2839  000A72  C06A  F07F         	movff	?___ftmul+2,___ftadd@f2+2
  2840  000A76  EC52  F00E         	call	___ftadd	;wreg free
  2841  000A7A  C07A  F1AD         	movff	?___ftadd,triangulation@k31
  2842  000A7E  C07B  F1AE         	movff	?___ftadd+1,triangulation@k31+1
  2843  000A82  C07C  F1AF         	movff	?___ftadd+2,triangulation@k31+2
  2844                           
  2845                           ;triangulation.c: 45: double D = (c12x - c23x) * (c23y - c31y) - (c23x - c31x) * (c12y -
      +                           c23y) ;
  2846  000A86  C1BC  F07D         	movff	triangulation@c12y,___ftadd@f2
  2847  000A8A  C1BD  F07E         	movff	triangulation@c12y+1,___ftadd@f2+1
  2848  000A8E  C1BE  F07F         	movff	triangulation@c12y+2,___ftadd@f2+2
  2849  000A92  C1D1  F077         	movff	triangulation@c23y,___ftneg@f1
  2850  000A96  C1D2  F078         	movff	triangulation@c23y+1,___ftneg@f1+1
  2851  000A9A  C1D3  F079         	movff	triangulation@c23y+2,___ftneg@f1+2
  2852  000A9E  EC4E  F01B         	call	___ftneg	;wreg free
  2853  000AA2  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2854  000AA6  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2855  000AAA  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2856  000AAE  EC52  F00E         	call	___ftadd	;wreg free
  2857  000AB2  C07A  F06B         	movff	?___ftadd,___ftmul@f2
  2858  000AB6  C07B  F06C         	movff	?___ftadd+1,___ftmul@f2+1
  2859  000ABA  C07C  F06D         	movff	?___ftadd+2,___ftmul@f2+2
  2860  000ABE  C1CE  F07D         	movff	triangulation@c23x,___ftadd@f2
  2861  000AC2  C1CF  F07E         	movff	triangulation@c23x+1,___ftadd@f2+1
  2862  000AC6  C1D0  F07F         	movff	triangulation@c23x+2,___ftadd@f2+2
  2863  000ACA  C1A7  F077         	movff	triangulation@c31x,___ftneg@f1
  2864  000ACE  C1A8  F078         	movff	triangulation@c31x+1,___ftneg@f1+1
  2865  000AD2  C1A9  F079         	movff	triangulation@c31x+2,___ftneg@f1+2
  2866  000AD6  EC4E  F01B         	call	___ftneg	;wreg free
  2867  000ADA  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2868  000ADE  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2869  000AE2  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2870  000AE6  EC52  F00E         	call	___ftadd	;wreg free
  2871  000AEA  C07A  F068         	movff	?___ftadd,___ftmul@f1
  2872  000AEE  C07B  F069         	movff	?___ftadd+1,___ftmul@f1+1
  2873  000AF2  C07C  F06A         	movff	?___ftadd+2,___ftmul@f1+2
  2874  000AF6  EC72  F010         	call	___ftmul	;wreg free
  2875  000AFA  C068  F1C5         	movff	?___ftmul,_triangulation$3245
  2876  000AFE  C069  F1C6         	movff	?___ftmul+1,_triangulation$3245+1
  2877  000B02  C06A  F1C7         	movff	?___ftmul+2,_triangulation$3245+2
  2878                           
  2879                           ;triangulation.c: 45: double D = (c12x - c23x) * (c23y - c31y) - (c23x - c31x) * (c12y -
      +                           c23y) ;
  2880  000B06  C1D1  F07D         	movff	triangulation@c23y,___ftadd@f2
  2881  000B0A  C1D2  F07E         	movff	triangulation@c23y+1,___ftadd@f2+1
  2882  000B0E  C1D3  F07F         	movff	triangulation@c23y+2,___ftadd@f2+2
  2883  000B12  C1AA  F077         	movff	triangulation@c31y,___ftneg@f1
  2884  000B16  C1AB  F078         	movff	triangulation@c31y+1,___ftneg@f1+1
  2885  000B1A  C1AC  F079         	movff	triangulation@c31y+2,___ftneg@f1+2
  2886  000B1E  EC4E  F01B         	call	___ftneg	;wreg free
  2887  000B22  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2888  000B26  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2889  000B2A  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2890  000B2E  EC52  F00E         	call	___ftadd	;wreg free
  2891  000B32  C07A  F06B         	movff	?___ftadd,___ftmul@f2
  2892  000B36  C07B  F06C         	movff	?___ftadd+1,___ftmul@f2+1
  2893  000B3A  C07C  F06D         	movff	?___ftadd+2,___ftmul@f2+2
  2894  000B3E  C1B9  F07D         	movff	triangulation@c12x,___ftadd@f2
  2895  000B42  C1BA  F07E         	movff	triangulation@c12x+1,___ftadd@f2+1
  2896  000B46  C1BB  F07F         	movff	triangulation@c12x+2,___ftadd@f2+2
  2897  000B4A  C1CE  F077         	movff	triangulation@c23x,___ftneg@f1
  2898  000B4E  C1CF  F078         	movff	triangulation@c23x+1,___ftneg@f1+1
  2899  000B52  C1D0  F079         	movff	triangulation@c23x+2,___ftneg@f1+2
  2900  000B56  EC4E  F01B         	call	___ftneg	;wreg free
  2901  000B5A  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2902  000B5E  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2903  000B62  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2904  000B66  EC52  F00E         	call	___ftadd	;wreg free
  2905  000B6A  C07A  F068         	movff	?___ftadd,___ftmul@f1
  2906  000B6E  C07B  F069         	movff	?___ftadd+1,___ftmul@f1+1
  2907  000B72  C07C  F06A         	movff	?___ftadd+2,___ftmul@f1+2
  2908  000B76  EC72  F010         	call	___ftmul	;wreg free
  2909  000B7A  C068  F1DA         	movff	?___ftmul,_triangulation$3244
  2910  000B7E  C069  F1DB         	movff	?___ftmul+1,_triangulation$3244+1
  2911  000B82  C06A  F1DC         	movff	?___ftmul+2,_triangulation$3244+2
  2912                           
  2913                           ;triangulation.c: 45: double D = (c12x - c23x) * (c23y - c31y) - (c23x - c31x) * (c12y -
      +                           c23y) ;
  2914  000B86  C1DA  F07A         	movff	_triangulation$3244,___ftadd@f1
  2915  000B8A  C1DB  F07B         	movff	_triangulation$3244+1,___ftadd@f1+1
  2916  000B8E  C1DC  F07C         	movff	_triangulation$3244+2,___ftadd@f1+2
  2917  000B92  C1C5  F077         	movff	_triangulation$3245,___ftneg@f1
  2918  000B96  C1C6  F078         	movff	_triangulation$3245+1,___ftneg@f1+1
  2919  000B9A  C1C7  F079         	movff	_triangulation$3245+2,___ftneg@f1+2
  2920  000B9E  EC4E  F01B         	call	___ftneg	;wreg free
  2921  000BA2  C077  F07D         	movff	?___ftneg,___ftadd@f2
  2922  000BA6  C078  F07E         	movff	?___ftneg+1,___ftadd@f2+1
  2923  000BAA  C079  F07F         	movff	?___ftneg+2,___ftadd@f2+2
  2924  000BAE  EC52  F00E         	call	___ftadd	;wreg free
  2925  000BB2  C07A  F1B0         	movff	?___ftadd,triangulation@D
  2926  000BB6  C07B  F1B1         	movff	?___ftadd+1,triangulation@D+1
  2927  000BBA  C07C  F1B2         	movff	?___ftadd+2,triangulation@D+2
  2928                           
  2929                           ;triangulation.c: 46: double invD = 1.0 / D ;
  2930  000BBE  0E00               	movlw	0
  2931  000BC0  0100               	movlb	0	; () banked
  2932  000BC2  6F92               	movwf	___ftdiv@f1& (0+255),b
  2933  000BC4  0E80               	movlw	128
  2934  000BC6  0100               	movlb	0	; () banked
  2935  000BC8  6F93               	movwf	(___ftdiv@f1+1)& (0+255),b
  2936  000BCA  0E3F               	movlw	63
  2937  000BCC  0100               	movlb	0	; () banked
  2938  000BCE  6F94               	movwf	(___ftdiv@f1+2)& (0+255),b
  2939  000BD0  C1B0  F095         	movff	triangulation@D,___ftdiv@f2
  2940  000BD4  C1B1  F096         	movff	triangulation@D+1,___ftdiv@f2+1
  2941  000BD8  C1B2  F097         	movff	triangulation@D+2,___ftdiv@f2+2
  2942  000BDC  EC20  F011         	call	___ftdiv	;wreg free
  2943  000BE0  C092  F1B3         	movff	?___ftdiv,triangulation@invD
  2944  000BE4  C093  F1B4         	movff	?___ftdiv+1,triangulation@invD+1
  2945  000BE8  C094  F1B5         	movff	?___ftdiv+2,triangulation@invD+2
  2946                           
  2947                           ;triangulation.c: 47: double K = k31 * invD ;
  2948  000BEC  C1AD  F068         	movff	triangulation@k31,___ftmul@f1
  2949  000BF0  C1AE  F069         	movff	triangulation@k31+1,___ftmul@f1+1
  2950  000BF4  C1AF  F06A         	movff	triangulation@k31+2,___ftmul@f1+2
  2951  000BF8  C1B3  F06B         	movff	triangulation@invD,___ftmul@f2
  2952  000BFC  C1B4  F06C         	movff	triangulation@invD+1,___ftmul@f2+1
  2953  000C00  C1B5  F06D         	movff	triangulation@invD+2,___ftmul@f2+2
  2954  000C04  EC72  F010         	call	___ftmul	;wreg free
  2955  000C08  C068  F1BF         	movff	?___ftmul,triangulation@K
  2956  000C0C  C069  F1C0         	movff	?___ftmul+1,triangulation@K+1
  2957  000C10  C06A  F1C1         	movff	?___ftmul+2,triangulation@K+2
  2958                           
  2959                           ;triangulation.c: 49: *x = K * (c12y - c23y) + x2 ;
  2960  000C14  C1BF  F06B         	movff	triangulation@K,___ftmul@f2
  2961  000C18  C1C0  F06C         	movff	triangulation@K+1,___ftmul@f2+1
  2962  000C1C  C1C1  F06D         	movff	triangulation@K+2,___ftmul@f2+2
  2963  000C20  C1BC  F07D         	movff	triangulation@c12y,___ftadd@f2
  2964  000C24  C1BD  F07E         	movff	triangulation@c12y+1,___ftadd@f2+1
  2965  000C28  C1BE  F07F         	movff	triangulation@c12y+2,___ftadd@f2+2
  2966  000C2C  C1D1  F077         	movff	triangulation@c23y,___ftneg@f1
  2967  000C30  C1D2  F078         	movff	triangulation@c23y+1,___ftneg@f1+1
  2968  000C34  C1D3  F079         	movff	triangulation@c23y+2,___ftneg@f1+2
  2969  000C38  EC4E  F01B         	call	___ftneg	;wreg free
  2970  000C3C  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2971  000C40  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2972  000C44  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2973  000C48  EC52  F00E         	call	___ftadd	;wreg free
  2974  000C4C  C07A  F068         	movff	?___ftadd,___ftmul@f1
  2975  000C50  C07B  F069         	movff	?___ftadd+1,___ftmul@f1+1
  2976  000C54  C07C  F06A         	movff	?___ftadd+2,___ftmul@f1+2
  2977  000C58  EC72  F010         	call	___ftmul	;wreg free
  2978  000C5C  C068  F1D4         	movff	?___ftmul,_triangulation$3243
  2979  000C60  C069  F1D5         	movff	?___ftmul+1,_triangulation$3243+1
  2980  000C64  C06A  F1D6         	movff	?___ftmul+2,_triangulation$3243+2
  2981                           
  2982                           ;triangulation.c: 49: *x = K * (c12y - c23y) + x2 ;
  2983  000C68  C1D4  F07A         	movff	_triangulation$3243,___ftadd@f1
  2984  000C6C  C1D5  F07B         	movff	_triangulation$3243+1,___ftadd@f1+1
  2985  000C70  C1D6  F07C         	movff	_triangulation$3243+2,___ftadd@f1+2
  2986  000C74  C1C8  F07D         	movff	triangulation@x2,___ftadd@f2
  2987  000C78  C1C9  F07E         	movff	triangulation@x2+1,___ftadd@f2+1
  2988  000C7C  C1CA  F07F         	movff	triangulation@x2+2,___ftadd@f2+2
  2989  000C80  EC52  F00E         	call	___ftadd	;wreg free
  2990  000C84  C18E  FFD9         	movff	triangulation@x,fsr2l
  2991  000C88  C18F  FFDA         	movff	triangulation@x+1,fsr2h
  2992  000C8C  C07A  FFDE         	movff	?___ftadd,postinc2
  2993  000C90  C07B  FFDE         	movff	?___ftadd+1,postinc2
  2994  000C94  C07C  FFDE         	movff	?___ftadd+2,postinc2
  2995                           
  2996                           ;triangulation.c: 50: *y = K * (c23x - c12x) + y2 ;
  2997  000C98  C1BF  F06B         	movff	triangulation@K,___ftmul@f2
  2998  000C9C  C1C0  F06C         	movff	triangulation@K+1,___ftmul@f2+1
  2999  000CA0  C1C1  F06D         	movff	triangulation@K+2,___ftmul@f2+2
  3000  000CA4  C1CE  F07D         	movff	triangulation@c23x,___ftadd@f2
  3001  000CA8  C1CF  F07E         	movff	triangulation@c23x+1,___ftadd@f2+1
  3002  000CAC  C1D0  F07F         	movff	triangulation@c23x+2,___ftadd@f2+2
  3003  000CB0  C1B9  F077         	movff	triangulation@c12x,___ftneg@f1
  3004  000CB4  C1BA  F078         	movff	triangulation@c12x+1,___ftneg@f1+1
  3005  000CB8  C1BB  F079         	movff	triangulation@c12x+2,___ftneg@f1+2
  3006  000CBC  EC4E  F01B         	call	___ftneg	;wreg free
  3007  000CC0  C077  F07A         	movff	?___ftneg,___ftadd@f1
  3008  000CC4  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  3009  000CC8  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  3010  000CCC  EC52  F00E         	call	___ftadd	;wreg free
  3011  000CD0  C07A  F068         	movff	?___ftadd,___ftmul@f1
  3012  000CD4  C07B  F069         	movff	?___ftadd+1,___ftmul@f1+1
  3013  000CD8  C07C  F06A         	movff	?___ftadd+2,___ftmul@f1+2
  3014  000CDC  EC72  F010         	call	___ftmul	;wreg free
  3015  000CE0  C068  F1D4         	movff	?___ftmul,_triangulation$3243
  3016  000CE4  C069  F1D5         	movff	?___ftmul+1,_triangulation$3243+1
  3017  000CE8  C06A  F1D6         	movff	?___ftmul+2,_triangulation$3243+2
  3018                           
  3019                           ;triangulation.c: 50: *y = K * (c23x - c12x) + y2 ;
  3020  000CEC  C1D4  F07A         	movff	_triangulation$3243,___ftadd@f1
  3021  000CF0  C1D5  F07B         	movff	_triangulation$3243+1,___ftadd@f1+1
  3022  000CF4  C1D6  F07C         	movff	_triangulation$3243+2,___ftadd@f1+2
  3023  000CF8  C1CB  F07D         	movff	triangulation@y2,___ftadd@f2
  3024  000CFC  C1CC  F07E         	movff	triangulation@y2+1,___ftadd@f2+1
  3025  000D00  C1CD  F07F         	movff	triangulation@y2+2,___ftadd@f2+2
  3026  000D04  EC52  F00E         	call	___ftadd	;wreg free
  3027  000D08  C190  FFD9         	movff	triangulation@y,fsr2l
  3028  000D0C  C191  FFDA         	movff	triangulation@y+1,fsr2h
  3029  000D10  C07A  FFDE         	movff	?___ftadd,postinc2
  3030  000D14  C07B  FFDE         	movff	?___ftadd+1,postinc2
  3031  000D18  C07C  FFDE         	movff	?___ftadd+2,postinc2
  3032  000D1C  0012               	return		;funcret
  3033  000D1E                     __end_of_triangulation:
  3034                           	opt stack 0
  3035                           tblptru	equ	0xFF8
  3036                           tblptrh	equ	0xFF7
  3037                           tblptrl	equ	0xFF6
  3038                           tablat	equ	0xFF5
  3039                           postinc0	equ	0xFEE
  3040                           wreg	equ	0xFE8
  3041                           postinc1	equ	0xFE6
  3042                           postdec1	equ	0xFE5
  3043                           fsr1h	equ	0xFE2
  3044                           fsr1l	equ	0xFE1
  3045                           postinc2	equ	0xFDE
  3046                           fsr2h	equ	0xFDA
  3047                           fsr2l	equ	0xFD9
  3048                           status	equ	0xFD8
  3049                           
  3050 ;; *************** function _saturation *****************
  3051 ;; Defined at:
  3052 ;;		line 61 in file "triangulation.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  valeur          3   35[BANK0 ] const 
  3055 ;;  maximum         3   38[BANK0 ] const 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;		None
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  3   35[BANK0 ] const 
  3060 ;; Registers used:
  3061 ;;		wreg, status,2, status,0, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3067 ;;      Params:         0       6       0       0
  3068 ;;      Locals:         0       0       0       0
  3069 ;;      Temps:          0       0       0       0
  3070 ;;      Totals:         0       6       0       0
  3071 ;;Total ram usage:        6 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; Hardware stack levels required when called:    7
  3074 ;; This function calls:
  3075 ;;		___ftge
  3076 ;;		___ftneg
  3077 ;; This function is called by:
  3078 ;;		_triangulation
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text2
  3083  002D3E                     __ptext2:
  3084                           	opt stack 0
  3085  002D3E                     _saturation:
  3086                           	opt stack 22
  3087                           
  3088                           ;triangulation.c: 63: if (valeur > maximum)
  3089                           
  3090                           ;incstack = 0
  3091  002D3E  C086  F07A         	movff	saturation@maximum,___ftge@ff1
  3092  002D42  C087  F07B         	movff	saturation@maximum+1,___ftge@ff1+1
  3093  002D46  C088  F07C         	movff	saturation@maximum+2,___ftge@ff1+2
  3094  002D4A  C083  F07D         	movff	saturation@valeur,___ftge@ff2
  3095  002D4E  C084  F07E         	movff	saturation@valeur+1,___ftge@ff2+1
  3096  002D52  C085  F07F         	movff	saturation@valeur+2,___ftge@ff2+2
  3097  002D56  EC36  F015         	call	___ftge	;wreg free
  3098  002D5A  0100               	movlb	0	; () banked
  3099  002D5C  B0D8               	btfsc	status,0,c
  3100  002D5E  D007               	goto	l4507
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;triangulation.c: 64: valeur = maximum;
  3104  002D60  C086  F083         	movff	saturation@maximum,saturation@valeur
  3105  002D64  C087  F084         	movff	saturation@maximum+1,saturation@valeur+1
  3106  002D68  C088  F085         	movff	saturation@maximum+2,saturation@valeur+2
  3107  002D6C  D028               	goto	l4511
  3108  002D6E                     l4507:
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;triangulation.c: 65: else if (valeur < -maximum)
  3112  002D6E  C083  F07A         	movff	saturation@valeur,___ftge@ff1
  3113  002D72  C084  F07B         	movff	saturation@valeur+1,___ftge@ff1+1
  3114  002D76  C085  F07C         	movff	saturation@valeur+2,___ftge@ff1+2
  3115  002D7A  C086  F077         	movff	saturation@maximum,___ftneg@f1
  3116  002D7E  C087  F078         	movff	saturation@maximum+1,___ftneg@f1+1
  3117  002D82  C088  F079         	movff	saturation@maximum+2,___ftneg@f1+2
  3118  002D86  EC4E  F01B         	call	___ftneg	;wreg free
  3119  002D8A  C077  F07D         	movff	?___ftneg,___ftge@ff2
  3120  002D8E  C078  F07E         	movff	?___ftneg+1,___ftge@ff2+1
  3121  002D92  C079  F07F         	movff	?___ftneg+2,___ftge@ff2+2
  3122  002D96  EC36  F015         	call	___ftge	;wreg free
  3123  002D9A  0100               	movlb	0	; () banked
  3124  002D9C  B0D8               	btfsc	status,0,c
  3125  002D9E  D00F               	goto	l4511
  3126                           
  3127                           ; BSR set to: 0
  3128                           ;triangulation.c: 66: valeur = -maximum;
  3129  002DA0  C086  F077         	movff	saturation@maximum,___ftneg@f1
  3130  002DA4  C087  F078         	movff	saturation@maximum+1,___ftneg@f1+1
  3131  002DA8  C088  F079         	movff	saturation@maximum+2,___ftneg@f1+2
  3132  002DAC  EC4E  F01B         	call	___ftneg	;wreg free
  3133  002DB0  C077  F083         	movff	?___ftneg,saturation@valeur
  3134  002DB4  C078  F084         	movff	?___ftneg+1,saturation@valeur+1
  3135  002DB8  C079  F085         	movff	?___ftneg+2,saturation@valeur+2
  3136  002DBC  D000               	goto	l4511
  3137  002DBE                     l4511:
  3138                           
  3139                           ;triangulation.c: 67: return valeur;
  3140  002DBE  C083  F083         	movff	saturation@valeur,?_saturation
  3141  002DC2  C084  F084         	movff	saturation@valeur+1,?_saturation+1
  3142  002DC6  C085  F085         	movff	saturation@valeur+2,?_saturation+2
  3143  002DCA  D000               	goto	l589
  3144  002DCC                     l589:
  3145  002DCC  0012               	return		;funcret
  3146  002DCE                     __end_of_saturation:
  3147                           	opt stack 0
  3148                           tblptru	equ	0xFF8
  3149                           tblptrh	equ	0xFF7
  3150                           tblptrl	equ	0xFF6
  3151                           tablat	equ	0xFF5
  3152                           postinc0	equ	0xFEE
  3153                           wreg	equ	0xFE8
  3154                           postinc1	equ	0xFE6
  3155                           postdec1	equ	0xFE5
  3156                           fsr1h	equ	0xFE2
  3157                           fsr1l	equ	0xFE1
  3158                           postinc2	equ	0xFDE
  3159                           fsr2h	equ	0xFDA
  3160                           fsr2l	equ	0xFD9
  3161                           status	equ	0xFD8
  3162                           
  3163 ;; *************** function _Cot *****************
  3164 ;; Defined at:
  3165 ;;		line 54 in file "triangulation.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  angle           3   93[BANK0 ] const 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;		None
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  3   93[BANK0 ] const 
  3172 ;; Registers used:
  3173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3179 ;;      Params:         0       3       0       0
  3180 ;;      Locals:         0       3       0       0
  3181 ;;      Temps:          0       0       0       0
  3182 ;;      Totals:         0       6       0       0
  3183 ;;Total ram usage:        6 bytes
  3184 ;; Hardware stack levels used:    1
  3185 ;; Hardware stack levels required when called:   12
  3186 ;; This function calls:
  3187 ;;		___ftdiv
  3188 ;;		_conversion_degre_radian
  3189 ;;		_tan
  3190 ;; This function is called by:
  3191 ;;		_triangulation
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           	psect	text3
  3196  003242                     __ptext3:
  3197                           	opt stack 0
  3198  003242                     _Cot:
  3199                           	opt stack 17
  3200                           
  3201                           ;triangulation.c: 56: angle = conversion_degre_radian(angle);
  3202                           
  3203                           ;incstack = 0
  3204  003242  C0BD  F0A1         	movff	Cot@angle,conversion_degre_radian@angle
  3205  003246  C0BE  F0A2         	movff	Cot@angle+1,conversion_degre_radian@angle+1
  3206  00324A  C0BF  F0A3         	movff	Cot@angle+2,conversion_degre_radian@angle+2
  3207  00324E  ECB4  F019         	call	_conversion_degre_radian	;wreg free
  3208  003252  C0A1  F0BD         	movff	?_conversion_degre_radian,Cot@angle
  3209  003256  C0A2  F0BE         	movff	?_conversion_degre_radian+1,Cot@angle+1
  3210  00325A  C0A3  F0BF         	movff	?_conversion_degre_radian+2,Cot@angle+2
  3211                           
  3212                           ;triangulation.c: 57: return (1 / tan(angle));
  3213  00325E  C0BD  F0B4         	movff	Cot@angle,tan@x
  3214  003262  C0BE  F0B5         	movff	Cot@angle+1,tan@x+1
  3215  003266  C0BF  F0B6         	movff	Cot@angle+2,tan@x+2
  3216  00326A  EC56  F019         	call	_tan	;wreg free
  3217  00326E  C0B4  F0C0         	movff	?_tan,_Cot$3247
  3218  003272  C0B5  F0C1         	movff	?_tan+1,_Cot$3247+1
  3219  003276  C0B6  F0C2         	movff	?_tan+2,_Cot$3247+2
  3220                           
  3221                           ;triangulation.c: 57: return (1 / tan(angle));
  3222  00327A  0E00               	movlw	0
  3223  00327C  0100               	movlb	0	; () banked
  3224  00327E  6F92               	movwf	___ftdiv@f1& (0+255),b
  3225  003280  0E80               	movlw	128
  3226  003282  0100               	movlb	0	; () banked
  3227  003284  6F93               	movwf	(___ftdiv@f1+1)& (0+255),b
  3228  003286  0E3F               	movlw	63
  3229  003288  0100               	movlb	0	; () banked
  3230  00328A  6F94               	movwf	(___ftdiv@f1+2)& (0+255),b
  3231  00328C  C0C0  F095         	movff	_Cot$3247,___ftdiv@f2
  3232  003290  C0C1  F096         	movff	_Cot$3247+1,___ftdiv@f2+1
  3233  003294  C0C2  F097         	movff	_Cot$3247+2,___ftdiv@f2+2
  3234  003298  EC20  F011         	call	___ftdiv	;wreg free
  3235  00329C  C092  F0BD         	movff	?___ftdiv,?_Cot
  3236  0032A0  C093  F0BE         	movff	?___ftdiv+1,?_Cot+1
  3237  0032A4  C094  F0BF         	movff	?___ftdiv+2,?_Cot+2
  3238  0032A8  D000               	goto	l583
  3239  0032AA                     l583:
  3240  0032AA  0012               	return		;funcret
  3241  0032AC                     __end_of_Cot:
  3242                           	opt stack 0
  3243                           tblptru	equ	0xFF8
  3244                           tblptrh	equ	0xFF7
  3245                           tblptrl	equ	0xFF6
  3246                           tablat	equ	0xFF5
  3247                           postinc0	equ	0xFEE
  3248                           wreg	equ	0xFE8
  3249                           postinc1	equ	0xFE6
  3250                           postdec1	equ	0xFE5
  3251                           fsr1h	equ	0xFE2
  3252                           fsr1l	equ	0xFE1
  3253                           postinc2	equ	0xFDE
  3254                           fsr2h	equ	0xFDA
  3255                           fsr2l	equ	0xFD9
  3256                           status	equ	0xFD8
  3257                           
  3258 ;; *************** function _tan *****************
  3259 ;; Defined at:
  3260 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\tan.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  x               3   84[BANK0 ] const 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;		None
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  3   84[BANK0 ] const 
  3267 ;; Registers used:
  3268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3274 ;;      Params:         0       3       0       0
  3275 ;;      Locals:         0       6       0       0
  3276 ;;      Temps:          0       0       0       0
  3277 ;;      Totals:         0       9       0       0
  3278 ;;Total ram usage:        9 bytes
  3279 ;; Hardware stack levels used:    1
  3280 ;; Hardware stack levels required when called:   11
  3281 ;; This function calls:
  3282 ;;		___ftdiv
  3283 ;;		_cos
  3284 ;;		_sin
  3285 ;; This function is called by:
  3286 ;;		_Cot
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           	psect	text4
  3291  0032AC                     __ptext4:
  3292                           	opt stack 0
  3293  0032AC                     _tan:
  3294                           	opt stack 17
  3295                           
  3296                           ;incstack = 0
  3297  0032AC  C0B4  F0A1         	movff	tan@x,sin@f
  3298  0032B0  C0B5  F0A2         	movff	tan@x+1,sin@f+1
  3299  0032B4  C0B6  F0A3         	movff	tan@x+2,sin@f+2
  3300  0032B8  EC04  F00D         	call	_sin	;wreg free
  3301  0032BC  C0A1  F0B7         	movff	?_sin,_tan$3250
  3302  0032C0  C0A2  F0B8         	movff	?_sin+1,_tan$3250+1
  3303  0032C4  C0A3  F0B9         	movff	?_sin+2,_tan$3250+2
  3304  0032C8  C0B4  F0AE         	movff	tan@x,cos@f
  3305  0032CC  C0B5  F0AF         	movff	tan@x+1,cos@f+1
  3306  0032D0  C0B6  F0B0         	movff	tan@x+2,cos@f+2
  3307  0032D4  EC9D  F015         	call	_cos	;wreg free
  3308  0032D8  C0AE  F0BA         	movff	?_cos,_tan$3251
  3309  0032DC  C0AF  F0BB         	movff	?_cos+1,_tan$3251+1
  3310  0032E0  C0B0  F0BC         	movff	?_cos+2,_tan$3251+2
  3311  0032E4  C0B7  F092         	movff	_tan$3250,___ftdiv@f1
  3312  0032E8  C0B8  F093         	movff	_tan$3250+1,___ftdiv@f1+1
  3313  0032EC  C0B9  F094         	movff	_tan$3250+2,___ftdiv@f1+2
  3314  0032F0  C0BA  F095         	movff	_tan$3251,___ftdiv@f2
  3315  0032F4  C0BB  F096         	movff	_tan$3251+1,___ftdiv@f2+1
  3316  0032F8  C0BC  F097         	movff	_tan$3251+2,___ftdiv@f2+2
  3317  0032FC  EC20  F011         	call	___ftdiv	;wreg free
  3318  003300  C092  F0B4         	movff	?___ftdiv,?_tan
  3319  003304  C093  F0B5         	movff	?___ftdiv+1,?_tan+1
  3320  003308  C094  F0B6         	movff	?___ftdiv+2,?_tan+2
  3321  00330C  D000               	goto	l1201
  3322  00330E                     l1201:
  3323  00330E  0012               	return		;funcret
  3324  003310                     __end_of_tan:
  3325                           	opt stack 0
  3326                           tblptru	equ	0xFF8
  3327                           tblptrh	equ	0xFF7
  3328                           tblptrl	equ	0xFF6
  3329                           tablat	equ	0xFF5
  3330                           postinc0	equ	0xFEE
  3331                           wreg	equ	0xFE8
  3332                           postinc1	equ	0xFE6
  3333                           postdec1	equ	0xFE5
  3334                           fsr1h	equ	0xFE2
  3335                           fsr1l	equ	0xFE1
  3336                           postinc2	equ	0xFDE
  3337                           fsr2h	equ	0xFDA
  3338                           fsr2l	equ	0xFD9
  3339                           status	equ	0xFD8
  3340                           
  3341 ;; *************** function _cos *****************
  3342 ;; Defined at:
  3343 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\cos.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  f               3   78[BANK0 ] const 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  3   78[BANK0 ] const 
  3350 ;; Registers used:
  3351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3357 ;;      Params:         0       3       0       0
  3358 ;;      Locals:         0       3       0       0
  3359 ;;      Temps:          0       0       0       0
  3360 ;;      Totals:         0       6       0       0
  3361 ;;Total ram usage:        6 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:   10
  3364 ;; This function calls:
  3365 ;;		___ftadd
  3366 ;;		___ftge
  3367 ;;		_sin
  3368 ;; This function is called by:
  3369 ;;		_tan
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text5
  3374  002B3A                     __ptext5:
  3375                           	opt stack 0
  3376  002B3A                     _cos:
  3377                           	opt stack 17
  3378                           
  3379                           ;incstack = 0
  3380  002B3A  0E10               	movlw	16
  3381  002B3C  0100               	movlb	0	; () banked
  3382  002B3E  6F7A               	movwf	___ftge@ff1& (0+255),b
  3383  002B40  0E49               	movlw	73
  3384  002B42  0100               	movlb	0	; () banked
  3385  002B44  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  3386  002B46  0E40               	movlw	64
  3387  002B48  0100               	movlb	0	; () banked
  3388  002B4A  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  3389  002B4C  C0AE  F07D         	movff	cos@f,___ftge@ff2
  3390  002B50  C0AF  F07E         	movff	cos@f+1,___ftge@ff2+1
  3391  002B54  C0B0  F07F         	movff	cos@f+2,___ftge@ff2+2
  3392  002B58  EC36  F015         	call	___ftge	;wreg free
  3393  002B5C  0100               	movlb	0	; () banked
  3394  002B5E  B0D8               	btfsc	status,0,c
  3395  002B60  D021               	goto	l4355
  3396                           
  3397                           ; BSR set to: 0
  3398  002B62  C0AE  F07A         	movff	cos@f,___ftadd@f1
  3399  002B66  C0AF  F07B         	movff	cos@f+1,___ftadd@f1+1
  3400  002B6A  C0B0  F07C         	movff	cos@f+2,___ftadd@f1+2
  3401  002B6E  0ECC               	movlw	204
  3402  002B70  0100               	movlb	0	; () banked
  3403  002B72  6F7D               	movwf	___ftadd@f2& (0+255),b
  3404  002B74  0E96               	movlw	150
  3405  002B76  0100               	movlb	0	; () banked
  3406  002B78  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  3407  002B7A  0EC0               	movlw	192
  3408  002B7C  0100               	movlb	0	; () banked
  3409  002B7E  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  3410  002B80  EC52  F00E         	call	___ftadd	;wreg free
  3411  002B84  C07A  F0B1         	movff	?___ftadd,_cos$3252
  3412  002B88  C07B  F0B2         	movff	?___ftadd+1,_cos$3252+1
  3413  002B8C  C07C  F0B3         	movff	?___ftadd+2,_cos$3252+2
  3414  002B90  C0B1  F0A1         	movff	_cos$3252,sin@f
  3415  002B94  C0B2  F0A2         	movff	_cos$3252+1,sin@f+1
  3416  002B98  C0B3  F0A3         	movff	_cos$3252+2,sin@f+2
  3417  002B9C  EC04  F00D         	call	_sin	;wreg free
  3418  002BA0  D020               	goto	L2
  3419  002BA2  D026               	goto	l1207
  3420  002BA4                     l4355:
  3421  002BA4  C0AE  F07A         	movff	cos@f,___ftadd@f1
  3422  002BA8  C0AF  F07B         	movff	cos@f+1,___ftadd@f1+1
  3423  002BAC  C0B0  F07C         	movff	cos@f+2,___ftadd@f1+2
  3424  002BB0  0E10               	movlw	16
  3425  002BB2  0100               	movlb	0	; () banked
  3426  002BB4  6F7D               	movwf	___ftadd@f2& (0+255),b
  3427  002BB6  0EC9               	movlw	201
  3428  002BB8  0100               	movlb	0	; () banked
  3429  002BBA  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  3430  002BBC  0E3F               	movlw	63
  3431  002BBE  0100               	movlb	0	; () banked
  3432  002BC0  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  3433  002BC2  EC52  F00E         	call	___ftadd	;wreg free
  3434  002BC6  C07A  F0B1         	movff	?___ftadd,_cos$3252
  3435  002BCA  C07B  F0B2         	movff	?___ftadd+1,_cos$3252+1
  3436  002BCE  C07C  F0B3         	movff	?___ftadd+2,_cos$3252+2
  3437  002BD2  C0B1  F0A1         	movff	_cos$3252,sin@f
  3438  002BD6  C0B2  F0A2         	movff	_cos$3252+1,sin@f+1
  3439  002BDA  C0B3  F0A3         	movff	_cos$3252+2,sin@f+2
  3440  002BDE  EC04  F00D         	call	_sin	;wreg free
  3441  002BE2                     L2:
  3442  002BE2  C0A1  F0AE         	movff	?_sin,?_cos
  3443  002BE6  C0A2  F0AF         	movff	?_sin+1,?_cos+1
  3444  002BEA  C0A3  F0B0         	movff	?_sin+2,?_cos+2
  3445  002BEE  D000               	goto	l1207
  3446  002BF0                     l1207:
  3447  002BF0  0012               	return		;funcret
  3448  002BF2                     __end_of_cos:
  3449                           	opt stack 0
  3450                           tblptru	equ	0xFF8
  3451                           tblptrh	equ	0xFF7
  3452                           tblptrl	equ	0xFF6
  3453                           tablat	equ	0xFF5
  3454                           postinc0	equ	0xFEE
  3455                           wreg	equ	0xFE8
  3456                           postinc1	equ	0xFE6
  3457                           postdec1	equ	0xFE5
  3458                           fsr1h	equ	0xFE2
  3459                           fsr1l	equ	0xFE1
  3460                           postinc2	equ	0xFDE
  3461                           fsr2h	equ	0xFDA
  3462                           fsr2l	equ	0xFD9
  3463                           status	equ	0xFD8
  3464                           
  3465 ;; *************** function _sin *****************
  3466 ;; Defined at:
  3467 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\sin.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;  f               3   65[BANK0 ] const 
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;  x2              3   74[BANK0 ] const 
  3472 ;;  y               3   68[BANK0 ] const 
  3473 ;;  sgn             1   77[BANK0 ] unsigned char 
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  3   65[BANK0 ] unsigned char 
  3476 ;; Registers used:
  3477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3483 ;;      Params:         0       3       0       0
  3484 ;;      Locals:         0      10       0       0
  3485 ;;      Temps:          0       0       0       0
  3486 ;;      Totals:         0      13       0       0
  3487 ;;Total ram usage:       13 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; Hardware stack levels required when called:    9
  3490 ;; This function calls:
  3491 ;;		___ftadd
  3492 ;;		___ftdiv
  3493 ;;		___ftge
  3494 ;;		___ftmul
  3495 ;;		___ftneg
  3496 ;;		___ftsub
  3497 ;;		_eval_poly
  3498 ;;		_floor
  3499 ;; This function is called by:
  3500 ;;		_tan
  3501 ;;		_cos
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text6
  3506  001A08                     __ptext6:
  3507                           	opt stack 0
  3508  001A08                     _sin:
  3509                           	opt stack 18
  3510                           
  3511                           ;incstack = 0
  3512  001A08  0E00               	movlw	0
  3513  001A0A  0100               	movlb	0	; () banked
  3514  001A0C  6FAD               	movwf	sin@sgn& (0+255),b
  3515                           
  3516                           ; BSR set to: 0
  3517  001A0E  0100               	movlb	0	; () banked
  3518  001A10  AFA3               	btfss	(sin@f+2)& (0+255),7,b
  3519  001A12  D012               	goto	l4293
  3520                           
  3521                           ; BSR set to: 0
  3522  001A14  C0A1  F077         	movff	sin@f,___ftneg@f1
  3523  001A18  C0A2  F078         	movff	sin@f+1,___ftneg@f1+1
  3524  001A1C  C0A3  F079         	movff	sin@f+2,___ftneg@f1+2
  3525  001A20  EC4E  F01B         	call	___ftneg	;wreg free
  3526  001A24  C077  F0A1         	movff	?___ftneg,sin@f
  3527  001A28  C078  F0A2         	movff	?___ftneg+1,sin@f+1
  3528  001A2C  C079  F0A3         	movff	?___ftneg+2,sin@f+2
  3529  001A30  0E01               	movlw	1
  3530  001A32  0100               	movlb	0	; () banked
  3531  001A34  6FAD               	movwf	sin@sgn& (0+255),b
  3532  001A36  D000               	goto	l4293
  3533  001A38                     l4293:
  3534                           
  3535                           ; BSR set to: 0
  3536  001A38  C0A1  F068         	movff	sin@f,___ftmul@f1
  3537  001A3C  C0A2  F069         	movff	sin@f+1,___ftmul@f1+1
  3538  001A40  C0A3  F06A         	movff	sin@f+2,___ftmul@f1+2
  3539  001A44  0EFA               	movlw	250
  3540  001A46  0100               	movlb	0	; () banked
  3541  001A48  6F6B               	movwf	___ftmul@f2& (0+255),b
  3542  001A4A  0E22               	movlw	34
  3543  001A4C  0100               	movlb	0	; () banked
  3544  001A4E  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  3545  001A50  0E3E               	movlw	62
  3546  001A52  0100               	movlb	0	; () banked
  3547  001A54  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  3548  001A56  EC72  F010         	call	___ftmul	;wreg free
  3549  001A5A  C068  F0A1         	movff	?___ftmul,sin@f
  3550  001A5E  C069  F0A2         	movff	?___ftmul+1,sin@f+1
  3551  001A62  C06A  F0A3         	movff	?___ftmul+2,sin@f+2
  3552  001A66  C0A1  F08E         	movff	sin@f,___ftsub@f1
  3553  001A6A  C0A2  F08F         	movff	sin@f+1,___ftsub@f1+1
  3554  001A6E  C0A3  F090         	movff	sin@f+2,___ftsub@f1+2
  3555  001A72  C0A1  F086         	movff	sin@f,floor@x
  3556  001A76  C0A2  F087         	movff	sin@f+1,floor@x+1
  3557  001A7A  C0A3  F088         	movff	sin@f+2,floor@x+2
  3558  001A7E  ECEA  F012         	call	_floor	;wreg free
  3559  001A82  C086  F091         	movff	?_floor,___ftsub@f2
  3560  001A86  C087  F092         	movff	?_floor+1,___ftsub@f2+1
  3561  001A8A  C088  F093         	movff	?_floor+2,___ftsub@f2+2
  3562  001A8E  ECDE  F019         	call	___ftsub	;wreg free
  3563  001A92  C08E  F0A1         	movff	?___ftsub,sin@f
  3564  001A96  C08F  F0A2         	movff	?___ftsub+1,sin@f+1
  3565  001A9A  C090  F0A3         	movff	?___ftsub+2,sin@f+2
  3566  001A9E  C0A1  F068         	movff	sin@f,___ftmul@f1
  3567  001AA2  C0A2  F069         	movff	sin@f+1,___ftmul@f1+1
  3568  001AA6  C0A3  F06A         	movff	sin@f+2,___ftmul@f1+2
  3569  001AAA  0E00               	movlw	0
  3570  001AAC  0100               	movlb	0	; () banked
  3571  001AAE  6F6B               	movwf	___ftmul@f2& (0+255),b
  3572  001AB0  0E80               	movlw	128
  3573  001AB2  0100               	movlb	0	; () banked
  3574  001AB4  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  3575  001AB6  0E40               	movlw	64
  3576  001AB8  0100               	movlb	0	; () banked
  3577  001ABA  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  3578  001ABC  EC72  F010         	call	___ftmul	;wreg free
  3579  001AC0  C068  F0A1         	movff	?___ftmul,sin@f
  3580  001AC4  C069  F0A2         	movff	?___ftmul+1,sin@f+1
  3581  001AC8  C06A  F0A3         	movff	?___ftmul+2,sin@f+2
  3582  001ACC  0E00               	movlw	0
  3583  001ACE  0100               	movlb	0	; () banked
  3584  001AD0  6F7A               	movwf	___ftge@ff1& (0+255),b
  3585  001AD2  0E00               	movlw	0
  3586  001AD4  0100               	movlb	0	; () banked
  3587  001AD6  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  3588  001AD8  0E40               	movlw	64
  3589  001ADA  0100               	movlb	0	; () banked
  3590  001ADC  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  3591  001ADE  C0A1  F07D         	movff	sin@f,___ftge@ff2
  3592  001AE2  C0A2  F07E         	movff	sin@f+1,___ftge@ff2+1
  3593  001AE6  C0A3  F07F         	movff	sin@f+2,___ftge@ff2+2
  3594  001AEA  EC36  F015         	call	___ftge	;wreg free
  3595  001AEE  0100               	movlb	0	; () banked
  3596  001AF0  B0D8               	btfsc	status,0,c
  3597  001AF2  D022               	goto	l4305
  3598                           
  3599                           ; BSR set to: 0
  3600  001AF4  C0A1  F08E         	movff	sin@f,___ftsub@f1
  3601  001AF8  C0A2  F08F         	movff	sin@f+1,___ftsub@f1+1
  3602  001AFC  C0A3  F090         	movff	sin@f+2,___ftsub@f1+2
  3603  001B00  0E00               	movlw	0
  3604  001B02  0100               	movlb	0	; () banked
  3605  001B04  6F91               	movwf	___ftsub@f2& (0+255),b
  3606  001B06  0E00               	movlw	0
  3607  001B08  0100               	movlb	0	; () banked
  3608  001B0A  6F92               	movwf	(___ftsub@f2+1)& (0+255),b
  3609  001B0C  0E40               	movlw	64
  3610  001B0E  0100               	movlb	0	; () banked
  3611  001B10  6F93               	movwf	(___ftsub@f2+2)& (0+255),b
  3612  001B12  ECDE  F019         	call	___ftsub	;wreg free
  3613  001B16  C08E  F0A1         	movff	?___ftsub,sin@f
  3614  001B1A  C08F  F0A2         	movff	?___ftsub+1,sin@f+1
  3615  001B1E  C090  F0A3         	movff	?___ftsub+2,sin@f+2
  3616  001B22  0100               	movlb	0	; () banked
  3617  001B24  51AD               	movf	sin@sgn& (0+255),w,b
  3618  001B26  0100               	movlb	0	; () banked
  3619  001B28  A4D8               	btfss	status,2,c
  3620  001B2A  D002               	goto	u3910
  3621  001B2C  0E01               	movlw	1
  3622  001B2E  D001               	goto	u3920
  3623  001B30                     u3910:
  3624  001B30  0E00               	movlw	0
  3625  001B32                     u3920:
  3626  001B32  0100               	movlb	0	; () banked
  3627  001B34  6FAD               	movwf	sin@sgn& (0+255),b
  3628  001B36  D000               	goto	l4305
  3629  001B38                     l4305:
  3630                           
  3631                           ; BSR set to: 0
  3632  001B38  0E00               	movlw	0
  3633  001B3A  0100               	movlb	0	; () banked
  3634  001B3C  6F7A               	movwf	___ftge@ff1& (0+255),b
  3635  001B3E  0E80               	movlw	128
  3636  001B40  0100               	movlb	0	; () banked
  3637  001B42  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  3638  001B44  0E3F               	movlw	63
  3639  001B46  0100               	movlb	0	; () banked
  3640  001B48  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  3641  001B4A  C0A1  F07D         	movff	sin@f,___ftge@ff2
  3642  001B4E  C0A2  F07E         	movff	sin@f+1,___ftge@ff2+1
  3643  001B52  C0A3  F07F         	movff	sin@f+2,___ftge@ff2+2
  3644  001B56  EC36  F015         	call	___ftge	;wreg free
  3645  001B5A  0100               	movlb	0	; () banked
  3646  001B5C  B0D8               	btfsc	status,0,c
  3647  001B5E  D01F               	goto	l1222
  3648                           
  3649                           ; BSR set to: 0
  3650  001B60  C0A1  F077         	movff	sin@f,___ftneg@f1
  3651  001B64  C0A2  F078         	movff	sin@f+1,___ftneg@f1+1
  3652  001B68  C0A3  F079         	movff	sin@f+2,___ftneg@f1+2
  3653  001B6C  EC4E  F01B         	call	___ftneg	;wreg free
  3654  001B70  C077  F07A         	movff	?___ftneg,___ftadd@f1
  3655  001B74  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  3656  001B78  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  3657  001B7C  0E00               	movlw	0
  3658  001B7E  0100               	movlb	0	; () banked
  3659  001B80  6F7D               	movwf	___ftadd@f2& (0+255),b
  3660  001B82  0E00               	movlw	0
  3661  001B84  0100               	movlb	0	; () banked
  3662  001B86  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  3663  001B88  0E40               	movlw	64
  3664  001B8A  0100               	movlb	0	; () banked
  3665  001B8C  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  3666  001B8E  EC52  F00E         	call	___ftadd	;wreg free
  3667  001B92  C07A  F0A1         	movff	?___ftadd,sin@f
  3668  001B96  C07B  F0A2         	movff	?___ftadd+1,sin@f+1
  3669  001B9A  C07C  F0A3         	movff	?___ftadd+2,sin@f+2
  3670  001B9E                     l1222:
  3671  001B9E  C0A1  F068         	movff	sin@f,___ftmul@f1
  3672  001BA2  C0A2  F069         	movff	sin@f+1,___ftmul@f1+1
  3673  001BA6  C0A3  F06A         	movff	sin@f+2,___ftmul@f1+2
  3674  001BAA  C0A1  F06B         	movff	sin@f,___ftmul@f2
  3675  001BAE  C0A2  F06C         	movff	sin@f+1,___ftmul@f2+1
  3676  001BB2  C0A3  F06D         	movff	sin@f+2,___ftmul@f2+2
  3677  001BB6  EC72  F010         	call	___ftmul	;wreg free
  3678  001BBA  C068  F0AA         	movff	?___ftmul,sin@x2
  3679  001BBE  C069  F0AB         	movff	?___ftmul+1,sin@x2+1
  3680  001BC2  C06A  F0AC         	movff	?___ftmul+2,sin@x2+2
  3681  001BC6  C0AA  F086         	movff	sin@x2,eval_poly@x
  3682  001BCA  C0AB  F087         	movff	sin@x2+1,eval_poly@x+1
  3683  001BCE  C0AC  F088         	movff	sin@x2+2,eval_poly@x+2
  3684  001BD2  0E10               	movlw	low sin@coeff_b
  3685  001BD4  0100               	movlb	0	; () banked
  3686  001BD6  6F89               	movwf	eval_poly@d& (0+255),b
  3687  001BD8  0E03               	movlw	high sin@coeff_b
  3688  001BDA  0100               	movlb	0	; () banked
  3689  001BDC  6F8A               	movwf	(eval_poly@d+1)& (0+255),b
  3690  001BDE  0E00               	movlw	0
  3691  001BE0  0100               	movlb	0	; () banked
  3692  001BE2  6F8C               	movwf	(eval_poly@n+1)& (0+255),b
  3693  001BE4  0E03               	movlw	3
  3694  001BE6  6F8B               	movwf	eval_poly@n& (0+255),b
  3695  001BE8  ECE6  F013         	call	_eval_poly	;wreg free
  3696  001BEC  C086  F0A4         	movff	?_eval_poly,sin@y
  3697  001BF0  C087  F0A5         	movff	?_eval_poly+1,sin@y+1
  3698  001BF4  C088  F0A6         	movff	?_eval_poly+2,sin@y+2
  3699  001BF8  C0A4  F095         	movff	sin@y,___ftdiv@f2
  3700  001BFC  C0A5  F096         	movff	sin@y+1,___ftdiv@f2+1
  3701  001C00  C0A6  F097         	movff	sin@y+2,___ftdiv@f2+2
  3702  001C04  0E00               	movlw	0
  3703  001C06  0100               	movlb	0	; () banked
  3704  001C08  6F8C               	movwf	(eval_poly@n+1)& (0+255),b
  3705  001C0A  0E04               	movlw	4
  3706  001C0C  6F8B               	movwf	eval_poly@n& (0+255),b
  3707  001C0E  0E01               	movlw	low sin@coeff_a
  3708  001C10  0100               	movlb	0	; () banked
  3709  001C12  6F89               	movwf	eval_poly@d& (0+255),b
  3710  001C14  0E03               	movlw	high sin@coeff_a
  3711  001C16  0100               	movlb	0	; () banked
  3712  001C18  6F8A               	movwf	(eval_poly@d+1)& (0+255),b
  3713  001C1A  C0AA  F086         	movff	sin@x2,eval_poly@x
  3714  001C1E  C0AB  F087         	movff	sin@x2+1,eval_poly@x+1
  3715  001C22  C0AC  F088         	movff	sin@x2+2,eval_poly@x+2
  3716  001C26  ECE6  F013         	call	_eval_poly	;wreg free
  3717  001C2A  C086  F092         	movff	?_eval_poly,___ftdiv@f1
  3718  001C2E  C087  F093         	movff	?_eval_poly+1,___ftdiv@f1+1
  3719  001C32  C088  F094         	movff	?_eval_poly+2,___ftdiv@f1+2
  3720  001C36  EC20  F011         	call	___ftdiv	;wreg free
  3721  001C3A  C092  F0A7         	movff	?___ftdiv,_sin$3253
  3722  001C3E  C093  F0A8         	movff	?___ftdiv+1,_sin$3253+1
  3723  001C42  C094  F0A9         	movff	?___ftdiv+2,_sin$3253+2
  3724  001C46  C0A1  F068         	movff	sin@f,___ftmul@f1
  3725  001C4A  C0A2  F069         	movff	sin@f+1,___ftmul@f1+1
  3726  001C4E  C0A3  F06A         	movff	sin@f+2,___ftmul@f1+2
  3727  001C52  C0A7  F06B         	movff	_sin$3253,___ftmul@f2
  3728  001C56  C0A8  F06C         	movff	_sin$3253+1,___ftmul@f2+1
  3729  001C5A  C0A9  F06D         	movff	_sin$3253+2,___ftmul@f2+2
  3730  001C5E  EC72  F010         	call	___ftmul	;wreg free
  3731  001C62  C068  F0A1         	movff	?___ftmul,sin@f
  3732  001C66  C069  F0A2         	movff	?___ftmul+1,sin@f+1
  3733  001C6A  C06A  F0A3         	movff	?___ftmul+2,sin@f+2
  3734  001C6E  0100               	movlb	0	; () banked
  3735  001C70  51AD               	movf	sin@sgn& (0+255),w,b
  3736  001C72  0100               	movlb	0	; () banked
  3737  001C74  B4D8               	btfsc	status,2,c
  3738  001C76  D00F               	goto	l1223
  3739                           
  3740                           ; BSR set to: 0
  3741  001C78  C0A1  F077         	movff	sin@f,___ftneg@f1
  3742  001C7C  C0A2  F078         	movff	sin@f+1,___ftneg@f1+1
  3743  001C80  C0A3  F079         	movff	sin@f+2,___ftneg@f1+2
  3744  001C84  EC4E  F01B         	call	___ftneg	;wreg free
  3745  001C88  C077  F0A1         	movff	?___ftneg,?_sin
  3746  001C8C  C078  F0A2         	movff	?___ftneg+1,?_sin+1
  3747  001C90  C079  F0A3         	movff	?___ftneg+2,?_sin+2
  3748  001C94  D006               	goto	l1224
  3749  001C96                     l1223:
  3750                           
  3751                           ; BSR set to: 0
  3752  001C96  C0A1  F0A1         	movff	sin@f,?_sin
  3753  001C9A  C0A2  F0A2         	movff	sin@f+1,?_sin+1
  3754  001C9E  C0A3  F0A3         	movff	sin@f+2,?_sin+2
  3755  001CA2                     l1224:
  3756  001CA2  0012               	return		;funcret
  3757  001CA4                     __end_of_sin:
  3758                           	opt stack 0
  3759                           tblptru	equ	0xFF8
  3760                           tblptrh	equ	0xFF7
  3761                           tblptrl	equ	0xFF6
  3762                           tablat	equ	0xFF5
  3763                           postinc0	equ	0xFEE
  3764                           wreg	equ	0xFE8
  3765                           postinc1	equ	0xFE6
  3766                           postdec1	equ	0xFE5
  3767                           fsr1h	equ	0xFE2
  3768                           fsr1l	equ	0xFE1
  3769                           postinc2	equ	0xFDE
  3770                           fsr2h	equ	0xFDA
  3771                           fsr2l	equ	0xFD9
  3772                           status	equ	0xFD8
  3773                           
  3774 ;; *************** function _floor *****************
  3775 ;; Defined at:
  3776 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\floor.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  x               3   38[BANK0 ] unsigned char 
  3779 ;; Auto vars:     Size  Location     Type
  3780 ;;  i               3   41[BANK0 ] unsigned char 
  3781 ;;  expon           2   44[BANK0 ] int 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  3   38[BANK0 ] int 
  3784 ;; Registers used:
  3785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3791 ;;      Params:         0       3       0       0
  3792 ;;      Locals:         0       5       0       0
  3793 ;;      Temps:          0       0       0       0
  3794 ;;      Totals:         0       8       0       0
  3795 ;;Total ram usage:        8 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:    8
  3798 ;; This function calls:
  3799 ;;		___altoft
  3800 ;;		___ftadd
  3801 ;;		___ftge
  3802 ;;		___fttol
  3803 ;;		_frexp
  3804 ;; This function is called by:
  3805 ;;		_sin
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           	psect	text7
  3810  0025D4                     __ptext7:
  3811                           	opt stack 0
  3812  0025D4                     _floor:
  3813                           	opt stack 18
  3814                           
  3815                           ;incstack = 0
  3816  0025D4  C086  F060         	movff	floor@x,frexp@value
  3817  0025D8  C087  F061         	movff	floor@x+1,frexp@value+1
  3818  0025DC  C088  F062         	movff	floor@x+2,frexp@value+2
  3819  0025E0  0E8C               	movlw	low floor@expon
  3820  0025E2  0100               	movlb	0	; () banked
  3821  0025E4  6F63               	movwf	frexp@eptr& (0+255),b
  3822  0025E6  0E00               	movlw	high floor@expon
  3823  0025E8  0100               	movlb	0	; () banked
  3824  0025EA  6F64               	movwf	(frexp@eptr+1)& (0+255),b
  3825  0025EC  ECE7  F016         	call	_frexp	;wreg free
  3826  0025F0  0100               	movlb	0	; () banked
  3827  0025F2  AF8D               	btfss	(floor@expon+1)& (0+255),7,b
  3828  0025F4  D016               	goto	l4225
  3829                           
  3830                           ; BSR set to: 0
  3831  0025F6  0100               	movlb	0	; () banked
  3832  0025F8  AF88               	btfss	(floor@x+2)& (0+255),7,b
  3833  0025FA  D009               	goto	l4221
  3834                           
  3835                           ; BSR set to: 0
  3836  0025FC  0E00               	movlw	0
  3837  0025FE  0100               	movlb	0	; () banked
  3838  002600  6F86               	movwf	?_floor& (0+255),b
  3839  002602  0E80               	movlw	128
  3840  002604  0100               	movlb	0	; () banked
  3841  002606  6F87               	movwf	(?_floor+1)& (0+255),b
  3842  002608  0EBF               	movlw	191
  3843  00260A  D008               	goto	L3
  3844                           
  3845                           ; BSR set to: 0
  3846  00260C  D060               	goto	l1237
  3847  00260E                     l4221:
  3848                           
  3849                           ; BSR set to: 0
  3850  00260E  0E00               	movlw	0
  3851  002610  0100               	movlb	0	; () banked
  3852  002612  6F86               	movwf	?_floor& (0+255),b
  3853  002614  0E00               	movlw	0
  3854  002616  0100               	movlb	0	; () banked
  3855  002618  6F87               	movwf	(?_floor+1)& (0+255),b
  3856  00261A  0E00               	movlw	0
  3857  00261C                     L3:
  3858  00261C  0100               	movlb	0	; () banked
  3859  00261E  6F88               	movwf	(?_floor+2)& (0+255),b
  3860                           
  3861                           ; BSR set to: 0
  3862  002620  D056               	goto	l1237
  3863  002622                     l4225:
  3864                           
  3865                           ; BSR set to: 0
  3866  002622  0100               	movlb	0	; () banked
  3867  002624  518D               	movf	(floor@expon+1)& (0+255),w,b
  3868  002626  E105               	bnz	u3800
  3869  002628  0E15               	movlw	21
  3870  00262A  0100               	movlb	0	; () banked
  3871  00262C  5D8C               	subwf	floor@expon& (0+255),w,b
  3872  00262E  A0D8               	btfss	status,0,c
  3873  002630  D007               	goto	l4229
  3874  002632                     u3800:
  3875                           
  3876                           ; BSR set to: 0
  3877  002632  C086  F086         	movff	floor@x,?_floor
  3878  002636  C087  F087         	movff	floor@x+1,?_floor+1
  3879  00263A  C088  F088         	movff	floor@x+2,?_floor+2
  3880  00263E  D047               	goto	l1237
  3881  002640                     l4229:
  3882                           
  3883                           ; BSR set to: 0
  3884  002640  C086  F060         	movff	floor@x,___fttol@f1
  3885  002644  C087  F061         	movff	floor@x+1,___fttol@f1+1
  3886  002648  C088  F062         	movff	floor@x+2,___fttol@f1+2
  3887  00264C  ECC1  F011         	call	___fttol	;wreg free
  3888  002650  C060  F06F         	movff	?___fttol,___altoft@c
  3889  002654  C061  F070         	movff	?___fttol+1,___altoft@c+1
  3890  002658  C062  F071         	movff	?___fttol+2,___altoft@c+2
  3891  00265C  C063  F072         	movff	?___fttol+3,___altoft@c+3
  3892  002660  EC4E  F016         	call	___altoft	;wreg free
  3893  002664  C06F  F089         	movff	?___altoft,floor@i
  3894  002668  C070  F08A         	movff	?___altoft+1,floor@i+1
  3895  00266C  C071  F08B         	movff	?___altoft+2,floor@i+2
  3896  002670  C086  F07A         	movff	floor@x,___ftge@ff1
  3897  002674  C087  F07B         	movff	floor@x+1,___ftge@ff1+1
  3898  002678  C088  F07C         	movff	floor@x+2,___ftge@ff1+2
  3899  00267C  C089  F07D         	movff	floor@i,___ftge@ff2
  3900  002680  C08A  F07E         	movff	floor@i+1,___ftge@ff2+1
  3901  002684  C08B  F07F         	movff	floor@i+2,___ftge@ff2+2
  3902  002688  EC36  F015         	call	___ftge	;wreg free
  3903  00268C  0100               	movlb	0	; () banked
  3904  00268E  B0D8               	btfsc	status,0,c
  3905  002690  D018               	goto	l1239
  3906                           
  3907                           ; BSR set to: 0
  3908  002692  C089  F07A         	movff	floor@i,___ftadd@f1
  3909  002696  C08A  F07B         	movff	floor@i+1,___ftadd@f1+1
  3910  00269A  C08B  F07C         	movff	floor@i+2,___ftadd@f1+2
  3911  00269E  0E00               	movlw	0
  3912  0026A0  0100               	movlb	0	; () banked
  3913  0026A2  6F7D               	movwf	___ftadd@f2& (0+255),b
  3914  0026A4  0E80               	movlw	128
  3915  0026A6  0100               	movlb	0	; () banked
  3916  0026A8  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  3917  0026AA  0EBF               	movlw	191
  3918  0026AC  0100               	movlb	0	; () banked
  3919  0026AE  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  3920  0026B0  EC52  F00E         	call	___ftadd	;wreg free
  3921  0026B4  C07A  F086         	movff	?___ftadd,?_floor
  3922  0026B8  C07B  F087         	movff	?___ftadd+1,?_floor+1
  3923  0026BC  C07C  F088         	movff	?___ftadd+2,?_floor+2
  3924  0026C0  D006               	goto	l1237
  3925  0026C2                     l1239:
  3926                           
  3927                           ; BSR set to: 0
  3928  0026C2  C089  F086         	movff	floor@i,?_floor
  3929  0026C6  C08A  F087         	movff	floor@i+1,?_floor+1
  3930  0026CA  C08B  F088         	movff	floor@i+2,?_floor+2
  3931  0026CE                     l1237:
  3932  0026CE  0012               	return		;funcret
  3933  0026D0                     __end_of_floor:
  3934                           	opt stack 0
  3935                           tblptru	equ	0xFF8
  3936                           tblptrh	equ	0xFF7
  3937                           tblptrl	equ	0xFF6
  3938                           tablat	equ	0xFF5
  3939                           postinc0	equ	0xFEE
  3940                           wreg	equ	0xFE8
  3941                           postinc1	equ	0xFE6
  3942                           postdec1	equ	0xFE5
  3943                           fsr1h	equ	0xFE2
  3944                           fsr1l	equ	0xFE1
  3945                           postinc2	equ	0xFDE
  3946                           fsr2h	equ	0xFDA
  3947                           fsr2l	equ	0xFD9
  3948                           status	equ	0xFD8
  3949                           
  3950 ;; *************** function _frexp *****************
  3951 ;; Defined at:
  3952 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;  value           3    0[BANK0 ] int 
  3955 ;;  eptr            2    3[BANK0 ] PTR int 
  3956 ;;		 -> floor@expon(2), 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;		None
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  3    0[BANK0 ] PTR int 
  3961 ;; Registers used:
  3962 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3968 ;;      Params:         0       5       0       0
  3969 ;;      Locals:         0       0       0       0
  3970 ;;      Temps:          0       2       0       0
  3971 ;;      Totals:         0       7       0       0
  3972 ;;Total ram usage:        7 bytes
  3973 ;; Hardware stack levels used:    1
  3974 ;; Hardware stack levels required when called:    6
  3975 ;; This function calls:
  3976 ;;		Nothing
  3977 ;; This function is called by:
  3978 ;;		_floor
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982                           	psect	text8
  3983  002DCE                     __ptext8:
  3984                           	opt stack 0
  3985  002DCE                     _frexp:
  3986                           	opt stack 19
  3987                           
  3988                           ;incstack = 0
  3989  002DCE  0100               	movlb	0	; () banked
  3990  002DD0  5160               	movf	frexp@value& (0+255),w,b
  3991  002DD2  0100               	movlb	0	; () banked
  3992  002DD4  1161               	iorwf	(frexp@value+1)& (0+255),w,b
  3993  002DD6  0100               	movlb	0	; () banked
  3994  002DD8  1162               	iorwf	(frexp@value+2)& (0+255),w,b
  3995  002DDA  A4D8               	btfss	status,2,c
  3996  002DDC  D009               	goto	l4143
  3997                           
  3998                           ; BSR set to: 0
  3999  002DDE  C063  FFD9         	movff	frexp@eptr,fsr2l
  4000  002DE2  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  4001  002DE6  0E00               	movlw	0
  4002  002DE8  6EDE               	movwf	postinc2,c
  4003  002DEA  0E00               	movlw	0
  4004  002DEC  6EDD               	movwf	postdec2,c
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;	Return value of _frexp is never used
  4008  002DEE  D036               	goto	l1245
  4009  002DF0                     l4143:
  4010                           
  4011                           ; BSR set to: 0
  4012  002DF0  0100               	movlb	0	; () banked
  4013  002DF2  5162               	movf	(frexp@value+2)& (0+255),w,b
  4014  002DF4  0B7F               	andlw	127
  4015  002DF6  0100               	movlb	0	; () banked
  4016  002DF8  6F65               	movwf	??_frexp& (0+255),b
  4017  002DFA  6B66               	clrf	(??_frexp+1)& (0+255),b
  4018  002DFC  90D8               	bcf	status,0,c
  4019  002DFE  0100               	movlb	0	; () banked
  4020  002E00  3765               	rlcf	??_frexp& (0+255),f,b
  4021  002E02  3766               	rlcf	(??_frexp+1)& (0+255),f,b
  4022  002E04  C063  FFD9         	movff	frexp@eptr,fsr2l
  4023  002E08  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  4024  002E0C  C065  FFDE         	movff	??_frexp,postinc2
  4025  002E10  C066  FFDD         	movff	??_frexp+1,postdec2
  4026  002E14  0100               	movlb	0	; () banked
  4027  002E16  AF61               	btfss	(frexp@value+1)& (0+255),7,b
  4028  002E18  D004               	goto	u3700
  4029  002E1A  0100               	movlb	0	; () banked
  4030  002E1C  6B65               	clrf	??_frexp& (0+255),b
  4031  002E1E  2B65               	incf	??_frexp& (0+255),f,b
  4032  002E20  D002               	goto	u3708
  4033  002E22                     u3700:
  4034  002E22  0100               	movlb	0	; () banked
  4035  002E24  6B65               	clrf	??_frexp& (0+255),b
  4036  002E26                     u3708:
  4037  002E26  0100               	movlb	0	; () banked
  4038  002E28  5165               	movf	??_frexp& (0+255),w,b
  4039  002E2A  C063  FFD9         	movff	frexp@eptr,fsr2l
  4040  002E2E  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  4041  002E32  12DE               	iorwf	postinc2,f,c
  4042  002E34  0E00               	movlw	0
  4043  002E36  12DD               	iorwf	postdec2,f,c
  4044                           
  4045                           ; BSR set to: 0
  4046  002E38  C063  FFD9         	movff	frexp@eptr,fsr2l
  4047  002E3C  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  4048  002E40  0E82               	movlw	130
  4049  002E42  26DE               	addwf	postinc2,f,c
  4050  002E44  0EFF               	movlw	255
  4051  002E46  22DD               	addwfc	postdec2,f,c
  4052                           
  4053                           ; BSR set to: 0
  4054  002E48  8162               	bsf	(frexp@value+2)& (0+255),0,b
  4055  002E4A  8362               	bsf	(frexp@value+2)& (0+255),1,b
  4056  002E4C  8562               	bsf	(frexp@value+2)& (0+255),2,b
  4057  002E4E  8762               	bsf	(frexp@value+2)& (0+255),3,b
  4058  002E50  8962               	bsf	(frexp@value+2)& (0+255),4,b
  4059  002E52  8B62               	bsf	(frexp@value+2)& (0+255),5,b
  4060  002E54  9D62               	bcf	(frexp@value+2)& (0+255),6,b
  4061                           
  4062                           ; BSR set to: 0
  4063  002E56  0100               	movlb	0	; () banked
  4064  002E58  9F61               	bcf	(frexp@value+1)& (0+255),7,b
  4065  002E5A  D000               	goto	l1245
  4066  002E5C                     l1245:
  4067                           
  4068                           ; BSR set to: 0
  4069  002E5C  0012               	return		;funcret
  4070  002E5E                     __end_of_frexp:
  4071                           	opt stack 0
  4072                           tblptru	equ	0xFF8
  4073                           tblptrh	equ	0xFF7
  4074                           tblptrl	equ	0xFF6
  4075                           tablat	equ	0xFF5
  4076                           postinc0	equ	0xFEE
  4077                           wreg	equ	0xFE8
  4078                           postinc1	equ	0xFE6
  4079                           postdec1	equ	0xFE5
  4080                           fsr1h	equ	0xFE2
  4081                           fsr1l	equ	0xFE1
  4082                           postinc2	equ	0xFDE
  4083                           postdec2	equ	0xFDD
  4084                           fsr2h	equ	0xFDA
  4085                           fsr2l	equ	0xFD9
  4086                           status	equ	0xFD8
  4087                           
  4088 ;; *************** function ___altoft *****************
  4089 ;; Defined at:
  4090 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  c               4   15[BANK0 ] long 
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;  sign            1   24[BANK0 ] unsigned char 
  4095 ;;  exp             1   23[BANK0 ] unsigned char 
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  3   15[BANK0 ] float 
  4098 ;; Registers used:
  4099 ;;		wreg, status,2, status,0, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4105 ;;      Params:         0       4       0       0
  4106 ;;      Locals:         0       2       0       0
  4107 ;;      Temps:          0       4       0       0
  4108 ;;      Totals:         0      10       0       0
  4109 ;;Total ram usage:       10 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    7
  4112 ;; This function calls:
  4113 ;;		___ftpack
  4114 ;; This function is called by:
  4115 ;;		_floor
  4116 ;;		_mesure_vitesse
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text9
  4121  002C9C                     __ptext9:
  4122                           	opt stack 0
  4123  002C9C                     ___altoft:
  4124                           	opt stack 18
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;incstack = 0
  4128  002C9C  0E00               	movlw	0
  4129  002C9E  0100               	movlb	0	; () banked
  4130  002CA0  6F78               	movwf	___altoft@sign& (0+255),b
  4131  002CA2  0E8E               	movlw	142
  4132  002CA4  0100               	movlb	0	; () banked
  4133  002CA6  6F77               	movwf	___altoft@exp& (0+255),b
  4134                           
  4135                           ; BSR set to: 0
  4136  002CA8  0100               	movlb	0	; () banked
  4137  002CAA  AF72               	btfss	(___altoft@c+3)& (0+255),7,b
  4138  002CAC  D016               	goto	l3949
  4139                           
  4140                           ; BSR set to: 0
  4141  002CAE  0100               	movlb	0	; () banked
  4142  002CB0  1F72               	comf	(___altoft@c+3)& (0+255),f,b
  4143  002CB2  1F71               	comf	(___altoft@c+2)& (0+255),f,b
  4144  002CB4  1F70               	comf	(___altoft@c+1)& (0+255),f,b
  4145  002CB6  6D6F               	negf	___altoft@c& (0+255),b
  4146  002CB8  0E00               	movlw	0
  4147  002CBA  2370               	addwfc	(___altoft@c+1)& (0+255),f,b
  4148  002CBC  2371               	addwfc	(___altoft@c+2)& (0+255),f,b
  4149  002CBE  2372               	addwfc	(___altoft@c+3)& (0+255),f,b
  4150                           
  4151                           ; BSR set to: 0
  4152  002CC0  0E01               	movlw	1
  4153  002CC2  0100               	movlb	0	; () banked
  4154  002CC4  6F78               	movwf	___altoft@sign& (0+255),b
  4155                           
  4156                           ; BSR set to: 0
  4157  002CC6  D009               	goto	l3949
  4158  002CC8                     l3947:
  4159                           
  4160                           ; BSR set to: 0
  4161  002CC8  0100               	movlb	0	; () banked
  4162  002CCA  90D8               	bcf	status,0,c
  4163  002CCC  3372               	rrcf	(___altoft@c+3)& (0+255),f,b
  4164  002CCE  3371               	rrcf	(___altoft@c+2)& (0+255),f,b
  4165  002CD0  3370               	rrcf	(___altoft@c+1)& (0+255),f,b
  4166  002CD2  336F               	rrcf	___altoft@c& (0+255),f,b
  4167  002CD4  0100               	movlb	0	; () banked
  4168  002CD6  2B77               	incf	___altoft@exp& (0+255),f,b
  4169  002CD8  D000               	goto	l3949
  4170  002CDA                     l3949:
  4171                           
  4172                           ; BSR set to: 0
  4173  002CDA  0E00               	movlw	0
  4174  002CDC  0100               	movlb	0	; () banked
  4175  002CDE  156F               	andwf	___altoft@c& (0+255),w,b
  4176  002CE0  0100               	movlb	0	; () banked
  4177  002CE2  6F73               	movwf	??___altoft& (0+255),b
  4178  002CE4  0E00               	movlw	0
  4179  002CE6  0100               	movlb	0	; () banked
  4180  002CE8  1570               	andwf	(___altoft@c+1)& (0+255),w,b
  4181  002CEA  0100               	movlb	0	; () banked
  4182  002CEC  6F74               	movwf	(??___altoft+1)& (0+255),b
  4183  002CEE  0E00               	movlw	0
  4184  002CF0  0100               	movlb	0	; () banked
  4185  002CF2  1571               	andwf	(___altoft@c+2)& (0+255),w,b
  4186  002CF4  0100               	movlb	0	; () banked
  4187  002CF6  6F75               	movwf	(??___altoft+2)& (0+255),b
  4188  002CF8  0EFF               	movlw	255
  4189  002CFA  0100               	movlb	0	; () banked
  4190  002CFC  1572               	andwf	(___altoft@c+3)& (0+255),w,b
  4191  002CFE  0100               	movlb	0	; () banked
  4192  002D00  6F76               	movwf	(??___altoft+3)& (0+255),b
  4193  002D02  0100               	movlb	0	; () banked
  4194  002D04  5173               	movf	??___altoft& (0+255),w,b
  4195  002D06  0100               	movlb	0	; () banked
  4196  002D08  1174               	iorwf	(??___altoft+1)& (0+255),w,b
  4197  002D0A  0100               	movlb	0	; () banked
  4198  002D0C  1175               	iorwf	(??___altoft+2)& (0+255),w,b
  4199  002D0E  0100               	movlb	0	; () banked
  4200  002D10  1176               	iorwf	(??___altoft+3)& (0+255),w,b
  4201  002D12  A4D8               	btfss	status,2,c
  4202  002D14  D7D9               	goto	l3947
  4203                           
  4204                           ; BSR set to: 0
  4205                           
  4206                           ; BSR set to: 0
  4207  002D16  C06F  F060         	movff	___altoft@c,___ftpack@arg
  4208  002D1A  C070  F061         	movff	___altoft@c+1,___ftpack@arg+1
  4209  002D1E  C071  F062         	movff	___altoft@c+2,___ftpack@arg+2
  4210  002D22  C077  F063         	movff	___altoft@exp,___ftpack@exp
  4211  002D26  C078  F064         	movff	___altoft@sign,___ftpack@sign
  4212  002D2A  EC5A  F012         	call	___ftpack	;wreg free
  4213  002D2E  C060  F06F         	movff	?___ftpack,?___altoft
  4214  002D32  C061  F070         	movff	?___ftpack+1,?___altoft+1
  4215  002D36  C062  F071         	movff	?___ftpack+2,?___altoft+2
  4216  002D3A  D000               	goto	l737
  4217  002D3C                     l737:
  4218  002D3C  0012               	return		;funcret
  4219  002D3E                     __end_of___altoft:
  4220                           	opt stack 0
  4221                           tblptru	equ	0xFF8
  4222                           tblptrh	equ	0xFF7
  4223                           tblptrl	equ	0xFF6
  4224                           tablat	equ	0xFF5
  4225                           postinc0	equ	0xFEE
  4226                           wreg	equ	0xFE8
  4227                           postinc1	equ	0xFE6
  4228                           postdec1	equ	0xFE5
  4229                           fsr1h	equ	0xFE2
  4230                           fsr1l	equ	0xFE1
  4231                           postinc2	equ	0xFDE
  4232                           postdec2	equ	0xFDD
  4233                           fsr2h	equ	0xFDA
  4234                           fsr2l	equ	0xFD9
  4235                           status	equ	0xFD8
  4236                           
  4237 ;; *************** function _eval_poly *****************
  4238 ;; Defined at:
  4239 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\evalpoly.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;  x               3   38[BANK0 ] float 
  4242 ;;  d               2   41[BANK0 ] PTR const 
  4243 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), 
  4244 ;;  n               2   43[BANK0 ] int 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;  res             3   47[BANK0 ] int 
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  3   38[BANK0 ] int 
  4249 ;; Registers used:
  4250 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4256 ;;      Params:         0       7       0       0
  4257 ;;      Locals:         0       3       0       0
  4258 ;;      Temps:          0       2       0       0
  4259 ;;      Totals:         0      12       0       0
  4260 ;;Total ram usage:       12 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    8
  4263 ;; This function calls:
  4264 ;;		___ftadd
  4265 ;;		___ftmul
  4266 ;;		___wmul
  4267 ;; This function is called by:
  4268 ;;		_sin
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text10
  4273  0027CC                     __ptext10:
  4274                           	opt stack 0
  4275  0027CC                     _eval_poly:
  4276                           	opt stack 18
  4277                           
  4278                           ;incstack = 0
  4279  0027CC  C08B  F060         	movff	eval_poly@n,___wmul@multiplier
  4280  0027D0  C08C  F061         	movff	eval_poly@n+1,___wmul@multiplier+1
  4281  0027D4  0E00               	movlw	0
  4282  0027D6  0100               	movlb	0	; () banked
  4283  0027D8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4284  0027DA  0E03               	movlw	3
  4285  0027DC  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4286  0027DE  EC32  F01B         	call	___wmul	;wreg free
  4287  0027E2  C089  F08D         	movff	eval_poly@d,??_eval_poly
  4288  0027E6  C08A  F08E         	movff	eval_poly@d+1,??_eval_poly+1
  4289  0027EA  0100               	movlb	0	; () banked
  4290  0027EC  5160               	movf	?___wmul& (0+255),w,b
  4291  0027EE  0100               	movlb	0	; () banked
  4292  0027F0  278D               	addwf	??_eval_poly& (0+255),f,b
  4293  0027F2  0100               	movlb	0	; () banked
  4294  0027F4  5161               	movf	(?___wmul+1)& (0+255),w,b
  4295  0027F6  0100               	movlb	0	; () banked
  4296  0027F8  238E               	addwfc	(??_eval_poly+1)& (0+255),f,b
  4297  0027FA  C08D  FFF6         	movff	??_eval_poly,tblptrl
  4298  0027FE  C08E  FFF7         	movff	??_eval_poly+1,tblptrh
  4299  002802                     	if	0	;tblptru may be non-zero
  4300  002802                     	endif
  4301  002802                     	if	0	;tblptru may be non-zero
  4302  002802                     	endif
  4303  002802  0009               	tblrd		*+
  4304  002804  CFF5 F08F          	movff	tablat,eval_poly@res
  4305  002808  0009               	tblrd		*+
  4306  00280A  CFF5 F090          	movff	tablat,eval_poly@res+1
  4307  00280E  000A               	tblrd		*-
  4308  002810  CFF5 F091          	movff	tablat,eval_poly@res+2
  4309  002814  D045               	goto	l4239
  4310  002816                     l4237:
  4311                           
  4312                           ; BSR set to: 0
  4313  002816  C08F  F06B         	movff	eval_poly@res,___ftmul@f2
  4314  00281A  C090  F06C         	movff	eval_poly@res+1,___ftmul@f2+1
  4315  00281E  C091  F06D         	movff	eval_poly@res+2,___ftmul@f2+2
  4316  002822  C086  F068         	movff	eval_poly@x,___ftmul@f1
  4317  002826  C087  F069         	movff	eval_poly@x+1,___ftmul@f1+1
  4318  00282A  C088  F06A         	movff	eval_poly@x+2,___ftmul@f1+2
  4319  00282E  EC72  F010         	call	___ftmul	;wreg free
  4320  002832  C068  F07A         	movff	?___ftmul,___ftadd@f1
  4321  002836  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  4322  00283A  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  4323  00283E  0E00               	movlw	0
  4324  002840  0100               	movlb	0	; () banked
  4325  002842  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4326  002844  0E03               	movlw	3
  4327  002846  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4328  002848  0100               	movlb	0	; () banked
  4329  00284A  078B               	decf	eval_poly@n& (0+255),f,b
  4330  00284C  A0D8               	btfss	status,0,c
  4331  00284E  078C               	decf	(eval_poly@n+1)& (0+255),f,b
  4332  002850  C08B  F060         	movff	eval_poly@n,___wmul@multiplier
  4333  002854  C08C  F061         	movff	eval_poly@n+1,___wmul@multiplier+1
  4334  002858  EC32  F01B         	call	___wmul	;wreg free
  4335  00285C  C089  F08D         	movff	eval_poly@d,??_eval_poly
  4336  002860  C08A  F08E         	movff	eval_poly@d+1,??_eval_poly+1
  4337  002864  0100               	movlb	0	; () banked
  4338  002866  5160               	movf	?___wmul& (0+255),w,b
  4339  002868  0100               	movlb	0	; () banked
  4340  00286A  278D               	addwf	??_eval_poly& (0+255),f,b
  4341  00286C  0100               	movlb	0	; () banked
  4342  00286E  5161               	movf	(?___wmul+1)& (0+255),w,b
  4343  002870  0100               	movlb	0	; () banked
  4344  002872  238E               	addwfc	(??_eval_poly+1)& (0+255),f,b
  4345  002874  C08D  FFF6         	movff	??_eval_poly,tblptrl
  4346  002878  C08E  FFF7         	movff	??_eval_poly+1,tblptrh
  4347  00287C                     	if	0	;tblptru may be non-zero
  4348  00287C                     	endif
  4349  00287C                     	if	0	;tblptru may be non-zero
  4350  00287C                     	endif
  4351  00287C  0009               	tblrd		*+
  4352  00287E  CFF5 F07D          	movff	tablat,___ftadd@f2
  4353  002882  0009               	tblrd		*+
  4354  002884  CFF5 F07E          	movff	tablat,___ftadd@f2+1
  4355  002888  000A               	tblrd		*-
  4356  00288A  CFF5 F07F          	movff	tablat,___ftadd@f2+2
  4357  00288E  EC52  F00E         	call	___ftadd	;wreg free
  4358  002892  C07A  F08F         	movff	?___ftadd,eval_poly@res
  4359  002896  C07B  F090         	movff	?___ftadd+1,eval_poly@res+1
  4360  00289A  C07C  F091         	movff	?___ftadd+2,eval_poly@res+2
  4361  00289E  D000               	goto	l4239
  4362  0028A0                     l4239:
  4363  0028A0  0100               	movlb	0	; () banked
  4364  0028A2  518B               	movf	eval_poly@n& (0+255),w,b
  4365  0028A4  0100               	movlb	0	; () banked
  4366  0028A6  118C               	iorwf	(eval_poly@n+1)& (0+255),w,b
  4367  0028A8  A4D8               	btfss	status,2,c
  4368  0028AA  D7B5               	goto	l4237
  4369                           
  4370                           ; BSR set to: 0
  4371  0028AC  C08F  F086         	movff	eval_poly@res,?_eval_poly
  4372  0028B0  C090  F087         	movff	eval_poly@res+1,?_eval_poly+1
  4373  0028B4  C091  F088         	movff	eval_poly@res+2,?_eval_poly+2
  4374                           
  4375                           ; BSR set to: 0
  4376  0028B8  0012               	return		;funcret
  4377  0028BA                     __end_of_eval_poly:
  4378                           	opt stack 0
  4379                           tblptru	equ	0xFF8
  4380                           tblptrh	equ	0xFF7
  4381                           tblptrl	equ	0xFF6
  4382                           tablat	equ	0xFF5
  4383                           postinc0	equ	0xFEE
  4384                           wreg	equ	0xFE8
  4385                           postinc1	equ	0xFE6
  4386                           postdec1	equ	0xFE5
  4387                           fsr1h	equ	0xFE2
  4388                           fsr1l	equ	0xFE1
  4389                           postinc2	equ	0xFDE
  4390                           postdec2	equ	0xFDD
  4391                           fsr2h	equ	0xFDA
  4392                           fsr2l	equ	0xFD9
  4393                           status	equ	0xFD8
  4394                           
  4395 ;; *************** function _conversion_degre_radian *****************
  4396 ;; Defined at:
  4397 ;;		line 70 in file "triangulation.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  angle           3   65[BANK0 ] int 
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;		None
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  3   65[BANK0 ] int 
  4404 ;; Registers used:
  4405 ;;		wreg, status,2, status,0, cstack
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4411 ;;      Params:         0       3       0       0
  4412 ;;      Locals:         0       0       0       0
  4413 ;;      Temps:          0       0       0       0
  4414 ;;      Totals:         0       3       0       0
  4415 ;;Total ram usage:        3 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; Hardware stack levels required when called:    8
  4418 ;; This function calls:
  4419 ;;		___ftdiv
  4420 ;;		___ftmul
  4421 ;; This function is called by:
  4422 ;;		_Cot
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text11
  4427  003368                     __ptext11:
  4428                           	opt stack 0
  4429  003368                     _conversion_degre_radian:
  4430                           	opt stack 20
  4431                           
  4432                           ;triangulation.c: 72: return ((angle / 180.) * 3.14159265);
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;incstack = 0
  4436  003368  0E00               	movlw	0
  4437  00336A  0100               	movlb	0	; () banked
  4438  00336C  6F95               	movwf	___ftdiv@f2& (0+255),b
  4439  00336E  0E34               	movlw	52
  4440  003370  0100               	movlb	0	; () banked
  4441  003372  6F96               	movwf	(___ftdiv@f2+1)& (0+255),b
  4442  003374  0E43               	movlw	67
  4443  003376  0100               	movlb	0	; () banked
  4444  003378  6F97               	movwf	(___ftdiv@f2+2)& (0+255),b
  4445  00337A  C0A1  F092         	movff	conversion_degre_radian@angle,___ftdiv@f1
  4446  00337E  C0A2  F093         	movff	conversion_degre_radian@angle+1,___ftdiv@f1+1
  4447  003382  C0A3  F094         	movff	conversion_degre_radian@angle+2,___ftdiv@f1+2
  4448  003386  EC20  F011         	call	___ftdiv	;wreg free
  4449  00338A  C092  F068         	movff	?___ftdiv,___ftmul@f1
  4450  00338E  C093  F069         	movff	?___ftdiv+1,___ftmul@f1+1
  4451  003392  C094  F06A         	movff	?___ftdiv+2,___ftmul@f1+2
  4452  003396  0E10               	movlw	16
  4453  003398  0100               	movlb	0	; () banked
  4454  00339A  6F6B               	movwf	___ftmul@f2& (0+255),b
  4455  00339C  0E49               	movlw	73
  4456  00339E  0100               	movlb	0	; () banked
  4457  0033A0  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  4458  0033A2  0E40               	movlw	64
  4459  0033A4  0100               	movlb	0	; () banked
  4460  0033A6  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  4461  0033A8  EC72  F010         	call	___ftmul	;wreg free
  4462  0033AC  C068  F0A1         	movff	?___ftmul,?_conversion_degre_radian
  4463  0033B0  C069  F0A2         	movff	?___ftmul+1,?_conversion_degre_radian+1
  4464  0033B4  C06A  F0A3         	movff	?___ftmul+2,?_conversion_degre_radian+2
  4465  0033B8  D000               	goto	l592
  4466  0033BA                     l592:
  4467  0033BA  0012               	return		;funcret
  4468  0033BC                     __end_of_conversion_degre_radian:
  4469                           	opt stack 0
  4470                           tblptru	equ	0xFF8
  4471                           tblptrh	equ	0xFF7
  4472                           tblptrl	equ	0xFF6
  4473                           tablat	equ	0xFF5
  4474                           postinc0	equ	0xFEE
  4475                           wreg	equ	0xFE8
  4476                           postinc1	equ	0xFE6
  4477                           postdec1	equ	0xFE5
  4478                           fsr1h	equ	0xFE2
  4479                           fsr1l	equ	0xFE1
  4480                           postinc2	equ	0xFDE
  4481                           postdec2	equ	0xFDD
  4482                           fsr2h	equ	0xFDA
  4483                           fsr2l	equ	0xFD9
  4484                           status	equ	0xFD8
  4485                           
  4486 ;; *************** function _obtention_angle *****************
  4487 ;; Defined at:
  4488 ;;		line 140 in file "moteur.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  position        2   65[BANK0 ] unsigned int 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  angle           3   68[BANK0 ] unsigned int 
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  3   65[BANK0 ] unsigned int 
  4495 ;; Registers used:
  4496 ;;		wreg, status,2, status,0, cstack
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4502 ;;      Params:         0       3       0       0
  4503 ;;      Locals:         0       3       0       0
  4504 ;;      Temps:          0       0       0       0
  4505 ;;      Totals:         0       6       0       0
  4506 ;;Total ram usage:        6 bytes
  4507 ;; Hardware stack levels used:    1
  4508 ;; Hardware stack levels required when called:    8
  4509 ;; This function calls:
  4510 ;;		___ftdiv
  4511 ;;		___ftmul
  4512 ;;		___lwtoft
  4513 ;; This function is called by:
  4514 ;;		_main
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518                           	psect	text12
  4519  00307C                     __ptext12:
  4520                           	opt stack 0
  4521  00307C                     _obtention_angle:
  4522                           	opt stack 22
  4523                           
  4524                           ;moteur.c: 142: double angle;
  4525                           ;moteur.c: 143: angle = (double) ((position) / 7999.);
  4526                           
  4527                           ;incstack = 0
  4528  00307C  C0A1  F068         	movff	obtention_angle@position,___lwtoft@c
  4529  003080  C0A2  F069         	movff	obtention_angle@position+1,___lwtoft@c+1
  4530  003084  EC66  F01B         	call	___lwtoft	;wreg free
  4531  003088  C068  F092         	movff	?___lwtoft,___ftdiv@f1
  4532  00308C  C069  F093         	movff	?___lwtoft+1,___ftdiv@f1+1
  4533  003090  C06A  F094         	movff	?___lwtoft+2,___ftdiv@f1+2
  4534  003094  0EF8               	movlw	248
  4535  003096  0100               	movlb	0	; () banked
  4536  003098  6F95               	movwf	___ftdiv@f2& (0+255),b
  4537  00309A  0EF9               	movlw	249
  4538  00309C  0100               	movlb	0	; () banked
  4539  00309E  6F96               	movwf	(___ftdiv@f2+1)& (0+255),b
  4540  0030A0  0E45               	movlw	69
  4541  0030A2  0100               	movlb	0	; () banked
  4542  0030A4  6F97               	movwf	(___ftdiv@f2+2)& (0+255),b
  4543  0030A6  EC20  F011         	call	___ftdiv	;wreg free
  4544  0030AA  C092  F0A4         	movff	?___ftdiv,obtention_angle@angle
  4545  0030AE  C093  F0A5         	movff	?___ftdiv+1,obtention_angle@angle+1
  4546  0030B2  C094  F0A6         	movff	?___ftdiv+2,obtention_angle@angle+2
  4547                           
  4548                           ;moteur.c: 144: angle *= 360;
  4549  0030B6  C0A4  F068         	movff	obtention_angle@angle,___ftmul@f1
  4550  0030BA  C0A5  F069         	movff	obtention_angle@angle+1,___ftmul@f1+1
  4551  0030BE  C0A6  F06A         	movff	obtention_angle@angle+2,___ftmul@f1+2
  4552  0030C2  0E00               	movlw	0
  4553  0030C4  0100               	movlb	0	; () banked
  4554  0030C6  6F6B               	movwf	___ftmul@f2& (0+255),b
  4555  0030C8  0EB4               	movlw	180
  4556  0030CA  0100               	movlb	0	; () banked
  4557  0030CC  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  4558  0030CE  0E43               	movlw	67
  4559  0030D0  0100               	movlb	0	; () banked
  4560  0030D2  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  4561  0030D4  EC72  F010         	call	___ftmul	;wreg free
  4562  0030D8  C068  F0A4         	movff	?___ftmul,obtention_angle@angle
  4563  0030DC  C069  F0A5         	movff	?___ftmul+1,obtention_angle@angle+1
  4564  0030E0  C06A  F0A6         	movff	?___ftmul+2,obtention_angle@angle+2
  4565                           
  4566                           ;moteur.c: 145: return angle;
  4567  0030E4  C0A4  F0A1         	movff	obtention_angle@angle,?_obtention_angle
  4568  0030E8  C0A5  F0A2         	movff	obtention_angle@angle+1,?_obtention_angle+1
  4569  0030EC  C0A6  F0A3         	movff	obtention_angle@angle+2,?_obtention_angle+2
  4570  0030F0  D000               	goto	l503
  4571  0030F2                     l503:
  4572  0030F2  0012               	return		;funcret
  4573  0030F4                     __end_of_obtention_angle:
  4574                           	opt stack 0
  4575                           tblptru	equ	0xFF8
  4576                           tblptrh	equ	0xFF7
  4577                           tblptrl	equ	0xFF6
  4578                           tablat	equ	0xFF5
  4579                           postinc0	equ	0xFEE
  4580                           wreg	equ	0xFE8
  4581                           postinc1	equ	0xFE6
  4582                           postdec1	equ	0xFE5
  4583                           fsr1h	equ	0xFE2
  4584                           fsr1l	equ	0xFE1
  4585                           postinc2	equ	0xFDE
  4586                           postdec2	equ	0xFDD
  4587                           fsr2h	equ	0xFDA
  4588                           fsr2l	equ	0xFD9
  4589                           status	equ	0xFD8
  4590                           
  4591 ;; *************** function ___lwtoft *****************
  4592 ;; Defined at:
  4593 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  c               2    8[BANK0 ] unsigned int 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;		None
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  3    8[BANK0 ] float 
  4600 ;; Registers used:
  4601 ;;		wreg, status,2, status,0, cstack
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4607 ;;      Params:         0       3       0       0
  4608 ;;      Locals:         0       0       0       0
  4609 ;;      Temps:          0       0       0       0
  4610 ;;      Totals:         0       3       0       0
  4611 ;;Total ram usage:        3 bytes
  4612 ;; Hardware stack levels used:    1
  4613 ;; Hardware stack levels required when called:    7
  4614 ;; This function calls:
  4615 ;;		___ftpack
  4616 ;; This function is called by:
  4617 ;;		_obtention_angle
  4618 ;;		_conversion_angle
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text13
  4623  0036CC                     __ptext13:
  4624                           	opt stack 0
  4625  0036CC                     ___lwtoft:
  4626                           	opt stack 22
  4627                           
  4628                           ;incstack = 0
  4629  0036CC  C068  F060         	movff	___lwtoft@c,___ftpack@arg
  4630  0036D0  C069  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
  4631  0036D4  0100               	movlb	0	; () banked
  4632  0036D6  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  4633  0036D8  0E8E               	movlw	142
  4634  0036DA  0100               	movlb	0	; () banked
  4635  0036DC  6F63               	movwf	___ftpack@exp& (0+255),b
  4636  0036DE  0E00               	movlw	0
  4637  0036E0  0100               	movlb	0	; () banked
  4638  0036E2  6F64               	movwf	___ftpack@sign& (0+255),b
  4639  0036E4  EC5A  F012         	call	___ftpack	;wreg free
  4640  0036E8  C060  F068         	movff	?___ftpack,?___lwtoft
  4641  0036EC  C061  F069         	movff	?___ftpack+1,?___lwtoft+1
  4642  0036F0  C062  F06A         	movff	?___ftpack+2,?___lwtoft+2
  4643  0036F4  D000               	goto	l1185
  4644  0036F6                     l1185:
  4645  0036F6  0012               	return		;funcret
  4646  0036F8                     __end_of___lwtoft:
  4647                           	opt stack 0
  4648                           tblptru	equ	0xFF8
  4649                           tblptrh	equ	0xFF7
  4650                           tblptrl	equ	0xFF6
  4651                           tablat	equ	0xFF5
  4652                           postinc0	equ	0xFEE
  4653                           wreg	equ	0xFE8
  4654                           postinc1	equ	0xFE6
  4655                           postdec1	equ	0xFE5
  4656                           fsr1h	equ	0xFE2
  4657                           fsr1l	equ	0xFE1
  4658                           postinc2	equ	0xFDE
  4659                           postdec2	equ	0xFDD
  4660                           fsr2h	equ	0xFDA
  4661                           fsr2l	equ	0xFD9
  4662                           status	equ	0xFD8
  4663                           
  4664 ;; *************** function ___ftdiv *****************
  4665 ;; Defined at:
  4666 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;  f1              3   50[BANK0 ] float 
  4669 ;;  f2              3   53[BANK0 ] float 
  4670 ;; Auto vars:     Size  Location     Type
  4671 ;;  f3              3   60[BANK0 ] float 
  4672 ;;  sign            1   64[BANK0 ] unsigned char 
  4673 ;;  exp             1   63[BANK0 ] unsigned char 
  4674 ;;  cntr            1   59[BANK0 ] unsigned char 
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  3   50[BANK0 ] float 
  4677 ;; Registers used:
  4678 ;;		wreg, status,2, status,0, cstack
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4684 ;;      Params:         0       6       0       0
  4685 ;;      Locals:         0       6       0       0
  4686 ;;      Temps:          0       3       0       0
  4687 ;;      Totals:         0      15       0       0
  4688 ;;Total ram usage:       15 bytes
  4689 ;; Hardware stack levels used:    1
  4690 ;; Hardware stack levels required when called:    7
  4691 ;; This function calls:
  4692 ;;		___ftpack
  4693 ;; This function is called by:
  4694 ;;		_obtention_angle
  4695 ;;		_triangulation
  4696 ;;		_Cot
  4697 ;;		_conversion_degre_radian
  4698 ;;		_tan
  4699 ;;		_sin
  4700 ;;		_conversion_angle
  4701 ;;		_mesure_vitesse
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           	psect	text14
  4706  002240                     __ptext14:
  4707                           	opt stack 0
  4708  002240                     ___ftdiv:
  4709                           	opt stack 22
  4710                           
  4711                           ;incstack = 0
  4712  002240  C094  F098         	movff	___ftdiv@f1+2,??___ftdiv
  4713  002244  0100               	movlb	0	; () banked
  4714  002246  6B99               	clrf	(??___ftdiv+1)& (0+255),b
  4715  002248  6B9A               	clrf	(??___ftdiv+2)& (0+255),b
  4716  00224A  0100               	movlb	0	; () banked
  4717  00224C  3593               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  4718  00224E  0100               	movlb	0	; () banked
  4719  002250  3798               	rlcf	??___ftdiv& (0+255),f,b
  4720  002252  E301               	bnc	u3711
  4721  002254  8199               	bsf	(??___ftdiv+1)& (0+255),0,b
  4722  002256                     u3711:
  4723  002256  0100               	movlb	0	; () banked
  4724  002258  5198               	movf	??___ftdiv& (0+255),w,b
  4725  00225A  0100               	movlb	0	; () banked
  4726  00225C  6F9F               	movwf	___ftdiv@exp& (0+255),b
  4727  00225E  0100               	movlb	0	; () banked
  4728  002260  519F               	movf	___ftdiv@exp& (0+255),w,b
  4729  002262  A4D8               	btfss	status,2,c
  4730  002264  D002               	goto	l4159
  4731  002266  D014               	goto	l4161
  4732                           
  4733                           ; BSR set to: 0
  4734                           
  4735                           ; BSR set to: 0
  4736  002268  D08B               	goto	l1020
  4737  00226A                     l4159:
  4738                           
  4739                           ; BSR set to: 0
  4740  00226A  C097  F098         	movff	___ftdiv@f2+2,??___ftdiv
  4741  00226E  0100               	movlb	0	; () banked
  4742  002270  6B99               	clrf	(??___ftdiv+1)& (0+255),b
  4743  002272  6B9A               	clrf	(??___ftdiv+2)& (0+255),b
  4744  002274  0100               	movlb	0	; () banked
  4745  002276  3596               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  4746  002278  0100               	movlb	0	; () banked
  4747  00227A  3798               	rlcf	??___ftdiv& (0+255),f,b
  4748  00227C  E301               	bnc	u3731
  4749  00227E  8199               	bsf	(??___ftdiv+1)& (0+255),0,b
  4750  002280                     u3731:
  4751  002280  0100               	movlb	0	; () banked
  4752  002282  5198               	movf	??___ftdiv& (0+255),w,b
  4753  002284  0100               	movlb	0	; () banked
  4754  002286  6FA0               	movwf	___ftdiv@sign& (0+255),b
  4755  002288  0100               	movlb	0	; () banked
  4756  00228A  51A0               	movf	___ftdiv@sign& (0+255),w,b
  4757  00228C  A4D8               	btfss	status,2,c
  4758  00228E  D00A               	goto	l4165
  4759  002290                     l4161:
  4760                           
  4761                           ; BSR set to: 0
  4762  002290  0E00               	movlw	0
  4763  002292  0100               	movlb	0	; () banked
  4764  002294  6F92               	movwf	?___ftdiv& (0+255),b
  4765  002296  0E00               	movlw	0
  4766  002298  0100               	movlb	0	; () banked
  4767  00229A  6F93               	movwf	(?___ftdiv+1)& (0+255),b
  4768  00229C  0E00               	movlw	0
  4769  00229E  0100               	movlb	0	; () banked
  4770  0022A0  6F94               	movwf	(?___ftdiv+2)& (0+255),b
  4771                           
  4772                           ; BSR set to: 0
  4773  0022A2  D06E               	goto	l1020
  4774  0022A4                     l4165:
  4775                           
  4776                           ; BSR set to: 0
  4777  0022A4  0E00               	movlw	0
  4778  0022A6  0100               	movlb	0	; () banked
  4779  0022A8  6F9C               	movwf	___ftdiv@f3& (0+255),b
  4780  0022AA  0E00               	movlw	0
  4781  0022AC  0100               	movlb	0	; () banked
  4782  0022AE  6F9D               	movwf	(___ftdiv@f3+1)& (0+255),b
  4783  0022B0  0E00               	movlw	0
  4784  0022B2  0100               	movlb	0	; () banked
  4785  0022B4  6F9E               	movwf	(___ftdiv@f3+2)& (0+255),b
  4786                           
  4787                           ; BSR set to: 0
  4788  0022B6  0100               	movlb	0	; () banked
  4789  0022B8  51A0               	movf	___ftdiv@sign& (0+255),w,b
  4790  0022BA  0F89               	addlw	137
  4791  0022BC  0100               	movlb	0	; () banked
  4792  0022BE  5F9F               	subwf	___ftdiv@exp& (0+255),f,b
  4793                           
  4794                           ; BSR set to: 0
  4795  0022C0  C094  F0A0         	movff	___ftdiv@f1+2,___ftdiv@sign
  4796                           
  4797                           ; BSR set to: 0
  4798  0022C4  0100               	movlb	0	; () banked
  4799  0022C6  5197               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4800  0022C8  0100               	movlb	0	; () banked
  4801  0022CA  1BA0               	xorwf	___ftdiv@sign& (0+255),f,b
  4802                           
  4803                           ; BSR set to: 0
  4804  0022CC  0E80               	movlw	128
  4805  0022CE  0100               	movlb	0	; () banked
  4806  0022D0  17A0               	andwf	___ftdiv@sign& (0+255),f,b
  4807                           
  4808                           ; BSR set to: 0
  4809  0022D2  0100               	movlb	0	; () banked
  4810  0022D4  8F93               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  4811                           
  4812                           ; BSR set to: 0
  4813  0022D6  0EFF               	movlw	255
  4814  0022D8  0100               	movlb	0	; () banked
  4815  0022DA  1792               	andwf	___ftdiv@f1& (0+255),f,b
  4816  0022DC  0EFF               	movlw	255
  4817  0022DE  0100               	movlb	0	; () banked
  4818  0022E0  1793               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  4819  0022E2  0E00               	movlw	0
  4820  0022E4  0100               	movlb	0	; () banked
  4821  0022E6  1794               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  4822                           
  4823                           ; BSR set to: 0
  4824  0022E8  0100               	movlb	0	; () banked
  4825  0022EA  8F96               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  4826                           
  4827                           ; BSR set to: 0
  4828  0022EC  0EFF               	movlw	255
  4829  0022EE  0100               	movlb	0	; () banked
  4830  0022F0  1795               	andwf	___ftdiv@f2& (0+255),f,b
  4831  0022F2  0EFF               	movlw	255
  4832  0022F4  0100               	movlb	0	; () banked
  4833  0022F6  1796               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  4834  0022F8  0E00               	movlw	0
  4835  0022FA  0100               	movlb	0	; () banked
  4836  0022FC  1797               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  4837                           
  4838                           ; BSR set to: 0
  4839  0022FE  0E18               	movlw	24
  4840  002300  0100               	movlb	0	; () banked
  4841  002302  6F9B               	movwf	___ftdiv@cntr& (0+255),b
  4842  002304  D000               	goto	l4185
  4843  002306                     l4185:
  4844                           
  4845                           ; BSR set to: 0
  4846  002306  0100               	movlb	0	; () banked
  4847  002308  90D8               	bcf	status,0,c
  4848  00230A  379C               	rlcf	___ftdiv@f3& (0+255),f,b
  4849  00230C  379D               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  4850  00230E  379E               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  4851                           
  4852                           ; BSR set to: 0
  4853  002310  0100               	movlb	0	; () banked
  4854  002312  5195               	movf	___ftdiv@f2& (0+255),w,b
  4855  002314  0100               	movlb	0	; () banked
  4856  002316  5D92               	subwf	___ftdiv@f1& (0+255),w,b
  4857  002318  0100               	movlb	0	; () banked
  4858  00231A  5196               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4859  00231C  0100               	movlb	0	; () banked
  4860  00231E  5993               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  4861  002320  0100               	movlb	0	; () banked
  4862  002322  5197               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4863  002324  0100               	movlb	0	; () banked
  4864  002326  5994               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  4865  002328  A0D8               	btfss	status,0,c
  4866  00232A  D00E               	goto	l1023
  4867                           
  4868                           ; BSR set to: 0
  4869  00232C  0100               	movlb	0	; () banked
  4870  00232E  5195               	movf	___ftdiv@f2& (0+255),w,b
  4871  002330  0100               	movlb	0	; () banked
  4872  002332  5F92               	subwf	___ftdiv@f1& (0+255),f,b
  4873  002334  0100               	movlb	0	; () banked
  4874  002336  5196               	movf	(___ftdiv@f2+1)& (0+255),w,b
  4875  002338  0100               	movlb	0	; () banked
  4876  00233A  5B93               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  4877  00233C  0100               	movlb	0	; () banked
  4878  00233E  5197               	movf	(___ftdiv@f2+2)& (0+255),w,b
  4879  002340  0100               	movlb	0	; () banked
  4880  002342  5B94               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  4881                           
  4882                           ; BSR set to: 0
  4883  002344  0100               	movlb	0	; () banked
  4884  002346  819C               	bsf	___ftdiv@f3& (0+255),0,b
  4885  002348                     l1023:
  4886                           
  4887                           ; BSR set to: 0
  4888  002348  0100               	movlb	0	; () banked
  4889  00234A  90D8               	bcf	status,0,c
  4890  00234C  3792               	rlcf	___ftdiv@f1& (0+255),f,b
  4891  00234E  3793               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  4892  002350  3794               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  4893                           
  4894                           ; BSR set to: 0
  4895  002352  0100               	movlb	0	; () banked
  4896  002354  2F9B               	decfsz	___ftdiv@cntr& (0+255),f,b
  4897  002356  D7D7               	goto	l4185
  4898  002358  D000               	goto	l4195
  4899  00235A                     l4195:
  4900                           
  4901                           ; BSR set to: 0
  4902  00235A  C09C  F060         	movff	___ftdiv@f3,___ftpack@arg
  4903  00235E  C09D  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  4904  002362  C09E  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  4905  002366  C09F  F063         	movff	___ftdiv@exp,___ftpack@exp
  4906  00236A  C0A0  F064         	movff	___ftdiv@sign,___ftpack@sign
  4907  00236E  EC5A  F012         	call	___ftpack	;wreg free
  4908  002372  C060  F092         	movff	?___ftpack,?___ftdiv
  4909  002376  C061  F093         	movff	?___ftpack+1,?___ftdiv+1
  4910  00237A  C062  F094         	movff	?___ftpack+2,?___ftdiv+2
  4911  00237E  D000               	goto	l1020
  4912  002380                     l1020:
  4913  002380  0012               	return		;funcret
  4914  002382                     __end_of___ftdiv:
  4915                           	opt stack 0
  4916                           tblptru	equ	0xFF8
  4917                           tblptrh	equ	0xFF7
  4918                           tblptrl	equ	0xFF6
  4919                           tablat	equ	0xFF5
  4920                           postinc0	equ	0xFEE
  4921                           wreg	equ	0xFE8
  4922                           postinc1	equ	0xFE6
  4923                           postdec1	equ	0xFE5
  4924                           fsr1h	equ	0xFE2
  4925                           fsr1l	equ	0xFE1
  4926                           postinc2	equ	0xFDE
  4927                           postdec2	equ	0xFDD
  4928                           fsr2h	equ	0xFDA
  4929                           fsr2l	equ	0xFD9
  4930                           status	equ	0xFD8
  4931                           
  4932 ;; *************** function _init_system *****************
  4933 ;; Defined at:
  4934 ;;		line 22 in file "system.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;		None
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;		None
  4939 ;; Return value:  Size  Location     Type
  4940 ;;		None               void
  4941 ;; Registers used:
  4942 ;;		wreg, status,2, cstack
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4948 ;;      Params:         0       0       0       0
  4949 ;;      Locals:         0       0       0       0
  4950 ;;      Temps:          0       0       0       0
  4951 ;;      Totals:         0       0       0       0
  4952 ;;Total ram usage:        0 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:    8
  4955 ;; This function calls:
  4956 ;;		_ConfigInterrupt
  4957 ;;		_ConfigPorts
  4958 ;;		_config_QEI
  4959 ;;		_config_pwm
  4960 ;;		_config_uart
  4961 ;;		_init_capteur
  4962 ;;		_init_timer_0
  4963 ;;		_init_uart_logiciel
  4964 ;;		_init_uart_reception
  4965 ;;		_reglage_PID
  4966 ;; This function is called by:
  4967 ;;		_main
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           	psect	text15
  4972  0036F8                     __ptext15:
  4973                           	opt stack 0
  4974  0036F8                     _init_system:
  4975                           	opt stack 22
  4976                           
  4977                           ;system.c: 25: ConfigPorts();
  4978                           
  4979                           ;incstack = 0
  4980  0036F8  EC2F  F017         	call	_ConfigPorts	;wreg free
  4981                           
  4982                           ;system.c: 26: ConfigInterrupt();
  4983  0036FC  EC76  F017         	call	_ConfigInterrupt	;wreg free
  4984                           
  4985                           ;system.c: 27: init_timer_0();
  4986  003700  ECE0  F01B         	call	_init_timer_0	;wreg free
  4987                           
  4988                           ;system.c: 28: init_uart_logiciel();
  4989  003704  ECF5  F01B         	call	_init_uart_logiciel	;wreg free
  4990                           
  4991                           ;system.c: 29: init_uart_reception();
  4992  003708  ECEB  F01B         	call	_init_uart_reception	;wreg free
  4993                           
  4994                           ;system.c: 30: config_uart ();
  4995  00370C  ECC6  F01B         	call	_config_uart	;wreg free
  4996                           
  4997                           ;system.c: 31: config_pwm();
  4998  003710  EC50  F01A         	call	_config_pwm	;wreg free
  4999                           
  5000                           ;system.c: 32: config_QEI();
  5001  003714  EC88  F019         	call	_config_QEI	;wreg free
  5002                           
  5003                           ;system.c: 33: reglage_PID();
  5004  003718  EC16  F01B         	call	_reglage_PID	;wreg free
  5005                           
  5006                           ;system.c: 35: init_capteur();
  5007  00371C  ECF9  F015         	call	_init_capteur	;wreg free
  5008  003720  0012               	return		;funcret
  5009  003722                     __end_of_init_system:
  5010                           	opt stack 0
  5011                           tblptru	equ	0xFF8
  5012                           tblptrh	equ	0xFF7
  5013                           tblptrl	equ	0xFF6
  5014                           tablat	equ	0xFF5
  5015                           postinc0	equ	0xFEE
  5016                           wreg	equ	0xFE8
  5017                           postinc1	equ	0xFE6
  5018                           postdec1	equ	0xFE5
  5019                           fsr1h	equ	0xFE2
  5020                           fsr1l	equ	0xFE1
  5021                           postinc2	equ	0xFDE
  5022                           postdec2	equ	0xFDD
  5023                           fsr2h	equ	0xFDA
  5024                           fsr2l	equ	0xFD9
  5025                           status	equ	0xFD8
  5026                           
  5027 ;; *************** function _reglage_PID *****************
  5028 ;; Defined at:
  5029 ;;		line 64 in file "asserv.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;		None
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;		None
  5034 ;; Return value:  Size  Location     Type
  5035 ;;		None               void
  5036 ;; Registers used:
  5037 ;;		wreg, status,2
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5043 ;;      Params:         0       0       0       0
  5044 ;;      Locals:         0       0       0       0
  5045 ;;      Temps:          0       0       0       0
  5046 ;;      Totals:         0       0       0       0
  5047 ;;Total ram usage:        0 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:    6
  5050 ;; This function calls:
  5051 ;;		Nothing
  5052 ;; This function is called by:
  5053 ;;		_init_system
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text16
  5058  00362C                     __ptext16:
  5059                           	opt stack 0
  5060  00362C                     _reglage_PID:
  5061                           	opt stack 23
  5062                           
  5063                           ;asserv.c: 67: PID.KP = 0.;
  5064                           
  5065                           ;incstack = 0
  5066  00362C  0E00               	movlw	0
  5067  00362E  0101               	movlb	1	; () banked
  5068  003630  6F00               	movwf	_PID& (0+255),b
  5069  003632  0E00               	movlw	0
  5070  003634  0101               	movlb	1	; () banked
  5071  003636  6F01               	movwf	(_PID+1)& (0+255),b
  5072  003638  0E00               	movlw	0
  5073  00363A  0101               	movlb	1	; () banked
  5074  00363C  6F02               	movwf	(_PID+2)& (0+255),b
  5075                           
  5076                           ;asserv.c: 68: PID.KI = 10.;
  5077  00363E  0E00               	movlw	0
  5078  003640  0101               	movlb	1	; () banked
  5079  003642  6F03               	movwf	(_PID+3)& (0+255),b
  5080  003644  0E20               	movlw	32
  5081  003646  0101               	movlb	1	; () banked
  5082  003648  6F04               	movwf	(_PID+4)& (0+255),b
  5083  00364A  0E41               	movlw	65
  5084  00364C  0101               	movlb	1	; () banked
  5085  00364E  6F05               	movwf	(_PID+5)& (0+255),b
  5086                           
  5087                           ;asserv.c: 69: PID.KD = 0.;
  5088  003650  0E00               	movlw	0
  5089  003652  0101               	movlb	1	; () banked
  5090  003654  6F06               	movwf	(_PID+6)& (0+255),b
  5091  003656  0E00               	movlw	0
  5092  003658  0101               	movlb	1	; () banked
  5093  00365A  6F07               	movwf	(_PID+7)& (0+255),b
  5094  00365C  0E00               	movlw	0
  5095  00365E  0101               	movlb	1	; () banked
  5096  003660  6F08               	movwf	(_PID+8)& (0+255),b
  5097                           
  5098                           ; BSR set to: 1
  5099  003662  0012               	return		;funcret
  5100  003664                     __end_of_reglage_PID:
  5101                           	opt stack 0
  5102                           tblptru	equ	0xFF8
  5103                           tblptrh	equ	0xFF7
  5104                           tblptrl	equ	0xFF6
  5105                           tablat	equ	0xFF5
  5106                           postinc0	equ	0xFEE
  5107                           wreg	equ	0xFE8
  5108                           postinc1	equ	0xFE6
  5109                           postdec1	equ	0xFE5
  5110                           fsr1h	equ	0xFE2
  5111                           fsr1l	equ	0xFE1
  5112                           postinc2	equ	0xFDE
  5113                           postdec2	equ	0xFDD
  5114                           fsr2h	equ	0xFDA
  5115                           fsr2l	equ	0xFD9
  5116                           status	equ	0xFD8
  5117                           
  5118 ;; *************** function _init_uart_reception *****************
  5119 ;; Defined at:
  5120 ;;		line 72 in file "uart.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;		None
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;		None
  5125 ;; Return value:  Size  Location     Type
  5126 ;;		None               void
  5127 ;; Registers used:
  5128 ;;		wreg, status,2
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5134 ;;      Params:         0       0       0       0
  5135 ;;      Locals:         0       0       0       0
  5136 ;;      Temps:          0       0       0       0
  5137 ;;      Totals:         0       0       0       0
  5138 ;;Total ram usage:        0 bytes
  5139 ;; Hardware stack levels used:    1
  5140 ;; Hardware stack levels required when called:    6
  5141 ;; This function calls:
  5142 ;;		Nothing
  5143 ;; This function is called by:
  5144 ;;		_init_system
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text17
  5149  0037D6                     __ptext17:
  5150                           	opt stack 0
  5151  0037D6                     _init_uart_reception:
  5152                           	opt stack 23
  5153                           
  5154                           ;uart.c: 74: uart_reception.buffer_plein = 0;
  5155                           
  5156                           ; BSR set to: 1
  5157                           ;incstack = 0
  5158  0037D6  0E00               	movlw	0
  5159  0037D8  0101               	movlb	1	; () banked
  5160  0037DA  6F7B               	movwf	(_uart_reception+101)& (0+255),b
  5161                           
  5162                           ;uart.c: 75: uart_reception.buffer_vide = 1;
  5163  0037DC  0E01               	movlw	1
  5164  0037DE  0101               	movlb	1	; () banked
  5165  0037E0  6F7C               	movwf	(_uart_reception+102)& (0+255),b
  5166                           
  5167                           ;uart.c: 76: uart_reception.indice = 0;
  5168  0037E2  0E00               	movlw	0
  5169  0037E4  0101               	movlb	1	; () banked
  5170  0037E6  6F7A               	movwf	(_uart_reception+100)& (0+255),b
  5171                           
  5172                           ; BSR set to: 1
  5173  0037E8  0012               	return		;funcret
  5174  0037EA                     __end_of_init_uart_reception:
  5175                           	opt stack 0
  5176                           tblptru	equ	0xFF8
  5177                           tblptrh	equ	0xFF7
  5178                           tblptrl	equ	0xFF6
  5179                           tablat	equ	0xFF5
  5180                           postinc0	equ	0xFEE
  5181                           wreg	equ	0xFE8
  5182                           postinc1	equ	0xFE6
  5183                           postdec1	equ	0xFE5
  5184                           fsr1h	equ	0xFE2
  5185                           fsr1l	equ	0xFE1
  5186                           postinc2	equ	0xFDE
  5187                           postdec2	equ	0xFDD
  5188                           fsr2h	equ	0xFDA
  5189                           fsr2l	equ	0xFD9
  5190                           status	equ	0xFD8
  5191                           
  5192 ;; *************** function _init_uart_logiciel *****************
  5193 ;; Defined at:
  5194 ;;		line 65 in file "uart.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;		None
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;		None
  5199 ;; Return value:  Size  Location     Type
  5200 ;;		None               void
  5201 ;; Registers used:
  5202 ;;		wreg, status,2, cstack
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5208 ;;      Params:         0       0       0       0
  5209 ;;      Locals:         0       0       0       0
  5210 ;;      Temps:          0       0       0       0
  5211 ;;      Totals:         0       0       0       0
  5212 ;;Total ram usage:        0 bytes
  5213 ;; Hardware stack levels used:    1
  5214 ;; Hardware stack levels required when called:    7
  5215 ;; This function calls:
  5216 ;;		_init_timer_1
  5217 ;; This function is called by:
  5218 ;;		_init_system
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           	psect	text18
  5223  0037EA                     __ptext18:
  5224                           	opt stack 0
  5225  0037EA                     _init_uart_logiciel:
  5226                           	opt stack 22
  5227                           
  5228                           ;uart.c: 67: uart_logiciel.transmission_en_cours = 0;
  5229                           
  5230                           ; BSR set to: 1
  5231                           ;incstack = 0
  5232  0037EA  0E00               	movlw	0
  5233  0037EC  6E43               	movwf	_uart_logiciel+11,c
  5234                           
  5235                           ;uart.c: 68: uart_logiciel.indice = 0;
  5236  0037EE  0E00               	movlw	0
  5237  0037F0  6E44               	movwf	_uart_logiciel+12,c
  5238                           
  5239                           ;uart.c: 69: init_timer_1();
  5240  0037F2  ECD4  F01B         	call	_init_timer_1	;wreg free
  5241  0037F6  0012               	return		;funcret
  5242  0037F8                     __end_of_init_uart_logiciel:
  5243                           	opt stack 0
  5244                           tblptru	equ	0xFF8
  5245                           tblptrh	equ	0xFF7
  5246                           tblptrl	equ	0xFF6
  5247                           tablat	equ	0xFF5
  5248                           postinc0	equ	0xFEE
  5249                           wreg	equ	0xFE8
  5250                           postinc1	equ	0xFE6
  5251                           postdec1	equ	0xFE5
  5252                           fsr1h	equ	0xFE2
  5253                           fsr1l	equ	0xFE1
  5254                           postinc2	equ	0xFDE
  5255                           postdec2	equ	0xFDD
  5256                           fsr2h	equ	0xFDA
  5257                           fsr2l	equ	0xFD9
  5258                           status	equ	0xFD8
  5259                           
  5260 ;; *************** function _init_timer_1 *****************
  5261 ;; Defined at:
  5262 ;;		line 57 in file "system.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;		None
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;		None
  5267 ;; Return value:  Size  Location     Type
  5268 ;;		None               void
  5269 ;; Registers used:
  5270 ;;		wreg, status,2
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5276 ;;      Params:         0       0       0       0
  5277 ;;      Locals:         0       0       0       0
  5278 ;;      Temps:          0       0       0       0
  5279 ;;      Totals:         0       0       0       0
  5280 ;;Total ram usage:        0 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    6
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_init_uart_logiciel
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text19
  5291  0037A8                     __ptext19:
  5292                           	opt stack 0
  5293  0037A8                     _init_timer_1:
  5294                           	opt stack 22
  5295                           
  5296                           ;system.c: 59: T1CONbits.RD16 = 1;
  5297                           
  5298                           ;incstack = 0
  5299  0037A8  8ECD               	bsf	4045,7,c	;volatile
  5300                           
  5301                           ;system.c: 60: T1CONbits.T1RUN = 0;
  5302  0037AA  9CCD               	bcf	4045,6,c	;volatile
  5303                           
  5304                           ;system.c: 61: T1CONbits.TMR1CS = 0;
  5305  0037AC  92CD               	bcf	4045,1,c	;volatile
  5306                           
  5307                           ;system.c: 62: T1CONbits.T1OSCEN = 1;
  5308  0037AE  86CD               	bsf	4045,3,c	;volatile
  5309                           
  5310                           ;system.c: 63: T1CONbits.T1CKPS0 = 0;
  5311  0037B0  98CD               	bcf	4045,4,c	;volatile
  5312                           
  5313                           ;system.c: 64: T1CONbits.T1CKPS1 = 0;
  5314  0037B2  9ACD               	bcf	4045,5,c	;volatile
  5315                           
  5316                           ;system.c: 66: TMR1 = 65519;
  5317  0037B4  0EFF               	movlw	255
  5318  0037B6  6ECF               	movwf	4047,c	;volatile
  5319  0037B8  0EEF               	movlw	239
  5320  0037BA  6ECE               	movwf	4046,c	;volatile
  5321                           
  5322                           ;system.c: 69: TMR1ON = 1;
  5323  0037BC  80CD               	bsf	4045,0,c	;volatile
  5324  0037BE  0012               	return		;funcret
  5325  0037C0                     __end_of_init_timer_1:
  5326                           	opt stack 0
  5327                           tblptru	equ	0xFF8
  5328                           tblptrh	equ	0xFF7
  5329                           tblptrl	equ	0xFF6
  5330                           tablat	equ	0xFF5
  5331                           postinc0	equ	0xFEE
  5332                           wreg	equ	0xFE8
  5333                           postinc1	equ	0xFE6
  5334                           postdec1	equ	0xFE5
  5335                           fsr1h	equ	0xFE2
  5336                           fsr1l	equ	0xFE1
  5337                           postinc2	equ	0xFDE
  5338                           postdec2	equ	0xFDD
  5339                           fsr2h	equ	0xFDA
  5340                           fsr2l	equ	0xFD9
  5341                           status	equ	0xFD8
  5342                           
  5343 ;; *************** function _init_timer_0 *****************
  5344 ;; Defined at:
  5345 ;;		line 45 in file "system.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;		None
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;		None
  5350 ;; Return value:  Size  Location     Type
  5351 ;;		None               void
  5352 ;; Registers used:
  5353 ;;		wreg, status,2
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5359 ;;      Params:         0       0       0       0
  5360 ;;      Locals:         0       0       0       0
  5361 ;;      Temps:          0       0       0       0
  5362 ;;      Totals:         0       0       0       0
  5363 ;;Total ram usage:        0 bytes
  5364 ;; Hardware stack levels used:    1
  5365 ;; Hardware stack levels required when called:    6
  5366 ;; This function calls:
  5367 ;;		Nothing
  5368 ;; This function is called by:
  5369 ;;		_init_system
  5370 ;; This function uses a non-reentrant model
  5371 ;;
  5372                           
  5373                           	psect	text20
  5374  0037C0                     __ptext20:
  5375                           	opt stack 0
  5376  0037C0                     _init_timer_0:
  5377                           	opt stack 23
  5378                           
  5379                           ;system.c: 47: T0CONbits.T016BIT = 1;
  5380                           
  5381                           ;incstack = 0
  5382  0037C0  8CD5               	bsf	4053,6,c	;volatile
  5383                           
  5384                           ;system.c: 48: T0CONbits.T0PS = 0b100;
  5385  0037C2  50D5               	movf	4053,w,c	;volatile
  5386  0037C4  0BF8               	andlw	-8
  5387  0037C6  0904               	iorlw	4
  5388  0037C8  6ED5               	movwf	4053,c	;volatile
  5389                           
  5390                           ;system.c: 49: T0CONbits.T0CS = 0;
  5391  0037CA  9AD5               	bcf	4053,5,c	;volatile
  5392                           
  5393                           ;system.c: 50: T0CONbits.PSA = 0;
  5394  0037CC  96D5               	bcf	4053,3,c	;volatile
  5395                           
  5396                           ;system.c: 52: TMR0L = 131;
  5397  0037CE  0E83               	movlw	131
  5398  0037D0  6ED6               	movwf	4054,c	;volatile
  5399                           
  5400                           ;system.c: 54: TMR0ON = 1;
  5401  0037D2  8ED5               	bsf	4053,7,c	;volatile
  5402  0037D4  0012               	return		;funcret
  5403  0037D6                     __end_of_init_timer_0:
  5404                           	opt stack 0
  5405                           tblptru	equ	0xFF8
  5406                           tblptrh	equ	0xFF7
  5407                           tblptrl	equ	0xFF6
  5408                           tablat	equ	0xFF5
  5409                           postinc0	equ	0xFEE
  5410                           wreg	equ	0xFE8
  5411                           postinc1	equ	0xFE6
  5412                           postdec1	equ	0xFE5
  5413                           fsr1h	equ	0xFE2
  5414                           fsr1l	equ	0xFE1
  5415                           postinc2	equ	0xFDE
  5416                           postdec2	equ	0xFDD
  5417                           fsr2h	equ	0xFDA
  5418                           fsr2l	equ	0xFD9
  5419                           status	equ	0xFD8
  5420                           
  5421 ;; *************** function _init_capteur *****************
  5422 ;; Defined at:
  5423 ;;		line 148 in file "moteur.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;		None
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;		None
  5428 ;; Return value:  Size  Location     Type
  5429 ;;		None               void
  5430 ;; Registers used:
  5431 ;;		wreg, status,2
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5437 ;;      Params:         0       0       0       0
  5438 ;;      Locals:         0       0       0       0
  5439 ;;      Temps:          0       0       0       0
  5440 ;;      Totals:         0       0       0       0
  5441 ;;Total ram usage:        0 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; Hardware stack levels required when called:    6
  5444 ;; This function calls:
  5445 ;;		Nothing
  5446 ;; This function is called by:
  5447 ;;		_init_system
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451                           	psect	text21
  5452  002BF2                     __ptext21:
  5453                           	opt stack 0
  5454  002BF2                     _init_capteur:
  5455                           	opt stack 23
  5456                           
  5457                           ;moteur.c: 150: capteur.angle[0] = 0.;
  5458                           
  5459                           ;incstack = 0
  5460  002BF2  0E00               	movlw	0
  5461  002BF4  0100               	movlb	0	; () banked
  5462  002BF6  6FDC               	movwf	(_capteur+3)& (0+255),b
  5463  002BF8  0E00               	movlw	0
  5464  002BFA  0100               	movlb	0	; () banked
  5465  002BFC  6FDD               	movwf	(_capteur+4)& (0+255),b
  5466  002BFE  0E00               	movlw	0
  5467  002C00  0100               	movlb	0	; () banked
  5468  002C02  6FDE               	movwf	(_capteur+5)& (0+255),b
  5469                           
  5470                           ;moteur.c: 151: capteur.angle[1] = 0.;
  5471  002C04  0E00               	movlw	0
  5472  002C06  0100               	movlb	0	; () banked
  5473  002C08  6FDF               	movwf	(_capteur+6)& (0+255),b
  5474  002C0A  0E00               	movlw	0
  5475  002C0C  0100               	movlb	0	; () banked
  5476  002C0E  6FE0               	movwf	(_capteur+7)& (0+255),b
  5477  002C10  0E00               	movlw	0
  5478  002C12  0100               	movlb	0	; () banked
  5479  002C14  6FE1               	movwf	(_capteur+8)& (0+255),b
  5480                           
  5481                           ;moteur.c: 152: capteur.angle[2] = 0.;
  5482  002C16  0E00               	movlw	0
  5483  002C18  0100               	movlb	0	; () banked
  5484  002C1A  6FE2               	movwf	(_capteur+9)& (0+255),b
  5485  002C1C  0E00               	movlw	0
  5486  002C1E  0100               	movlb	0	; () banked
  5487  002C20  6FE3               	movwf	(_capteur+10)& (0+255),b
  5488  002C22  0E00               	movlw	0
  5489  002C24  0100               	movlb	0	; () banked
  5490  002C26  6FE4               	movwf	(_capteur+11)& (0+255),b
  5491                           
  5492                           ;moteur.c: 153: capteur.ancien_angle[0] = 0.;
  5493  002C28  0E00               	movlw	0
  5494  002C2A  0100               	movlb	0	; () banked
  5495  002C2C  6FE5               	movwf	(_capteur+12)& (0+255),b
  5496  002C2E  0E00               	movlw	0
  5497  002C30  0100               	movlb	0	; () banked
  5498  002C32  6FE6               	movwf	(_capteur+13)& (0+255),b
  5499  002C34  0E00               	movlw	0
  5500  002C36  0100               	movlb	0	; () banked
  5501  002C38  6FE7               	movwf	(_capteur+14)& (0+255),b
  5502                           
  5503                           ;moteur.c: 154: capteur.ancien_angle[1] = 0.;
  5504  002C3A  0E00               	movlw	0
  5505  002C3C  0100               	movlb	0	; () banked
  5506  002C3E  6FE8               	movwf	(_capteur+15)& (0+255),b
  5507  002C40  0E00               	movlw	0
  5508  002C42  0100               	movlb	0	; () banked
  5509  002C44  6FE9               	movwf	(_capteur+16)& (0+255),b
  5510  002C46  0E00               	movlw	0
  5511  002C48  0100               	movlb	0	; () banked
  5512  002C4A  6FEA               	movwf	(_capteur+17)& (0+255),b
  5513                           
  5514                           ;moteur.c: 155: capteur.ancien_angle[2] = 0.;
  5515  002C4C  0E00               	movlw	0
  5516  002C4E  0100               	movlb	0	; () banked
  5517  002C50  6FEB               	movwf	(_capteur+18)& (0+255),b
  5518  002C52  0E00               	movlw	0
  5519  002C54  0100               	movlb	0	; () banked
  5520  002C56  6FEC               	movwf	(_capteur+19)& (0+255),b
  5521  002C58  0E00               	movlw	0
  5522  002C5A  0100               	movlb	0	; () banked
  5523  002C5C  6FED               	movwf	(_capteur+20)& (0+255),b
  5524                           
  5525                           ;moteur.c: 156: capteur.flag_capteur = 0;
  5526  002C5E  0E00               	movlw	0
  5527  002C60  0100               	movlb	0	; () banked
  5528  002C62  6FDB               	movwf	(_capteur+2)& (0+255),b
  5529                           
  5530                           ;moteur.c: 157: capteur.indice = 0;
  5531  002C64  0E00               	movlw	0
  5532  002C66  0100               	movlb	0	; () banked
  5533  002C68  6FF4               	movwf	(_capteur+27)& (0+255),b
  5534                           
  5535                           ;moteur.c: 158: capteur.position[0] = 0;
  5536  002C6A  0E00               	movlw	0
  5537  002C6C  0100               	movlb	0	; () banked
  5538  002C6E  6FEF               	movwf	(_capteur+22)& (0+255),b
  5539  002C70  0E00               	movlw	0
  5540  002C72  6FEE               	movwf	(_capteur+21)& (0+255),b
  5541                           
  5542                           ;moteur.c: 159: capteur.position[1] = 0;
  5543  002C74  0E00               	movlw	0
  5544  002C76  0100               	movlb	0	; () banked
  5545  002C78  6FF1               	movwf	(_capteur+24)& (0+255),b
  5546  002C7A  0E00               	movlw	0
  5547  002C7C  6FF0               	movwf	(_capteur+23)& (0+255),b
  5548                           
  5549                           ;moteur.c: 160: capteur.position[2] = 0;
  5550  002C7E  0E00               	movlw	0
  5551  002C80  0100               	movlb	0	; () banked
  5552  002C82  6FF3               	movwf	(_capteur+26)& (0+255),b
  5553  002C84  0E00               	movlw	0
  5554  002C86  6FF2               	movwf	(_capteur+25)& (0+255),b
  5555                           
  5556                           ;moteur.c: 161: capteur.synchro_debut_tour = 0;
  5557  002C88  0E00               	movlw	0
  5558  002C8A  0100               	movlb	0	; () banked
  5559  002C8C  6FDA               	movwf	(_capteur+1)& (0+255),b
  5560                           
  5561                           ;moteur.c: 162: capteur.tour_en_cours = 0;
  5562  002C8E  0E00               	movlw	0
  5563  002C90  0100               	movlb	0	; () banked
  5564  002C92  6FD9               	movwf	_capteur& (0+255),b
  5565                           
  5566                           ;moteur.c: 163: capteur.id_balise_mere = 0;
  5567  002C94  0E00               	movlw	0
  5568  002C96  0100               	movlb	0	; () banked
  5569  002C98  6FF5               	movwf	(_capteur+28)& (0+255),b
  5570                           
  5571                           ; BSR set to: 0
  5572  002C9A  0012               	return		;funcret
  5573  002C9C                     __end_of_init_capteur:
  5574                           	opt stack 0
  5575                           tblptru	equ	0xFF8
  5576                           tblptrh	equ	0xFF7
  5577                           tblptrl	equ	0xFF6
  5578                           tablat	equ	0xFF5
  5579                           postinc0	equ	0xFEE
  5580                           wreg	equ	0xFE8
  5581                           postinc1	equ	0xFE6
  5582                           postdec1	equ	0xFE5
  5583                           fsr1h	equ	0xFE2
  5584                           fsr1l	equ	0xFE1
  5585                           postinc2	equ	0xFDE
  5586                           postdec2	equ	0xFDD
  5587                           fsr2h	equ	0xFDA
  5588                           fsr2l	equ	0xFD9
  5589                           status	equ	0xFD8
  5590                           
  5591 ;; *************** function _config_uart *****************
  5592 ;; Defined at:
  5593 ;;		line 31 in file "uart.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;		None
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;		None
  5598 ;; Return value:  Size  Location     Type
  5599 ;;		None               void
  5600 ;; Registers used:
  5601 ;;		wreg, status,2
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5607 ;;      Params:         0       0       0       0
  5608 ;;      Locals:         0       0       0       0
  5609 ;;      Temps:          0       0       0       0
  5610 ;;      Totals:         0       0       0       0
  5611 ;;Total ram usage:        0 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; Hardware stack levels required when called:    6
  5614 ;; This function calls:
  5615 ;;		Nothing
  5616 ;; This function is called by:
  5617 ;;		_init_system
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           	psect	text22
  5622  00378C                     __ptext22:
  5623                           	opt stack 0
  5624  00378C                     _config_uart:
  5625                           	opt stack 23
  5626                           
  5627                           ;uart.c: 39: TXSTAbits.TXEN = 1;
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;incstack = 0
  5631  00378C  8AAC               	bsf	4012,5,c	;volatile
  5632                           
  5633                           ;uart.c: 40: TXSTAbits.TX9 = 0;
  5634  00378E  9CAC               	bcf	4012,6,c	;volatile
  5635                           
  5636                           ;uart.c: 41: TXSTAbits.SYNC = 0;
  5637  003790  98AC               	bcf	4012,4,c	;volatile
  5638                           
  5639                           ;uart.c: 42: TXSTAbits.SENDB = 0;
  5640  003792  96AC               	bcf	4012,3,c	;volatile
  5641                           
  5642                           ;uart.c: 43: TXSTAbits.BRGH = 1;
  5643  003794  84AC               	bsf	4012,2,c	;volatile
  5644                           
  5645                           ;uart.c: 44: TXSTAbits.TX9 = 0;
  5646  003796  9CAC               	bcf	4012,6,c	;volatile
  5647                           
  5648                           ;uart.c: 47: BAUDCONbits.BRG16 = 1;
  5649  003798  86AA               	bsf	4010,3,c	;volatile
  5650                           
  5651                           ;uart.c: 49: BAUDCONbits.ABDEN = 0;
  5652  00379A  90AA               	bcf	4010,0,c	;volatile
  5653                           
  5654                           ;uart.c: 52: SPBRG = 86;
  5655  00379C  0E56               	movlw	86
  5656  00379E  6EAF               	movwf	4015,c	;volatile
  5657                           
  5658                           ;uart.c: 59: RCSTAbits.SPEN = 1;
  5659  0037A0  8EAB               	bsf	4011,7,c	;volatile
  5660                           
  5661                           ;uart.c: 60: RCSTAbits.RX9 = 0;
  5662  0037A2  9CAB               	bcf	4011,6,c	;volatile
  5663                           
  5664                           ;uart.c: 61: RCSTAbits.CREN = 1;
  5665  0037A4  88AB               	bsf	4011,4,c	;volatile
  5666  0037A6  0012               	return		;funcret
  5667  0037A8                     __end_of_config_uart:
  5668                           	opt stack 0
  5669                           tblptru	equ	0xFF8
  5670                           tblptrh	equ	0xFF7
  5671                           tblptrl	equ	0xFF6
  5672                           tablat	equ	0xFF5
  5673                           postinc0	equ	0xFEE
  5674                           wreg	equ	0xFE8
  5675                           postinc1	equ	0xFE6
  5676                           postdec1	equ	0xFE5
  5677                           fsr1h	equ	0xFE2
  5678                           fsr1l	equ	0xFE1
  5679                           postinc2	equ	0xFDE
  5680                           postdec2	equ	0xFDD
  5681                           fsr2h	equ	0xFDA
  5682                           fsr2l	equ	0xFD9
  5683                           status	equ	0xFD8
  5684                           
  5685 ;; *************** function _config_pwm *****************
  5686 ;; Defined at:
  5687 ;;		line 27 in file "moteur.c"
  5688 ;; Parameters:    Size  Location     Type
  5689 ;;		None
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;		None
  5692 ;; Return value:  Size  Location     Type
  5693 ;;		None               void
  5694 ;; Registers used:
  5695 ;;		wreg, status,2
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5701 ;;      Params:         0       0       0       0
  5702 ;;      Locals:         0       0       0       0
  5703 ;;      Temps:          0       0       0       0
  5704 ;;      Totals:         0       0       0       0
  5705 ;;Total ram usage:        0 bytes
  5706 ;; Hardware stack levels used:    1
  5707 ;; Hardware stack levels required when called:    6
  5708 ;; This function calls:
  5709 ;;		Nothing
  5710 ;; This function is called by:
  5711 ;;		_init_system
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           	psect	text23
  5716  0034A0                     __ptext23:
  5717                           	opt stack 0
  5718  0034A0                     _config_pwm:
  5719                           	opt stack 23
  5720                           
  5721                           ;moteur.c: 29: PTCON0bits.PTOPS = 0;
  5722                           
  5723                           ;incstack = 0
  5724  0034A0  987F               	bcf	3967,4,c	;volatile
  5725  0034A2  9A7F               	bcf	3967,5,c	;volatile
  5726  0034A4  9C7F               	bcf	3967,6,c	;volatile
  5727  0034A6  9E7F               	bcf	3967,7,c	;volatile
  5728                           
  5729                           ;moteur.c: 30: PTCON0bits.PTCKPS = 0;
  5730  0034A8  0EF3               	movlw	-13
  5731  0034AA  167F               	andwf	3967,f,c	;volatile
  5732                           
  5733                           ;moteur.c: 31: PTCON0bits.PTMOD = 0;
  5734  0034AC  0EFC               	movlw	-4
  5735  0034AE  167F               	andwf	3967,f,c	;volatile
  5736                           
  5737                           ;moteur.c: 33: PTCON1bits.PTEN = 1;
  5738  0034B0  8E7E               	bsf	3966,7,c	;volatile
  5739                           
  5740                           ;moteur.c: 35: PWMCON0bits.PMOD0 = 1;
  5741  0034B2  806F               	bsf	3951,0,c	;volatile
  5742                           
  5743                           ;moteur.c: 36: PWMCON0bits.PWMEN = 0b001;
  5744  0034B4  506F               	movf	3951,w,c	;volatile
  5745  0034B6  0B8F               	andlw	-113
  5746  0034B8  0910               	iorlw	16
  5747  0034BA  6E6F               	movwf	3951,c	;volatile
  5748                           
  5749                           ;moteur.c: 38: PWMCON1bits.UDIS = 0;
  5750  0034BC  926E               	bcf	3950,1,c	;volatile
  5751                           
  5752                           ;moteur.c: 40: PTPERL = 166;
  5753  0034BE  0EA6               	movlw	166
  5754  0034C0  6E7B               	movwf	3963,c	;volatile
  5755                           
  5756                           ;moteur.c: 41: PTPERH = 0;
  5757  0034C2  0E00               	movlw	0
  5758  0034C4  6E7A               	movwf	3962,c	;volatile
  5759                           
  5760                           ;moteur.c: 44: PDC0L = 0;
  5761  0034C6  0E00               	movlw	0
  5762  0034C8  6E79               	movwf	3961,c	;volatile
  5763                           
  5764                           ;moteur.c: 45: PDC0H = 0;
  5765  0034CA  0E00               	movlw	0
  5766  0034CC  6E78               	movwf	3960,c	;volatile
  5767                           
  5768                           ;moteur.c: 46: PDC1L = 0;
  5769  0034CE  0E00               	movlw	0
  5770  0034D0  6E77               	movwf	3959,c	;volatile
  5771                           
  5772                           ;moteur.c: 47: PDC1H = 0;
  5773  0034D2  0E00               	movlw	0
  5774  0034D4  6E76               	movwf	3958,c	;volatile
  5775                           
  5776                           ;moteur.c: 48: PDC2L = 0;
  5777  0034D6  0E00               	movlw	0
  5778  0034D8  6E75               	movwf	3957,c	;volatile
  5779                           
  5780                           ;moteur.c: 49: PDC2H = 0;
  5781  0034DA  0E00               	movlw	0
  5782  0034DC  6E74               	movwf	3956,c	;volatile
  5783                           
  5784                           ;moteur.c: 50: PDC3L = 0;
  5785  0034DE  0E00               	movlw	0
  5786  0034E0  6E73               	movwf	3955,c	;volatile
  5787                           
  5788                           ;moteur.c: 51: PDC3H = 0;
  5789  0034E2  0E00               	movlw	0
  5790  0034E4  6E72               	movwf	3954,c	;volatile
  5791  0034E6  0012               	return		;funcret
  5792  0034E8                     __end_of_config_pwm:
  5793                           	opt stack 0
  5794                           tblptru	equ	0xFF8
  5795                           tblptrh	equ	0xFF7
  5796                           tblptrl	equ	0xFF6
  5797                           tablat	equ	0xFF5
  5798                           postinc0	equ	0xFEE
  5799                           wreg	equ	0xFE8
  5800                           postinc1	equ	0xFE6
  5801                           postdec1	equ	0xFE5
  5802                           fsr1h	equ	0xFE2
  5803                           fsr1l	equ	0xFE1
  5804                           postinc2	equ	0xFDE
  5805                           postdec2	equ	0xFDD
  5806                           fsr2h	equ	0xFDA
  5807                           fsr2l	equ	0xFD9
  5808                           status	equ	0xFD8
  5809                           
  5810 ;; *************** function _config_QEI *****************
  5811 ;; Defined at:
  5812 ;;		line 82 in file "moteur.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;		None
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;		None
  5817 ;; Return value:  Size  Location     Type
  5818 ;;		None               void
  5819 ;; Registers used:
  5820 ;;		wreg, status,2
  5821 ;; Tracked objects:
  5822 ;;		On entry : 0/0
  5823 ;;		On exit  : 0/0
  5824 ;;		Unchanged: 0/0
  5825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5826 ;;      Params:         0       0       0       0
  5827 ;;      Locals:         0       0       0       0
  5828 ;;      Temps:          0       0       0       0
  5829 ;;      Totals:         0       0       0       0
  5830 ;;Total ram usage:        0 bytes
  5831 ;; Hardware stack levels used:    1
  5832 ;; Hardware stack levels required when called:    6
  5833 ;; This function calls:
  5834 ;;		Nothing
  5835 ;; This function is called by:
  5836 ;;		_init_system
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840                           	psect	text24
  5841  003310                     __ptext24:
  5842                           	opt stack 0
  5843  003310                     _config_QEI:
  5844                           	opt stack 23
  5845                           
  5846                           ;moteur.c: 84: CAP1CONbits.CAP1REN = 1;
  5847                           
  5848                           ;incstack = 0
  5849  003310  8C63               	bsf	3939,6,c	;volatile
  5850                           
  5851                           ;moteur.c: 85: ANSEL0 = 0;
  5852  003312  0E00               	movlw	0
  5853  003314  6EB8               	movwf	4024,c	;volatile
  5854                           
  5855                           ;moteur.c: 88: QEICONbits.VELM = 1;
  5856  003316  8EB6               	bsf	4022,7,c	;volatile
  5857                           
  5858                           ;moteur.c: 89: QEICONbits.QERR = 0;
  5859  003318  9CB6               	bcf	4022,6,c	;volatile
  5860                           
  5861                           ;moteur.c: 90: QEICONbits.QEIM = 0b110;
  5862  00331A  50B6               	movf	4022,w,c	;volatile
  5863  00331C  0BE3               	andlw	-29
  5864  00331E  0918               	iorlw	24
  5865  003320  6EB6               	movwf	4022,c	;volatile
  5866                           
  5867                           ;moteur.c: 91: QEICONbits.PDEC = 0b01;
  5868  003322  50B6               	movf	4022,w,c	;volatile
  5869  003324  0BFC               	andlw	-4
  5870  003326  0901               	iorlw	1
  5871  003328  6EB6               	movwf	4022,c	;volatile
  5872                           
  5873                           ;moteur.c: 96: DFLTCONbits.FLT3EN = 1;
  5874  00332A  8A60               	bsf	3936,5,c	;volatile
  5875                           
  5876                           ;moteur.c: 97: DFLTCONbits.FLT2EN = 1;
  5877  00332C  8860               	bsf	3936,4,c	;volatile
  5878                           
  5879                           ;moteur.c: 98: DFLTCONbits.FLTCK = 0b010;
  5880  00332E  5060               	movf	3936,w,c	;volatile
  5881  003330  0BF8               	andlw	-8
  5882  003332  0902               	iorlw	2
  5883  003334  6E60               	movwf	3936,c	;volatile
  5884                           
  5885                           ;moteur.c: 100: POSCNTH = 0;
  5886  003336  0E00               	movlw	0
  5887  003338  6E67               	movwf	3943,c	;volatile
  5888                           
  5889                           ;moteur.c: 101: POSCNTL = 0;
  5890  00333A  0E00               	movlw	0
  5891  00333C  6E66               	movwf	3942,c	;volatile
  5892                           
  5893                           ;moteur.c: 103: MAXCNTH = (uint8_t) (((4 * 2000) - 1) / 256);
  5894  00333E  0E1F               	movlw	31
  5895  003340  6E65               	movwf	3941,c	;volatile
  5896                           
  5897                           ;moteur.c: 104: MAXCNTL = (uint8_t) (((4 * 2000) - 1) % 256);
  5898  003342  0E3F               	movlw	63
  5899  003344  6E64               	movwf	3940,c	;volatile
  5900                           
  5901                           ;moteur.c: 106: position.ancien = 0;
  5902  003346  0E00               	movlw	0
  5903  003348  6E27               	movwf	_position+1,c
  5904  00334A  0E00               	movlw	0
  5905  00334C  6E26               	movwf	_position,c
  5906                           
  5907                           ;moteur.c: 107: position.ecart = 0;
  5908  00334E  0E00               	movlw	0
  5909  003350  6E2A               	movwf	_position+4,c
  5910  003352  0E00               	movlw	0
  5911  003354  6E2B               	movwf	_position+5,c
  5912  003356  0E00               	movlw	0
  5913  003358  6E2C               	movwf	_position+6,c
  5914  00335A  0E00               	movlw	0
  5915  00335C  6E2D               	movwf	_position+7,c
  5916                           
  5917                           ;moteur.c: 108: position.nouvelle = 0;
  5918  00335E  0E00               	movlw	0
  5919  003360  6E29               	movwf	_position+3,c
  5920  003362  0E00               	movlw	0
  5921  003364  6E28               	movwf	_position+2,c
  5922  003366  0012               	return		;funcret
  5923  003368                     __end_of_config_QEI:
  5924                           	opt stack 0
  5925                           tblptru	equ	0xFF8
  5926                           tblptrh	equ	0xFF7
  5927                           tblptrl	equ	0xFF6
  5928                           tablat	equ	0xFF5
  5929                           postinc0	equ	0xFEE
  5930                           wreg	equ	0xFE8
  5931                           postinc1	equ	0xFE6
  5932                           postdec1	equ	0xFE5
  5933                           fsr1h	equ	0xFE2
  5934                           fsr1l	equ	0xFE1
  5935                           postinc2	equ	0xFDE
  5936                           postdec2	equ	0xFDD
  5937                           fsr2h	equ	0xFDA
  5938                           fsr2l	equ	0xFD9
  5939                           status	equ	0xFD8
  5940                           
  5941 ;; *************** function _ConfigPorts *****************
  5942 ;; Defined at:
  5943 ;;		line 91 in file "system.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;		None
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;		None
  5948 ;; Return value:  Size  Location     Type
  5949 ;;		None               void
  5950 ;; Registers used:
  5951 ;;		None
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5957 ;;      Params:         0       0       0       0
  5958 ;;      Locals:         0       0       0       0
  5959 ;;      Temps:          0       0       0       0
  5960 ;;      Totals:         0       0       0       0
  5961 ;;Total ram usage:        0 bytes
  5962 ;; Hardware stack levels used:    1
  5963 ;; Hardware stack levels required when called:    6
  5964 ;; This function calls:
  5965 ;;		Nothing
  5966 ;; This function is called by:
  5967 ;;		_init_system
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text25
  5972  002E5E                     __ptext25:
  5973                           	opt stack 0
  5974  002E5E                     _ConfigPorts:
  5975                           	opt stack 23
  5976                           
  5977                           ;system.c: 94: TRISAbits.RA0 = 0;
  5978                           
  5979                           ;incstack = 0
  5980  002E5E  9092               	bcf	3986,0,c	;volatile
  5981                           
  5982                           ;system.c: 95: TRISAbits.RA1 = 0;
  5983  002E60  9292               	bcf	3986,1,c	;volatile
  5984                           
  5985                           ;system.c: 96: TRISAbits.RA2 = 0;
  5986  002E62  9492               	bcf	3986,2,c	;volatile
  5987                           
  5988                           ;system.c: 97: TRISAbits.RA3 = 1;
  5989  002E64  8692               	bsf	3986,3,c	;volatile
  5990                           
  5991                           ;system.c: 98: TRISAbits.RA4 = 1;
  5992  002E66  8892               	bsf	3986,4,c	;volatile
  5993                           
  5994                           ;system.c: 99: TRISAbits.RA5 = 0;
  5995  002E68  9A92               	bcf	3986,5,c	;volatile
  5996                           
  5997                           ;system.c: 100: TRISAbits.RA6 = 1;
  5998  002E6A  8C92               	bsf	3986,6,c	;volatile
  5999                           
  6000                           ;system.c: 101: TRISAbits.RA7 = 1;
  6001  002E6C  8E92               	bsf	3986,7,c	;volatile
  6002                           
  6003                           ;system.c: 104: TRISBbits.RB0 = 0;
  6004  002E6E  9093               	bcf	3987,0,c	;volatile
  6005                           
  6006                           ;system.c: 105: TRISBbits.RB1 = 0;
  6007  002E70  9293               	bcf	3987,1,c	;volatile
  6008                           
  6009                           ;system.c: 106: TRISBbits.RB2 = 0;
  6010  002E72  9493               	bcf	3987,2,c	;volatile
  6011                           
  6012                           ;system.c: 107: TRISBbits.RB3 = 0;
  6013  002E74  9693               	bcf	3987,3,c	;volatile
  6014                           
  6015                           ;system.c: 108: TRISBbits.RB4 = 0;
  6016  002E76  9893               	bcf	3987,4,c	;volatile
  6017                           
  6018                           ;system.c: 109: TRISBbits.RB5 = 0;
  6019  002E78  9A93               	bcf	3987,5,c	;volatile
  6020                           
  6021                           ;system.c: 110: TRISBbits.RB6 = 0;
  6022  002E7A  9C93               	bcf	3987,6,c	;volatile
  6023                           
  6024                           ;system.c: 111: TRISBbits.RB7 = 0;
  6025  002E7C  9E93               	bcf	3987,7,c	;volatile
  6026                           
  6027                           ;system.c: 114: TRISCbits.RC0 = 0;
  6028  002E7E  9094               	bcf	3988,0,c	;volatile
  6029                           
  6030                           ;system.c: 115: TRISCbits.RC1 = 0;
  6031  002E80  9294               	bcf	3988,1,c	;volatile
  6032                           
  6033                           ;system.c: 116: TRISCbits.RC2 = 0;
  6034  002E82  9494               	bcf	3988,2,c	;volatile
  6035                           
  6036                           ;system.c: 117: TRISCbits.RC3 = 1;
  6037  002E84  8694               	bsf	3988,3,c	;volatile
  6038                           
  6039                           ;system.c: 118: TRISCbits.RC4 = 0;
  6040  002E86  9894               	bcf	3988,4,c	;volatile
  6041                           
  6042                           ;system.c: 119: TRISCbits.RC5 = 0;
  6043  002E88  9A94               	bcf	3988,5,c	;volatile
  6044                           
  6045                           ;system.c: 120: TRISCbits.RC6 = 1;
  6046  002E8A  8C94               	bsf	3988,6,c	;volatile
  6047                           
  6048                           ;system.c: 121: TRISCbits.RC7 = 1;
  6049  002E8C  8E94               	bsf	3988,7,c	;volatile
  6050                           
  6051                           ;system.c: 124: TRISDbits.RD0 = 0;
  6052  002E8E  9095               	bcf	3989,0,c	;volatile
  6053                           
  6054                           ;system.c: 125: TRISDbits.RD1 = 0;
  6055  002E90  9295               	bcf	3989,1,c	;volatile
  6056                           
  6057                           ;system.c: 126: TRISDbits.RD2 = 1;
  6058  002E92  8495               	bsf	3989,2,c	;volatile
  6059                           
  6060                           ;system.c: 127: TRISDbits.RD3 = 0;
  6061  002E94  9695               	bcf	3989,3,c	;volatile
  6062                           
  6063                           ;system.c: 128: TRISDbits.RD4 = 0;
  6064  002E96  9895               	bcf	3989,4,c	;volatile
  6065                           
  6066                           ;system.c: 129: TRISDbits.RD5 = 0;
  6067  002E98  9A95               	bcf	3989,5,c	;volatile
  6068                           
  6069                           ;system.c: 130: TRISDbits.RD6 = 0;
  6070  002E9A  9C95               	bcf	3989,6,c	;volatile
  6071                           
  6072                           ;system.c: 131: TRISDbits.RD7 = 0;
  6073  002E9C  9E95               	bcf	3989,7,c	;volatile
  6074                           
  6075                           ;system.c: 134: TRISEbits.RE0 = 0;
  6076  002E9E  9096               	bcf	3990,0,c	;volatile
  6077                           
  6078                           ;system.c: 135: TRISEbits.RE1 = 0;
  6079  002EA0  9296               	bcf	3990,1,c	;volatile
  6080                           
  6081                           ;system.c: 136: TRISEbits.RE2 = 0;
  6082  002EA2  9496               	bcf	3990,2,c	;volatile
  6083                           
  6084                           ;system.c: 144: LATA0 = 0;
  6085  002EA4  9089               	bcf	3977,0,c	;volatile
  6086                           
  6087                           ;system.c: 145: LATA1 = 0;
  6088  002EA6  9289               	bcf	3977,1,c	;volatile
  6089                           
  6090                           ;system.c: 146: LATA2 = 0;
  6091  002EA8  9489               	bcf	3977,2,c	;volatile
  6092                           
  6093                           ;system.c: 147: LATA3 = 0;
  6094  002EAA  9689               	bcf	3977,3,c	;volatile
  6095                           
  6096                           ;system.c: 148: LATA4 = 0;
  6097  002EAC  9889               	bcf	3977,4,c	;volatile
  6098                           
  6099                           ;system.c: 149: LATA5 = 0;
  6100  002EAE  9A89               	bcf	3977,5,c	;volatile
  6101                           
  6102                           ;system.c: 150: LATA6 = 0;
  6103  002EB0  9C89               	bcf	3977,6,c	;volatile
  6104                           
  6105                           ;system.c: 151: LATA7 = 0;
  6106  002EB2  9E89               	bcf	3977,7,c	;volatile
  6107                           
  6108                           ;system.c: 154: LATB0 = 0;
  6109  002EB4  908A               	bcf	3978,0,c	;volatile
  6110                           
  6111                           ;system.c: 155: LATB1 = 0;
  6112  002EB6  928A               	bcf	3978,1,c	;volatile
  6113                           
  6114                           ;system.c: 156: LATB2 = 0;
  6115  002EB8  948A               	bcf	3978,2,c	;volatile
  6116                           
  6117                           ;system.c: 157: LATB3 = 0;
  6118  002EBA  968A               	bcf	3978,3,c	;volatile
  6119                           
  6120                           ;system.c: 158: LATB4 = 0;
  6121  002EBC  988A               	bcf	3978,4,c	;volatile
  6122                           
  6123                           ;system.c: 159: LATB5 = 0;
  6124  002EBE  9A8A               	bcf	3978,5,c	;volatile
  6125                           
  6126                           ;system.c: 160: LATB6 = 0;
  6127  002EC0  9C8A               	bcf	3978,6,c	;volatile
  6128                           
  6129                           ;system.c: 161: LATB7 = 0;
  6130  002EC2  9E8A               	bcf	3978,7,c	;volatile
  6131                           
  6132                           ;system.c: 164: LATC0 = 0;
  6133  002EC4  908B               	bcf	3979,0,c	;volatile
  6134                           
  6135                           ;system.c: 165: LATC1 = 0;
  6136  002EC6  928B               	bcf	3979,1,c	;volatile
  6137                           
  6138                           ;system.c: 166: LATC2 = 0;
  6139  002EC8  948B               	bcf	3979,2,c	;volatile
  6140                           
  6141                           ;system.c: 167: LATC3 = 0;
  6142  002ECA  968B               	bcf	3979,3,c	;volatile
  6143                           
  6144                           ;system.c: 168: LATC4 = 0;
  6145  002ECC  988B               	bcf	3979,4,c	;volatile
  6146                           
  6147                           ;system.c: 169: LATC5 = 0;
  6148  002ECE  9A8B               	bcf	3979,5,c	;volatile
  6149                           
  6150                           ;system.c: 170: LATC6 = 0;
  6151  002ED0  9C8B               	bcf	3979,6,c	;volatile
  6152                           
  6153                           ;system.c: 171: LATC7 = 0;
  6154  002ED2  9E8B               	bcf	3979,7,c	;volatile
  6155                           
  6156                           ;system.c: 174: LATD0 = 0;
  6157  002ED4  908C               	bcf	3980,0,c	;volatile
  6158                           
  6159                           ;system.c: 175: LATD1 = 0;
  6160  002ED6  928C               	bcf	3980,1,c	;volatile
  6161                           
  6162                           ;system.c: 176: LATD2 = 0;
  6163  002ED8  948C               	bcf	3980,2,c	;volatile
  6164                           
  6165                           ;system.c: 177: LATD3 = 0;
  6166  002EDA  968C               	bcf	3980,3,c	;volatile
  6167                           
  6168                           ;system.c: 178: LATD4 = 0;
  6169  002EDC  988C               	bcf	3980,4,c	;volatile
  6170                           
  6171                           ;system.c: 179: LATD5 = 0;
  6172  002EDE  9A8C               	bcf	3980,5,c	;volatile
  6173                           
  6174                           ;system.c: 180: LATD6 = 0;
  6175  002EE0  9C8C               	bcf	3980,6,c	;volatile
  6176                           
  6177                           ;system.c: 181: LATD7 = 0;
  6178  002EE2  9E8C               	bcf	3980,7,c	;volatile
  6179                           
  6180                           ;system.c: 184: LATE0 = 0;
  6181  002EE4  908D               	bcf	3981,0,c	;volatile
  6182                           
  6183                           ;system.c: 185: LATE1 = 0;
  6184  002EE6  928D               	bcf	3981,1,c	;volatile
  6185                           
  6186                           ;system.c: 186: LATE2 = 0;
  6187  002EE8  948D               	bcf	3981,2,c	;volatile
  6188  002EEA  0012               	return		;funcret
  6189  002EEC                     __end_of_ConfigPorts:
  6190                           	opt stack 0
  6191                           tblptru	equ	0xFF8
  6192                           tblptrh	equ	0xFF7
  6193                           tblptrl	equ	0xFF6
  6194                           tablat	equ	0xFF5
  6195                           postinc0	equ	0xFEE
  6196                           wreg	equ	0xFE8
  6197                           postinc1	equ	0xFE6
  6198                           postdec1	equ	0xFE5
  6199                           fsr1h	equ	0xFE2
  6200                           fsr1l	equ	0xFE1
  6201                           postinc2	equ	0xFDE
  6202                           postdec2	equ	0xFDD
  6203                           fsr2h	equ	0xFDA
  6204                           fsr2l	equ	0xFD9
  6205                           status	equ	0xFD8
  6206                           
  6207 ;; *************** function _ConfigInterrupt *****************
  6208 ;; Defined at:
  6209 ;;		line 194 in file "system.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;		None
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;		None
  6214 ;; Return value:  Size  Location     Type
  6215 ;;		None               void
  6216 ;; Registers used:
  6217 ;;		None
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/0
  6220 ;;		On exit  : 0/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6223 ;;      Params:         0       0       0       0
  6224 ;;      Locals:         0       0       0       0
  6225 ;;      Temps:          0       0       0       0
  6226 ;;      Totals:         0       0       0       0
  6227 ;;Total ram usage:        0 bytes
  6228 ;; Hardware stack levels used:    1
  6229 ;; Hardware stack levels required when called:    6
  6230 ;; This function calls:
  6231 ;;		Nothing
  6232 ;; This function is called by:
  6233 ;;		_init_system
  6234 ;; This function uses a non-reentrant model
  6235 ;;
  6236                           
  6237                           	psect	text26
  6238  002EEC                     __ptext26:
  6239                           	opt stack 0
  6240  002EEC                     _ConfigInterrupt:
  6241                           	opt stack 23
  6242                           
  6243                           ;system.c: 197: INTCONbits.GIEH = 1;
  6244                           
  6245                           ;incstack = 0
  6246  002EEC  8EF2               	bsf	intcon,7,c	;volatile
  6247                           
  6248                           ;system.c: 198: INTCONbits.GIEL = 1;
  6249  002EEE  8CF2               	bsf	intcon,6,c	;volatile
  6250                           
  6251                           ;system.c: 199: INTCONbits.TMR0IE = 0b0;
  6252  002EF0  9AF2               	bcf	intcon,5,c	;volatile
  6253                           
  6254                           ;system.c: 200: INTCONbits.INT0IE = 0b1;
  6255  002EF2  88F2               	bsf	intcon,4,c	;volatile
  6256                           
  6257                           ;system.c: 201: INTCONbits.RBIE = 0;
  6258  002EF4  96F2               	bcf	intcon,3,c	;volatile
  6259                           
  6260                           ;system.c: 202: INTCONbits.TMR0IF = 0;
  6261  002EF6  94F2               	bcf	intcon,2,c	;volatile
  6262                           
  6263                           ;system.c: 203: INTCONbits.INT0IF = 0;
  6264  002EF8  92F2               	bcf	intcon,1,c	;volatile
  6265                           
  6266                           ;system.c: 204: INTCONbits.RBIF = 0;
  6267  002EFA  90F2               	bcf	intcon,0,c	;volatile
  6268                           
  6269                           ;system.c: 208: INTCON2bits.INTEDG0 = 1;
  6270  002EFC  8CF1               	bsf	intcon2,6,c	;volatile
  6271                           
  6272                           ;system.c: 209: INTCON2bits.INTEDG1 = 1;
  6273  002EFE  8AF1               	bsf	intcon2,5,c	;volatile
  6274                           
  6275                           ;system.c: 210: INTCON2bits.INTEDG2 = 1;
  6276  002F00  88F1               	bsf	intcon2,4,c	;volatile
  6277                           
  6278                           ;system.c: 211: INTCON2bits.TMR0IP = 0b1;
  6279  002F02  84F1               	bsf	intcon2,2,c	;volatile
  6280                           
  6281                           ;system.c: 214: INTCON3bits.INT2IP = 0b0 ;
  6282  002F04  9EF0               	bcf	intcon3,7,c	;volatile
  6283                           
  6284                           ;system.c: 215: INTCON3bits.INT1IP = 0b0;
  6285  002F06  9CF0               	bcf	intcon3,6,c	;volatile
  6286                           
  6287                           ;system.c: 216: INTCON3bits.INT2IE = 0b0;
  6288  002F08  98F0               	bcf	intcon3,4,c	;volatile
  6289                           
  6290                           ;system.c: 217: INTCON3bits.INT2IP = 0b0;
  6291  002F0A  9EF0               	bcf	intcon3,7,c	;volatile
  6292                           
  6293                           ;system.c: 218: INTCON3bits.INT2IF = 0;
  6294  002F0C  92F0               	bcf	intcon3,1,c	;volatile
  6295                           
  6296                           ;system.c: 219: INTCON3bits.INT1IF = 0;
  6297  002F0E  90F0               	bcf	intcon3,0,c	;volatile
  6298                           
  6299                           ;system.c: 226: PIR1bits.ADIF = 0;
  6300  002F10  9C9E               	bcf	3998,6,c	;volatile
  6301                           
  6302                           ;system.c: 227: PIR1bits.RCIF = 0;
  6303  002F12  9A9E               	bcf	3998,5,c	;volatile
  6304                           
  6305                           ;system.c: 228: PIR1bits.TXIF = 0;
  6306  002F14  989E               	bcf	3998,4,c	;volatile
  6307                           
  6308                           ;system.c: 229: PIR1bits.SSPIF = 0;
  6309  002F16  969E               	bcf	3998,3,c	;volatile
  6310                           
  6311                           ;system.c: 230: PIR1bits.CCP1IF = 0;
  6312  002F18  949E               	bcf	3998,2,c	;volatile
  6313                           
  6314                           ;system.c: 231: PIR1bits.TMR2IF = 0;
  6315  002F1A  929E               	bcf	3998,1,c	;volatile
  6316                           
  6317                           ;system.c: 232: PIR1bits.TMR1IF = 0;
  6318  002F1C  909E               	bcf	3998,0,c	;volatile
  6319                           
  6320                           ;system.c: 235: PIR2bits.OSFIF = 0;
  6321  002F1E  9EA1               	bcf	4001,7,c	;volatile
  6322                           
  6323                           ;system.c: 236: PIR2bits.EEIF = 0;
  6324  002F20  98A1               	bcf	4001,4,c	;volatile
  6325                           
  6326                           ;system.c: 237: PIR2bits.LVDIF = 0;
  6327  002F22  94A1               	bcf	4001,2,c	;volatile
  6328                           
  6329                           ;system.c: 238: PIR2bits.CCP2IF = 0;
  6330  002F24  90A1               	bcf	4001,0,c	;volatile
  6331                           
  6332                           ;system.c: 241: PIR3bits.PTIF = 0;
  6333  002F26  98A4               	bcf	4004,4,c	;volatile
  6334                           
  6335                           ;system.c: 242: PIR3bits.IC3DRIF = 0;
  6336  002F28  96A4               	bcf	4004,3,c	;volatile
  6337                           
  6338                           ;system.c: 243: PIR3bits.IC2QEIF = 0;
  6339  002F2A  94A4               	bcf	4004,2,c	;volatile
  6340                           
  6341                           ;system.c: 244: PIR3bits.IC1IF = 0;
  6342  002F2C  92A4               	bcf	4004,1,c	;volatile
  6343                           
  6344                           ;system.c: 245: PIR3bits.TMR5IF = 0;
  6345  002F2E  90A4               	bcf	4004,0,c	;volatile
  6346                           
  6347                           ;system.c: 252: RCONbits.IPEN = 1;
  6348  002F30  8ED0               	bsf	4048,7,c	;volatile
  6349                           
  6350                           ;system.c: 255: IPR1bits.ADIP = 0b0;
  6351  002F32  9C9F               	bcf	3999,6,c	;volatile
  6352                           
  6353                           ;system.c: 256: IPR1bits.RC1IP = 0b1;
  6354  002F34  8A9F               	bsf	3999,5,c	;volatile
  6355                           
  6356                           ;system.c: 257: IPR1bits.TX1IP = 0b0;
  6357  002F36  989F               	bcf	3999,4,c	;volatile
  6358                           
  6359                           ;system.c: 258: IPR1bits.SSPIP = 0;
  6360  002F38  969F               	bcf	3999,3,c	;volatile
  6361                           
  6362                           ;system.c: 259: IPR1bits.CCP1IP = 0;
  6363  002F3A  949F               	bcf	3999,2,c	;volatile
  6364                           
  6365                           ;system.c: 260: IPR1bits.TMR2IP = 0b0;
  6366  002F3C  929F               	bcf	3999,1,c	;volatile
  6367                           
  6368                           ;system.c: 261: IPR1bits.TMR1IP = 0b1;
  6369  002F3E  809F               	bsf	3999,0,c	;volatile
  6370                           
  6371                           ;system.c: 264: IPR2bits.OSFIP = 0;
  6372  002F40  9EA2               	bcf	4002,7,c	;volatile
  6373                           
  6374                           ;system.c: 265: IPR2bits.EEIP = 1;
  6375  002F42  88A2               	bsf	4002,4,c	;volatile
  6376                           
  6377                           ;system.c: 266: IPR2bits.LVDIP = 0;
  6378  002F44  94A2               	bcf	4002,2,c	;volatile
  6379                           
  6380                           ;system.c: 267: IPR2bits.CCP2IP = 0;
  6381  002F46  90A2               	bcf	4002,0,c	;volatile
  6382                           
  6383                           ;system.c: 270: IPR3bits.PTIP = 0;
  6384  002F48  98A5               	bcf	4005,4,c	;volatile
  6385                           
  6386                           ;system.c: 271: IPR3bits.IC3DRIP = 0b1;
  6387  002F4A  86A5               	bsf	4005,3,c	;volatile
  6388                           
  6389                           ;system.c: 272: IPR3bits.IC2QEIP = 0b1;
  6390  002F4C  84A5               	bsf	4005,2,c	;volatile
  6391                           
  6392                           ;system.c: 273: IPR3bits.IC1IP = 0;
  6393  002F4E  92A5               	bcf	4005,1,c	;volatile
  6394                           
  6395                           ;system.c: 274: IPR3bits.TMR5IP = 0b0;
  6396  002F50  90A5               	bcf	4005,0,c	;volatile
  6397                           
  6398                           ;system.c: 281: PIE1bits.ADIE = 0b0;
  6399  002F52  9C9D               	bcf	3997,6,c	;volatile
  6400                           
  6401                           ;system.c: 282: PIE1bits.RC1IE = 0b1;
  6402  002F54  8A9D               	bsf	3997,5,c	;volatile
  6403                           
  6404                           ;system.c: 283: PIE1bits.TXIE = 0b0;
  6405  002F56  989D               	bcf	3997,4,c	;volatile
  6406                           
  6407                           ;system.c: 284: PIE1bits.SSPIE = 0;
  6408  002F58  969D               	bcf	3997,3,c	;volatile
  6409                           
  6410                           ;system.c: 285: PIE1bits.CCP1IE = 0;
  6411  002F5A  949D               	bcf	3997,2,c	;volatile
  6412                           
  6413                           ;system.c: 286: PIE1bits.TMR2IE = 0b0;
  6414  002F5C  929D               	bcf	3997,1,c	;volatile
  6415                           
  6416                           ;system.c: 287: PIE1bits.TMR1IE = 0b1;
  6417  002F5E  809D               	bsf	3997,0,c	;volatile
  6418                           
  6419                           ;system.c: 290: PIE2bits.OSFIE = 0;
  6420  002F60  9EA0               	bcf	4000,7,c	;volatile
  6421                           
  6422                           ;system.c: 291: PIE2bits.EEIE = 1;
  6423  002F62  88A0               	bsf	4000,4,c	;volatile
  6424                           
  6425                           ;system.c: 292: PIE2bits.LVDIE = 0;
  6426  002F64  94A0               	bcf	4000,2,c	;volatile
  6427                           
  6428                           ;system.c: 293: PIE2bits.CCP2IE = 0;
  6429  002F66  90A0               	bcf	4000,0,c	;volatile
  6430                           
  6431                           ;system.c: 296: PIE3bits.PTIE = 0;
  6432  002F68  98A3               	bcf	4003,4,c	;volatile
  6433                           
  6434                           ;system.c: 297: PIE3bits.IC3DRIE = 0b0;
  6435  002F6A  96A3               	bcf	4003,3,c	;volatile
  6436                           
  6437                           ;system.c: 298: PIE3bits.IC2QEIE = 0b1;
  6438  002F6C  84A3               	bsf	4003,2,c	;volatile
  6439                           
  6440                           ;system.c: 299: PIE3bits.IC1IE = 0;
  6441  002F6E  92A3               	bcf	4003,1,c	;volatile
  6442                           
  6443                           ;system.c: 300: PIE3bits.TMR5IE = 0b0;
  6444  002F70  90A3               	bcf	4003,0,c	;volatile
  6445  002F72  0012               	return		;funcret
  6446  002F74                     __end_of_ConfigInterrupt:
  6447                           	opt stack 0
  6448                           tblptru	equ	0xFF8
  6449                           tblptrh	equ	0xFF7
  6450                           tblptrl	equ	0xFF6
  6451                           tablat	equ	0xFF5
  6452                           intcon	equ	0xFF2
  6453                           intcon2	equ	0xFF1
  6454                           intcon3	equ	0xFF0
  6455                           postinc0	equ	0xFEE
  6456                           wreg	equ	0xFE8
  6457                           postinc1	equ	0xFE6
  6458                           postdec1	equ	0xFE5
  6459                           fsr1h	equ	0xFE2
  6460                           fsr1l	equ	0xFE1
  6461                           postinc2	equ	0xFDE
  6462                           postdec2	equ	0xFDD
  6463                           fsr2h	equ	0xFDA
  6464                           fsr2l	equ	0xFD9
  6465                           status	equ	0xFD8
  6466                           
  6467 ;; *************** function _get_distance *****************
  6468 ;; Defined at:
  6469 ;;		line 102 in file "triangulation.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;  ancien_x        3   71[BANK0 ] float 
  6472 ;;  ancien_y        3   74[BANK0 ] float 
  6473 ;;  x               3   77[BANK0 ] float 
  6474 ;;  y               3   80[BANK0 ] float 
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;  delta_y         3   92[BANK0 ] float 
  6477 ;;  delta_x         3   89[BANK0 ] float 
  6478 ;;  distance        3   83[BANK0 ] float 
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  3   71[BANK0 ] float 
  6481 ;; Registers used:
  6482 ;;		wreg, status,2, status,0, cstack
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6488 ;;      Params:         0      12       0       0
  6489 ;;      Locals:         0      12       0       0
  6490 ;;      Temps:          0       0       0       0
  6491 ;;      Totals:         0      24       0       0
  6492 ;;Total ram usage:       24 bytes
  6493 ;; Hardware stack levels used:    1
  6494 ;; Hardware stack levels required when called:   10
  6495 ;; This function calls:
  6496 ;;		___ftadd
  6497 ;;		___ftmul
  6498 ;;		___ftneg
  6499 ;;		_sqrt
  6500 ;; This function is called by:
  6501 ;;		_main
  6502 ;;		_check_divergence_position
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           	psect	text27
  6507  0026D0                     __ptext27:
  6508                           	opt stack 0
  6509  0026D0                     _get_distance:
  6510                           	opt stack 20
  6511                           
  6512                           ;triangulation.c: 104: double delta_x, delta_y, distance;
  6513                           ;triangulation.c: 106: delta_x = ancien_x - x;
  6514                           
  6515                           ;incstack = 0
  6516  0026D0  C0AD  F077         	movff	get_distance@x,___ftneg@f1
  6517  0026D4  C0AE  F078         	movff	get_distance@x+1,___ftneg@f1+1
  6518  0026D8  C0AF  F079         	movff	get_distance@x+2,___ftneg@f1+2
  6519  0026DC  EC4E  F01B         	call	___ftneg	;wreg free
  6520  0026E0  C077  F07A         	movff	?___ftneg,___ftadd@f1
  6521  0026E4  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  6522  0026E8  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  6523  0026EC  C0A7  F07D         	movff	get_distance@ancien_x,___ftadd@f2
  6524  0026F0  C0A8  F07E         	movff	get_distance@ancien_x+1,___ftadd@f2+1
  6525  0026F4  C0A9  F07F         	movff	get_distance@ancien_x+2,___ftadd@f2+2
  6526  0026F8  EC52  F00E         	call	___ftadd	;wreg free
  6527  0026FC  C07A  F0B9         	movff	?___ftadd,get_distance@delta_x
  6528  002700  C07B  F0BA         	movff	?___ftadd+1,get_distance@delta_x+1
  6529  002704  C07C  F0BB         	movff	?___ftadd+2,get_distance@delta_x+2
  6530                           
  6531                           ;triangulation.c: 107: delta_y = ancien_y - y;
  6532  002708  C0B0  F077         	movff	get_distance@y,___ftneg@f1
  6533  00270C  C0B1  F078         	movff	get_distance@y+1,___ftneg@f1+1
  6534  002710  C0B2  F079         	movff	get_distance@y+2,___ftneg@f1+2
  6535  002714  EC4E  F01B         	call	___ftneg	;wreg free
  6536  002718  C077  F07A         	movff	?___ftneg,___ftadd@f1
  6537  00271C  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  6538  002720  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  6539  002724  C0AA  F07D         	movff	get_distance@ancien_y,___ftadd@f2
  6540  002728  C0AB  F07E         	movff	get_distance@ancien_y+1,___ftadd@f2+1
  6541  00272C  C0AC  F07F         	movff	get_distance@ancien_y+2,___ftadd@f2+2
  6542  002730  EC52  F00E         	call	___ftadd	;wreg free
  6543  002734  C07A  F0BC         	movff	?___ftadd,get_distance@delta_y
  6544  002738  C07B  F0BD         	movff	?___ftadd+1,get_distance@delta_y+1
  6545  00273C  C07C  F0BE         	movff	?___ftadd+2,get_distance@delta_y+2
  6546                           
  6547                           ;triangulation.c: 108: distance = sqrt (delta_x * delta_x + delta_y * delta_y);
  6548  002740  C0B9  F06B         	movff	get_distance@delta_x,___ftmul@f2
  6549  002744  C0BA  F06C         	movff	get_distance@delta_x+1,___ftmul@f2+1
  6550  002748  C0BB  F06D         	movff	get_distance@delta_x+2,___ftmul@f2+2
  6551  00274C  C0B9  F068         	movff	get_distance@delta_x,___ftmul@f1
  6552  002750  C0BA  F069         	movff	get_distance@delta_x+1,___ftmul@f1+1
  6553  002754  C0BB  F06A         	movff	get_distance@delta_x+2,___ftmul@f1+2
  6554  002758  EC72  F010         	call	___ftmul	;wreg free
  6555  00275C  C068  F07A         	movff	?___ftmul,___ftadd@f1
  6556  002760  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  6557  002764  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  6558  002768  C0BC  F06B         	movff	get_distance@delta_y,___ftmul@f2
  6559  00276C  C0BD  F06C         	movff	get_distance@delta_y+1,___ftmul@f2+1
  6560  002770  C0BE  F06D         	movff	get_distance@delta_y+2,___ftmul@f2+2
  6561  002774  C0BC  F068         	movff	get_distance@delta_y,___ftmul@f1
  6562  002778  C0BD  F069         	movff	get_distance@delta_y+1,___ftmul@f1+1
  6563  00277C  C0BE  F06A         	movff	get_distance@delta_y+2,___ftmul@f1+2
  6564  002780  EC72  F010         	call	___ftmul	;wreg free
  6565  002784  C068  F07D         	movff	?___ftmul,___ftadd@f2
  6566  002788  C069  F07E         	movff	?___ftmul+1,___ftadd@f2+1
  6567  00278C  C06A  F07F         	movff	?___ftmul+2,___ftadd@f2+2
  6568  002790  EC52  F00E         	call	___ftadd	;wreg free
  6569  002794  C07A  F0B6         	movff	?___ftadd,_get_distance$3249
  6570  002798  C07B  F0B7         	movff	?___ftadd+1,_get_distance$3249+1
  6571  00279C  C07C  F0B8         	movff	?___ftadd+2,_get_distance$3249+2
  6572                           
  6573                           ;triangulation.c: 108: distance = sqrt (delta_x * delta_x + delta_y * delta_y);
  6574  0027A0  C0B6  F094         	movff	_get_distance$3249,sqrt@y
  6575  0027A4  C0B7  F095         	movff	_get_distance$3249+1,sqrt@y+1
  6576  0027A8  C0B8  F096         	movff	_get_distance$3249+2,sqrt@y+2
  6577  0027AC  EC91  F00F         	call	_sqrt	;wreg free
  6578  0027B0  C094  F0B3         	movff	?_sqrt,get_distance@distance
  6579  0027B4  C095  F0B4         	movff	?_sqrt+1,get_distance@distance+1
  6580  0027B8  C096  F0B5         	movff	?_sqrt+2,get_distance@distance+2
  6581                           
  6582                           ;triangulation.c: 110: return distance;
  6583  0027BC  C0B3  F0A7         	movff	get_distance@distance,?_get_distance
  6584  0027C0  C0B4  F0A8         	movff	get_distance@distance+1,?_get_distance+1
  6585  0027C4  C0B5  F0A9         	movff	get_distance@distance+2,?_get_distance+2
  6586  0027C8  D000               	goto	l607
  6587  0027CA                     l607:
  6588  0027CA  0012               	return		;funcret
  6589  0027CC                     __end_of_get_distance:
  6590                           	opt stack 0
  6591                           tblptru	equ	0xFF8
  6592                           tblptrh	equ	0xFF7
  6593                           tblptrl	equ	0xFF6
  6594                           tablat	equ	0xFF5
  6595                           intcon	equ	0xFF2
  6596                           intcon2	equ	0xFF1
  6597                           intcon3	equ	0xFF0
  6598                           postinc0	equ	0xFEE
  6599                           wreg	equ	0xFE8
  6600                           postinc1	equ	0xFE6
  6601                           postdec1	equ	0xFE5
  6602                           fsr1h	equ	0xFE2
  6603                           fsr1l	equ	0xFE1
  6604                           postinc2	equ	0xFDE
  6605                           postdec2	equ	0xFDD
  6606                           fsr2h	equ	0xFDA
  6607                           fsr2l	equ	0xFD9
  6608                           status	equ	0xFD8
  6609                           
  6610 ;; *************** function _sqrt *****************
  6611 ;; Defined at:
  6612 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\sqrt.c"
  6613 ;; Parameters:    Size  Location     Type
  6614 ;;  y               3   52[BANK0 ] float 
  6615 ;; Auto vars:     Size  Location     Type
  6616 ;;  x               3   68[BANK0 ] float 
  6617 ;;  q               3   65[BANK0 ] float 
  6618 ;;  z               3   61[BANK0 ] float 
  6619 ;;  og              3   58[BANK0 ] float 
  6620 ;;  i               1   64[BANK0 ] unsigned char 
  6621 ;; Return value:  Size  Location     Type
  6622 ;;                  3   52[BANK0 ] unsigned char 
  6623 ;; Registers used:
  6624 ;;		wreg, status,2, status,0, cstack
  6625 ;; Tracked objects:
  6626 ;;		On entry : 0/0
  6627 ;;		On exit  : 0/0
  6628 ;;		Unchanged: 0/0
  6629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6630 ;;      Params:         0       3       0       0
  6631 ;;      Locals:         0      13       0       0
  6632 ;;      Temps:          0       3       0       0
  6633 ;;      Totals:         0      19       0       0
  6634 ;;Total ram usage:       19 bytes
  6635 ;; Hardware stack levels used:    1
  6636 ;; Hardware stack levels required when called:    9
  6637 ;; This function calls:
  6638 ;;		___ftge
  6639 ;;		___ftmul
  6640 ;;		___ftsub
  6641 ;; This function is called by:
  6642 ;;		_get_distance
  6643 ;; This function uses a non-reentrant model
  6644 ;;
  6645                           
  6646                           	psect	text28
  6647  001F22                     __ptext28:
  6648                           	opt stack 0
  6649  001F22                     _sqrt:
  6650                           	opt stack 20
  6651                           
  6652                           ;incstack = 0
  6653  001F22  0E00               	movlw	0
  6654  001F24  0100               	movlb	0	; () banked
  6655  001F26  6F7A               	movwf	___ftge@ff1& (0+255),b
  6656  001F28  0E00               	movlw	0
  6657  001F2A  0100               	movlb	0	; () banked
  6658  001F2C  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  6659  001F2E  0E00               	movlw	0
  6660  001F30  0100               	movlb	0	; () banked
  6661  001F32  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  6662  001F34  C094  F07D         	movff	sqrt@y,___ftge@ff2
  6663  001F38  C095  F07E         	movff	sqrt@y+1,___ftge@ff2+1
  6664  001F3C  C096  F07F         	movff	sqrt@y+2,___ftge@ff2+2
  6665  001F40  EC36  F015         	call	___ftge	;wreg free
  6666  001F44  0100               	movlb	0	; () banked
  6667  001F46  A0D8               	btfss	status,0,c
  6668  001F48  D011               	goto	l1190
  6669                           
  6670                           ; BSR set to: 0
  6671  001F4A  0100               	movlb	0	; () banked
  6672  001F4C  AF96               	btfss	(sqrt@y+2)& (0+255),7,b
  6673  001F4E  D004               	goto	l1191
  6674                           
  6675                           ; BSR set to: 0
  6676  001F50  0E00               	movlw	0
  6677  001F52  6E35               	movwf	_errno+1,c
  6678  001F54  0E21               	movlw	33
  6679  001F56  6E34               	movwf	_errno,c
  6680  001F58                     l1191:
  6681                           
  6682                           ; BSR set to: 0
  6683  001F58  0E00               	movlw	0
  6684  001F5A  0100               	movlb	0	; () banked
  6685  001F5C  6F94               	movwf	?_sqrt& (0+255),b
  6686  001F5E  0E00               	movlw	0
  6687  001F60  0100               	movlb	0	; () banked
  6688  001F62  6F95               	movwf	(?_sqrt+1)& (0+255),b
  6689  001F64  0E00               	movlw	0
  6690  001F66  0100               	movlb	0	; () banked
  6691  001F68  6F96               	movwf	(?_sqrt+2)& (0+255),b
  6692                           
  6693                           ; BSR set to: 0
  6694  001F6A  D0BB               	goto	l1192
  6695  001F6C                     l1190:
  6696                           
  6697                           ; BSR set to: 0
  6698  001F6C  C094  F09D         	movff	sqrt@y,sqrt@z
  6699  001F70  C095  F09E         	movff	sqrt@y+1,sqrt@z+1
  6700  001F74  C096  F09F         	movff	sqrt@y+2,sqrt@z+2
  6701                           
  6702                           ; BSR set to: 0
  6703  001F78  C094  F097         	movff	sqrt@y,??_sqrt
  6704  001F7C  C095  F098         	movff	sqrt@y+1,??_sqrt+1
  6705  001F80  C096  F099         	movff	sqrt@y+2,??_sqrt+2
  6706  001F84  0100               	movlb	0	; () banked
  6707  001F86  1F97               	comf	??_sqrt& (0+255),f,b
  6708  001F88  1F98               	comf	(??_sqrt+1)& (0+255),f,b
  6709  001F8A  1F99               	comf	(??_sqrt+2)& (0+255),f,b
  6710  001F8C  2B97               	incf	??_sqrt& (0+255),f,b
  6711  001F8E  0E00               	movlw	0
  6712  001F90  2398               	addwfc	(??_sqrt+1)& (0+255),f,b
  6713  001F92  2399               	addwfc	(??_sqrt+2)& (0+255),f,b
  6714  001F94  0EC8               	movlw	200
  6715  001F96  0100               	movlb	0	; () banked
  6716  001F98  2597               	addwf	??_sqrt& (0+255),w,b
  6717  001F9A  0100               	movlb	0	; () banked
  6718  001F9C  6FA4               	movwf	sqrt@x& (0+255),b
  6719  001F9E  0E6E               	movlw	110
  6720  001FA0  0100               	movlb	0	; () banked
  6721  001FA2  2198               	addwfc	(??_sqrt+1)& (0+255),w,b
  6722  001FA4  0100               	movlb	0	; () banked
  6723  001FA6  6FA5               	movwf	(sqrt@x+1)& (0+255),b
  6724  001FA8  0EBE               	movlw	190
  6725  001FAA  0100               	movlb	0	; () banked
  6726  001FAC  2199               	addwfc	(??_sqrt+2)& (0+255),w,b
  6727  001FAE  0100               	movlb	0	; () banked
  6728  001FB0  6FA6               	movwf	(sqrt@x+2)& (0+255),b
  6729                           
  6730                           ; BSR set to: 0
  6731  001FB2  0100               	movlb	0	; () banked
  6732  001FB4  90D8               	bcf	status,0,c
  6733  001FB6  33A6               	rrcf	(sqrt@x+2)& (0+255),f,b
  6734  001FB8  33A5               	rrcf	(sqrt@x+1)& (0+255),f,b
  6735  001FBA  33A4               	rrcf	sqrt@x& (0+255),f,b
  6736                           
  6737                           ; BSR set to: 0
  6738  001FBC  0E00               	movlw	0
  6739  001FBE  0100               	movlb	0	; () banked
  6740  001FC0  5F9D               	subwf	sqrt@z& (0+255),f,b
  6741  001FC2  0E80               	movlw	128
  6742  001FC4  0100               	movlb	0	; () banked
  6743  001FC6  5B9E               	subwfb	(sqrt@z+1)& (0+255),f,b
  6744  001FC8  0E00               	movlw	0
  6745  001FCA  0100               	movlb	0	; () banked
  6746  001FCC  5B9F               	subwfb	(sqrt@z+2)& (0+255),f,b
  6747                           
  6748                           ; BSR set to: 0
  6749  001FCE  0E04               	movlw	4
  6750  001FD0  0100               	movlb	0	; () banked
  6751  001FD2  6FA0               	movwf	sqrt@i& (0+255),b
  6752  001FD4  D000               	goto	l4531
  6753  001FD6                     l4531:
  6754                           
  6755                           ; BSR set to: 0
  6756  001FD6  C0A4  F09A         	movff	sqrt@x,sqrt@og
  6757  001FDA  C0A5  F09B         	movff	sqrt@x+1,sqrt@og+1
  6758  001FDE  C0A6  F09C         	movff	sqrt@x+2,sqrt@og+2
  6759                           
  6760                           ; BSR set to: 0
  6761  001FE2  C0A4  F068         	movff	sqrt@x,___ftmul@f1
  6762  001FE6  C0A5  F069         	movff	sqrt@x+1,___ftmul@f1+1
  6763  001FEA  C0A6  F06A         	movff	sqrt@x+2,___ftmul@f1+2
  6764  001FEE  C09D  F06B         	movff	sqrt@z,___ftmul@f2
  6765  001FF2  C09E  F06C         	movff	sqrt@z+1,___ftmul@f2+1
  6766  001FF6  C09F  F06D         	movff	sqrt@z+2,___ftmul@f2+2
  6767  001FFA  EC72  F010         	call	___ftmul	;wreg free
  6768  001FFE  C068  F0A1         	movff	?___ftmul,sqrt@q
  6769  002002  C069  F0A2         	movff	?___ftmul+1,sqrt@q+1
  6770  002006  C06A  F0A3         	movff	?___ftmul+2,sqrt@q+2
  6771  00200A  C0A1  F068         	movff	sqrt@q,___ftmul@f1
  6772  00200E  C0A2  F069         	movff	sqrt@q+1,___ftmul@f1+1
  6773  002012  C0A3  F06A         	movff	sqrt@q+2,___ftmul@f1+2
  6774  002016  C0A4  F06B         	movff	sqrt@x,___ftmul@f2
  6775  00201A  C0A5  F06C         	movff	sqrt@x+1,___ftmul@f2+1
  6776  00201E  C0A6  F06D         	movff	sqrt@x+2,___ftmul@f2+2
  6777  002022  EC72  F010         	call	___ftmul	;wreg free
  6778  002026  C068  F0A1         	movff	?___ftmul,sqrt@q
  6779  00202A  C069  F0A2         	movff	?___ftmul+1,sqrt@q+1
  6780  00202E  C06A  F0A3         	movff	?___ftmul+2,sqrt@q+2
  6781  002032  C0A1  F068         	movff	sqrt@q,___ftmul@f1
  6782  002036  C0A2  F069         	movff	sqrt@q+1,___ftmul@f1+1
  6783  00203A  C0A3  F06A         	movff	sqrt@q+2,___ftmul@f1+2
  6784  00203E  C0A4  F06B         	movff	sqrt@x,___ftmul@f2
  6785  002042  C0A5  F06C         	movff	sqrt@x+1,___ftmul@f2+1
  6786  002046  C0A6  F06D         	movff	sqrt@x+2,___ftmul@f2+2
  6787  00204A  EC72  F010         	call	___ftmul	;wreg free
  6788  00204E  C068  F0A1         	movff	?___ftmul,sqrt@q
  6789  002052  C069  F0A2         	movff	?___ftmul+1,sqrt@q+1
  6790  002056  C06A  F0A3         	movff	?___ftmul+2,sqrt@q+2
  6791  00205A  C0A4  F068         	movff	sqrt@x,___ftmul@f1
  6792  00205E  C0A5  F069         	movff	sqrt@x+1,___ftmul@f1+1
  6793  002062  C0A6  F06A         	movff	sqrt@x+2,___ftmul@f1+2
  6794  002066  0E00               	movlw	0
  6795  002068  0100               	movlb	0	; () banked
  6796  00206A  6F6B               	movwf	___ftmul@f2& (0+255),b
  6797  00206C  0EC0               	movlw	192
  6798  00206E  0100               	movlb	0	; () banked
  6799  002070  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  6800  002072  0E3F               	movlw	63
  6801  002074  0100               	movlb	0	; () banked
  6802  002076  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  6803  002078  EC72  F010         	call	___ftmul	;wreg free
  6804  00207C  C068  F0A4         	movff	?___ftmul,sqrt@x
  6805  002080  C069  F0A5         	movff	?___ftmul+1,sqrt@x+1
  6806  002084  C06A  F0A6         	movff	?___ftmul+2,sqrt@x+2
  6807  002088  C0A4  F08E         	movff	sqrt@x,___ftsub@f1
  6808  00208C  C0A5  F08F         	movff	sqrt@x+1,___ftsub@f1+1
  6809  002090  C0A6  F090         	movff	sqrt@x+2,___ftsub@f1+2
  6810  002094  C0A1  F091         	movff	sqrt@q,___ftsub@f2
  6811  002098  C0A2  F092         	movff	sqrt@q+1,___ftsub@f2+1
  6812  00209C  C0A3  F093         	movff	sqrt@q+2,___ftsub@f2+2
  6813  0020A0  ECDE  F019         	call	___ftsub	;wreg free
  6814  0020A4  C08E  F0A4         	movff	?___ftsub,sqrt@x
  6815  0020A8  C08F  F0A5         	movff	?___ftsub+1,sqrt@x+1
  6816  0020AC  C090  F0A6         	movff	?___ftsub+2,sqrt@x+2
  6817  0020B0  0100               	movlb	0	; () banked
  6818  0020B2  2FA0               	decfsz	sqrt@i& (0+255),f,b
  6819  0020B4  D790               	goto	l4531
  6820  0020B6  D000               	goto	l4545
  6821  0020B8                     l4545:
  6822                           
  6823                           ; BSR set to: 0
  6824  0020B8  C0A4  F068         	movff	sqrt@x,___ftmul@f1
  6825  0020BC  C0A5  F069         	movff	sqrt@x+1,___ftmul@f1+1
  6826  0020C0  C0A6  F06A         	movff	sqrt@x+2,___ftmul@f1+2
  6827  0020C4  C094  F06B         	movff	sqrt@y,___ftmul@f2
  6828  0020C8  C095  F06C         	movff	sqrt@y+1,___ftmul@f2+1
  6829  0020CC  C096  F06D         	movff	sqrt@y+2,___ftmul@f2+2
  6830  0020D0  EC72  F010         	call	___ftmul	;wreg free
  6831  0020D4  C068  F094         	movff	?___ftmul,?_sqrt
  6832  0020D8  C069  F095         	movff	?___ftmul+1,?_sqrt+1
  6833  0020DC  C06A  F096         	movff	?___ftmul+2,?_sqrt+2
  6834  0020E0  D000               	goto	l1192
  6835  0020E2                     l1192:
  6836  0020E2  0012               	return		;funcret
  6837  0020E4                     __end_of_sqrt:
  6838                           	opt stack 0
  6839                           tblptru	equ	0xFF8
  6840                           tblptrh	equ	0xFF7
  6841                           tblptrl	equ	0xFF6
  6842                           tablat	equ	0xFF5
  6843                           intcon	equ	0xFF2
  6844                           intcon2	equ	0xFF1
  6845                           intcon3	equ	0xFF0
  6846                           postinc0	equ	0xFEE
  6847                           wreg	equ	0xFE8
  6848                           postinc1	equ	0xFE6
  6849                           postdec1	equ	0xFE5
  6850                           fsr1h	equ	0xFE2
  6851                           fsr1l	equ	0xFE1
  6852                           postinc2	equ	0xFDE
  6853                           postdec2	equ	0xFDD
  6854                           fsr2h	equ	0xFDA
  6855                           fsr2l	equ	0xFD9
  6856                           status	equ	0xFD8
  6857                           
  6858 ;; *************** function ___ftsub *****************
  6859 ;; Defined at:
  6860 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  6861 ;; Parameters:    Size  Location     Type
  6862 ;;  f1              3   46[BANK0 ] float 
  6863 ;;  f2              3   49[BANK0 ] float 
  6864 ;; Auto vars:     Size  Location     Type
  6865 ;;		None
  6866 ;; Return value:  Size  Location     Type
  6867 ;;                  3   46[BANK0 ] float 
  6868 ;; Registers used:
  6869 ;;		wreg, status,2, status,0, cstack
  6870 ;; Tracked objects:
  6871 ;;		On entry : 0/0
  6872 ;;		On exit  : 0/0
  6873 ;;		Unchanged: 0/0
  6874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6875 ;;      Params:         0       6       0       0
  6876 ;;      Locals:         0       0       0       0
  6877 ;;      Temps:          0       0       0       0
  6878 ;;      Totals:         0       6       0       0
  6879 ;;Total ram usage:        6 bytes
  6880 ;; Hardware stack levels used:    1
  6881 ;; Hardware stack levels required when called:    8
  6882 ;; This function calls:
  6883 ;;		___ftadd
  6884 ;; This function is called by:
  6885 ;;		_sqrt
  6886 ;;		_sin
  6887 ;;		_modulo_angle
  6888 ;; This function uses a non-reentrant model
  6889 ;;
  6890                           
  6891                           	psect	text29
  6892  0033BC                     __ptext29:
  6893                           	opt stack 0
  6894  0033BC                     ___ftsub:
  6895                           	opt stack 18
  6896                           
  6897                           ;incstack = 0
  6898  0033BC  0100               	movlb	0	; () banked
  6899  0033BE  5191               	movf	___ftsub@f2& (0+255),w,b
  6900  0033C0  0100               	movlb	0	; () banked
  6901  0033C2  1192               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  6902  0033C4  0100               	movlb	0	; () banked
  6903  0033C6  1193               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  6904  0033C8  B4D8               	btfsc	status,2,c
  6905  0033CA  D00A               	goto	l4203
  6906                           
  6907                           ; BSR set to: 0
  6908  0033CC  0E00               	movlw	0
  6909  0033CE  0100               	movlb	0	; () banked
  6910  0033D0  1B91               	xorwf	___ftsub@f2& (0+255),f,b
  6911  0033D2  0E00               	movlw	0
  6912  0033D4  0100               	movlb	0	; () banked
  6913  0033D6  1B92               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  6914  0033D8  0E80               	movlw	128
  6915  0033DA  0100               	movlb	0	; () banked
  6916  0033DC  1B93               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  6917  0033DE  D000               	goto	l4203
  6918  0033E0                     l4203:
  6919                           
  6920                           ; BSR set to: 0
  6921  0033E0  C08E  F07A         	movff	___ftsub@f1,___ftadd@f1
  6922  0033E4  C08F  F07B         	movff	___ftsub@f1+1,___ftadd@f1+1
  6923  0033E8  C090  F07C         	movff	___ftsub@f1+2,___ftadd@f1+2
  6924  0033EC  C091  F07D         	movff	___ftsub@f2,___ftadd@f2
  6925  0033F0  C092  F07E         	movff	___ftsub@f2+1,___ftadd@f2+1
  6926  0033F4  C093  F07F         	movff	___ftsub@f2+2,___ftadd@f2+2
  6927  0033F8  EC52  F00E         	call	___ftadd	;wreg free
  6928  0033FC  C07A  F08E         	movff	?___ftadd,?___ftsub
  6929  003400  C07B  F08F         	movff	?___ftadd+1,?___ftsub+1
  6930  003404  C07C  F090         	movff	?___ftadd+2,?___ftsub+2
  6931  003408  D000               	goto	l1052
  6932  00340A                     l1052:
  6933  00340A  0012               	return		;funcret
  6934  00340C                     __end_of___ftsub:
  6935                           	opt stack 0
  6936                           tblptru	equ	0xFF8
  6937                           tblptrh	equ	0xFF7
  6938                           tblptrl	equ	0xFF6
  6939                           tablat	equ	0xFF5
  6940                           intcon	equ	0xFF2
  6941                           intcon2	equ	0xFF1
  6942                           intcon3	equ	0xFF0
  6943                           postinc0	equ	0xFEE
  6944                           wreg	equ	0xFE8
  6945                           postinc1	equ	0xFE6
  6946                           postdec1	equ	0xFE5
  6947                           fsr1h	equ	0xFE2
  6948                           fsr1l	equ	0xFE1
  6949                           postinc2	equ	0xFDE
  6950                           postdec2	equ	0xFDD
  6951                           fsr2h	equ	0xFDA
  6952                           fsr2l	equ	0xFD9
  6953                           status	equ	0xFD8
  6954                           
  6955 ;; *************** function ___ftadd *****************
  6956 ;; Defined at:
  6957 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  6958 ;; Parameters:    Size  Location     Type
  6959 ;;  f1              3   26[BANK0 ] float 
  6960 ;;  f2              3   29[BANK0 ] float 
  6961 ;; Auto vars:     Size  Location     Type
  6962 ;;  exp1            1   37[BANK0 ] unsigned char 
  6963 ;;  exp2            1   36[BANK0 ] unsigned char 
  6964 ;;  sign            1   35[BANK0 ] unsigned char 
  6965 ;; Return value:  Size  Location     Type
  6966 ;;                  3   26[BANK0 ] float 
  6967 ;; Registers used:
  6968 ;;		wreg, status,2, status,0, cstack
  6969 ;; Tracked objects:
  6970 ;;		On entry : 0/0
  6971 ;;		On exit  : 0/0
  6972 ;;		Unchanged: 0/0
  6973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6974 ;;      Params:         0       6       0       0
  6975 ;;      Locals:         0       3       0       0
  6976 ;;      Temps:          0       3       0       0
  6977 ;;      Totals:         0      12       0       0
  6978 ;;Total ram usage:       12 bytes
  6979 ;; Hardware stack levels used:    1
  6980 ;; Hardware stack levels required when called:    7
  6981 ;; This function calls:
  6982 ;;		___ftpack
  6983 ;; This function is called by:
  6984 ;;		_triangulation
  6985 ;;		_get_distance
  6986 ;;		___ftsub
  6987 ;;		_cos
  6988 ;;		_sin
  6989 ;;		_eval_poly
  6990 ;;		_floor
  6991 ;;		_fonction_PID
  6992 ;;		_check_divergence_angle
  6993 ;;		_modulo_angle
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text30
  6998  001CA4                     __ptext30:
  6999                           	opt stack 0
  7000  001CA4                     ___ftadd:
  7001                           	opt stack 22
  7002                           
  7003                           ;incstack = 0
  7004  001CA4  C07C  F080         	movff	___ftadd@f1+2,??___ftadd
  7005  001CA8  0100               	movlb	0	; () banked
  7006  001CAA  6B81               	clrf	(??___ftadd+1)& (0+255),b
  7007  001CAC  6B82               	clrf	(??___ftadd+2)& (0+255),b
  7008  001CAE  0100               	movlb	0	; () banked
  7009  001CB0  357B               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  7010  001CB2  0100               	movlb	0	; () banked
  7011  001CB4  3780               	rlcf	??___ftadd& (0+255),f,b
  7012  001CB6  E301               	bnc	u3311
  7013  001CB8  8181               	bsf	(??___ftadd+1)& (0+255),0,b
  7014  001CBA                     u3311:
  7015  001CBA  0100               	movlb	0	; () banked
  7016  001CBC  5180               	movf	??___ftadd& (0+255),w,b
  7017  001CBE  0100               	movlb	0	; () banked
  7018  001CC0  6F85               	movwf	___ftadd@exp1& (0+255),b
  7019  001CC2  C07F  F080         	movff	___ftadd@f2+2,??___ftadd
  7020  001CC6  0100               	movlb	0	; () banked
  7021  001CC8  6B81               	clrf	(??___ftadd+1)& (0+255),b
  7022  001CCA  6B82               	clrf	(??___ftadd+2)& (0+255),b
  7023  001CCC  0100               	movlb	0	; () banked
  7024  001CCE  357E               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  7025  001CD0  0100               	movlb	0	; () banked
  7026  001CD2  3780               	rlcf	??___ftadd& (0+255),f,b
  7027  001CD4  E301               	bnc	u3321
  7028  001CD6  8181               	bsf	(??___ftadd+1)& (0+255),0,b
  7029  001CD8                     u3321:
  7030  001CD8  0100               	movlb	0	; () banked
  7031  001CDA  5180               	movf	??___ftadd& (0+255),w,b
  7032  001CDC  0100               	movlb	0	; () banked
  7033  001CDE  6F84               	movwf	___ftadd@exp2& (0+255),b
  7034                           
  7035                           ; BSR set to: 0
  7036  001CE0  0100               	movlb	0	; () banked
  7037  001CE2  5185               	movf	___ftadd@exp1& (0+255),w,b
  7038  001CE4  0100               	movlb	0	; () banked
  7039  001CE6  B4D8               	btfsc	status,2,c
  7040  001CE8  D011               	goto	l988
  7041                           
  7042                           ; BSR set to: 0
  7043  001CEA  0100               	movlb	0	; () banked
  7044  001CEC  5184               	movf	___ftadd@exp2& (0+255),w,b
  7045  001CEE  0100               	movlb	0	; () banked
  7046  001CF0  5D85               	subwf	___ftadd@exp1& (0+255),w,b
  7047  001CF2  B0D8               	btfsc	status,0,c
  7048  001CF4  D012               	goto	l3963
  7049                           
  7050                           ; BSR set to: 0
  7051  001CF6  0100               	movlb	0	; () banked
  7052  001CF8  5185               	movf	___ftadd@exp1& (0+255),w,b
  7053  001CFA  0800               	sublw	0
  7054  001CFC  0100               	movlb	0	; () banked
  7055  001CFE  2584               	addwf	___ftadd@exp2& (0+255),w,b
  7056  001D00  0100               	movlb	0	; () banked
  7057  001D02  6F80               	movwf	??___ftadd& (0+255),b
  7058  001D04  0E18               	movlw	24
  7059  001D06  0100               	movlb	0	; () banked
  7060  001D08  6580               	cpfsgt	??___ftadd& (0+255),b
  7061  001D0A  D007               	goto	l3963
  7062  001D0C                     l988:
  7063                           
  7064                           ; BSR set to: 0
  7065  001D0C  C07D  F07A         	movff	___ftadd@f2,?___ftadd
  7066  001D10  C07E  F07B         	movff	___ftadd@f2+1,?___ftadd+1
  7067  001D14  C07F  F07C         	movff	___ftadd@f2+2,?___ftadd+2
  7068  001D18  D103               	goto	l989
  7069  001D1A                     l3963:
  7070                           
  7071                           ; BSR set to: 0
  7072  001D1A  0100               	movlb	0	; () banked
  7073  001D1C  5184               	movf	___ftadd@exp2& (0+255),w,b
  7074  001D1E  0100               	movlb	0	; () banked
  7075  001D20  B4D8               	btfsc	status,2,c
  7076  001D22  D011               	goto	l992
  7077                           
  7078                           ; BSR set to: 0
  7079  001D24  0100               	movlb	0	; () banked
  7080  001D26  5185               	movf	___ftadd@exp1& (0+255),w,b
  7081  001D28  0100               	movlb	0	; () banked
  7082  001D2A  5D84               	subwf	___ftadd@exp2& (0+255),w,b
  7083  001D2C  B0D8               	btfsc	status,0,c
  7084  001D2E  D012               	goto	l3969
  7085                           
  7086                           ; BSR set to: 0
  7087  001D30  0100               	movlb	0	; () banked
  7088  001D32  5184               	movf	___ftadd@exp2& (0+255),w,b
  7089  001D34  0800               	sublw	0
  7090  001D36  0100               	movlb	0	; () banked
  7091  001D38  2585               	addwf	___ftadd@exp1& (0+255),w,b
  7092  001D3A  0100               	movlb	0	; () banked
  7093  001D3C  6F80               	movwf	??___ftadd& (0+255),b
  7094  001D3E  0E18               	movlw	24
  7095  001D40  0100               	movlb	0	; () banked
  7096  001D42  6580               	cpfsgt	??___ftadd& (0+255),b
  7097  001D44  D007               	goto	l3969
  7098  001D46                     l992:
  7099                           
  7100                           ; BSR set to: 0
  7101  001D46  C07A  F07A         	movff	___ftadd@f1,?___ftadd
  7102  001D4A  C07B  F07B         	movff	___ftadd@f1+1,?___ftadd+1
  7103  001D4E  C07C  F07C         	movff	___ftadd@f1+2,?___ftadd+2
  7104  001D52  D0E6               	goto	l989
  7105  001D54                     l3969:
  7106                           
  7107                           ; BSR set to: 0
  7108  001D54  0E06               	movlw	6
  7109  001D56  0100               	movlb	0	; () banked
  7110  001D58  6F83               	movwf	___ftadd@sign& (0+255),b
  7111                           
  7112                           ; BSR set to: 0
  7113  001D5A  0100               	movlb	0	; () banked
  7114  001D5C  AF7C               	btfss	(___ftadd@f1+2)& (0+255),7,b
  7115  001D5E  D003               	goto	l3975
  7116                           
  7117                           ; BSR set to: 0
  7118  001D60  0100               	movlb	0	; () banked
  7119  001D62  8F83               	bsf	___ftadd@sign& (0+255),7,b
  7120  001D64  D000               	goto	l3975
  7121  001D66                     l3975:
  7122                           
  7123                           ; BSR set to: 0
  7124  001D66  0100               	movlb	0	; () banked
  7125  001D68  AF7F               	btfss	(___ftadd@f2+2)& (0+255),7,b
  7126  001D6A  D002               	goto	l994
  7127                           
  7128                           ; BSR set to: 0
  7129  001D6C  0100               	movlb	0	; () banked
  7130  001D6E  8D83               	bsf	___ftadd@sign& (0+255),6,b
  7131  001D70                     l994:
  7132                           
  7133                           ; BSR set to: 0
  7134  001D70  0100               	movlb	0	; () banked
  7135  001D72  8F7B               	bsf	(___ftadd@f1+1)& (0+255),7,b
  7136                           
  7137                           ; BSR set to: 0
  7138  001D74  0EFF               	movlw	255
  7139  001D76  0100               	movlb	0	; () banked
  7140  001D78  177A               	andwf	___ftadd@f1& (0+255),f,b
  7141  001D7A  0EFF               	movlw	255
  7142  001D7C  0100               	movlb	0	; () banked
  7143  001D7E  177B               	andwf	(___ftadd@f1+1)& (0+255),f,b
  7144  001D80  0E00               	movlw	0
  7145  001D82  0100               	movlb	0	; () banked
  7146  001D84  177C               	andwf	(___ftadd@f1+2)& (0+255),f,b
  7147  001D86  0100               	movlb	0	; () banked
  7148  001D88  8F7E               	bsf	(___ftadd@f2+1)& (0+255),7,b
  7149                           
  7150                           ; BSR set to: 0
  7151  001D8A  0EFF               	movlw	255
  7152  001D8C  0100               	movlb	0	; () banked
  7153  001D8E  177D               	andwf	___ftadd@f2& (0+255),f,b
  7154  001D90  0EFF               	movlw	255
  7155  001D92  0100               	movlb	0	; () banked
  7156  001D94  177E               	andwf	(___ftadd@f2+1)& (0+255),f,b
  7157  001D96  0E00               	movlw	0
  7158  001D98  0100               	movlb	0	; () banked
  7159  001D9A  177F               	andwf	(___ftadd@f2+2)& (0+255),f,b
  7160                           
  7161                           ; BSR set to: 0
  7162  001D9C  0100               	movlb	0	; () banked
  7163  001D9E  5184               	movf	___ftadd@exp2& (0+255),w,b
  7164  001DA0  0100               	movlb	0	; () banked
  7165  001DA2  5D85               	subwf	___ftadd@exp1& (0+255),w,b
  7166  001DA4  B0D8               	btfsc	status,0,c
  7167  001DA6  D028               	goto	l3995
  7168  001DA8                     l3985:
  7169                           
  7170                           ; BSR set to: 0
  7171  001DA8  0100               	movlb	0	; () banked
  7172  001DAA  90D8               	bcf	status,0,c
  7173  001DAC  377D               	rlcf	___ftadd@f2& (0+255),f,b
  7174  001DAE  377E               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  7175  001DB0  377F               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  7176  001DB2  0100               	movlb	0	; () banked
  7177  001DB4  0784               	decf	___ftadd@exp2& (0+255),f,b
  7178                           
  7179                           ; BSR set to: 0
  7180  001DB6  0100               	movlb	0	; () banked
  7181  001DB8  5185               	movf	___ftadd@exp1& (0+255),w,b
  7182  001DBA  0100               	movlb	0	; () banked
  7183  001DBC  1984               	xorwf	___ftadd@exp2& (0+255),w,b
  7184  001DBE  B4D8               	btfsc	status,2,c
  7185  001DC0  D013               	goto	l3993
  7186                           
  7187                           ; BSR set to: 0
  7188  001DC2  0100               	movlb	0	; () banked
  7189  001DC4  0783               	decf	___ftadd@sign& (0+255),f,b
  7190  001DC6  C083  F080         	movff	___ftadd@sign,??___ftadd
  7191  001DCA  0E07               	movlw	7
  7192  001DCC  0100               	movlb	0	; () banked
  7193  001DCE  1780               	andwf	??___ftadd& (0+255),f,b
  7194  001DD0  B4D8               	btfsc	status,2,c
  7195  001DD2  D00A               	goto	l3993
  7196  001DD4  D7E9               	goto	l3985
  7197                           
  7198                           ; BSR set to: 0
  7199                           
  7200                           ; BSR set to: 0
  7201  001DD6  D008               	goto	l3993
  7202  001DD8                     l3991:
  7203                           
  7204                           ; BSR set to: 0
  7205  001DD8  0100               	movlb	0	; () banked
  7206  001DDA  90D8               	bcf	status,0,c
  7207  001DDC  337C               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  7208  001DDE  337B               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  7209  001DE0  337A               	rrcf	___ftadd@f1& (0+255),f,b
  7210  001DE2  0100               	movlb	0	; () banked
  7211  001DE4  2B85               	incf	___ftadd@exp1& (0+255),f,b
  7212  001DE6  D000               	goto	l3993
  7213  001DE8                     l3993:
  7214                           
  7215                           ; BSR set to: 0
  7216  001DE8  0100               	movlb	0	; () banked
  7217  001DEA  5184               	movf	___ftadd@exp2& (0+255),w,b
  7218  001DEC  0100               	movlb	0	; () banked
  7219  001DEE  1985               	xorwf	___ftadd@exp1& (0+255),w,b
  7220  001DF0  B4D8               	btfsc	status,2,c
  7221  001DF2  D030               	goto	l1003
  7222  001DF4  D7F1               	goto	l3991
  7223                           
  7224                           ; BSR set to: 0
  7225  001DF6  D02E               	goto	l1003
  7226  001DF8                     l3995:
  7227                           
  7228                           ; BSR set to: 0
  7229  001DF8  0100               	movlb	0	; () banked
  7230  001DFA  5185               	movf	___ftadd@exp1& (0+255),w,b
  7231  001DFC  0100               	movlb	0	; () banked
  7232  001DFE  5D84               	subwf	___ftadd@exp2& (0+255),w,b
  7233  001E00  B0D8               	btfsc	status,0,c
  7234  001E02  D028               	goto	l1003
  7235  001E04                     l3997:
  7236                           
  7237                           ; BSR set to: 0
  7238  001E04  0100               	movlb	0	; () banked
  7239  001E06  90D8               	bcf	status,0,c
  7240  001E08  377A               	rlcf	___ftadd@f1& (0+255),f,b
  7241  001E0A  377B               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  7242  001E0C  377C               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  7243  001E0E  0100               	movlb	0	; () banked
  7244  001E10  0785               	decf	___ftadd@exp1& (0+255),f,b
  7245                           
  7246                           ; BSR set to: 0
  7247  001E12  0100               	movlb	0	; () banked
  7248  001E14  5185               	movf	___ftadd@exp1& (0+255),w,b
  7249  001E16  0100               	movlb	0	; () banked
  7250  001E18  1984               	xorwf	___ftadd@exp2& (0+255),w,b
  7251  001E1A  B4D8               	btfsc	status,2,c
  7252  001E1C  D013               	goto	l4005
  7253                           
  7254                           ; BSR set to: 0
  7255  001E1E  0100               	movlb	0	; () banked
  7256  001E20  0783               	decf	___ftadd@sign& (0+255),f,b
  7257  001E22  C083  F080         	movff	___ftadd@sign,??___ftadd
  7258  001E26  0E07               	movlw	7
  7259  001E28  0100               	movlb	0	; () banked
  7260  001E2A  1780               	andwf	??___ftadd& (0+255),f,b
  7261  001E2C  B4D8               	btfsc	status,2,c
  7262  001E2E  D00A               	goto	l4005
  7263  001E30  D7E9               	goto	l3997
  7264                           
  7265                           ; BSR set to: 0
  7266                           
  7267                           ; BSR set to: 0
  7268  001E32  D008               	goto	l4005
  7269  001E34                     l4003:
  7270                           
  7271                           ; BSR set to: 0
  7272  001E34  0100               	movlb	0	; () banked
  7273  001E36  90D8               	bcf	status,0,c
  7274  001E38  337F               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  7275  001E3A  337E               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  7276  001E3C  337D               	rrcf	___ftadd@f2& (0+255),f,b
  7277  001E3E  0100               	movlb	0	; () banked
  7278  001E40  2B84               	incf	___ftadd@exp2& (0+255),f,b
  7279  001E42  D000               	goto	l4005
  7280  001E44                     l4005:
  7281                           
  7282                           ; BSR set to: 0
  7283  001E44  0100               	movlb	0	; () banked
  7284  001E46  5184               	movf	___ftadd@exp2& (0+255),w,b
  7285  001E48  0100               	movlb	0	; () banked
  7286  001E4A  1985               	xorwf	___ftadd@exp1& (0+255),w,b
  7287  001E4C  B4D8               	btfsc	status,2,c
  7288  001E4E  D002               	goto	l1003
  7289  001E50  D7F1               	goto	l4003
  7290                           
  7291                           ; BSR set to: 0
  7292  001E52  D000               	goto	l1003
  7293  001E54                     l1003:
  7294                           
  7295                           ; BSR set to: 0
  7296  001E54  0100               	movlb	0	; () banked
  7297  001E56  AF83               	btfss	___ftadd@sign& (0+255),7,b
  7298  001E58  D012               	goto	l1012
  7299                           
  7300                           ; BSR set to: 0
  7301  001E5A  0EFF               	movlw	255
  7302  001E5C  0100               	movlb	0	; () banked
  7303  001E5E  1B7A               	xorwf	___ftadd@f1& (0+255),f,b
  7304  001E60  0EFF               	movlw	255
  7305  001E62  0100               	movlb	0	; () banked
  7306  001E64  1B7B               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  7307  001E66  0EFF               	movlw	255
  7308  001E68  0100               	movlb	0	; () banked
  7309  001E6A  1B7C               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  7310  001E6C  0E01               	movlw	1
  7311  001E6E  0100               	movlb	0	; () banked
  7312  001E70  277A               	addwf	___ftadd@f1& (0+255),f,b
  7313  001E72  0E00               	movlw	0
  7314  001E74  0100               	movlb	0	; () banked
  7315  001E76  237B               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  7316  001E78  0E00               	movlw	0
  7317  001E7A  0100               	movlb	0	; () banked
  7318  001E7C  237C               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  7319  001E7E                     l1012:
  7320                           
  7321                           ; BSR set to: 0
  7322  001E7E  0100               	movlb	0	; () banked
  7323  001E80  AD83               	btfss	___ftadd@sign& (0+255),6,b
  7324  001E82  D013               	goto	l4011
  7325                           
  7326                           ; BSR set to: 0
  7327  001E84  0EFF               	movlw	255
  7328  001E86  0100               	movlb	0	; () banked
  7329  001E88  1B7D               	xorwf	___ftadd@f2& (0+255),f,b
  7330  001E8A  0EFF               	movlw	255
  7331  001E8C  0100               	movlb	0	; () banked
  7332  001E8E  1B7E               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7333  001E90  0EFF               	movlw	255
  7334  001E92  0100               	movlb	0	; () banked
  7335  001E94  1B7F               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7336  001E96  0E01               	movlw	1
  7337  001E98  0100               	movlb	0	; () banked
  7338  001E9A  277D               	addwf	___ftadd@f2& (0+255),f,b
  7339  001E9C  0E00               	movlw	0
  7340  001E9E  0100               	movlb	0	; () banked
  7341  001EA0  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7342  001EA2  0E00               	movlw	0
  7343  001EA4  0100               	movlb	0	; () banked
  7344  001EA6  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7345  001EA8  D000               	goto	l4011
  7346  001EAA                     l4011:
  7347                           
  7348                           ; BSR set to: 0
  7349  001EAA  0E00               	movlw	0
  7350  001EAC  0100               	movlb	0	; () banked
  7351  001EAE  6F83               	movwf	___ftadd@sign& (0+255),b
  7352                           
  7353                           ; BSR set to: 0
  7354  001EB0  0100               	movlb	0	; () banked
  7355  001EB2  517A               	movf	___ftadd@f1& (0+255),w,b
  7356  001EB4  0100               	movlb	0	; () banked
  7357  001EB6  277D               	addwf	___ftadd@f2& (0+255),f,b
  7358  001EB8  0100               	movlb	0	; () banked
  7359  001EBA  517B               	movf	(___ftadd@f1+1)& (0+255),w,b
  7360  001EBC  0100               	movlb	0	; () banked
  7361  001EBE  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7362  001EC0  0100               	movlb	0	; () banked
  7363  001EC2  517C               	movf	(___ftadd@f1+2)& (0+255),w,b
  7364  001EC4  0100               	movlb	0	; () banked
  7365  001EC6  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7366                           
  7367                           ; BSR set to: 0
  7368  001EC8  0100               	movlb	0	; () banked
  7369  001ECA  AF7F               	btfss	(___ftadd@f2+2)& (0+255),7,b
  7370  001ECC  D016               	goto	l4021
  7371                           
  7372                           ; BSR set to: 0
  7373  001ECE  0EFF               	movlw	255
  7374  001ED0  0100               	movlb	0	; () banked
  7375  001ED2  1B7D               	xorwf	___ftadd@f2& (0+255),f,b
  7376  001ED4  0EFF               	movlw	255
  7377  001ED6  0100               	movlb	0	; () banked
  7378  001ED8  1B7E               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  7379  001EDA  0EFF               	movlw	255
  7380  001EDC  0100               	movlb	0	; () banked
  7381  001EDE  1B7F               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  7382  001EE0  0E01               	movlw	1
  7383  001EE2  0100               	movlb	0	; () banked
  7384  001EE4  277D               	addwf	___ftadd@f2& (0+255),f,b
  7385  001EE6  0E00               	movlw	0
  7386  001EE8  0100               	movlb	0	; () banked
  7387  001EEA  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  7388  001EEC  0E00               	movlw	0
  7389  001EEE  0100               	movlb	0	; () banked
  7390  001EF0  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  7391                           
  7392                           ; BSR set to: 0
  7393  001EF2  0E01               	movlw	1
  7394  001EF4  0100               	movlb	0	; () banked
  7395  001EF6  6F83               	movwf	___ftadd@sign& (0+255),b
  7396  001EF8  D000               	goto	l4021
  7397  001EFA                     l4021:
  7398                           
  7399                           ; BSR set to: 0
  7400  001EFA  C07D  F060         	movff	___ftadd@f2,___ftpack@arg
  7401  001EFE  C07E  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
  7402  001F02  C07F  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
  7403  001F06  C085  F063         	movff	___ftadd@exp1,___ftpack@exp
  7404  001F0A  C083  F064         	movff	___ftadd@sign,___ftpack@sign
  7405  001F0E  EC5A  F012         	call	___ftpack	;wreg free
  7406  001F12  C060  F07A         	movff	?___ftpack,?___ftadd
  7407  001F16  C061  F07B         	movff	?___ftpack+1,?___ftadd+1
  7408  001F1A  C062  F07C         	movff	?___ftpack+2,?___ftadd+2
  7409  001F1E  D000               	goto	l989
  7410  001F20                     l989:
  7411  001F20  0012               	return		;funcret
  7412  001F22                     __end_of___ftadd:
  7413                           	opt stack 0
  7414                           tblptru	equ	0xFF8
  7415                           tblptrh	equ	0xFF7
  7416                           tblptrl	equ	0xFF6
  7417                           tablat	equ	0xFF5
  7418                           intcon	equ	0xFF2
  7419                           intcon2	equ	0xFF1
  7420                           intcon3	equ	0xFF0
  7421                           postinc0	equ	0xFEE
  7422                           wreg	equ	0xFE8
  7423                           postinc1	equ	0xFE6
  7424                           postdec1	equ	0xFE5
  7425                           fsr1h	equ	0xFE2
  7426                           fsr1l	equ	0xFE1
  7427                           postinc2	equ	0xFDE
  7428                           postdec2	equ	0xFDD
  7429                           fsr2h	equ	0xFDA
  7430                           fsr2l	equ	0xFD9
  7431                           status	equ	0xFD8
  7432                           
  7433 ;; *************** function _envoit_pwm *****************
  7434 ;; Defined at:
  7435 ;;		line 54 in file "moteur.c"
  7436 ;; Parameters:    Size  Location     Type
  7437 ;;  valeur          3   35[BANK0 ] float 
  7438 ;; Auto vars:     Size  Location     Type
  7439 ;;  abs_valeur      3   38[BANK0 ] float 
  7440 ;; Return value:  Size  Location     Type
  7441 ;;		None               void
  7442 ;; Registers used:
  7443 ;;		wreg, status,2, status,0, cstack
  7444 ;; Tracked objects:
  7445 ;;		On entry : 0/0
  7446 ;;		On exit  : 0/0
  7447 ;;		Unchanged: 0/0
  7448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7449 ;;      Params:         0       3       0       0
  7450 ;;      Locals:         0       3       0       0
  7451 ;;      Temps:          0       0       0       0
  7452 ;;      Totals:         0       6       0       0
  7453 ;;Total ram usage:        6 bytes
  7454 ;; Hardware stack levels used:    1
  7455 ;; Hardware stack levels required when called:    8
  7456 ;; This function calls:
  7457 ;;		___ftge
  7458 ;;		___ftmul
  7459 ;;		___ftneg
  7460 ;;		___fttol
  7461 ;; This function is called by:
  7462 ;;		_main
  7463 ;;		_asserv
  7464 ;; This function uses a non-reentrant model
  7465 ;;
  7466                           
  7467                           	psect	text31
  7468  0028BA                     __ptext31:
  7469                           	opt stack 0
  7470  0028BA                     _envoit_pwm:
  7471                           	opt stack 22
  7472                           
  7473                           ;moteur.c: 56: double abs_valeur;
  7474                           ;moteur.c: 58: if (valeur < 0)
  7475                           
  7476                           ;incstack = 0
  7477  0028BA  0100               	movlb	0	; () banked
  7478  0028BC  AF85               	btfss	(envoit_pwm@valeur+2)& (0+255),7,b
  7479  0028BE  D00F               	goto	l483
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;moteur.c: 59: abs_valeur = (double) (-valeur);
  7483  0028C0  C083  F077         	movff	envoit_pwm@valeur,___ftneg@f1
  7484  0028C4  C084  F078         	movff	envoit_pwm@valeur+1,___ftneg@f1+1
  7485  0028C8  C085  F079         	movff	envoit_pwm@valeur+2,___ftneg@f1+2
  7486  0028CC  EC4E  F01B         	call	___ftneg	;wreg free
  7487  0028D0  C077  F086         	movff	?___ftneg,envoit_pwm@abs_valeur
  7488  0028D4  C078  F087         	movff	?___ftneg+1,envoit_pwm@abs_valeur+1
  7489  0028D8  C079  F088         	movff	?___ftneg+2,envoit_pwm@abs_valeur+2
  7490  0028DC  D007               	goto	l4575
  7491  0028DE                     l483:
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;moteur.c: 60: else
  7495                           ;moteur.c: 61: abs_valeur = (double) valeur;
  7496  0028DE  C083  F086         	movff	envoit_pwm@valeur,envoit_pwm@abs_valeur
  7497  0028E2  C084  F087         	movff	envoit_pwm@valeur+1,envoit_pwm@abs_valeur+1
  7498  0028E6  C085  F088         	movff	envoit_pwm@valeur+2,envoit_pwm@abs_valeur+2
  7499  0028EA  D000               	goto	l4575
  7500  0028EC                     l4575:
  7501                           
  7502                           ;moteur.c: 63: abs_valeur *= (double) 669 / 100;
  7503  0028EC  C086  F068         	movff	envoit_pwm@abs_valeur,___ftmul@f1
  7504  0028F0  C087  F069         	movff	envoit_pwm@abs_valeur+1,___ftmul@f1+1
  7505  0028F4  C088  F06A         	movff	envoit_pwm@abs_valeur+2,___ftmul@f1+2
  7506  0028F8  0E14               	movlw	20
  7507  0028FA  0100               	movlb	0	; () banked
  7508  0028FC  6F6B               	movwf	___ftmul@f2& (0+255),b
  7509  0028FE  0ED6               	movlw	214
  7510  002900  0100               	movlb	0	; () banked
  7511  002902  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  7512  002904  0E40               	movlw	64
  7513  002906  0100               	movlb	0	; () banked
  7514  002908  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  7515  00290A  EC72  F010         	call	___ftmul	;wreg free
  7516  00290E  C068  F086         	movff	?___ftmul,envoit_pwm@abs_valeur
  7517  002912  C069  F087         	movff	?___ftmul+1,envoit_pwm@abs_valeur+1
  7518  002916  C06A  F088         	movff	?___ftmul+2,envoit_pwm@abs_valeur+2
  7519                           
  7520                           ;moteur.c: 65: if (abs_valeur > 669)
  7521  00291A  0E40               	movlw	64
  7522  00291C  0100               	movlb	0	; () banked
  7523  00291E  6F7A               	movwf	___ftge@ff1& (0+255),b
  7524  002920  0E27               	movlw	39
  7525  002922  0100               	movlb	0	; () banked
  7526  002924  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  7527  002926  0E44               	movlw	68
  7528  002928  0100               	movlb	0	; () banked
  7529  00292A  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  7530  00292C  C086  F07D         	movff	envoit_pwm@abs_valeur,___ftge@ff2
  7531  002930  C087  F07E         	movff	envoit_pwm@abs_valeur+1,___ftge@ff2+1
  7532  002934  C088  F07F         	movff	envoit_pwm@abs_valeur+2,___ftge@ff2+2
  7533  002938  EC36  F015         	call	___ftge	;wreg free
  7534  00293C  0100               	movlb	0	; () banked
  7535  00293E  B0D8               	btfsc	status,0,c
  7536  002940  D00A               	goto	l4579
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;moteur.c: 66: abs_valeur = 669;
  7540  002942  0E40               	movlw	64
  7541  002944  0100               	movlb	0	; () banked
  7542  002946  6F86               	movwf	envoit_pwm@abs_valeur& (0+255),b
  7543  002948  0E27               	movlw	39
  7544  00294A  0100               	movlb	0	; () banked
  7545  00294C  6F87               	movwf	(envoit_pwm@abs_valeur+1)& (0+255),b
  7546  00294E  0E44               	movlw	68
  7547  002950  0100               	movlb	0	; () banked
  7548  002952  6F88               	movwf	(envoit_pwm@abs_valeur+2)& (0+255),b
  7549  002954  D000               	goto	l4579
  7550  002956                     l4579:
  7551                           
  7552                           ; BSR set to: 0
  7553                           ;moteur.c: 68: if (valeur < (double) 0.)
  7554  002956  0100               	movlb	0	; () banked
  7555  002958  AF85               	btfss	(envoit_pwm@valeur+2)& (0+255),7,b
  7556  00295A  D002               	goto	l486
  7557                           
  7558                           ; BSR set to: 0
  7559                           ;moteur.c: 69: {
  7560                           ;moteur.c: 70: PORTDbits.RD4 = 1;
  7561  00295C  8883               	bsf	3971,4,c	;volatile
  7562                           
  7563                           ;moteur.c: 71: }
  7564  00295E  D002               	goto	l4583
  7565  002960                     l486:
  7566                           
  7567                           ; BSR set to: 0
  7568                           ;moteur.c: 72: else
  7569                           ;moteur.c: 73: {
  7570                           ;moteur.c: 74: PORTDbits.RD4 = 0;
  7571  002960  9883               	bcf	3971,4,c	;volatile
  7572  002962  D000               	goto	l4583
  7573  002964                     l4583:
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;moteur.c: 75: }
  7577                           ;moteur.c: 77: PDC0L = (uint8_t) ((uint16_t) abs_valeur % 256);
  7578  002964  C086  F060         	movff	envoit_pwm@abs_valeur,___fttol@f1
  7579  002968  C087  F061         	movff	envoit_pwm@abs_valeur+1,___fttol@f1+1
  7580  00296C  C088  F062         	movff	envoit_pwm@abs_valeur+2,___fttol@f1+2
  7581  002970  ECC1  F011         	call	___fttol	;wreg free
  7582  002974  0100               	movlb	0	; () banked
  7583  002976  5160               	movf	?___fttol& (0+255),w,b
  7584  002978  6E79               	movwf	3961,c	;volatile
  7585                           
  7586                           ;moteur.c: 78: PDC0H = (uint8_t) ((uint16_t) abs_valeur / 256);
  7587  00297A  C086  F060         	movff	envoit_pwm@abs_valeur,___fttol@f1
  7588  00297E  C087  F061         	movff	envoit_pwm@abs_valeur+1,___fttol@f1+1
  7589  002982  C088  F062         	movff	envoit_pwm@abs_valeur+2,___fttol@f1+2
  7590  002986  ECC1  F011         	call	___fttol	;wreg free
  7591  00298A  0100               	movlb	0	; () banked
  7592  00298C  C061  F060         	movff	?___fttol+1,?___fttol
  7593  002990  0100               	movlb	0	; () banked
  7594  002992  6B61               	clrf	(?___fttol+1)& (0+255),b
  7595  002994  0100               	movlb	0	; () banked
  7596  002996  5160               	movf	?___fttol& (0+255),w,b
  7597  002998  6E78               	movwf	3960,c	;volatile
  7598                           
  7599                           ; BSR set to: 0
  7600  00299A  0012               	return		;funcret
  7601  00299C                     __end_of_envoit_pwm:
  7602                           	opt stack 0
  7603                           tblptru	equ	0xFF8
  7604                           tblptrh	equ	0xFF7
  7605                           tblptrl	equ	0xFF6
  7606                           tablat	equ	0xFF5
  7607                           intcon	equ	0xFF2
  7608                           intcon2	equ	0xFF1
  7609                           intcon3	equ	0xFF0
  7610                           postinc0	equ	0xFEE
  7611                           wreg	equ	0xFE8
  7612                           postinc1	equ	0xFE6
  7613                           postdec1	equ	0xFE5
  7614                           fsr1h	equ	0xFE2
  7615                           fsr1l	equ	0xFE1
  7616                           postinc2	equ	0xFDE
  7617                           postdec2	equ	0xFDD
  7618                           fsr2h	equ	0xFDA
  7619                           fsr2l	equ	0xFD9
  7620                           status	equ	0xFD8
  7621                           
  7622 ;; *************** function ___ftneg *****************
  7623 ;; Defined at:
  7624 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  7625 ;; Parameters:    Size  Location     Type
  7626 ;;  f1              3   23[BANK0 ] float 
  7627 ;; Auto vars:     Size  Location     Type
  7628 ;;		None
  7629 ;; Return value:  Size  Location     Type
  7630 ;;                  3   23[BANK0 ] float 
  7631 ;; Registers used:
  7632 ;;		wreg, status,2, status,0
  7633 ;; Tracked objects:
  7634 ;;		On entry : 0/0
  7635 ;;		On exit  : 0/0
  7636 ;;		Unchanged: 0/0
  7637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7638 ;;      Params:         0       3       0       0
  7639 ;;      Locals:         0       0       0       0
  7640 ;;      Temps:          0       0       0       0
  7641 ;;      Totals:         0       3       0       0
  7642 ;;Total ram usage:        3 bytes
  7643 ;; Hardware stack levels used:    1
  7644 ;; Hardware stack levels required when called:    6
  7645 ;; This function calls:
  7646 ;;		Nothing
  7647 ;; This function is called by:
  7648 ;;		_envoit_pwm
  7649 ;;		_triangulation
  7650 ;;		_saturation
  7651 ;;		_get_distance
  7652 ;;		_sin
  7653 ;;		_fonction_PID
  7654 ;;		_check_divergence_angle
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text32
  7659  00369C                     __ptext32:
  7660                           	opt stack 0
  7661  00369C                     ___ftneg:
  7662                           	opt stack 22
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;incstack = 0
  7666  00369C  0100               	movlb	0	; () banked
  7667  00369E  5177               	movf	___ftneg@f1& (0+255),w,b
  7668  0036A0  0100               	movlb	0	; () banked
  7669  0036A2  1178               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  7670  0036A4  0100               	movlb	0	; () banked
  7671  0036A6  1179               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  7672  0036A8  B4D8               	btfsc	status,2,c
  7673  0036AA  D009               	goto	l1045
  7674                           
  7675                           ; BSR set to: 0
  7676  0036AC  0E00               	movlw	0
  7677  0036AE  0100               	movlb	0	; () banked
  7678  0036B0  1B77               	xorwf	___ftneg@f1& (0+255),f,b
  7679  0036B2  0E00               	movlw	0
  7680  0036B4  0100               	movlb	0	; () banked
  7681  0036B6  1B78               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  7682  0036B8  0E80               	movlw	128
  7683  0036BA  0100               	movlb	0	; () banked
  7684  0036BC  1B79               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  7685  0036BE                     l1045:
  7686                           
  7687                           ; BSR set to: 0
  7688  0036BE  C077  F077         	movff	___ftneg@f1,?___ftneg
  7689  0036C2  C078  F078         	movff	___ftneg@f1+1,?___ftneg+1
  7690  0036C6  C079  F079         	movff	___ftneg@f1+2,?___ftneg+2
  7691                           
  7692                           ; BSR set to: 0
  7693  0036CA  0012               	return		;funcret
  7694  0036CC                     __end_of___ftneg:
  7695                           	opt stack 0
  7696                           tblptru	equ	0xFF8
  7697                           tblptrh	equ	0xFF7
  7698                           tblptrl	equ	0xFF6
  7699                           tablat	equ	0xFF5
  7700                           intcon	equ	0xFF2
  7701                           intcon2	equ	0xFF1
  7702                           intcon3	equ	0xFF0
  7703                           postinc0	equ	0xFEE
  7704                           wreg	equ	0xFE8
  7705                           postinc1	equ	0xFE6
  7706                           postdec1	equ	0xFE5
  7707                           fsr1h	equ	0xFE2
  7708                           fsr1l	equ	0xFE1
  7709                           postinc2	equ	0xFDE
  7710                           postdec2	equ	0xFDD
  7711                           fsr2h	equ	0xFDA
  7712                           fsr2l	equ	0xFD9
  7713                           status	equ	0xFD8
  7714                           
  7715 ;; *************** function ___ftmul *****************
  7716 ;; Defined at:
  7717 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  7718 ;; Parameters:    Size  Location     Type
  7719 ;;  f1              3    8[BANK0 ] float 
  7720 ;;  f2              3   11[BANK0 ] float 
  7721 ;; Auto vars:     Size  Location     Type
  7722 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
  7723 ;;  sign            1   22[BANK0 ] unsigned char 
  7724 ;;  cntr            1   21[BANK0 ] unsigned char 
  7725 ;;  exp             1   17[BANK0 ] unsigned char 
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  3    8[BANK0 ] float 
  7728 ;; Registers used:
  7729 ;;		wreg, status,2, status,0, cstack
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7735 ;;      Params:         0       6       0       0
  7736 ;;      Locals:         0       6       0       0
  7737 ;;      Temps:          0       3       0       0
  7738 ;;      Totals:         0      15       0       0
  7739 ;;Total ram usage:       15 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; Hardware stack levels required when called:    7
  7742 ;; This function calls:
  7743 ;;		___ftpack
  7744 ;; This function is called by:
  7745 ;;		_envoit_pwm
  7746 ;;		_obtention_angle
  7747 ;;		_triangulation
  7748 ;;		_conversion_degre_radian
  7749 ;;		_get_distance
  7750 ;;		_sqrt
  7751 ;;		_sin
  7752 ;;		_eval_poly
  7753 ;;		_conversion_angle
  7754 ;;		_fonction_PID
  7755 ;;		_mesure_vitesse
  7756 ;; This function uses a non-reentrant model
  7757 ;;
  7758                           
  7759                           	psect	text33
  7760  0020E4                     __ptext33:
  7761                           	opt stack 0
  7762  0020E4                     ___ftmul:
  7763                           	opt stack 22
  7764                           
  7765                           ; BSR set to: 0
  7766                           ;incstack = 0
  7767  0020E4  C06A  F06E         	movff	___ftmul@f1+2,??___ftmul
  7768  0020E8  0100               	movlb	0	; () banked
  7769  0020EA  6B6F               	clrf	(??___ftmul+1)& (0+255),b
  7770  0020EC  6B70               	clrf	(??___ftmul+2)& (0+255),b
  7771  0020EE  0100               	movlb	0	; () banked
  7772  0020F0  3569               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  7773  0020F2  0100               	movlb	0	; () banked
  7774  0020F4  376E               	rlcf	??___ftmul& (0+255),f,b
  7775  0020F6  E301               	bnc	u3521
  7776  0020F8  816F               	bsf	(??___ftmul+1)& (0+255),0,b
  7777  0020FA                     u3521:
  7778  0020FA  0100               	movlb	0	; () banked
  7779  0020FC  516E               	movf	??___ftmul& (0+255),w,b
  7780  0020FE  0100               	movlb	0	; () banked
  7781  002100  6F71               	movwf	___ftmul@exp& (0+255),b
  7782  002102  0100               	movlb	0	; () banked
  7783  002104  5171               	movf	___ftmul@exp& (0+255),w,b
  7784  002106  A4D8               	btfss	status,2,c
  7785  002108  D002               	goto	l4031
  7786  00210A  D014               	goto	l4033
  7787                           
  7788                           ; BSR set to: 0
  7789                           
  7790                           ; BSR set to: 0
  7791  00210C  D098               	goto	l1035
  7792  00210E                     l4031:
  7793                           
  7794                           ; BSR set to: 0
  7795  00210E  C06D  F06E         	movff	___ftmul@f2+2,??___ftmul
  7796  002112  0100               	movlb	0	; () banked
  7797  002114  6B6F               	clrf	(??___ftmul+1)& (0+255),b
  7798  002116  6B70               	clrf	(??___ftmul+2)& (0+255),b
  7799  002118  0100               	movlb	0	; () banked
  7800  00211A  356C               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  7801  00211C  0100               	movlb	0	; () banked
  7802  00211E  376E               	rlcf	??___ftmul& (0+255),f,b
  7803  002120  E301               	bnc	u3541
  7804  002122  816F               	bsf	(??___ftmul+1)& (0+255),0,b
  7805  002124                     u3541:
  7806  002124  0100               	movlb	0	; () banked
  7807  002126  516E               	movf	??___ftmul& (0+255),w,b
  7808  002128  0100               	movlb	0	; () banked
  7809  00212A  6F76               	movwf	___ftmul@sign& (0+255),b
  7810  00212C  0100               	movlb	0	; () banked
  7811  00212E  5176               	movf	___ftmul@sign& (0+255),w,b
  7812  002130  A4D8               	btfss	status,2,c
  7813  002132  D00A               	goto	l4037
  7814  002134                     l4033:
  7815                           
  7816                           ; BSR set to: 0
  7817  002134  0E00               	movlw	0
  7818  002136  0100               	movlb	0	; () banked
  7819  002138  6F68               	movwf	?___ftmul& (0+255),b
  7820  00213A  0E00               	movlw	0
  7821  00213C  0100               	movlb	0	; () banked
  7822  00213E  6F69               	movwf	(?___ftmul+1)& (0+255),b
  7823  002140  0E00               	movlw	0
  7824  002142  0100               	movlb	0	; () banked
  7825  002144  6F6A               	movwf	(?___ftmul+2)& (0+255),b
  7826                           
  7827                           ; BSR set to: 0
  7828  002146  D07B               	goto	l1035
  7829  002148                     l4037:
  7830                           
  7831                           ; BSR set to: 0
  7832  002148  0100               	movlb	0	; () banked
  7833  00214A  5176               	movf	___ftmul@sign& (0+255),w,b
  7834  00214C  0F7B               	addlw	123
  7835  00214E  0100               	movlb	0	; () banked
  7836  002150  2771               	addwf	___ftmul@exp& (0+255),f,b
  7837                           
  7838                           ; BSR set to: 0
  7839  002152  C06A  F076         	movff	___ftmul@f1+2,___ftmul@sign
  7840  002156  0100               	movlb	0	; () banked
  7841  002158  516D               	movf	(___ftmul@f2+2)& (0+255),w,b
  7842  00215A  0100               	movlb	0	; () banked
  7843  00215C  1B76               	xorwf	___ftmul@sign& (0+255),f,b
  7844  00215E  0E80               	movlw	128
  7845  002160  0100               	movlb	0	; () banked
  7846  002162  1776               	andwf	___ftmul@sign& (0+255),f,b
  7847                           
  7848                           ; BSR set to: 0
  7849  002164  0100               	movlb	0	; () banked
  7850  002166  8F69               	bsf	(___ftmul@f1+1)& (0+255),7,b
  7851                           
  7852                           ; BSR set to: 0
  7853  002168  0100               	movlb	0	; () banked
  7854  00216A  8F6C               	bsf	(___ftmul@f2+1)& (0+255),7,b
  7855                           
  7856                           ; BSR set to: 0
  7857  00216C  0EFF               	movlw	255
  7858  00216E  0100               	movlb	0	; () banked
  7859  002170  176B               	andwf	___ftmul@f2& (0+255),f,b
  7860  002172  0EFF               	movlw	255
  7861  002174  0100               	movlb	0	; () banked
  7862  002176  176C               	andwf	(___ftmul@f2+1)& (0+255),f,b
  7863  002178  0E00               	movlw	0
  7864  00217A  0100               	movlb	0	; () banked
  7865  00217C  176D               	andwf	(___ftmul@f2+2)& (0+255),f,b
  7866                           
  7867                           ; BSR set to: 0
  7868  00217E  0E00               	movlw	0
  7869  002180  0100               	movlb	0	; () banked
  7870  002182  6F72               	movwf	___ftmul@f3_as_product& (0+255),b
  7871  002184  0E00               	movlw	0
  7872  002186  0100               	movlb	0	; () banked
  7873  002188  6F73               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7874  00218A  0E00               	movlw	0
  7875  00218C  0100               	movlb	0	; () banked
  7876  00218E  6F74               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7877                           
  7878                           ; BSR set to: 0
  7879  002190  0E07               	movlw	7
  7880  002192  0100               	movlb	0	; () banked
  7881  002194  6F75               	movwf	___ftmul@cntr& (0+255),b
  7882  002196  D000               	goto	l4051
  7883  002198                     l4051:
  7884                           
  7885                           ; BSR set to: 0
  7886  002198  0100               	movlb	0	; () banked
  7887  00219A  A168               	btfss	___ftmul@f1& (0+255),0,b
  7888  00219C  D00D               	goto	l4055
  7889                           
  7890                           ; BSR set to: 0
  7891  00219E  0100               	movlb	0	; () banked
  7892  0021A0  516B               	movf	___ftmul@f2& (0+255),w,b
  7893  0021A2  0100               	movlb	0	; () banked
  7894  0021A4  2772               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7895  0021A6  0100               	movlb	0	; () banked
  7896  0021A8  516C               	movf	(___ftmul@f2+1)& (0+255),w,b
  7897  0021AA  0100               	movlb	0	; () banked
  7898  0021AC  2373               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7899  0021AE  0100               	movlb	0	; () banked
  7900  0021B0  516D               	movf	(___ftmul@f2+2)& (0+255),w,b
  7901  0021B2  0100               	movlb	0	; () banked
  7902  0021B4  2374               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7903  0021B6  D000               	goto	l4055
  7904  0021B8                     l4055:
  7905                           
  7906                           ; BSR set to: 0
  7907  0021B8  0100               	movlb	0	; () banked
  7908  0021BA  90D8               	bcf	status,0,c
  7909  0021BC  336A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7910  0021BE  3369               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7911  0021C0  3368               	rrcf	___ftmul@f1& (0+255),f,b
  7912  0021C2  0100               	movlb	0	; () banked
  7913  0021C4  90D8               	bcf	status,0,c
  7914  0021C6  376B               	rlcf	___ftmul@f2& (0+255),f,b
  7915  0021C8  376C               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  7916  0021CA  376D               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  7917                           
  7918                           ; BSR set to: 0
  7919  0021CC  0100               	movlb	0	; () banked
  7920  0021CE  2F75               	decfsz	___ftmul@cntr& (0+255),f,b
  7921  0021D0  D7E3               	goto	l4051
  7922  0021D2  D000               	goto	l4059
  7923  0021D4                     l4059:
  7924                           
  7925                           ; BSR set to: 0
  7926  0021D4  0E09               	movlw	9
  7927  0021D6  0100               	movlb	0	; () banked
  7928  0021D8  6F75               	movwf	___ftmul@cntr& (0+255),b
  7929  0021DA  D000               	goto	l4061
  7930  0021DC                     l4061:
  7931                           
  7932                           ; BSR set to: 0
  7933  0021DC  0100               	movlb	0	; () banked
  7934  0021DE  A168               	btfss	___ftmul@f1& (0+255),0,b
  7935  0021E0  D00D               	goto	l4065
  7936                           
  7937                           ; BSR set to: 0
  7938  0021E2  0100               	movlb	0	; () banked
  7939  0021E4  516B               	movf	___ftmul@f2& (0+255),w,b
  7940  0021E6  0100               	movlb	0	; () banked
  7941  0021E8  2772               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7942  0021EA  0100               	movlb	0	; () banked
  7943  0021EC  516C               	movf	(___ftmul@f2+1)& (0+255),w,b
  7944  0021EE  0100               	movlb	0	; () banked
  7945  0021F0  2373               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7946  0021F2  0100               	movlb	0	; () banked
  7947  0021F4  516D               	movf	(___ftmul@f2+2)& (0+255),w,b
  7948  0021F6  0100               	movlb	0	; () banked
  7949  0021F8  2374               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7950  0021FA  D000               	goto	l4065
  7951  0021FC                     l4065:
  7952                           
  7953                           ; BSR set to: 0
  7954  0021FC  0100               	movlb	0	; () banked
  7955  0021FE  90D8               	bcf	status,0,c
  7956  002200  336A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7957  002202  3369               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7958  002204  3368               	rrcf	___ftmul@f1& (0+255),f,b
  7959  002206  0100               	movlb	0	; () banked
  7960  002208  90D8               	bcf	status,0,c
  7961  00220A  3374               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7962  00220C  3373               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7963  00220E  3372               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7964                           
  7965                           ; BSR set to: 0
  7966  002210  0100               	movlb	0	; () banked
  7967  002212  2F75               	decfsz	___ftmul@cntr& (0+255),f,b
  7968  002214  D7E3               	goto	l4061
  7969  002216  D000               	goto	l4069
  7970  002218                     l4069:
  7971                           
  7972                           ; BSR set to: 0
  7973  002218  C072  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  7974  00221C  C073  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7975  002220  C074  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7976  002224  C071  F063         	movff	___ftmul@exp,___ftpack@exp
  7977  002228  C076  F064         	movff	___ftmul@sign,___ftpack@sign
  7978  00222C  EC5A  F012         	call	___ftpack	;wreg free
  7979  002230  C060  F068         	movff	?___ftpack,?___ftmul
  7980  002234  C061  F069         	movff	?___ftpack+1,?___ftmul+1
  7981  002238  C062  F06A         	movff	?___ftpack+2,?___ftmul+2
  7982  00223C  D000               	goto	l1035
  7983  00223E                     l1035:
  7984  00223E  0012               	return		;funcret
  7985  002240                     __end_of___ftmul:
  7986                           	opt stack 0
  7987                           tblptru	equ	0xFF8
  7988                           tblptrh	equ	0xFF7
  7989                           tblptrl	equ	0xFF6
  7990                           tablat	equ	0xFF5
  7991                           intcon	equ	0xFF2
  7992                           intcon2	equ	0xFF1
  7993                           intcon3	equ	0xFF0
  7994                           postinc0	equ	0xFEE
  7995                           wreg	equ	0xFE8
  7996                           postinc1	equ	0xFE6
  7997                           postdec1	equ	0xFE5
  7998                           fsr1h	equ	0xFE2
  7999                           fsr1l	equ	0xFE1
  8000                           postinc2	equ	0xFDE
  8001                           postdec2	equ	0xFDD
  8002                           fsr2h	equ	0xFDA
  8003                           fsr2l	equ	0xFD9
  8004                           status	equ	0xFD8
  8005                           
  8006 ;; *************** function ___ftpack *****************
  8007 ;; Defined at:
  8008 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;  arg             3    0[BANK0 ] unsigned um
  8011 ;;  exp             1    3[BANK0 ] unsigned char 
  8012 ;;  sign            1    4[BANK0 ] unsigned char 
  8013 ;; Auto vars:     Size  Location     Type
  8014 ;;		None
  8015 ;; Return value:  Size  Location     Type
  8016 ;;                  3    0[BANK0 ] float 
  8017 ;; Registers used:
  8018 ;;		wreg, status,2, status,0
  8019 ;; Tracked objects:
  8020 ;;		On entry : 0/0
  8021 ;;		On exit  : 0/0
  8022 ;;		Unchanged: 0/0
  8023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8024 ;;      Params:         0       5       0       0
  8025 ;;      Locals:         0       0       0       0
  8026 ;;      Temps:          0       3       0       0
  8027 ;;      Totals:         0       8       0       0
  8028 ;;Total ram usage:        8 bytes
  8029 ;; Hardware stack levels used:    1
  8030 ;; Hardware stack levels required when called:    6
  8031 ;; This function calls:
  8032 ;;		Nothing
  8033 ;; This function is called by:
  8034 ;;		___altoft
  8035 ;;		___ftadd
  8036 ;;		___ftdiv
  8037 ;;		___ftmul
  8038 ;;		___lwtoft
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           	psect	text34
  8043  0024B4                     __ptext34:
  8044                           	opt stack 0
  8045  0024B4                     ___ftpack:
  8046                           	opt stack 22
  8047                           
  8048                           ;incstack = 0
  8049  0024B4  0100               	movlb	0	; () banked
  8050  0024B6  5163               	movf	___ftpack@exp& (0+255),w,b
  8051  0024B8  0100               	movlb	0	; () banked
  8052  0024BA  B4D8               	btfsc	status,2,c
  8053  0024BC  D008               	goto	l3901
  8054                           
  8055                           ; BSR set to: 0
  8056  0024BE  0100               	movlb	0	; () banked
  8057  0024C0  5160               	movf	___ftpack@arg& (0+255),w,b
  8058  0024C2  0100               	movlb	0	; () banked
  8059  0024C4  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  8060  0024C6  0100               	movlb	0	; () banked
  8061  0024C8  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  8062  0024CA  A4D8               	btfss	status,2,c
  8063  0024CC  D013               	goto	l3907
  8064  0024CE                     l3901:
  8065                           
  8066                           ; BSR set to: 0
  8067  0024CE  0E00               	movlw	0
  8068  0024D0  0100               	movlb	0	; () banked
  8069  0024D2  6F60               	movwf	?___ftpack& (0+255),b
  8070  0024D4  0E00               	movlw	0
  8071  0024D6  0100               	movlb	0	; () banked
  8072  0024D8  6F61               	movwf	(?___ftpack+1)& (0+255),b
  8073  0024DA  0E00               	movlw	0
  8074  0024DC  0100               	movlb	0	; () banked
  8075  0024DE  6F62               	movwf	(?___ftpack+2)& (0+255),b
  8076                           
  8077                           ; BSR set to: 0
  8078  0024E0  D078               	goto	l948
  8079                           
  8080                           ; BSR set to: 0
  8081  0024E2  D008               	goto	l3907
  8082  0024E4                     l3905:
  8083                           
  8084                           ; BSR set to: 0
  8085  0024E4  0100               	movlb	0	; () banked
  8086  0024E6  2B63               	incf	___ftpack@exp& (0+255),f,b
  8087  0024E8  0100               	movlb	0	; () banked
  8088  0024EA  90D8               	bcf	status,0,c
  8089  0024EC  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8090  0024EE  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8091  0024F0  3360               	rrcf	___ftpack@arg& (0+255),f,b
  8092  0024F2  D000               	goto	l3907
  8093  0024F4                     l3907:
  8094                           
  8095                           ; BSR set to: 0
  8096  0024F4  0E00               	movlw	0
  8097  0024F6  0100               	movlb	0	; () banked
  8098  0024F8  1560               	andwf	___ftpack@arg& (0+255),w,b
  8099  0024FA  0100               	movlb	0	; () banked
  8100  0024FC  6F65               	movwf	??___ftpack& (0+255),b
  8101  0024FE  0E00               	movlw	0
  8102  002500  0100               	movlb	0	; () banked
  8103  002502  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8104  002504  0100               	movlb	0	; () banked
  8105  002506  6F66               	movwf	(??___ftpack+1)& (0+255),b
  8106  002508  0EFE               	movlw	254
  8107  00250A  0100               	movlb	0	; () banked
  8108  00250C  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8109  00250E  0100               	movlb	0	; () banked
  8110  002510  6F67               	movwf	(??___ftpack+2)& (0+255),b
  8111  002512  0100               	movlb	0	; () banked
  8112  002514  5165               	movf	??___ftpack& (0+255),w,b
  8113  002516  0100               	movlb	0	; () banked
  8114  002518  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  8115  00251A  0100               	movlb	0	; () banked
  8116  00251C  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  8117  00251E  B4D8               	btfsc	status,2,c
  8118  002520  D013               	goto	l3913
  8119  002522  D7E0               	goto	l3905
  8120                           
  8121                           ; BSR set to: 0
  8122  002524  D011               	goto	l3913
  8123  002526                     l3909:
  8124                           
  8125                           ; BSR set to: 0
  8126  002526  0100               	movlb	0	; () banked
  8127  002528  2B63               	incf	___ftpack@exp& (0+255),f,b
  8128                           
  8129                           ; BSR set to: 0
  8130  00252A  0E01               	movlw	1
  8131  00252C  0100               	movlb	0	; () banked
  8132  00252E  2760               	addwf	___ftpack@arg& (0+255),f,b
  8133  002530  0E00               	movlw	0
  8134  002532  0100               	movlb	0	; () banked
  8135  002534  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  8136  002536  0E00               	movlw	0
  8137  002538  0100               	movlb	0	; () banked
  8138  00253A  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  8139  00253C  0100               	movlb	0	; () banked
  8140  00253E  90D8               	bcf	status,0,c
  8141  002540  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8142  002542  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8143  002544  3360               	rrcf	___ftpack@arg& (0+255),f,b
  8144  002546  D000               	goto	l3913
  8145  002548                     l3913:
  8146                           
  8147                           ; BSR set to: 0
  8148  002548  0E00               	movlw	0
  8149  00254A  0100               	movlb	0	; () banked
  8150  00254C  1560               	andwf	___ftpack@arg& (0+255),w,b
  8151  00254E  0100               	movlb	0	; () banked
  8152  002550  6F65               	movwf	??___ftpack& (0+255),b
  8153  002552  0E00               	movlw	0
  8154  002554  0100               	movlb	0	; () banked
  8155  002556  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8156  002558  0100               	movlb	0	; () banked
  8157  00255A  6F66               	movwf	(??___ftpack+1)& (0+255),b
  8158  00255C  0EFF               	movlw	255
  8159  00255E  0100               	movlb	0	; () banked
  8160  002560  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8161  002562  0100               	movlb	0	; () banked
  8162  002564  6F67               	movwf	(??___ftpack+2)& (0+255),b
  8163  002566  0100               	movlb	0	; () banked
  8164  002568  5165               	movf	??___ftpack& (0+255),w,b
  8165  00256A  0100               	movlb	0	; () banked
  8166  00256C  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  8167  00256E  0100               	movlb	0	; () banked
  8168  002570  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  8169  002572  B4D8               	btfsc	status,2,c
  8170  002574  D00A               	goto	l3917
  8171  002576  D7D7               	goto	l3909
  8172                           
  8173                           ; BSR set to: 0
  8174  002578  D008               	goto	l3917
  8175  00257A                     l3915:
  8176                           
  8177                           ; BSR set to: 0
  8178  00257A  0100               	movlb	0	; () banked
  8179  00257C  0763               	decf	___ftpack@exp& (0+255),f,b
  8180  00257E  0100               	movlb	0	; () banked
  8181  002580  90D8               	bcf	status,0,c
  8182  002582  3760               	rlcf	___ftpack@arg& (0+255),f,b
  8183  002584  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  8184  002586  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  8185  002588  D000               	goto	l3917
  8186  00258A                     l3917:
  8187                           
  8188                           ; BSR set to: 0
  8189  00258A  0100               	movlb	0	; () banked
  8190  00258C  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  8191  00258E  D005               	goto	l959
  8192                           
  8193                           ; BSR set to: 0
  8194  002590  0E02               	movlw	2
  8195  002592  0100               	movlb	0	; () banked
  8196  002594  6163               	cpfslt	___ftpack@exp& (0+255),b
  8197  002596  D7F1               	goto	l3915
  8198  002598  D000               	goto	l959
  8199  00259A                     l959:
  8200                           
  8201                           ; BSR set to: 0
  8202  00259A  0100               	movlb	0	; () banked
  8203  00259C  B163               	btfsc	___ftpack@exp& (0+255),0,b
  8204  00259E  D003               	goto	l3923
  8205                           
  8206                           ; BSR set to: 0
  8207  0025A0  0100               	movlb	0	; () banked
  8208  0025A2  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
  8209  0025A4  D000               	goto	l3923
  8210  0025A6                     l3923:
  8211                           
  8212                           ; BSR set to: 0
  8213  0025A6  0100               	movlb	0	; () banked
  8214  0025A8  90D8               	bcf	status,0,c
  8215  0025AA  3363               	rrcf	___ftpack@exp& (0+255),f,b
  8216  0025AC  0100               	movlb	0	; () banked
  8217  0025AE  5163               	movf	___ftpack@exp& (0+255),w,b
  8218  0025B0  0100               	movlb	0	; () banked
  8219  0025B2  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  8220                           
  8221                           ; BSR set to: 0
  8222  0025B4  0100               	movlb	0	; () banked
  8223  0025B6  5164               	movf	___ftpack@sign& (0+255),w,b
  8224  0025B8  0100               	movlb	0	; () banked
  8225  0025BA  B4D8               	btfsc	status,2,c
  8226  0025BC  D003               	goto	l3929
  8227                           
  8228                           ; BSR set to: 0
  8229  0025BE  0100               	movlb	0	; () banked
  8230  0025C0  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
  8231  0025C2  D000               	goto	l3929
  8232  0025C4                     l3929:
  8233                           
  8234                           ; BSR set to: 0
  8235  0025C4  C060  F060         	movff	___ftpack@arg,?___ftpack
  8236  0025C8  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
  8237  0025CC  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
  8238  0025D0  D000               	goto	l948
  8239  0025D2                     l948:
  8240                           
  8241                           ; BSR set to: 0
  8242  0025D2  0012               	return		;funcret
  8243  0025D4                     __end_of___ftpack:
  8244                           	opt stack 0
  8245                           tblptru	equ	0xFF8
  8246                           tblptrh	equ	0xFF7
  8247                           tblptrl	equ	0xFF6
  8248                           tablat	equ	0xFF5
  8249                           intcon	equ	0xFF2
  8250                           intcon2	equ	0xFF1
  8251                           intcon3	equ	0xFF0
  8252                           postinc0	equ	0xFEE
  8253                           wreg	equ	0xFE8
  8254                           postinc1	equ	0xFE6
  8255                           postdec1	equ	0xFE5
  8256                           fsr1h	equ	0xFE2
  8257                           fsr1l	equ	0xFE1
  8258                           postinc2	equ	0xFDE
  8259                           postdec2	equ	0xFDD
  8260                           fsr2h	equ	0xFDA
  8261                           fsr2l	equ	0xFD9
  8262                           status	equ	0xFD8
  8263                           
  8264 ;; *************** function ___ftge *****************
  8265 ;; Defined at:
  8266 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  8267 ;; Parameters:    Size  Location     Type
  8268 ;;  ff1             3   26[BANK0 ] float 
  8269 ;;  ff2             3   29[BANK0 ] float 
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;		None
  8272 ;; Return value:  Size  Location     Type
  8273 ;;		None               void
  8274 ;; Registers used:
  8275 ;;		wreg, status,2, status,0
  8276 ;; Tracked objects:
  8277 ;;		On entry : 0/0
  8278 ;;		On exit  : 0/0
  8279 ;;		Unchanged: 0/0
  8280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8281 ;;      Params:         0       6       0       0
  8282 ;;      Locals:         0       0       0       0
  8283 ;;      Temps:          0       3       0       0
  8284 ;;      Totals:         0       9       0       0
  8285 ;;Total ram usage:        9 bytes
  8286 ;; Hardware stack levels used:    1
  8287 ;; Hardware stack levels required when called:    6
  8288 ;; This function calls:
  8289 ;;		Nothing
  8290 ;; This function is called by:
  8291 ;;		_main
  8292 ;;		_envoit_pwm
  8293 ;;		_saturation
  8294 ;;		_sqrt
  8295 ;;		_cos
  8296 ;;		_sin
  8297 ;;		_floor
  8298 ;;		_ecretage_consignes
  8299 ;;		_saturation_erreur_integralle_vitesse
  8300 ;;		_check_divergence_angle
  8301 ;;		_check_divergence_position
  8302 ;;		_modulo_angle
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306                           	psect	text35
  8307  002A6C                     __ptext35:
  8308                           	opt stack 0
  8309  002A6C                     ___ftge:
  8310                           	opt stack 22
  8311                           
  8312                           ; BSR set to: 0
  8313                           ;incstack = 0
  8314  002A6C  0100               	movlb	0	; () banked
  8315  002A6E  AF7C               	btfss	(___ftge@ff1+2)& (0+255),7,b
  8316  002A70  D01E               	goto	l4077
  8317                           
  8318                           ; BSR set to: 0
  8319  002A72  C07A  F080         	movff	___ftge@ff1,??___ftge
  8320  002A76  C07B  F081         	movff	___ftge@ff1+1,??___ftge+1
  8321  002A7A  C07C  F082         	movff	___ftge@ff1+2,??___ftge+2
  8322  002A7E  0100               	movlb	0	; () banked
  8323  002A80  1F80               	comf	??___ftge& (0+255),f,b
  8324  002A82  1F81               	comf	(??___ftge+1)& (0+255),f,b
  8325  002A84  1F82               	comf	(??___ftge+2)& (0+255),f,b
  8326  002A86  2B80               	incf	??___ftge& (0+255),f,b
  8327  002A88  0E00               	movlw	0
  8328  002A8A  2381               	addwfc	(??___ftge+1)& (0+255),f,b
  8329  002A8C  2382               	addwfc	(??___ftge+2)& (0+255),f,b
  8330  002A8E  0E00               	movlw	0
  8331  002A90  0100               	movlb	0	; () banked
  8332  002A92  2580               	addwf	??___ftge& (0+255),w,b
  8333  002A94  0100               	movlb	0	; () banked
  8334  002A96  6F7A               	movwf	___ftge@ff1& (0+255),b
  8335  002A98  0E00               	movlw	0
  8336  002A9A  0100               	movlb	0	; () banked
  8337  002A9C  2181               	addwfc	(??___ftge+1)& (0+255),w,b
  8338  002A9E  0100               	movlb	0	; () banked
  8339  002AA0  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  8340  002AA2  0E80               	movlw	128
  8341  002AA4  0100               	movlb	0	; () banked
  8342  002AA6  2182               	addwfc	(??___ftge+2)& (0+255),w,b
  8343  002AA8  0100               	movlb	0	; () banked
  8344  002AAA  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  8345  002AAC  D000               	goto	l4077
  8346  002AAE                     l4077:
  8347                           
  8348                           ; BSR set to: 0
  8349  002AAE  0100               	movlb	0	; () banked
  8350  002AB0  AF7F               	btfss	(___ftge@ff2+2)& (0+255),7,b
  8351  002AB2  D01E               	goto	l4081
  8352                           
  8353                           ; BSR set to: 0
  8354  002AB4  C07D  F080         	movff	___ftge@ff2,??___ftge
  8355  002AB8  C07E  F081         	movff	___ftge@ff2+1,??___ftge+1
  8356  002ABC  C07F  F082         	movff	___ftge@ff2+2,??___ftge+2
  8357  002AC0  0100               	movlb	0	; () banked
  8358  002AC2  1F80               	comf	??___ftge& (0+255),f,b
  8359  002AC4  1F81               	comf	(??___ftge+1)& (0+255),f,b
  8360  002AC6  1F82               	comf	(??___ftge+2)& (0+255),f,b
  8361  002AC8  2B80               	incf	??___ftge& (0+255),f,b
  8362  002ACA  0E00               	movlw	0
  8363  002ACC  2381               	addwfc	(??___ftge+1)& (0+255),f,b
  8364  002ACE  2382               	addwfc	(??___ftge+2)& (0+255),f,b
  8365  002AD0  0E00               	movlw	0
  8366  002AD2  0100               	movlb	0	; () banked
  8367  002AD4  2580               	addwf	??___ftge& (0+255),w,b
  8368  002AD6  0100               	movlb	0	; () banked
  8369  002AD8  6F7D               	movwf	___ftge@ff2& (0+255),b
  8370  002ADA  0E00               	movlw	0
  8371  002ADC  0100               	movlb	0	; () banked
  8372  002ADE  2181               	addwfc	(??___ftge+1)& (0+255),w,b
  8373  002AE0  0100               	movlb	0	; () banked
  8374  002AE2  6F7E               	movwf	(___ftge@ff2+1)& (0+255),b
  8375  002AE4  0E80               	movlw	128
  8376  002AE6  0100               	movlb	0	; () banked
  8377  002AE8  2182               	addwfc	(??___ftge+2)& (0+255),w,b
  8378  002AEA  0100               	movlb	0	; () banked
  8379  002AEC  6F7F               	movwf	(___ftge@ff2+2)& (0+255),b
  8380  002AEE  D000               	goto	l4081
  8381  002AF0                     l4081:
  8382                           
  8383                           ; BSR set to: 0
  8384  002AF0  0E00               	movlw	0
  8385  002AF2  0100               	movlb	0	; () banked
  8386  002AF4  1B7A               	xorwf	___ftge@ff1& (0+255),f,b
  8387  002AF6  0E00               	movlw	0
  8388  002AF8  0100               	movlb	0	; () banked
  8389  002AFA  1B7B               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  8390  002AFC  0E80               	movlw	128
  8391  002AFE  0100               	movlb	0	; () banked
  8392  002B00  1B7C               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  8393                           
  8394                           ; BSR set to: 0
  8395  002B02  0E00               	movlw	0
  8396  002B04  0100               	movlb	0	; () banked
  8397  002B06  1B7D               	xorwf	___ftge@ff2& (0+255),f,b
  8398  002B08  0E00               	movlw	0
  8399  002B0A  0100               	movlb	0	; () banked
  8400  002B0C  1B7E               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  8401  002B0E  0E80               	movlw	128
  8402  002B10  0100               	movlb	0	; () banked
  8403  002B12  1B7F               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  8404  002B14  0100               	movlb	0	; () banked
  8405  002B16  517D               	movf	___ftge@ff2& (0+255),w,b
  8406  002B18  0100               	movlb	0	; () banked
  8407  002B1A  5D7A               	subwf	___ftge@ff1& (0+255),w,b
  8408  002B1C  0100               	movlb	0	; () banked
  8409  002B1E  517E               	movf	(___ftge@ff2+1)& (0+255),w,b
  8410  002B20  0100               	movlb	0	; () banked
  8411  002B22  597B               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  8412  002B24  0100               	movlb	0	; () banked
  8413  002B26  517F               	movf	(___ftge@ff2+2)& (0+255),w,b
  8414  002B28  0100               	movlb	0	; () banked
  8415  002B2A  597C               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  8416  002B2C  B0D8               	btfsc	status,0,c
  8417  002B2E  D002               	goto	l4087
  8418                           
  8419                           ; BSR set to: 0
  8420  002B30  90D8               	bcf	status,0,c
  8421  002B32  D002               	goto	l1029
  8422  002B34                     l4087:
  8423                           
  8424                           ; BSR set to: 0
  8425  002B34  80D8               	bsf	status,0,c
  8426                           
  8427                           ; BSR set to: 0
  8428  002B36  D000               	goto	l1029
  8429  002B38                     l1029:
  8430                           
  8431                           ; BSR set to: 0
  8432  002B38  0012               	return		;funcret
  8433  002B3A                     __end_of___ftge:
  8434                           	opt stack 0
  8435                           tblptru	equ	0xFF8
  8436                           tblptrh	equ	0xFF7
  8437                           tblptrl	equ	0xFF6
  8438                           tablat	equ	0xFF5
  8439                           intcon	equ	0xFF2
  8440                           intcon2	equ	0xFF1
  8441                           intcon3	equ	0xFF0
  8442                           postinc0	equ	0xFEE
  8443                           wreg	equ	0xFE8
  8444                           postinc1	equ	0xFE6
  8445                           postdec1	equ	0xFE5
  8446                           fsr1h	equ	0xFE2
  8447                           fsr1l	equ	0xFE1
  8448                           postinc2	equ	0xFDE
  8449                           postdec2	equ	0xFDD
  8450                           fsr2h	equ	0xFDA
  8451                           fsr2l	equ	0xFD9
  8452                           status	equ	0xFD8
  8453                           
  8454 ;; *************** function _affichage_position *****************
  8455 ;; Defined at:
  8456 ;;		line 181 in file "triangulation.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;  x               3   38[BANK0 ] float 
  8459 ;;  y               3   41[BANK0 ] float 
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;		None
  8462 ;; Return value:  Size  Location     Type
  8463 ;;		None               void
  8464 ;; Registers used:
  8465 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8466 ;; Tracked objects:
  8467 ;;		On entry : 0/0
  8468 ;;		On exit  : 0/0
  8469 ;;		Unchanged: 0/0
  8470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8471 ;;      Params:         0       6       0       0
  8472 ;;      Locals:         0       0       0       0
  8473 ;;      Temps:          0       0       0       0
  8474 ;;      Totals:         0       6       0       0
  8475 ;;Total ram usage:        6 bytes
  8476 ;; Hardware stack levels used:    1
  8477 ;; Hardware stack levels required when called:   10
  8478 ;; This function calls:
  8479 ;;		_PutIntUART
  8480 ;;		_PutsUART
  8481 ;;		___fttol
  8482 ;; This function is called by:
  8483 ;;		_main
  8484 ;; This function uses a non-reentrant model
  8485 ;;
  8486                           
  8487                           	psect	text36
  8488  0030F4                     __ptext36:
  8489                           	opt stack 0
  8490  0030F4                     _affichage_position:
  8491                           	opt stack 20
  8492                           
  8493                           ;triangulation.c: 183: PutsUART(0, "Position : X : ");
  8494                           
  8495                           ; BSR set to: 0
  8496                           ;incstack = 0
  8497  0030F4  0EBB               	movlw	low STR_8
  8498  0030F6  0100               	movlb	0	; () banked
  8499  0030F8  6F7E               	movwf	PutsUART@chaine& (0+255),b
  8500  0030FA  0E03               	movlw	high STR_8
  8501  0030FC  0100               	movlb	0	; () banked
  8502  0030FE  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  8503  003100  0E00               	movlw	0
  8504  003102  ECB4  F018         	call	_PutsUART
  8505                           
  8506                           ;triangulation.c: 184: PutIntUART(0, (int16_t) x);
  8507  003106  C086  F060         	movff	affichage_position@x,___fttol@f1
  8508  00310A  C087  F061         	movff	affichage_position@x+1,___fttol@f1+1
  8509  00310E  C088  F062         	movff	affichage_position@x+2,___fttol@f1+2
  8510  003112  ECC1  F011         	call	___fttol	;wreg free
  8511  003116  C060  F083         	movff	?___fttol,PutIntUART@nb
  8512  00311A  C061  F084         	movff	?___fttol+1,PutIntUART@nb+1
  8513  00311E  0E00               	movlw	0
  8514  003120  ECB5  F01B         	call	_PutIntUART
  8515                           
  8516                           ;triangulation.c: 185: PutsUART(0, " Y : ");
  8517  003124  0ED3               	movlw	low STR_9
  8518  003126  0100               	movlb	0	; () banked
  8519  003128  6F7E               	movwf	PutsUART@chaine& (0+255),b
  8520  00312A  0E03               	movlw	high STR_9
  8521  00312C  0100               	movlb	0	; () banked
  8522  00312E  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  8523  003130  0E00               	movlw	0
  8524  003132  ECB4  F018         	call	_PutsUART
  8525                           
  8526                           ;triangulation.c: 186: PutIntUART(0, (int16_t) y);
  8527  003136  C089  F060         	movff	affichage_position@y,___fttol@f1
  8528  00313A  C08A  F061         	movff	affichage_position@y+1,___fttol@f1+1
  8529  00313E  C08B  F062         	movff	affichage_position@y+2,___fttol@f1+2
  8530  003142  ECC1  F011         	call	___fttol	;wreg free
  8531  003146  C060  F083         	movff	?___fttol,PutIntUART@nb
  8532  00314A  C061  F084         	movff	?___fttol+1,PutIntUART@nb+1
  8533  00314E  0E00               	movlw	0
  8534  003150  ECB5  F01B         	call	_PutIntUART
  8535                           
  8536                           ;triangulation.c: 187: PutsUART(0, "\r");
  8537  003154  0E8D               	movlw	low (STR_3+22)
  8538  003156  0100               	movlb	0	; () banked
  8539  003158  6F7E               	movwf	PutsUART@chaine& (0+255),b
  8540  00315A  0E03               	movlw	high (STR_3+22)
  8541  00315C  0100               	movlb	0	; () banked
  8542  00315E  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  8543  003160  0E00               	movlw	0
  8544  003162  ECB4  F018         	call	_PutsUART
  8545  003166  0012               	return		;funcret
  8546  003168                     __end_of_affichage_position:
  8547                           	opt stack 0
  8548                           tblptru	equ	0xFF8
  8549                           tblptrh	equ	0xFF7
  8550                           tblptrl	equ	0xFF6
  8551                           tablat	equ	0xFF5
  8552                           intcon	equ	0xFF2
  8553                           intcon2	equ	0xFF1
  8554                           intcon3	equ	0xFF0
  8555                           postinc0	equ	0xFEE
  8556                           wreg	equ	0xFE8
  8557                           postinc1	equ	0xFE6
  8558                           postdec1	equ	0xFE5
  8559                           fsr1h	equ	0xFE2
  8560                           fsr1l	equ	0xFE1
  8561                           postinc2	equ	0xFDE
  8562                           postdec2	equ	0xFDD
  8563                           fsr2h	equ	0xFDA
  8564                           fsr2l	equ	0xFD9
  8565                           status	equ	0xFD8
  8566                           
  8567 ;; *************** function ___fttol *****************
  8568 ;; Defined at:
  8569 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  8570 ;; Parameters:    Size  Location     Type
  8571 ;;  f1              3    0[BANK0 ] float 
  8572 ;; Auto vars:     Size  Location     Type
  8573 ;;  lval            4   10[BANK0 ] unsigned long 
  8574 ;;  exp1            1   14[BANK0 ] unsigned char 
  8575 ;;  sign1           1    9[BANK0 ] unsigned char 
  8576 ;; Return value:  Size  Location     Type
  8577 ;;                  4    0[BANK0 ] long 
  8578 ;; Registers used:
  8579 ;;		wreg, status,2, status,0
  8580 ;; Tracked objects:
  8581 ;;		On entry : 0/0
  8582 ;;		On exit  : 0/0
  8583 ;;		Unchanged: 0/0
  8584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8585 ;;      Params:         0       4       0       0
  8586 ;;      Locals:         0       6       0       0
  8587 ;;      Temps:          0       5       0       0
  8588 ;;      Totals:         0      15       0       0
  8589 ;;Total ram usage:       15 bytes
  8590 ;; Hardware stack levels used:    1
  8591 ;; Hardware stack levels required when called:    6
  8592 ;; This function calls:
  8593 ;;		Nothing
  8594 ;; This function is called by:
  8595 ;;		_envoit_pwm
  8596 ;;		_affichage_position
  8597 ;;		_floor
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601                           	psect	text37
  8602  002382                     __ptext37:
  8603                           	opt stack 0
  8604  002382                     ___fttol:
  8605                           	opt stack 19
  8606                           
  8607                           ;incstack = 0
  8608  002382  C062  F064         	movff	___fttol@f1+2,??___fttol
  8609  002386  0100               	movlb	0	; () banked
  8610  002388  6B65               	clrf	(??___fttol+1)& (0+255),b
  8611  00238A  6B66               	clrf	(??___fttol+2)& (0+255),b
  8612  00238C  0100               	movlb	0	; () banked
  8613  00238E  3561               	rlcf	(___fttol@f1+1)& (0+255),w,b
  8614  002390  0100               	movlb	0	; () banked
  8615  002392  3764               	rlcf	??___fttol& (0+255),f,b
  8616  002394  E301               	bnc	u3611
  8617  002396  8165               	bsf	(??___fttol+1)& (0+255),0,b
  8618  002398                     u3611:
  8619  002398  0100               	movlb	0	; () banked
  8620  00239A  5164               	movf	??___fttol& (0+255),w,b
  8621  00239C  0100               	movlb	0	; () banked
  8622  00239E  6F6E               	movwf	___fttol@exp1& (0+255),b
  8623  0023A0  0100               	movlb	0	; () banked
  8624  0023A2  516E               	movf	___fttol@exp1& (0+255),w,b
  8625  0023A4  A4D8               	btfss	status,2,c
  8626  0023A6  D002               	goto	l4097
  8627  0023A8  D051               	goto	l4121
  8628                           
  8629                           ; BSR set to: 0
  8630                           
  8631                           ; BSR set to: 0
  8632  0023AA  D083               	goto	l1056
  8633  0023AC                     l4097:
  8634                           
  8635                           ; BSR set to: 0
  8636  0023AC  0E17               	movlw	23
  8637  0023AE  0100               	movlb	0	; () banked
  8638  0023B0  6F64               	movwf	??___fttol& (0+255),b
  8639  0023B2  C060  F065         	movff	___fttol@f1,??___fttol+1
  8640  0023B6  C061  F066         	movff	___fttol@f1+1,??___fttol+2
  8641  0023BA  C062  F067         	movff	___fttol@f1+2,??___fttol+3
  8642  0023BE  0100               	movlb	0	; () banked
  8643  0023C0  2964               	incf	??___fttol& (0+255),w,b
  8644  0023C2  0100               	movlb	0	; () banked
  8645  0023C4  6F68               	movwf	(??___fttol+4)& (0+255),b
  8646  0023C6  D005               	goto	u3630
  8647  0023C8                     u3635:
  8648  0023C8  0100               	movlb	0	; () banked
  8649  0023CA  90D8               	bcf	status,0,c
  8650  0023CC  3367               	rrcf	(??___fttol+3)& (0+255),f,b
  8651  0023CE  3366               	rrcf	(??___fttol+2)& (0+255),f,b
  8652  0023D0  3365               	rrcf	(??___fttol+1)& (0+255),f,b
  8653  0023D2                     u3630:
  8654  0023D2  0100               	movlb	0	; () banked
  8655  0023D4  2F68               	decfsz	(??___fttol+4)& (0+255),f,b
  8656  0023D6  D7F8               	goto	u3635
  8657  0023D8  0100               	movlb	0	; () banked
  8658  0023DA  5165               	movf	(??___fttol+1)& (0+255),w,b
  8659  0023DC  0100               	movlb	0	; () banked
  8660  0023DE  6F69               	movwf	___fttol@sign1& (0+255),b
  8661                           
  8662                           ; BSR set to: 0
  8663  0023E0  0100               	movlb	0	; () banked
  8664  0023E2  8F61               	bsf	(___fttol@f1+1)& (0+255),7,b
  8665                           
  8666                           ; BSR set to: 0
  8667  0023E4  0EFF               	movlw	255
  8668  0023E6  0100               	movlb	0	; () banked
  8669  0023E8  1760               	andwf	___fttol@f1& (0+255),f,b
  8670  0023EA  0EFF               	movlw	255
  8671  0023EC  0100               	movlb	0	; () banked
  8672  0023EE  1761               	andwf	(___fttol@f1+1)& (0+255),f,b
  8673  0023F0  0E00               	movlw	0
  8674  0023F2  0100               	movlb	0	; () banked
  8675  0023F4  1762               	andwf	(___fttol@f1+2)& (0+255),f,b
  8676                           
  8677                           ; BSR set to: 0
  8678  0023F6  0100               	movlb	0	; () banked
  8679  0023F8  5160               	movf	___fttol@f1& (0+255),w,b
  8680  0023FA  0100               	movlb	0	; () banked
  8681  0023FC  6F6A               	movwf	___fttol@lval& (0+255),b
  8682  0023FE  0100               	movlb	0	; () banked
  8683  002400  5161               	movf	(___fttol@f1+1)& (0+255),w,b
  8684  002402  0100               	movlb	0	; () banked
  8685  002404  6F6B               	movwf	(___fttol@lval+1)& (0+255),b
  8686  002406  0100               	movlb	0	; () banked
  8687  002408  5162               	movf	(___fttol@f1+2)& (0+255),w,b
  8688  00240A  0100               	movlb	0	; () banked
  8689  00240C  6F6C               	movwf	(___fttol@lval+2)& (0+255),b
  8690  00240E  0100               	movlb	0	; () banked
  8691  002410  6B6D               	clrf	(___fttol@lval+3)& (0+255),b
  8692                           
  8693                           ; BSR set to: 0
  8694  002412  0E8E               	movlw	142
  8695  002414  0100               	movlb	0	; () banked
  8696  002416  5F6E               	subwf	___fttol@exp1& (0+255),f,b
  8697                           
  8698                           ; BSR set to: 0
  8699  002418  0100               	movlb	0	; () banked
  8700  00241A  AF6E               	btfss	___fttol@exp1& (0+255),7,b
  8701  00241C  D013               	goto	l4119
  8702                           
  8703                           ; BSR set to: 0
  8704  00241E  0100               	movlb	0	; () banked
  8705  002420  516E               	movf	___fttol@exp1& (0+255),w,b
  8706  002422  0A80               	xorlw	128
  8707  002424  0F8F               	addlw	143
  8708  002426  B0D8               	btfsc	status,0,c
  8709  002428  D003               	goto	l4115
  8710  00242A  D010               	goto	l4121
  8711                           
  8712                           ; BSR set to: 0
  8713                           
  8714                           ; BSR set to: 0
  8715  00242C  D042               	goto	l1056
  8716                           
  8717                           ; BSR set to: 0
  8718  00242E  D000               	goto	l4115
  8719  002430                     l4115:
  8720                           
  8721                           ; BSR set to: 0
  8722  002430  0100               	movlb	0	; () banked
  8723  002432  90D8               	bcf	status,0,c
  8724  002434  336D               	rrcf	(___fttol@lval+3)& (0+255),f,b
  8725  002436  336C               	rrcf	(___fttol@lval+2)& (0+255),f,b
  8726  002438  336B               	rrcf	(___fttol@lval+1)& (0+255),f,b
  8727  00243A  336A               	rrcf	___fttol@lval& (0+255),f,b
  8728                           
  8729                           ; BSR set to: 0
  8730  00243C  0100               	movlb	0	; () banked
  8731  00243E  3F6E               	incfsz	___fttol@exp1& (0+255),f,b
  8732  002440  D7F7               	goto	l4115
  8733                           
  8734                           ; BSR set to: 0
  8735  002442  D01F               	goto	l4129
  8736  002444                     l4119:
  8737                           
  8738                           ; BSR set to: 0
  8739  002444  0E17               	movlw	23
  8740  002446  0100               	movlb	0	; () banked
  8741  002448  656E               	cpfsgt	___fttol@exp1& (0+255),b
  8742  00244A  D014               	goto	l4127
  8743  00244C                     l4121:
  8744                           
  8745                           ; BSR set to: 0
  8746  00244C  0E00               	movlw	0
  8747  00244E  0100               	movlb	0	; () banked
  8748  002450  6F60               	movwf	?___fttol& (0+255),b
  8749  002452  0E00               	movlw	0
  8750  002454  6F61               	movwf	(?___fttol+1)& (0+255),b
  8751  002456  0E00               	movlw	0
  8752  002458  6F62               	movwf	(?___fttol+2)& (0+255),b
  8753  00245A  0E00               	movlw	0
  8754  00245C  6F63               	movwf	(?___fttol+3)& (0+255),b
  8755                           
  8756                           ; BSR set to: 0
  8757  00245E  D029               	goto	l1056
  8758                           
  8759                           ; BSR set to: 0
  8760  002460  D009               	goto	l4127
  8761  002462                     l4125:
  8762                           
  8763                           ; BSR set to: 0
  8764  002462  0100               	movlb	0	; () banked
  8765  002464  90D8               	bcf	status,0,c
  8766  002466  376A               	rlcf	___fttol@lval& (0+255),f,b
  8767  002468  376B               	rlcf	(___fttol@lval+1)& (0+255),f,b
  8768  00246A  376C               	rlcf	(___fttol@lval+2)& (0+255),f,b
  8769  00246C  376D               	rlcf	(___fttol@lval+3)& (0+255),f,b
  8770  00246E  0100               	movlb	0	; () banked
  8771  002470  076E               	decf	___fttol@exp1& (0+255),f,b
  8772  002472  D000               	goto	l4127
  8773  002474                     l4127:
  8774                           
  8775                           ; BSR set to: 0
  8776  002474  0100               	movlb	0	; () banked
  8777  002476  516E               	movf	___fttol@exp1& (0+255),w,b
  8778  002478  0100               	movlb	0	; () banked
  8779  00247A  B4D8               	btfsc	status,2,c
  8780  00247C  D002               	goto	l4129
  8781  00247E  D7F1               	goto	l4125
  8782                           
  8783                           ; BSR set to: 0
  8784  002480  D000               	goto	l4129
  8785  002482                     l4129:
  8786                           
  8787                           ; BSR set to: 0
  8788  002482  0100               	movlb	0	; () banked
  8789  002484  5169               	movf	___fttol@sign1& (0+255),w,b
  8790  002486  0100               	movlb	0	; () banked
  8791  002488  B4D8               	btfsc	status,2,c
  8792  00248A  D00A               	goto	l4133
  8793                           
  8794                           ; BSR set to: 0
  8795  00248C  0100               	movlb	0	; () banked
  8796  00248E  1F6D               	comf	(___fttol@lval+3)& (0+255),f,b
  8797  002490  1F6C               	comf	(___fttol@lval+2)& (0+255),f,b
  8798  002492  1F6B               	comf	(___fttol@lval+1)& (0+255),f,b
  8799  002494  6D6A               	negf	___fttol@lval& (0+255),b
  8800  002496  0E00               	movlw	0
  8801  002498  236B               	addwfc	(___fttol@lval+1)& (0+255),f,b
  8802  00249A  236C               	addwfc	(___fttol@lval+2)& (0+255),f,b
  8803  00249C  236D               	addwfc	(___fttol@lval+3)& (0+255),f,b
  8804  00249E  D000               	goto	l4133
  8805  0024A0                     l4133:
  8806                           
  8807                           ; BSR set to: 0
  8808  0024A0  C06A  F060         	movff	___fttol@lval,?___fttol
  8809  0024A4  C06B  F061         	movff	___fttol@lval+1,?___fttol+1
  8810  0024A8  C06C  F062         	movff	___fttol@lval+2,?___fttol+2
  8811  0024AC  C06D  F063         	movff	___fttol@lval+3,?___fttol+3
  8812  0024B0  D000               	goto	l1056
  8813  0024B2                     l1056:
  8814                           
  8815                           ; BSR set to: 0
  8816  0024B2  0012               	return		;funcret
  8817  0024B4                     __end_of___fttol:
  8818                           	opt stack 0
  8819                           tblptru	equ	0xFF8
  8820                           tblptrh	equ	0xFF7
  8821                           tblptrl	equ	0xFF6
  8822                           tablat	equ	0xFF5
  8823                           intcon	equ	0xFF2
  8824                           intcon2	equ	0xFF1
  8825                           intcon3	equ	0xFF0
  8826                           postinc0	equ	0xFEE
  8827                           wreg	equ	0xFE8
  8828                           postinc1	equ	0xFE6
  8829                           postdec1	equ	0xFE5
  8830                           fsr1h	equ	0xFE2
  8831                           fsr1l	equ	0xFE1
  8832                           postinc2	equ	0xFDE
  8833                           postdec2	equ	0xFDD
  8834                           fsr2h	equ	0xFDA
  8835                           fsr2l	equ	0xFD9
  8836                           status	equ	0xFD8
  8837                           
  8838 ;; *************** function _PutIntUART *****************
  8839 ;; Defined at:
  8840 ;;		line 248 in file "uart.c"
  8841 ;; Parameters:    Size  Location     Type
  8842 ;;  type_uart       1    wreg     unsigned char 
  8843 ;;  nb              2   35[BANK0 ] int 
  8844 ;; Auto vars:     Size  Location     Type
  8845 ;;  type_uart       1   37[BANK0 ] unsigned char 
  8846 ;; Return value:  Size  Location     Type
  8847 ;;		None               void
  8848 ;; Registers used:
  8849 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8850 ;; Tracked objects:
  8851 ;;		On entry : 0/0
  8852 ;;		On exit  : 0/0
  8853 ;;		Unchanged: 0/0
  8854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8855 ;;      Params:         0       2       0       0
  8856 ;;      Locals:         0       1       0       0
  8857 ;;      Temps:          0       0       0       0
  8858 ;;      Totals:         0       3       0       0
  8859 ;;Total ram usage:        3 bytes
  8860 ;; Hardware stack levels used:    1
  8861 ;; Hardware stack levels required when called:    9
  8862 ;; This function calls:
  8863 ;;		_IntToC
  8864 ;;		_PutsUART
  8865 ;; This function is called by:
  8866 ;;		_main
  8867 ;;		_affichage_position
  8868 ;;		_traitement_reception
  8869 ;; This function uses a non-reentrant model
  8870 ;;
  8871                           
  8872                           	psect	text38
  8873  00376A                     __ptext38:
  8874                           	opt stack 0
  8875  00376A                     _PutIntUART:
  8876                           	opt stack 20
  8877                           
  8878                           ; BSR set to: 0
  8879                           ;incstack = 0
  8880                           ;PutIntUART@type_uart stored from wreg
  8881  00376A  0100               	movlb	0	; () banked
  8882  00376C  6F85               	movwf	PutIntUART@type_uart& (0+255),b
  8883                           
  8884                           ; BSR set to: 0
  8885                           ;uart.c: 250: PutsUART (type_uart, IntToC (nb));
  8886  00376E  C083  F06E         	movff	PutIntUART@nb,IntToC@nb
  8887  003772  C084  F06F         	movff	PutIntUART@nb+1,IntToC@nb+1
  8888  003776  EC60  F00B         	call	_IntToC	;wreg free
  8889  00377A  C06E  F07E         	movff	?_IntToC,PutsUART@chaine
  8890  00377E  C06F  F07F         	movff	?_IntToC+1,PutsUART@chaine+1
  8891  003782  0100               	movlb	0	; () banked
  8892  003784  5185               	movf	PutIntUART@type_uart& (0+255),w,b
  8893  003786  ECB4  F018         	call	_PutsUART
  8894  00378A  0012               	return		;funcret
  8895  00378C                     __end_of_PutIntUART:
  8896                           	opt stack 0
  8897                           tblptru	equ	0xFF8
  8898                           tblptrh	equ	0xFF7
  8899                           tblptrl	equ	0xFF6
  8900                           tablat	equ	0xFF5
  8901                           intcon	equ	0xFF2
  8902                           intcon2	equ	0xFF1
  8903                           intcon3	equ	0xFF0
  8904                           postinc0	equ	0xFEE
  8905                           wreg	equ	0xFE8
  8906                           postinc1	equ	0xFE6
  8907                           postdec1	equ	0xFE5
  8908                           fsr1h	equ	0xFE2
  8909                           fsr1l	equ	0xFE1
  8910                           postinc2	equ	0xFDE
  8911                           postdec2	equ	0xFDD
  8912                           fsr2h	equ	0xFDA
  8913                           fsr2l	equ	0xFD9
  8914                           status	equ	0xFD8
  8915                           
  8916 ;; *************** function _PutsUART *****************
  8917 ;; Defined at:
  8918 ;;		line 148 in file "uart.c"
  8919 ;; Parameters:    Size  Location     Type
  8920 ;;  type_uart       1    wreg     unsigned char 
  8921 ;;  chaine          2   30[BANK0 ] PTR const unsigned char 
  8922 ;;		 -> STR_10(2), STR_9(6), STR_8(16), STR_7(24), 
  8923 ;;		 -> STR_6(24), IntToC@out(8), STR_5(20), STR_4(8), 
  8924 ;;		 -> STR_3(24), STR_2(43), STR_1(24), 
  8925 ;; Auto vars:     Size  Location     Type
  8926 ;;  type_uart       1   34[BANK0 ] unsigned char 
  8927 ;; Return value:  Size  Location     Type
  8928 ;;		None               void
  8929 ;; Registers used:
  8930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8931 ;; Tracked objects:
  8932 ;;		On entry : 0/0
  8933 ;;		On exit  : 0/0
  8934 ;;		Unchanged: 0/0
  8935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8936 ;;      Params:         0       2       0       0
  8937 ;;      Locals:         0       1       0       0
  8938 ;;      Temps:          0       2       0       0
  8939 ;;      Totals:         0       5       0       0
  8940 ;;Total ram usage:        5 bytes
  8941 ;; Hardware stack levels used:    1
  8942 ;; Hardware stack levels required when called:    8
  8943 ;; This function calls:
  8944 ;;		_PutcUART
  8945 ;; This function is called by:
  8946 ;;		_main
  8947 ;;		_PutIntUART
  8948 ;;		_affichage_position
  8949 ;;		_traitement_reception
  8950 ;;		_retrouver_balise_mere
  8951 ;; This function uses a non-reentrant model
  8952 ;;
  8953                           
  8954                           	psect	text39
  8955  003168                     __ptext39:
  8956                           	opt stack 0
  8957  003168                     _PutsUART:
  8958                           	opt stack 21
  8959                           
  8960                           ;incstack = 0
  8961                           ;PutsUART@type_uart stored from wreg
  8962  003168  0100               	movlb	0	; () banked
  8963  00316A  6F82               	movwf	PutsUART@type_uart& (0+255),b
  8964  00316C                     
  8965                           ;uart.c: 151: {
  8966                           ;uart.c: 152: PutcUART (type_uart, *chaine);
  8967  00316C  C07E  FFF6         	movff	PutsUART@chaine,tblptrl
  8968  003170  C07F  FFF7         	movff	PutsUART@chaine+1,tblptrh
  8969  003174  6AF8               	clrf	tblptru,c
  8970  003176  0E02               	movlw	(high __ramtop+-1)
  8971  003178  64F7               	cpfsgt	tblptrh,c
  8972  00317A  D003               	bra	u3997
  8973  00317C  0008               	tblrd		*
  8974  00317E  50F5               	movf	tablat,w,c
  8975  003180  D005               	bra	u3990
  8976  003182                     u3997:
  8977  003182  CFF6 FFE9          	movff	tblptrl,fsr0l
  8978  003186  CFF7 FFEA          	movff	tblptrh,fsr0h
  8979  00318A  50EF               	movf	indf0,w,c
  8980  00318C                     u3990:
  8981  00318C  0100               	movlb	0	; () banked
  8982  00318E  6F6E               	movwf	PutcUART@octet& (0+255),b
  8983  003190  0100               	movlb	0	; () banked
  8984  003192  5182               	movf	PutsUART@type_uart& (0+255),w,b
  8985  003194  ECA1  F009         	call	_PutcUART
  8986                           
  8987                           ;uart.c: 153: }
  8988                           ;uart.c: 154: while (*chaine++);
  8989  003198  0100               	movlb	0	; () banked
  8990  00319A  517E               	movf	PutsUART@chaine& (0+255),w,b
  8991  00319C  0100               	movlb	0	; () banked
  8992  00319E  6F80               	movwf	??_PutsUART& (0+255),b
  8993  0031A0  0100               	movlb	0	; () banked
  8994  0031A2  517F               	movf	(PutsUART@chaine+1)& (0+255),w,b
  8995  0031A4  0100               	movlb	0	; () banked
  8996  0031A6  6F81               	movwf	(??_PutsUART+1)& (0+255),b
  8997  0031A8  0100               	movlb	0	; () banked
  8998  0031AA  4B7E               	infsnz	PutsUART@chaine& (0+255),f,b
  8999  0031AC  2B7F               	incf	(PutsUART@chaine+1)& (0+255),f,b
  9000  0031AE  C080  FFF6         	movff	??_PutsUART,tblptrl
  9001  0031B2  C081  FFF7         	movff	??_PutsUART+1,tblptrh
  9002  0031B6  6AF8               	clrf	tblptru,c
  9003  0031B8  0E02               	movlw	(high __ramtop+-1)
  9004  0031BA  64F7               	cpfsgt	tblptrh,c
  9005  0031BC  D003               	bra	u4007
  9006  0031BE  0008               	tblrd		*
  9007  0031C0  50F5               	movf	tablat,w,c
  9008  0031C2  D005               	bra	u4000
  9009  0031C4                     u4007:
  9010  0031C4  CFF6 FFE9          	movff	tblptrl,fsr0l
  9011  0031C8  CFF7 FFEA          	movff	tblptrh,fsr0h
  9012  0031CC  50EF               	movf	indf0,w,c
  9013  0031CE                     u4000:
  9014  0031CE  0900               	iorlw	0
  9015  0031D0  A4D8               	btfss	status,2,c
  9016  0031D2  D7CC               	goto	l4361
  9017  0031D4  0012               	return		;funcret
  9018  0031D6                     __end_of_PutsUART:
  9019                           	opt stack 0
  9020                           tblptru	equ	0xFF8
  9021                           tblptrh	equ	0xFF7
  9022                           tblptrl	equ	0xFF6
  9023                           tablat	equ	0xFF5
  9024                           intcon	equ	0xFF2
  9025                           intcon2	equ	0xFF1
  9026                           intcon3	equ	0xFF0
  9027                           indf0	equ	0xFEF
  9028                           postinc0	equ	0xFEE
  9029                           fsr0h	equ	0xFEA
  9030                           fsr0l	equ	0xFE9
  9031                           wreg	equ	0xFE8
  9032                           postinc1	equ	0xFE6
  9033                           postdec1	equ	0xFE5
  9034                           fsr1h	equ	0xFE2
  9035                           fsr1l	equ	0xFE1
  9036                           postinc2	equ	0xFDE
  9037                           postdec2	equ	0xFDD
  9038                           fsr2h	equ	0xFDA
  9039                           fsr2l	equ	0xFD9
  9040                           status	equ	0xFD8
  9041                           
  9042 ;; *************** function _PutcUART *****************
  9043 ;; Defined at:
  9044 ;;		line 122 in file "uart.c"
  9045 ;; Parameters:    Size  Location     Type
  9046 ;;  type_uart       1    wreg     unsigned char 
  9047 ;;  octet           1   14[BANK0 ] unsigned char 
  9048 ;; Auto vars:     Size  Location     Type
  9049 ;;  type_uart       1   21[BANK0 ] unsigned char 
  9050 ;; Return value:  Size  Location     Type
  9051 ;;		None               void
  9052 ;; Registers used:
  9053 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9054 ;; Tracked objects:
  9055 ;;		On entry : 0/0
  9056 ;;		On exit  : 0/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9059 ;;      Params:         0       1       0       0
  9060 ;;      Locals:         0       1       0       0
  9061 ;;      Temps:          0       6       0       0
  9062 ;;      Totals:         0       8       0       0
  9063 ;;Total ram usage:        8 bytes
  9064 ;; Hardware stack levels used:    1
  9065 ;; Hardware stack levels required when called:    7
  9066 ;; This function calls:
  9067 ;;		___awdiv
  9068 ;; This function is called by:
  9069 ;;		_PutsUART
  9070 ;;		_traitement_reception
  9071 ;;		_Puts2UART
  9072 ;; This function uses a non-reentrant model
  9073 ;;
  9074                           
  9075                           	psect	text40
  9076  001342                     __ptext40:
  9077                           	opt stack 0
  9078  001342                     _PutcUART:
  9079                           	opt stack 21
  9080                           
  9081                           ;incstack = 0
  9082                           ;PutcUART@type_uart stored from wreg
  9083  001342  0100               	movlb	0	; () banked
  9084  001344  6F75               	movwf	PutcUART@type_uart& (0+255),b
  9085                           
  9086                           ; BSR set to: 0
  9087                           ;uart.c: 124: if (type_uart == 0)
  9088  001346  0100               	movlb	0	; () banked
  9089  001348  5175               	movf	PutcUART@type_uart& (0+255),w,b
  9090  00134A  0100               	movlb	0	; () banked
  9091  00134C  B4D8               	btfsc	status,2,c
  9092  00134E  D002               	goto	l278
  9093  001350  D007               	goto	l4323
  9094                           
  9095                           ; BSR set to: 0
  9096                           ;uart.c: 125: {
  9097                           ;uart.c: 126: while (PIR1bits.TXIF == 0);
  9098  001352  D000               	goto	l278
  9099  001354                     l278:
  9100                           
  9101                           ; BSR set to: 0
  9102  001354  A89E               	btfss	3998,4,c	;volatile
  9103  001356  D7FE               	goto	l278
  9104                           
  9105                           ; BSR set to: 0
  9106                           ;uart.c: 127: TXREG = octet;
  9107  001358  C06E  FFAD         	movff	PutcUART@octet,4013	;volatile
  9108                           
  9109                           ;uart.c: 128: }
  9110  00135C  D1B0               	goto	l285
  9111                           
  9112                           ; BSR set to: 0
  9113                           
  9114                           ; BSR set to: 0
  9115                           ;uart.c: 129: else
  9116                           ;uart.c: 130: {
  9117                           ;uart.c: 131: while(uart_logiciel.transmission_en_cours == 1);
  9118  00135E  D000               	goto	l4323
  9119  001360                     l4323:
  9120                           
  9121                           ; BSR set to: 0
  9122  001360  0443               	decf	_uart_logiciel+11,w,c
  9123  001362  B4D8               	btfsc	status,2,c
  9124  001364  D7FD               	goto	l4323
  9125                           
  9126                           ; BSR set to: 0
  9127                           ;uart.c: 132: uart_logiciel.indice = 0;
  9128                           
  9129                           ; BSR set to: 0
  9130  001366  0E00               	movlw	0
  9131  001368  6E44               	movwf	_uart_logiciel+12,c
  9132                           
  9133                           ;uart.c: 133: uart_logiciel.buffer_uart[10] = 1;
  9134  00136A  0E01               	movlw	1
  9135  00136C  6E42               	movwf	_uart_logiciel+10,c
  9136                           
  9137                           ;uart.c: 134: uart_logiciel.buffer_uart[9] = 1;
  9138  00136E  0E01               	movlw	1
  9139  001370  6E41               	movwf	_uart_logiciel+9,c
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;uart.c: 135: uart_logiciel.buffer_uart[8] = octet / 128;
  9143  001372  C06E  F066         	movff	PutcUART@octet,___awdiv@dividend
  9144  001376  0100               	movlb	0	; () banked
  9145  001378  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  9146  00137A  0E00               	movlw	0
  9147  00137C  0100               	movlb	0	; () banked
  9148  00137E  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9149  001380  0E80               	movlw	128
  9150  001382  6F68               	movwf	___awdiv@divisor& (0+255),b
  9151  001384  ECCE  F014         	call	___awdiv	;wreg free
  9152  001388  0100               	movlb	0	; () banked
  9153  00138A  5166               	movf	?___awdiv& (0+255),w,b
  9154  00138C  6E40               	movwf	_uart_logiciel+8,c
  9155                           
  9156                           ; BSR set to: 0
  9157                           ;uart.c: 136: uart_logiciel.buffer_uart[7] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                          ) / 64;
  9158  00138E  5040               	movf	_uart_logiciel+8,w,c
  9159  001390  0D80               	mullw	128
  9160  001392  1EF3               	comf	prodl,f,c
  9161  001394  1EF4               	comf	prodh,f,c
  9162  001396  4AF3               	infsnz	prodl,f,c
  9163  001398  2AF4               	incf	prodh,f,c
  9164  00139A  0100               	movlb	0	; () banked
  9165  00139C  516E               	movf	PutcUART@octet& (0+255),w,b
  9166  00139E  24F3               	addwf	prodl,w,c
  9167  0013A0  0100               	movlb	0	; () banked
  9168  0013A2  6F66               	movwf	___awdiv@dividend& (0+255),b
  9169  0013A4  0E00               	movlw	0
  9170  0013A6  20F4               	addwfc	prodh,w,c
  9171  0013A8  0100               	movlb	0	; () banked
  9172  0013AA  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9173  0013AC  0E00               	movlw	0
  9174  0013AE  0100               	movlb	0	; () banked
  9175  0013B0  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9176  0013B2  0E40               	movlw	64
  9177  0013B4  6F68               	movwf	___awdiv@divisor& (0+255),b
  9178  0013B6  ECCE  F014         	call	___awdiv	;wreg free
  9179  0013BA  0100               	movlb	0	; () banked
  9180  0013BC  5166               	movf	?___awdiv& (0+255),w,b
  9181  0013BE  6E3F               	movwf	_uart_logiciel+7,c
  9182                           
  9183                           ; BSR set to: 0
  9184                           ;uart.c: 137: uart_logiciel.buffer_uart[6] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64) / 32;
  9185  0013C0  5040               	movf	_uart_logiciel+8,w,c
  9186  0013C2  0D80               	mullw	128
  9187  0013C4  1EF3               	comf	prodl,f,c
  9188  0013C6  1EF4               	comf	prodh,f,c
  9189  0013C8  4AF3               	infsnz	prodl,f,c
  9190  0013CA  2AF4               	incf	prodh,f,c
  9191  0013CC  0100               	movlb	0	; () banked
  9192  0013CE  516E               	movf	PutcUART@octet& (0+255),w,b
  9193  0013D0  0100               	movlb	0	; () banked
  9194  0013D2  6F6F               	movwf	??_PutcUART& (0+255),b
  9195  0013D4  6B70               	clrf	(??_PutcUART+1)& (0+255),b
  9196  0013D6  50F3               	movf	prodl,w,c
  9197  0013D8  0100               	movlb	0	; () banked
  9198  0013DA  276F               	addwf	??_PutcUART& (0+255),f,b
  9199  0013DC  50F4               	movf	prodh,w,c
  9200  0013DE  0100               	movlb	0	; () banked
  9201  0013E0  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9202  0013E2  503F               	movf	_uart_logiciel+7,w,c
  9203  0013E4  0D40               	mullw	64
  9204  0013E6  1EF3               	comf	prodl,f,c
  9205  0013E8  1EF4               	comf	prodh,f,c
  9206  0013EA  4AF3               	infsnz	prodl,f,c
  9207  0013EC  2AF4               	incf	prodh,f,c
  9208  0013EE  50F3               	movf	prodl,w,c
  9209  0013F0  0100               	movlb	0	; () banked
  9210  0013F2  256F               	addwf	??_PutcUART& (0+255),w,b
  9211  0013F4  0100               	movlb	0	; () banked
  9212  0013F6  6F66               	movwf	___awdiv@dividend& (0+255),b
  9213  0013F8  50F4               	movf	prodh,w,c
  9214  0013FA  0100               	movlb	0	; () banked
  9215  0013FC  2170               	addwfc	(??_PutcUART+1)& (0+255),w,b
  9216  0013FE  0100               	movlb	0	; () banked
  9217  001400  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9218  001402  0E00               	movlw	0
  9219  001404  0100               	movlb	0	; () banked
  9220  001406  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9221  001408  0E20               	movlw	32
  9222  00140A  6F68               	movwf	___awdiv@divisor& (0+255),b
  9223  00140C  ECCE  F014         	call	___awdiv	;wreg free
  9224  001410  0100               	movlb	0	; () banked
  9225  001412  5166               	movf	?___awdiv& (0+255),w,b
  9226  001414  6E3E               	movwf	_uart_logiciel+6,c
  9227                           
  9228                           ; BSR set to: 0
  9229                           ;uart.c: 138: uart_logiciel.buffer_uart[5] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64 - uart_logiciel.buffer_uart[6] * 32) / 16;
  9230  001416  5040               	movf	_uart_logiciel+8,w,c
  9231  001418  0D80               	mullw	128
  9232  00141A  1EF3               	comf	prodl,f,c
  9233  00141C  1EF4               	comf	prodh,f,c
  9234  00141E  4AF3               	infsnz	prodl,f,c
  9235  001420  2AF4               	incf	prodh,f,c
  9236  001422  0100               	movlb	0	; () banked
  9237  001424  516E               	movf	PutcUART@octet& (0+255),w,b
  9238  001426  0100               	movlb	0	; () banked
  9239  001428  6F6F               	movwf	??_PutcUART& (0+255),b
  9240  00142A  6B70               	clrf	(??_PutcUART+1)& (0+255),b
  9241  00142C  50F3               	movf	prodl,w,c
  9242  00142E  0100               	movlb	0	; () banked
  9243  001430  276F               	addwf	??_PutcUART& (0+255),f,b
  9244  001432  50F4               	movf	prodh,w,c
  9245  001434  0100               	movlb	0	; () banked
  9246  001436  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9247  001438  503F               	movf	_uart_logiciel+7,w,c
  9248  00143A  0D40               	mullw	64
  9249  00143C  1EF3               	comf	prodl,f,c
  9250  00143E  1EF4               	comf	prodh,f,c
  9251  001440  4AF3               	infsnz	prodl,f,c
  9252  001442  2AF4               	incf	prodh,f,c
  9253  001444  50F3               	movf	prodl,w,c
  9254  001446  0100               	movlb	0	; () banked
  9255  001448  276F               	addwf	??_PutcUART& (0+255),f,b
  9256  00144A  50F4               	movf	prodh,w,c
  9257  00144C  0100               	movlb	0	; () banked
  9258  00144E  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9259  001450  503E               	movf	_uart_logiciel+6,w,c
  9260  001452  0D20               	mullw	32
  9261  001454  1EF3               	comf	prodl,f,c
  9262  001456  1EF4               	comf	prodh,f,c
  9263  001458  4AF3               	infsnz	prodl,f,c
  9264  00145A  2AF4               	incf	prodh,f,c
  9265  00145C  50F3               	movf	prodl,w,c
  9266  00145E  0100               	movlb	0	; () banked
  9267  001460  256F               	addwf	??_PutcUART& (0+255),w,b
  9268  001462  0100               	movlb	0	; () banked
  9269  001464  6F66               	movwf	___awdiv@dividend& (0+255),b
  9270  001466  50F4               	movf	prodh,w,c
  9271  001468  0100               	movlb	0	; () banked
  9272  00146A  2170               	addwfc	(??_PutcUART+1)& (0+255),w,b
  9273  00146C  0100               	movlb	0	; () banked
  9274  00146E  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9275  001470  0E00               	movlw	0
  9276  001472  0100               	movlb	0	; () banked
  9277  001474  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9278  001476  0E10               	movlw	16
  9279  001478  6F68               	movwf	___awdiv@divisor& (0+255),b
  9280  00147A  ECCE  F014         	call	___awdiv	;wreg free
  9281  00147E  0100               	movlb	0	; () banked
  9282  001480  5166               	movf	?___awdiv& (0+255),w,b
  9283  001482  6E3D               	movwf	_uart_logiciel+5,c
  9284                           
  9285                           ; BSR set to: 0
  9286                           ;uart.c: 139: uart_logiciel.buffer_uart[4] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64 - uart_logiciel.buffer_uart[6] * 32 - uart_logiciel
      +                          .buffer_uart[5] * 16) / 8;
  9287  001484  5040               	movf	_uart_logiciel+8,w,c
  9288  001486  0D80               	mullw	128
  9289  001488  1EF3               	comf	prodl,f,c
  9290  00148A  1EF4               	comf	prodh,f,c
  9291  00148C  4AF3               	infsnz	prodl,f,c
  9292  00148E  2AF4               	incf	prodh,f,c
  9293  001490  0100               	movlb	0	; () banked
  9294  001492  516E               	movf	PutcUART@octet& (0+255),w,b
  9295  001494  0100               	movlb	0	; () banked
  9296  001496  6F6F               	movwf	??_PutcUART& (0+255),b
  9297  001498  6B70               	clrf	(??_PutcUART+1)& (0+255),b
  9298  00149A  50F3               	movf	prodl,w,c
  9299  00149C  0100               	movlb	0	; () banked
  9300  00149E  276F               	addwf	??_PutcUART& (0+255),f,b
  9301  0014A0  50F4               	movf	prodh,w,c
  9302  0014A2  0100               	movlb	0	; () banked
  9303  0014A4  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9304  0014A6  503F               	movf	_uart_logiciel+7,w,c
  9305  0014A8  0D40               	mullw	64
  9306  0014AA  1EF3               	comf	prodl,f,c
  9307  0014AC  1EF4               	comf	prodh,f,c
  9308  0014AE  4AF3               	infsnz	prodl,f,c
  9309  0014B0  2AF4               	incf	prodh,f,c
  9310  0014B2  50F3               	movf	prodl,w,c
  9311  0014B4  0100               	movlb	0	; () banked
  9312  0014B6  276F               	addwf	??_PutcUART& (0+255),f,b
  9313  0014B8  50F4               	movf	prodh,w,c
  9314  0014BA  0100               	movlb	0	; () banked
  9315  0014BC  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9316  0014BE  503E               	movf	_uart_logiciel+6,w,c
  9317  0014C0  0D20               	mullw	32
  9318  0014C2  1EF3               	comf	prodl,f,c
  9319  0014C4  1EF4               	comf	prodh,f,c
  9320  0014C6  4AF3               	infsnz	prodl,f,c
  9321  0014C8  2AF4               	incf	prodh,f,c
  9322  0014CA  50F3               	movf	prodl,w,c
  9323  0014CC  0100               	movlb	0	; () banked
  9324  0014CE  276F               	addwf	??_PutcUART& (0+255),f,b
  9325  0014D0  50F4               	movf	prodh,w,c
  9326  0014D2  0100               	movlb	0	; () banked
  9327  0014D4  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9328  0014D6  503D               	movf	_uart_logiciel+5,w,c
  9329  0014D8  0D10               	mullw	16
  9330  0014DA  1EF3               	comf	prodl,f,c
  9331  0014DC  1EF4               	comf	prodh,f,c
  9332  0014DE  4AF3               	infsnz	prodl,f,c
  9333  0014E0  2AF4               	incf	prodh,f,c
  9334  0014E2  50F3               	movf	prodl,w,c
  9335  0014E4  0100               	movlb	0	; () banked
  9336  0014E6  256F               	addwf	??_PutcUART& (0+255),w,b
  9337  0014E8  0100               	movlb	0	; () banked
  9338  0014EA  6F66               	movwf	___awdiv@dividend& (0+255),b
  9339  0014EC  50F4               	movf	prodh,w,c
  9340  0014EE  0100               	movlb	0	; () banked
  9341  0014F0  2170               	addwfc	(??_PutcUART+1)& (0+255),w,b
  9342  0014F2  0100               	movlb	0	; () banked
  9343  0014F4  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9344  0014F6  0E00               	movlw	0
  9345  0014F8  0100               	movlb	0	; () banked
  9346  0014FA  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9347  0014FC  0E08               	movlw	8
  9348  0014FE  6F68               	movwf	___awdiv@divisor& (0+255),b
  9349  001500  ECCE  F014         	call	___awdiv	;wreg free
  9350  001504  0100               	movlb	0	; () banked
  9351  001506  5166               	movf	?___awdiv& (0+255),w,b
  9352  001508  6E3C               	movwf	_uart_logiciel+4,c
  9353                           
  9354                           ; BSR set to: 0
  9355                           ;uart.c: 140: uart_logiciel.buffer_uart[3] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64 - uart_logiciel.buffer_uart[6] * 32 - uart_logiciel
      +                          .buffer_uart[5] * 16 - uart_logiciel.buffer_uart[4] * 8) / 4;
  9356  00150A  5040               	movf	_uart_logiciel+8,w,c
  9357  00150C  0D80               	mullw	128
  9358  00150E  1EF3               	comf	prodl,f,c
  9359  001510  1EF4               	comf	prodh,f,c
  9360  001512  4AF3               	infsnz	prodl,f,c
  9361  001514  2AF4               	incf	prodh,f,c
  9362  001516  0100               	movlb	0	; () banked
  9363  001518  516E               	movf	PutcUART@octet& (0+255),w,b
  9364  00151A  0100               	movlb	0	; () banked
  9365  00151C  6F6F               	movwf	??_PutcUART& (0+255),b
  9366  00151E  6B70               	clrf	(??_PutcUART+1)& (0+255),b
  9367  001520  50F3               	movf	prodl,w,c
  9368  001522  0100               	movlb	0	; () banked
  9369  001524  276F               	addwf	??_PutcUART& (0+255),f,b
  9370  001526  50F4               	movf	prodh,w,c
  9371  001528  0100               	movlb	0	; () banked
  9372  00152A  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9373  00152C  503F               	movf	_uart_logiciel+7,w,c
  9374  00152E  0D40               	mullw	64
  9375  001530  1EF3               	comf	prodl,f,c
  9376  001532  1EF4               	comf	prodh,f,c
  9377  001534  4AF3               	infsnz	prodl,f,c
  9378  001536  2AF4               	incf	prodh,f,c
  9379  001538  50F3               	movf	prodl,w,c
  9380  00153A  0100               	movlb	0	; () banked
  9381  00153C  276F               	addwf	??_PutcUART& (0+255),f,b
  9382  00153E  50F4               	movf	prodh,w,c
  9383  001540  0100               	movlb	0	; () banked
  9384  001542  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9385  001544  503E               	movf	_uart_logiciel+6,w,c
  9386  001546  0D20               	mullw	32
  9387  001548  1EF3               	comf	prodl,f,c
  9388  00154A  1EF4               	comf	prodh,f,c
  9389  00154C  4AF3               	infsnz	prodl,f,c
  9390  00154E  2AF4               	incf	prodh,f,c
  9391  001550  50F3               	movf	prodl,w,c
  9392  001552  0100               	movlb	0	; () banked
  9393  001554  276F               	addwf	??_PutcUART& (0+255),f,b
  9394  001556  50F4               	movf	prodh,w,c
  9395  001558  0100               	movlb	0	; () banked
  9396  00155A  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9397  00155C  503D               	movf	_uart_logiciel+5,w,c
  9398  00155E  0D10               	mullw	16
  9399  001560  1EF3               	comf	prodl,f,c
  9400  001562  1EF4               	comf	prodh,f,c
  9401  001564  4AF3               	infsnz	prodl,f,c
  9402  001566  2AF4               	incf	prodh,f,c
  9403  001568  50F3               	movf	prodl,w,c
  9404  00156A  0100               	movlb	0	; () banked
  9405  00156C  276F               	addwf	??_PutcUART& (0+255),f,b
  9406  00156E  50F4               	movf	prodh,w,c
  9407  001570  0100               	movlb	0	; () banked
  9408  001572  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9409  001574  503C               	movf	_uart_logiciel+4,w,c
  9410  001576  0D08               	mullw	8
  9411  001578  1EF3               	comf	prodl,f,c
  9412  00157A  1EF4               	comf	prodh,f,c
  9413  00157C  4AF3               	infsnz	prodl,f,c
  9414  00157E  2AF4               	incf	prodh,f,c
  9415  001580  50F3               	movf	prodl,w,c
  9416  001582  0100               	movlb	0	; () banked
  9417  001584  256F               	addwf	??_PutcUART& (0+255),w,b
  9418  001586  0100               	movlb	0	; () banked
  9419  001588  6F66               	movwf	___awdiv@dividend& (0+255),b
  9420  00158A  50F4               	movf	prodh,w,c
  9421  00158C  0100               	movlb	0	; () banked
  9422  00158E  2170               	addwfc	(??_PutcUART+1)& (0+255),w,b
  9423  001590  0100               	movlb	0	; () banked
  9424  001592  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9425  001594  0E00               	movlw	0
  9426  001596  0100               	movlb	0	; () banked
  9427  001598  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9428  00159A  0E04               	movlw	4
  9429  00159C  6F68               	movwf	___awdiv@divisor& (0+255),b
  9430  00159E  ECCE  F014         	call	___awdiv	;wreg free
  9431  0015A2  0100               	movlb	0	; () banked
  9432  0015A4  5166               	movf	?___awdiv& (0+255),w,b
  9433  0015A6  6E3B               	movwf	_uart_logiciel+3,c
  9434                           
  9435                           ; BSR set to: 0
  9436                           ;uart.c: 141: uart_logiciel.buffer_uart[2] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64 - uart_logiciel.buffer_uart[6] * 32 - uart_logiciel
      +                          .buffer_uart[5] * 16 - uart_logiciel.buffer_uart[4] * 8 - uart_logiciel.buffer_uart[3] *
  9437  0015A8  5040               	movf	_uart_logiciel+8,w,c
  9438  0015AA  0D80               	mullw	128
  9439  0015AC  1EF3               	comf	prodl,f,c
  9440  0015AE  1EF4               	comf	prodh,f,c
  9441  0015B0  4AF3               	infsnz	prodl,f,c
  9442  0015B2  2AF4               	incf	prodh,f,c
  9443  0015B4  0100               	movlb	0	; () banked
  9444  0015B6  516E               	movf	PutcUART@octet& (0+255),w,b
  9445  0015B8  0100               	movlb	0	; () banked
  9446  0015BA  6F6F               	movwf	??_PutcUART& (0+255),b
  9447  0015BC  6B70               	clrf	(??_PutcUART+1)& (0+255),b
  9448  0015BE  50F3               	movf	prodl,w,c
  9449  0015C0  0100               	movlb	0	; () banked
  9450  0015C2  276F               	addwf	??_PutcUART& (0+255),f,b
  9451  0015C4  50F4               	movf	prodh,w,c
  9452  0015C6  0100               	movlb	0	; () banked
  9453  0015C8  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9454  0015CA  503F               	movf	_uart_logiciel+7,w,c
  9455  0015CC  0D40               	mullw	64
  9456  0015CE  1EF3               	comf	prodl,f,c
  9457  0015D0  1EF4               	comf	prodh,f,c
  9458  0015D2  4AF3               	infsnz	prodl,f,c
  9459  0015D4  2AF4               	incf	prodh,f,c
  9460  0015D6  50F3               	movf	prodl,w,c
  9461  0015D8  0100               	movlb	0	; () banked
  9462  0015DA  276F               	addwf	??_PutcUART& (0+255),f,b
  9463  0015DC  50F4               	movf	prodh,w,c
  9464  0015DE  0100               	movlb	0	; () banked
  9465  0015E0  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9466  0015E2  503E               	movf	_uart_logiciel+6,w,c
  9467  0015E4  0D20               	mullw	32
  9468  0015E6  1EF3               	comf	prodl,f,c
  9469  0015E8  1EF4               	comf	prodh,f,c
  9470  0015EA  4AF3               	infsnz	prodl,f,c
  9471  0015EC  2AF4               	incf	prodh,f,c
  9472  0015EE  50F3               	movf	prodl,w,c
  9473  0015F0  0100               	movlb	0	; () banked
  9474  0015F2  276F               	addwf	??_PutcUART& (0+255),f,b
  9475  0015F4  50F4               	movf	prodh,w,c
  9476  0015F6  0100               	movlb	0	; () banked
  9477  0015F8  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9478  0015FA  503D               	movf	_uart_logiciel+5,w,c
  9479  0015FC  0D10               	mullw	16
  9480  0015FE  1EF3               	comf	prodl,f,c
  9481  001600  1EF4               	comf	prodh,f,c
  9482  001602  4AF3               	infsnz	prodl,f,c
  9483  001604  2AF4               	incf	prodh,f,c
  9484  001606  50F3               	movf	prodl,w,c
  9485  001608  0100               	movlb	0	; () banked
  9486  00160A  276F               	addwf	??_PutcUART& (0+255),f,b
  9487  00160C  50F4               	movf	prodh,w,c
  9488  00160E  0100               	movlb	0	; () banked
  9489  001610  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9490  001612  503C               	movf	_uart_logiciel+4,w,c
  9491  001614  0D08               	mullw	8
  9492  001616  1EF3               	comf	prodl,f,c
  9493  001618  1EF4               	comf	prodh,f,c
  9494  00161A  4AF3               	infsnz	prodl,f,c
  9495  00161C  2AF4               	incf	prodh,f,c
  9496  00161E  50F3               	movf	prodl,w,c
  9497  001620  0100               	movlb	0	; () banked
  9498  001622  276F               	addwf	??_PutcUART& (0+255),f,b
  9499  001624  50F4               	movf	prodh,w,c
  9500  001626  0100               	movlb	0	; () banked
  9501  001628  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9502  00162A  503B               	movf	_uart_logiciel+3,w,c
  9503  00162C  0D04               	mullw	4
  9504  00162E  1EF3               	comf	prodl,f,c
  9505  001630  1EF4               	comf	prodh,f,c
  9506  001632  4AF3               	infsnz	prodl,f,c
  9507  001634  2AF4               	incf	prodh,f,c
  9508  001636  50F3               	movf	prodl,w,c
  9509  001638  0100               	movlb	0	; () banked
  9510  00163A  256F               	addwf	??_PutcUART& (0+255),w,b
  9511  00163C  0100               	movlb	0	; () banked
  9512  00163E  6F66               	movwf	___awdiv@dividend& (0+255),b
  9513  001640  50F4               	movf	prodh,w,c
  9514  001642  0100               	movlb	0	; () banked
  9515  001644  2170               	addwfc	(??_PutcUART+1)& (0+255),w,b
  9516  001646  0100               	movlb	0	; () banked
  9517  001648  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9518  00164A  0E00               	movlw	0
  9519  00164C  0100               	movlb	0	; () banked
  9520  00164E  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9521  001650  0E02               	movlw	2
  9522  001652  6F68               	movwf	___awdiv@divisor& (0+255),b
  9523  001654  ECCE  F014         	call	___awdiv	;wreg free
  9524  001658  0100               	movlb	0	; () banked
  9525  00165A  5166               	movf	?___awdiv& (0+255),w,b
  9526  00165C  6E3A               	movwf	_uart_logiciel+2,c
  9527                           
  9528                           ; BSR set to: 0
  9529                           ;uart.c: 142: uart_logiciel.buffer_uart[1] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64 - uart_logiciel.buffer_uart[6] * 32 - uart_logiciel
      +                          .buffer_uart[5] * 16 - uart_logiciel.buffer_uart[4] * 8 - uart_logiciel.buffer_uart[3] *
  9530  00165E  503A               	movf	_uart_logiciel+2,w,c
  9531  001660  0D02               	mullw	2
  9532  001662  CFF3 F06F          	movff	prodl,??_PutcUART
  9533  001666  503B               	movf	_uart_logiciel+3,w,c
  9534  001668  0D04               	mullw	4
  9535  00166A  CFF3 F070          	movff	prodl,??_PutcUART+1
  9536  00166E  503C               	movf	_uart_logiciel+4,w,c
  9537  001670  0D08               	mullw	8
  9538  001672  CFF3 F071          	movff	prodl,??_PutcUART+2
  9539  001676  503D               	movf	_uart_logiciel+5,w,c
  9540  001678  0D10               	mullw	16
  9541  00167A  CFF3 F072          	movff	prodl,??_PutcUART+3
  9542  00167E  503E               	movf	_uart_logiciel+6,w,c
  9543  001680  0D20               	mullw	32
  9544  001682  CFF3 F073          	movff	prodl,??_PutcUART+4
  9545  001686  503F               	movf	_uart_logiciel+7,w,c
  9546  001688  0D40               	mullw	64
  9547  00168A  CFF3 F074          	movff	prodl,??_PutcUART+5
  9548  00168E  5040               	movf	_uart_logiciel+8,w,c
  9549  001690  0D80               	mullw	128
  9550  001692  50F3               	movf	prodl,w,c
  9551  001694  0100               	movlb	0	; () banked
  9552  001696  2574               	addwf	(??_PutcUART+5)& (0+255),w,b
  9553  001698  0100               	movlb	0	; () banked
  9554  00169A  2573               	addwf	(??_PutcUART+4)& (0+255),w,b
  9555  00169C  0100               	movlb	0	; () banked
  9556  00169E  2572               	addwf	(??_PutcUART+3)& (0+255),w,b
  9557  0016A0  0100               	movlb	0	; () banked
  9558  0016A2  2571               	addwf	(??_PutcUART+2)& (0+255),w,b
  9559  0016A4  0100               	movlb	0	; () banked
  9560  0016A6  2570               	addwf	(??_PutcUART+1)& (0+255),w,b
  9561  0016A8  0100               	movlb	0	; () banked
  9562  0016AA  256F               	addwf	??_PutcUART& (0+255),w,b
  9563  0016AC  0800               	sublw	0
  9564  0016AE  0100               	movlb	0	; () banked
  9565  0016B0  256E               	addwf	PutcUART@octet& (0+255),w,b
  9566  0016B2  6E39               	movwf	_uart_logiciel+1,c
  9567                           
  9568                           ; BSR set to: 0
  9569                           ;uart.c: 143: uart_logiciel.buffer_uart[0] = 0;
  9570  0016B4  0E00               	movlw	0
  9571  0016B6  6E38               	movwf	_uart_logiciel,c
  9572                           
  9573                           ; BSR set to: 0
  9574                           ;uart.c: 144: uart_logiciel.transmission_en_cours = 1;
  9575  0016B8  0E01               	movlw	1
  9576  0016BA  6E43               	movwf	_uart_logiciel+11,c
  9577  0016BC  D000               	goto	l285
  9578  0016BE                     l285:
  9579                           
  9580                           ; BSR set to: 0
  9581  0016BE  0012               	return		;funcret
  9582  0016C0                     __end_of_PutcUART:
  9583                           	opt stack 0
  9584                           tblptru	equ	0xFF8
  9585                           tblptrh	equ	0xFF7
  9586                           tblptrl	equ	0xFF6
  9587                           tablat	equ	0xFF5
  9588                           prodh	equ	0xFF4
  9589                           prodl	equ	0xFF3
  9590                           intcon	equ	0xFF2
  9591                           intcon2	equ	0xFF1
  9592                           intcon3	equ	0xFF0
  9593                           indf0	equ	0xFEF
  9594                           postinc0	equ	0xFEE
  9595                           fsr0h	equ	0xFEA
  9596                           fsr0l	equ	0xFE9
  9597                           wreg	equ	0xFE8
  9598                           postinc1	equ	0xFE6
  9599                           postdec1	equ	0xFE5
  9600                           fsr1h	equ	0xFE2
  9601                           fsr1l	equ	0xFE1
  9602                           postinc2	equ	0xFDE
  9603                           postdec2	equ	0xFDD
  9604                           fsr2h	equ	0xFDA
  9605                           fsr2l	equ	0xFD9
  9606                           status	equ	0xFD8
  9607                           
  9608 ;; *************** function _IntToC *****************
  9609 ;; Defined at:
  9610 ;;		line 167 in file "uart.c"
  9611 ;; Parameters:    Size  Location     Type
  9612 ;;  nb              2   14[BANK0 ] int 
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;  i              10   18[BANK0 ] int [5]
  9615 ;;  j               2   28[BANK0 ] int 
  9616 ;; Return value:  Size  Location     Type
  9617 ;;                  2   14[BANK0 ] PTR unsigned char 
  9618 ;; Registers used:
  9619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9620 ;; Tracked objects:
  9621 ;;		On entry : 0/0
  9622 ;;		On exit  : 0/0
  9623 ;;		Unchanged: 0/0
  9624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9625 ;;      Params:         0       2       0       0
  9626 ;;      Locals:         0      12       0       0
  9627 ;;      Temps:          0       2       0       0
  9628 ;;      Totals:         0      16       0       0
  9629 ;;Total ram usage:       16 bytes
  9630 ;; Hardware stack levels used:    1
  9631 ;; Hardware stack levels required when called:    7
  9632 ;; This function calls:
  9633 ;;		___awdiv
  9634 ;;		___wmul
  9635 ;; This function is called by:
  9636 ;;		_PutIntUART
  9637 ;; This function uses a non-reentrant model
  9638 ;;
  9639                           
  9640                           	psect	text41
  9641  0016C0                     __ptext41:
  9642                           	opt stack 0
  9643  0016C0                     _IntToC:
  9644                           	opt stack 21
  9645                           
  9646                           ;uart.c: 170: int16_t i[5];
  9647                           ;uart.c: 171: int j = 0;
  9648                           
  9649                           ; BSR set to: 0
  9650                           ;incstack = 0
  9651  0016C0  0E00               	movlw	0
  9652  0016C2  0100               	movlb	0	; () banked
  9653  0016C4  6F7D               	movwf	(IntToC@j+1)& (0+255),b
  9654  0016C6  0E00               	movlw	0
  9655  0016C8  6F7C               	movwf	IntToC@j& (0+255),b
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;uart.c: 172: static char out[8];
  9659                           ;uart.c: 175: if (nb < 0)
  9660  0016CA  0100               	movlb	0	; () banked
  9661  0016CC  AF6F               	btfss	(IntToC@nb+1)& (0+255),7,b
  9662  0016CE  D01C               	goto	l4381
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;uart.c: 176: {
  9666                           ;uart.c: 177: nb *= (-1);
  9667  0016D0  C06E  F060         	movff	IntToC@nb,___wmul@multiplier
  9668  0016D4  C06F  F061         	movff	IntToC@nb+1,___wmul@multiplier+1
  9669  0016D8  0EFF               	movlw	255
  9670  0016DA  0100               	movlb	0	; () banked
  9671  0016DC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9672  0016DE  6962               	setf	___wmul@multiplicand& (0+255),b
  9673  0016E0  EC32  F01B         	call	___wmul	;wreg free
  9674  0016E4  C060  F06E         	movff	?___wmul,IntToC@nb
  9675  0016E8  C061  F06F         	movff	?___wmul+1,IntToC@nb+1
  9676                           
  9677                           ;uart.c: 178: out[j++] = '-';
  9678  0016EC  0E86               	movlw	low IntToC@out
  9679  0016EE  0100               	movlb	0	; () banked
  9680  0016F0  257C               	addwf	IntToC@j& (0+255),w,b
  9681  0016F2  6ED9               	movwf	fsr2l,c
  9682  0016F4  0E01               	movlw	high IntToC@out
  9683  0016F6  0100               	movlb	0	; () banked
  9684  0016F8  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
  9685  0016FA  6EDA               	movwf	fsr2h,c
  9686  0016FC  0E2D               	movlw	45
  9687  0016FE  6EDF               	movwf	indf2,c
  9688                           
  9689                           ; BSR set to: 0
  9690  001700  0100               	movlb	0	; () banked
  9691  001702  4B7C               	infsnz	IntToC@j& (0+255),f,b
  9692  001704  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
  9693  001706  D000               	goto	l4381
  9694  001708                     l4381:
  9695                           
  9696                           ; BSR set to: 0
  9697                           ;uart.c: 179: }
  9698                           ;uart.c: 183: i[0] = (nb / 10000);
  9699  001708  C06E  F066         	movff	IntToC@nb,___awdiv@dividend
  9700  00170C  C06F  F067         	movff	IntToC@nb+1,___awdiv@dividend+1
  9701  001710  0E27               	movlw	39
  9702  001712  0100               	movlb	0	; () banked
  9703  001714  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9704  001716  0E10               	movlw	16
  9705  001718  6F68               	movwf	___awdiv@divisor& (0+255),b
  9706  00171A  ECCE  F014         	call	___awdiv	;wreg free
  9707  00171E  C066  F072         	movff	?___awdiv,IntToC@i
  9708  001722  C067  F073         	movff	?___awdiv+1,IntToC@i+1
  9709                           
  9710                           ;uart.c: 184: i[1] = (nb - i[0] * 10000) / 1000;
  9711  001726  C072  F060         	movff	IntToC@i,___wmul@multiplier
  9712  00172A  C073  F061         	movff	IntToC@i+1,___wmul@multiplier+1
  9713  00172E  0E27               	movlw	39
  9714  001730  0100               	movlb	0	; () banked
  9715  001732  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9716  001734  0E10               	movlw	16
  9717  001736  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9718  001738  EC32  F01B         	call	___wmul	;wreg free
  9719  00173C  0100               	movlb	0	; () banked
  9720  00173E  1F60               	comf	?___wmul& (0+255),f,b
  9721  001740  0100               	movlb	0	; () banked
  9722  001742  1F61               	comf	(?___wmul+1)& (0+255),f,b
  9723  001744  0100               	movlb	0	; () banked
  9724  001746  4B60               	infsnz	?___wmul& (0+255),f,b
  9725  001748  2B61               	incf	(?___wmul+1)& (0+255),f,b
  9726  00174A  0100               	movlb	0	; () banked
  9727  00174C  516E               	movf	IntToC@nb& (0+255),w,b
  9728  00174E  0100               	movlb	0	; () banked
  9729  001750  2560               	addwf	?___wmul& (0+255),w,b
  9730  001752  0100               	movlb	0	; () banked
  9731  001754  6F66               	movwf	___awdiv@dividend& (0+255),b
  9732  001756  0100               	movlb	0	; () banked
  9733  001758  516F               	movf	(IntToC@nb+1)& (0+255),w,b
  9734  00175A  0100               	movlb	0	; () banked
  9735  00175C  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  9736  00175E  0100               	movlb	0	; () banked
  9737  001760  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9738  001762  0E03               	movlw	3
  9739  001764  0100               	movlb	0	; () banked
  9740  001766  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9741  001768  0EE8               	movlw	232
  9742  00176A  6F68               	movwf	___awdiv@divisor& (0+255),b
  9743  00176C  ECCE  F014         	call	___awdiv	;wreg free
  9744  001770  C066  F074         	movff	?___awdiv,IntToC@i+2
  9745  001774  C067  F075         	movff	?___awdiv+1,IntToC@i+3
  9746                           
  9747                           ;uart.c: 185: i[2] = (nb - i[0] * 10000 - i[1] * 1000) / 100;
  9748  001778  C072  F060         	movff	IntToC@i,___wmul@multiplier
  9749  00177C  C073  F061         	movff	IntToC@i+1,___wmul@multiplier+1
  9750  001780  0E27               	movlw	39
  9751  001782  0100               	movlb	0	; () banked
  9752  001784  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9753  001786  0E10               	movlw	16
  9754  001788  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9755  00178A  EC32  F01B         	call	___wmul	;wreg free
  9756  00178E  C060  F070         	movff	?___wmul,??_IntToC
  9757  001792  C061  F071         	movff	?___wmul+1,??_IntToC+1
  9758  001796  C074  F060         	movff	IntToC@i+2,___wmul@multiplier
  9759  00179A  C075  F061         	movff	IntToC@i+3,___wmul@multiplier+1
  9760  00179E  0E03               	movlw	3
  9761  0017A0  0100               	movlb	0	; () banked
  9762  0017A2  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9763  0017A4  0EE8               	movlw	232
  9764  0017A6  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9765  0017A8  EC32  F01B         	call	___wmul	;wreg free
  9766  0017AC  0100               	movlb	0	; () banked
  9767  0017AE  5160               	movf	?___wmul& (0+255),w,b
  9768  0017B0  0100               	movlb	0	; () banked
  9769  0017B2  2770               	addwf	??_IntToC& (0+255),f,b
  9770  0017B4  0100               	movlb	0	; () banked
  9771  0017B6  5161               	movf	(?___wmul+1)& (0+255),w,b
  9772  0017B8  0100               	movlb	0	; () banked
  9773  0017BA  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
  9774  0017BC  0100               	movlb	0	; () banked
  9775  0017BE  1F70               	comf	??_IntToC& (0+255),f,b
  9776  0017C0  1F71               	comf	(??_IntToC+1)& (0+255),f,b
  9777  0017C2  4B70               	infsnz	??_IntToC& (0+255),f,b
  9778  0017C4  2B71               	incf	(??_IntToC+1)& (0+255),f,b
  9779  0017C6  0100               	movlb	0	; () banked
  9780  0017C8  516E               	movf	IntToC@nb& (0+255),w,b
  9781  0017CA  0100               	movlb	0	; () banked
  9782  0017CC  2570               	addwf	??_IntToC& (0+255),w,b
  9783  0017CE  0100               	movlb	0	; () banked
  9784  0017D0  6F66               	movwf	___awdiv@dividend& (0+255),b
  9785  0017D2  0100               	movlb	0	; () banked
  9786  0017D4  516F               	movf	(IntToC@nb+1)& (0+255),w,b
  9787  0017D6  0100               	movlb	0	; () banked
  9788  0017D8  2171               	addwfc	(??_IntToC+1)& (0+255),w,b
  9789  0017DA  0100               	movlb	0	; () banked
  9790  0017DC  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9791  0017DE  0E00               	movlw	0
  9792  0017E0  0100               	movlb	0	; () banked
  9793  0017E2  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9794  0017E4  0E64               	movlw	100
  9795  0017E6  6F68               	movwf	___awdiv@divisor& (0+255),b
  9796  0017E8  ECCE  F014         	call	___awdiv	;wreg free
  9797  0017EC  C066  F076         	movff	?___awdiv,IntToC@i+4
  9798  0017F0  C067  F077         	movff	?___awdiv+1,IntToC@i+5
  9799                           
  9800                           ;uart.c: 186: i[3] = (nb - i[0] * 10000 - i[1] * 1000 - i[2] * 100) / 10;
  9801  0017F4  C072  F060         	movff	IntToC@i,___wmul@multiplier
  9802  0017F8  C073  F061         	movff	IntToC@i+1,___wmul@multiplier+1
  9803  0017FC  0E27               	movlw	39
  9804  0017FE  0100               	movlb	0	; () banked
  9805  001800  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9806  001802  0E10               	movlw	16
  9807  001804  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9808  001806  EC32  F01B         	call	___wmul	;wreg free
  9809  00180A  C060  F070         	movff	?___wmul,??_IntToC
  9810  00180E  C061  F071         	movff	?___wmul+1,??_IntToC+1
  9811  001812  C074  F060         	movff	IntToC@i+2,___wmul@multiplier
  9812  001816  C075  F061         	movff	IntToC@i+3,___wmul@multiplier+1
  9813  00181A  0E03               	movlw	3
  9814  00181C  0100               	movlb	0	; () banked
  9815  00181E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9816  001820  0EE8               	movlw	232
  9817  001822  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9818  001824  EC32  F01B         	call	___wmul	;wreg free
  9819  001828  0100               	movlb	0	; () banked
  9820  00182A  5160               	movf	?___wmul& (0+255),w,b
  9821  00182C  0100               	movlb	0	; () banked
  9822  00182E  2770               	addwf	??_IntToC& (0+255),f,b
  9823  001830  0100               	movlb	0	; () banked
  9824  001832  5161               	movf	(?___wmul+1)& (0+255),w,b
  9825  001834  0100               	movlb	0	; () banked
  9826  001836  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
  9827  001838  C076  F060         	movff	IntToC@i+4,___wmul@multiplier
  9828  00183C  C077  F061         	movff	IntToC@i+5,___wmul@multiplier+1
  9829  001840  0E00               	movlw	0
  9830  001842  0100               	movlb	0	; () banked
  9831  001844  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9832  001846  0E64               	movlw	100
  9833  001848  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9834  00184A  EC32  F01B         	call	___wmul	;wreg free
  9835  00184E  0100               	movlb	0	; () banked
  9836  001850  5160               	movf	?___wmul& (0+255),w,b
  9837  001852  0100               	movlb	0	; () banked
  9838  001854  2770               	addwf	??_IntToC& (0+255),f,b
  9839  001856  0100               	movlb	0	; () banked
  9840  001858  5161               	movf	(?___wmul+1)& (0+255),w,b
  9841  00185A  0100               	movlb	0	; () banked
  9842  00185C  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
  9843  00185E  0100               	movlb	0	; () banked
  9844  001860  1F70               	comf	??_IntToC& (0+255),f,b
  9845  001862  1F71               	comf	(??_IntToC+1)& (0+255),f,b
  9846  001864  4B70               	infsnz	??_IntToC& (0+255),f,b
  9847  001866  2B71               	incf	(??_IntToC+1)& (0+255),f,b
  9848  001868  0100               	movlb	0	; () banked
  9849  00186A  516E               	movf	IntToC@nb& (0+255),w,b
  9850  00186C  0100               	movlb	0	; () banked
  9851  00186E  2570               	addwf	??_IntToC& (0+255),w,b
  9852  001870  0100               	movlb	0	; () banked
  9853  001872  6F66               	movwf	___awdiv@dividend& (0+255),b
  9854  001874  0100               	movlb	0	; () banked
  9855  001876  516F               	movf	(IntToC@nb+1)& (0+255),w,b
  9856  001878  0100               	movlb	0	; () banked
  9857  00187A  2171               	addwfc	(??_IntToC+1)& (0+255),w,b
  9858  00187C  0100               	movlb	0	; () banked
  9859  00187E  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9860  001880  0E00               	movlw	0
  9861  001882  0100               	movlb	0	; () banked
  9862  001884  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9863  001886  0E0A               	movlw	10
  9864  001888  6F68               	movwf	___awdiv@divisor& (0+255),b
  9865  00188A  ECCE  F014         	call	___awdiv	;wreg free
  9866  00188E  C066  F078         	movff	?___awdiv,IntToC@i+6
  9867  001892  C067  F079         	movff	?___awdiv+1,IntToC@i+7
  9868                           
  9869                           ;uart.c: 187: i[4] = (nb - i[0] * 10000 - i[1] * 1000 - i[2] * 100 - i[3] * 10);
  9870  001896  C072  F060         	movff	IntToC@i,___wmul@multiplier
  9871  00189A  C073  F061         	movff	IntToC@i+1,___wmul@multiplier+1
  9872  00189E  0E27               	movlw	39
  9873  0018A0  0100               	movlb	0	; () banked
  9874  0018A2  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9875  0018A4  0E10               	movlw	16
  9876  0018A6  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9877  0018A8  EC32  F01B         	call	___wmul	;wreg free
  9878  0018AC  C060  F070         	movff	?___wmul,??_IntToC
  9879  0018B0  C061  F071         	movff	?___wmul+1,??_IntToC+1
  9880  0018B4  C074  F060         	movff	IntToC@i+2,___wmul@multiplier
  9881  0018B8  C075  F061         	movff	IntToC@i+3,___wmul@multiplier+1
  9882  0018BC  0E03               	movlw	3
  9883  0018BE  0100               	movlb	0	; () banked
  9884  0018C0  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9885  0018C2  0EE8               	movlw	232
  9886  0018C4  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9887  0018C6  EC32  F01B         	call	___wmul	;wreg free
  9888  0018CA  0100               	movlb	0	; () banked
  9889  0018CC  5160               	movf	?___wmul& (0+255),w,b
  9890  0018CE  0100               	movlb	0	; () banked
  9891  0018D0  2770               	addwf	??_IntToC& (0+255),f,b
  9892  0018D2  0100               	movlb	0	; () banked
  9893  0018D4  5161               	movf	(?___wmul+1)& (0+255),w,b
  9894  0018D6  0100               	movlb	0	; () banked
  9895  0018D8  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
  9896  0018DA  C076  F060         	movff	IntToC@i+4,___wmul@multiplier
  9897  0018DE  C077  F061         	movff	IntToC@i+5,___wmul@multiplier+1
  9898  0018E2  0E00               	movlw	0
  9899  0018E4  0100               	movlb	0	; () banked
  9900  0018E6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9901  0018E8  0E64               	movlw	100
  9902  0018EA  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9903  0018EC  EC32  F01B         	call	___wmul	;wreg free
  9904  0018F0  0100               	movlb	0	; () banked
  9905  0018F2  5160               	movf	?___wmul& (0+255),w,b
  9906  0018F4  0100               	movlb	0	; () banked
  9907  0018F6  2770               	addwf	??_IntToC& (0+255),f,b
  9908  0018F8  0100               	movlb	0	; () banked
  9909  0018FA  5161               	movf	(?___wmul+1)& (0+255),w,b
  9910  0018FC  0100               	movlb	0	; () banked
  9911  0018FE  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
  9912  001900  C078  F060         	movff	IntToC@i+6,___wmul@multiplier
  9913  001904  C079  F061         	movff	IntToC@i+7,___wmul@multiplier+1
  9914  001908  0E00               	movlw	0
  9915  00190A  0100               	movlb	0	; () banked
  9916  00190C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9917  00190E  0E0A               	movlw	10
  9918  001910  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9919  001912  EC32  F01B         	call	___wmul	;wreg free
  9920  001916  0100               	movlb	0	; () banked
  9921  001918  5160               	movf	?___wmul& (0+255),w,b
  9922  00191A  0100               	movlb	0	; () banked
  9923  00191C  2770               	addwf	??_IntToC& (0+255),f,b
  9924  00191E  0100               	movlb	0	; () banked
  9925  001920  5161               	movf	(?___wmul+1)& (0+255),w,b
  9926  001922  0100               	movlb	0	; () banked
  9927  001924  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
  9928  001926  0100               	movlb	0	; () banked
  9929  001928  1F70               	comf	??_IntToC& (0+255),f,b
  9930  00192A  1F71               	comf	(??_IntToC+1)& (0+255),f,b
  9931  00192C  4B70               	infsnz	??_IntToC& (0+255),f,b
  9932  00192E  2B71               	incf	(??_IntToC+1)& (0+255),f,b
  9933  001930  0100               	movlb	0	; () banked
  9934  001932  516E               	movf	IntToC@nb& (0+255),w,b
  9935  001934  0100               	movlb	0	; () banked
  9936  001936  2570               	addwf	??_IntToC& (0+255),w,b
  9937  001938  0100               	movlb	0	; () banked
  9938  00193A  6F7A               	movwf	(IntToC@i+8)& (0+255),b
  9939  00193C  0100               	movlb	0	; () banked
  9940  00193E  516F               	movf	(IntToC@nb+1)& (0+255),w,b
  9941  001940  0100               	movlb	0	; () banked
  9942  001942  2171               	addwfc	(??_IntToC+1)& (0+255),w,b
  9943  001944  0100               	movlb	0	; () banked
  9944  001946  6F7B               	movwf	(IntToC@i+9)& (0+255),b
  9945                           
  9946                           ; BSR set to: 0
  9947                           ;uart.c: 189: out[j++] = (unsigned char)(i[0] + 48);
  9948  001948  0E86               	movlw	low IntToC@out
  9949  00194A  0100               	movlb	0	; () banked
  9950  00194C  257C               	addwf	IntToC@j& (0+255),w,b
  9951  00194E  6ED9               	movwf	fsr2l,c
  9952  001950  0E01               	movlw	high IntToC@out
  9953  001952  0100               	movlb	0	; () banked
  9954  001954  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
  9955  001956  6EDA               	movwf	fsr2h,c
  9956  001958  0100               	movlb	0	; () banked
  9957  00195A  5172               	movf	IntToC@i& (0+255),w,b
  9958  00195C  0F30               	addlw	48
  9959  00195E  6EDF               	movwf	indf2,c
  9960                           
  9961                           ; BSR set to: 0
  9962  001960  0100               	movlb	0	; () banked
  9963  001962  4B7C               	infsnz	IntToC@j& (0+255),f,b
  9964  001964  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
  9965                           
  9966                           ; BSR set to: 0
  9967                           ;uart.c: 190: out[j++] = (unsigned char)(i[1] + 48);
  9968  001966  0E86               	movlw	low IntToC@out
  9969  001968  0100               	movlb	0	; () banked
  9970  00196A  257C               	addwf	IntToC@j& (0+255),w,b
  9971  00196C  6ED9               	movwf	fsr2l,c
  9972  00196E  0E01               	movlw	high IntToC@out
  9973  001970  0100               	movlb	0	; () banked
  9974  001972  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
  9975  001974  6EDA               	movwf	fsr2h,c
  9976  001976  0100               	movlb	0	; () banked
  9977  001978  5174               	movf	(IntToC@i+2)& (0+255),w,b
  9978  00197A  0F30               	addlw	48
  9979  00197C  6EDF               	movwf	indf2,c
  9980                           
  9981                           ; BSR set to: 0
  9982  00197E  0100               	movlb	0	; () banked
  9983  001980  4B7C               	infsnz	IntToC@j& (0+255),f,b
  9984  001982  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
  9985                           
  9986                           ; BSR set to: 0
  9987                           ;uart.c: 191: out[j++] = (unsigned char)(i[2] + 48);
  9988  001984  0E86               	movlw	low IntToC@out
  9989  001986  0100               	movlb	0	; () banked
  9990  001988  257C               	addwf	IntToC@j& (0+255),w,b
  9991  00198A  6ED9               	movwf	fsr2l,c
  9992  00198C  0E01               	movlw	high IntToC@out
  9993  00198E  0100               	movlb	0	; () banked
  9994  001990  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
  9995  001992  6EDA               	movwf	fsr2h,c
  9996  001994  0100               	movlb	0	; () banked
  9997  001996  5176               	movf	(IntToC@i+4)& (0+255),w,b
  9998  001998  0F30               	addlw	48
  9999  00199A  6EDF               	movwf	indf2,c
 10000                           
 10001                           ; BSR set to: 0
 10002  00199C  0100               	movlb	0	; () banked
 10003  00199E  4B7C               	infsnz	IntToC@j& (0+255),f,b
 10004  0019A0  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
 10005                           
 10006                           ; BSR set to: 0
 10007                           ;uart.c: 192: out[j++] = (unsigned char)(i[3] + 48);
 10008  0019A2  0E86               	movlw	low IntToC@out
 10009  0019A4  0100               	movlb	0	; () banked
 10010  0019A6  257C               	addwf	IntToC@j& (0+255),w,b
 10011  0019A8  6ED9               	movwf	fsr2l,c
 10012  0019AA  0E01               	movlw	high IntToC@out
 10013  0019AC  0100               	movlb	0	; () banked
 10014  0019AE  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
 10015  0019B0  6EDA               	movwf	fsr2h,c
 10016  0019B2  0100               	movlb	0	; () banked
 10017  0019B4  5178               	movf	(IntToC@i+6)& (0+255),w,b
 10018  0019B6  0F30               	addlw	48
 10019  0019B8  6EDF               	movwf	indf2,c
 10020                           
 10021                           ; BSR set to: 0
 10022  0019BA  0100               	movlb	0	; () banked
 10023  0019BC  4B7C               	infsnz	IntToC@j& (0+255),f,b
 10024  0019BE  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;uart.c: 193: out[j++] = (unsigned char)(i[4] + 48);
 10028  0019C0  0E86               	movlw	low IntToC@out
 10029  0019C2  0100               	movlb	0	; () banked
 10030  0019C4  257C               	addwf	IntToC@j& (0+255),w,b
 10031  0019C6  6ED9               	movwf	fsr2l,c
 10032  0019C8  0E01               	movlw	high IntToC@out
 10033  0019CA  0100               	movlb	0	; () banked
 10034  0019CC  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
 10035  0019CE  6EDA               	movwf	fsr2h,c
 10036  0019D0  0100               	movlb	0	; () banked
 10037  0019D2  517A               	movf	(IntToC@i+8)& (0+255),w,b
 10038  0019D4  0F30               	addlw	48
 10039  0019D6  6EDF               	movwf	indf2,c
 10040                           
 10041                           ; BSR set to: 0
 10042  0019D8  0100               	movlb	0	; () banked
 10043  0019DA  4B7C               	infsnz	IntToC@j& (0+255),f,b
 10044  0019DC  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
 10045                           
 10046                           ; BSR set to: 0
 10047                           ;uart.c: 194: out[j++] = '\0';
 10048  0019DE  0E86               	movlw	low IntToC@out
 10049  0019E0  0100               	movlb	0	; () banked
 10050  0019E2  257C               	addwf	IntToC@j& (0+255),w,b
 10051  0019E4  6ED9               	movwf	fsr2l,c
 10052  0019E6  0E01               	movlw	high IntToC@out
 10053  0019E8  0100               	movlb	0	; () banked
 10054  0019EA  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
 10055  0019EC  6EDA               	movwf	fsr2h,c
 10056  0019EE  0E00               	movlw	0
 10057  0019F0  6EDF               	movwf	indf2,c
 10058                           
 10059                           ; BSR set to: 0
 10060  0019F2  0100               	movlb	0	; () banked
 10061  0019F4  4B7C               	infsnz	IntToC@j& (0+255),f,b
 10062  0019F6  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
 10063                           
 10064                           ; BSR set to: 0
 10065                           ;uart.c: 196: return out;
 10066  0019F8  0E86               	movlw	low IntToC@out
 10067  0019FA  0100               	movlb	0	; () banked
 10068  0019FC  6F6E               	movwf	?_IntToC& (0+255),b
 10069  0019FE  0E01               	movlw	high IntToC@out
 10070  001A00  0100               	movlb	0	; () banked
 10071  001A02  6F6F               	movwf	(?_IntToC+1)& (0+255),b
 10072  001A04  D000               	goto	l302
 10073  001A06                     l302:
 10074                           
 10075                           ; BSR set to: 0
 10076  001A06  0012               	return		;funcret
 10077  001A08                     __end_of_IntToC:
 10078                           	opt stack 0
 10079                           tblptru	equ	0xFF8
 10080                           tblptrh	equ	0xFF7
 10081                           tblptrl	equ	0xFF6
 10082                           tablat	equ	0xFF5
 10083                           prodh	equ	0xFF4
 10084                           prodl	equ	0xFF3
 10085                           intcon	equ	0xFF2
 10086                           intcon2	equ	0xFF1
 10087                           intcon3	equ	0xFF0
 10088                           indf0	equ	0xFEF
 10089                           postinc0	equ	0xFEE
 10090                           fsr0h	equ	0xFEA
 10091                           fsr0l	equ	0xFE9
 10092                           wreg	equ	0xFE8
 10093                           postinc1	equ	0xFE6
 10094                           postdec1	equ	0xFE5
 10095                           fsr1h	equ	0xFE2
 10096                           fsr1l	equ	0xFE1
 10097                           indf2	equ	0xFDF
 10098                           postinc2	equ	0xFDE
 10099                           postdec2	equ	0xFDD
 10100                           fsr2h	equ	0xFDA
 10101                           fsr2l	equ	0xFD9
 10102                           status	equ	0xFD8
 10103                           
 10104 ;; *************** function ___wmul *****************
 10105 ;; Defined at:
 10106 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 10107 ;; Parameters:    Size  Location     Type
 10108 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10109 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10110 ;; Auto vars:     Size  Location     Type
 10111 ;;  product         2    4[BANK0 ] unsigned int 
 10112 ;; Return value:  Size  Location     Type
 10113 ;;                  2    0[BANK0 ] unsigned int 
 10114 ;; Registers used:
 10115 ;;		wreg, status,2, status,0, prodl, prodh
 10116 ;; Tracked objects:
 10117 ;;		On entry : 0/0
 10118 ;;		On exit  : 0/0
 10119 ;;		Unchanged: 0/0
 10120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10121 ;;      Params:         0       4       0       0
 10122 ;;      Locals:         0       2       0       0
 10123 ;;      Temps:          0       0       0       0
 10124 ;;      Totals:         0       6       0       0
 10125 ;;Total ram usage:        6 bytes
 10126 ;; Hardware stack levels used:    1
 10127 ;; Hardware stack levels required when called:    6
 10128 ;; This function calls:
 10129 ;;		Nothing
 10130 ;; This function is called by:
 10131 ;;		_main
 10132 ;;		_IntToC
 10133 ;;		_eval_poly
 10134 ;; This function uses a non-reentrant model
 10135 ;;
 10136                           
 10137                           	psect	text42
 10138  003664                     __ptext42:
 10139                           	opt stack 0
 10140  003664                     ___wmul:
 10141                           	opt stack 19
 10142                           
 10143                           ; BSR set to: 0
 10144                           ;incstack = 0
 10145  003664  0100               	movlb	0	; () banked
 10146  003666  5160               	movf	___wmul@multiplier& (0+255),w,b
 10147  003668  0100               	movlb	0	; () banked
 10148  00366A  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10149  00366C  CFF3 F064          	movff	prodl,___wmul@product
 10150  003670  CFF4 F065          	movff	prodh,___wmul@product+1
 10151  003674  0100               	movlb	0	; () banked
 10152  003676  5160               	movf	___wmul@multiplier& (0+255),w,b
 10153  003678  0100               	movlb	0	; () banked
 10154  00367A  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10155  00367C  50F3               	movf	prodl,w,c
 10156  00367E  0100               	movlb	0	; () banked
 10157  003680  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10158  003682  0100               	movlb	0	; () banked
 10159  003684  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10160  003686  0100               	movlb	0	; () banked
 10161  003688  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10162  00368A  50F3               	movf	prodl,w,c
 10163  00368C  0100               	movlb	0	; () banked
 10164  00368E  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10165                           
 10166                           ; BSR set to: 0
 10167  003690  C064  F060         	movff	___wmul@product,?___wmul
 10168  003694  C065  F061         	movff	___wmul@product+1,?___wmul+1
 10169  003698  D000               	goto	l640
 10170  00369A                     l640:
 10171                           
 10172                           ; BSR set to: 0
 10173  00369A  0012               	return		;funcret
 10174  00369C                     __end_of___wmul:
 10175                           	opt stack 0
 10176                           tblptru	equ	0xFF8
 10177                           tblptrh	equ	0xFF7
 10178                           tblptrl	equ	0xFF6
 10179                           tablat	equ	0xFF5
 10180                           prodh	equ	0xFF4
 10181                           prodl	equ	0xFF3
 10182                           intcon	equ	0xFF2
 10183                           intcon2	equ	0xFF1
 10184                           intcon3	equ	0xFF0
 10185                           indf0	equ	0xFEF
 10186                           postinc0	equ	0xFEE
 10187                           fsr0h	equ	0xFEA
 10188                           fsr0l	equ	0xFE9
 10189                           wreg	equ	0xFE8
 10190                           postinc1	equ	0xFE6
 10191                           postdec1	equ	0xFE5
 10192                           fsr1h	equ	0xFE2
 10193                           fsr1l	equ	0xFE1
 10194                           indf2	equ	0xFDF
 10195                           postinc2	equ	0xFDE
 10196                           postdec2	equ	0xFDD
 10197                           fsr2h	equ	0xFDA
 10198                           fsr2l	equ	0xFD9
 10199                           status	equ	0xFD8
 10200                           
 10201 ;; *************** function ___awdiv *****************
 10202 ;; Defined at:
 10203 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 10204 ;; Parameters:    Size  Location     Type
 10205 ;;  dividend        2    6[BANK0 ] int 
 10206 ;;  divisor         2    8[BANK0 ] int 
 10207 ;; Auto vars:     Size  Location     Type
 10208 ;;  quotient        2   12[BANK0 ] int 
 10209 ;;  sign            1   11[BANK0 ] unsigned char 
 10210 ;;  counter         1   10[BANK0 ] unsigned char 
 10211 ;; Return value:  Size  Location     Type
 10212 ;;                  2    6[BANK0 ] int 
 10213 ;; Registers used:
 10214 ;;		wreg, status,2, status,0
 10215 ;; Tracked objects:
 10216 ;;		On entry : 0/0
 10217 ;;		On exit  : 0/0
 10218 ;;		Unchanged: 0/0
 10219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10220 ;;      Params:         0       4       0       0
 10221 ;;      Locals:         0       4       0       0
 10222 ;;      Temps:          0       0       0       0
 10223 ;;      Totals:         0       8       0       0
 10224 ;;Total ram usage:        8 bytes
 10225 ;; Hardware stack levels used:    1
 10226 ;; Hardware stack levels required when called:    6
 10227 ;; This function calls:
 10228 ;;		Nothing
 10229 ;; This function is called by:
 10230 ;;		_PutcUART
 10231 ;;		_IntToC
 10232 ;; This function uses a non-reentrant model
 10233 ;;
 10234                           
 10235                           	psect	text43
 10236  00299C                     __ptext43:
 10237                           	opt stack 0
 10238  00299C                     ___awdiv:
 10239                           	opt stack 21
 10240                           
 10241                           ; BSR set to: 0
 10242                           ;incstack = 0
 10243  00299C  0E00               	movlw	0
 10244  00299E  0100               	movlb	0	; () banked
 10245  0029A0  6F6B               	movwf	___awdiv@sign& (0+255),b
 10246                           
 10247                           ; BSR set to: 0
 10248  0029A2  0100               	movlb	0	; () banked
 10249  0029A4  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10250  0029A6  D009               	goto	l4249
 10251                           
 10252                           ; BSR set to: 0
 10253  0029A8  0100               	movlb	0	; () banked
 10254  0029AA  6D68               	negf	___awdiv@divisor& (0+255),b
 10255  0029AC  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10256  0029AE  B0D8               	btfsc	status,0,c
 10257  0029B0  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10258                           
 10259                           ; BSR set to: 0
 10260  0029B2  0E01               	movlw	1
 10261  0029B4  0100               	movlb	0	; () banked
 10262  0029B6  6F6B               	movwf	___awdiv@sign& (0+255),b
 10263  0029B8  D000               	goto	l4249
 10264  0029BA                     l4249:
 10265                           
 10266                           ; BSR set to: 0
 10267  0029BA  0100               	movlb	0	; () banked
 10268  0029BC  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10269  0029BE  D009               	goto	l4255
 10270                           
 10271                           ; BSR set to: 0
 10272  0029C0  0100               	movlb	0	; () banked
 10273  0029C2  6D66               	negf	___awdiv@dividend& (0+255),b
 10274  0029C4  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10275  0029C6  B0D8               	btfsc	status,0,c
 10276  0029C8  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10277                           
 10278                           ; BSR set to: 0
 10279  0029CA  0E01               	movlw	1
 10280  0029CC  0100               	movlb	0	; () banked
 10281  0029CE  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
 10282  0029D0  D000               	goto	l4255
 10283  0029D2                     l4255:
 10284                           
 10285                           ; BSR set to: 0
 10286  0029D2  0E00               	movlw	0
 10287  0029D4  0100               	movlb	0	; () banked
 10288  0029D6  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
 10289  0029D8  0E00               	movlw	0
 10290  0029DA  6F6C               	movwf	___awdiv@quotient& (0+255),b
 10291                           
 10292                           ; BSR set to: 0
 10293  0029DC  0100               	movlb	0	; () banked
 10294  0029DE  5168               	movf	___awdiv@divisor& (0+255),w,b
 10295  0029E0  0100               	movlb	0	; () banked
 10296  0029E2  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10297  0029E4  B4D8               	btfsc	status,2,c
 10298  0029E6  D031               	goto	l4277
 10299                           
 10300                           ; BSR set to: 0
 10301  0029E8  0E01               	movlw	1
 10302  0029EA  0100               	movlb	0	; () banked
 10303  0029EC  6F6A               	movwf	___awdiv@counter& (0+255),b
 10304  0029EE  D007               	goto	l4263
 10305  0029F0                     l4261:
 10306                           
 10307                           ; BSR set to: 0
 10308  0029F0  0100               	movlb	0	; () banked
 10309  0029F2  90D8               	bcf	status,0,c
 10310  0029F4  3768               	rlcf	___awdiv@divisor& (0+255),f,b
 10311  0029F6  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10312  0029F8  0100               	movlb	0	; () banked
 10313  0029FA  2B6A               	incf	___awdiv@counter& (0+255),f,b
 10314  0029FC  D000               	goto	l4263
 10315  0029FE                     l4263:
 10316                           
 10317                           ; BSR set to: 0
 10318  0029FE  0100               	movlb	0	; () banked
 10319  002A00  BF69               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 10320  002A02  D002               	goto	l4265
 10321  002A04  D7F5               	goto	l4261
 10322                           
 10323                           ; BSR set to: 0
 10324  002A06  D000               	goto	l4265
 10325  002A08                     l4265:
 10326                           
 10327                           ; BSR set to: 0
 10328  002A08  0100               	movlb	0	; () banked
 10329  002A0A  90D8               	bcf	status,0,c
 10330  002A0C  376C               	rlcf	___awdiv@quotient& (0+255),f,b
 10331  002A0E  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10332                           
 10333                           ; BSR set to: 0
 10334  002A10  0100               	movlb	0	; () banked
 10335  002A12  5168               	movf	___awdiv@divisor& (0+255),w,b
 10336  002A14  0100               	movlb	0	; () banked
 10337  002A16  5D66               	subwf	___awdiv@dividend& (0+255),w,b
 10338  002A18  0100               	movlb	0	; () banked
 10339  002A1A  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10340  002A1C  0100               	movlb	0	; () banked
 10341  002A1E  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10342  002A20  A0D8               	btfss	status,0,c
 10343  002A22  D00B               	goto	l4273
 10344                           
 10345                           ; BSR set to: 0
 10346  002A24  0100               	movlb	0	; () banked
 10347  002A26  5168               	movf	___awdiv@divisor& (0+255),w,b
 10348  002A28  0100               	movlb	0	; () banked
 10349  002A2A  5F66               	subwf	___awdiv@dividend& (0+255),f,b
 10350  002A2C  0100               	movlb	0	; () banked
 10351  002A2E  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10352  002A30  0100               	movlb	0	; () banked
 10353  002A32  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10354                           
 10355                           ; BSR set to: 0
 10356  002A34  0100               	movlb	0	; () banked
 10357  002A36  816C               	bsf	___awdiv@quotient& (0+255),0,b
 10358  002A38  D000               	goto	l4273
 10359  002A3A                     l4273:
 10360                           
 10361                           ; BSR set to: 0
 10362  002A3A  0100               	movlb	0	; () banked
 10363  002A3C  90D8               	bcf	status,0,c
 10364  002A3E  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10365  002A40  3368               	rrcf	___awdiv@divisor& (0+255),f,b
 10366                           
 10367                           ; BSR set to: 0
 10368  002A42  0100               	movlb	0	; () banked
 10369  002A44  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
 10370  002A46  D7E0               	goto	l4265
 10371                           
 10372                           ; BSR set to: 0
 10373  002A48  D000               	goto	l4277
 10374  002A4A                     l4277:
 10375                           
 10376                           ; BSR set to: 0
 10377  002A4A  0100               	movlb	0	; () banked
 10378  002A4C  516B               	movf	___awdiv@sign& (0+255),w,b
 10379  002A4E  0100               	movlb	0	; () banked
 10380  002A50  B4D8               	btfsc	status,2,c
 10381  002A52  D006               	goto	l4281
 10382                           
 10383                           ; BSR set to: 0
 10384  002A54  0100               	movlb	0	; () banked
 10385  002A56  6D6C               	negf	___awdiv@quotient& (0+255),b
 10386  002A58  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10387  002A5A  B0D8               	btfsc	status,0,c
 10388  002A5C  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10389  002A5E  D000               	goto	l4281
 10390  002A60                     l4281:
 10391                           
 10392                           ; BSR set to: 0
 10393  002A60  C06C  F066         	movff	___awdiv@quotient,?___awdiv
 10394  002A64  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
 10395  002A68  D000               	goto	l833
 10396  002A6A                     l833:
 10397                           
 10398                           ; BSR set to: 0
 10399  002A6A  0012               	return		;funcret
 10400  002A6C                     __end_of___awdiv:
 10401                           	opt stack 0
 10402                           tblptru	equ	0xFF8
 10403                           tblptrh	equ	0xFF7
 10404                           tblptrl	equ	0xFF6
 10405                           tablat	equ	0xFF5
 10406                           prodh	equ	0xFF4
 10407                           prodl	equ	0xFF3
 10408                           intcon	equ	0xFF2
 10409                           intcon2	equ	0xFF1
 10410                           intcon3	equ	0xFF0
 10411                           indf0	equ	0xFEF
 10412                           postinc0	equ	0xFEE
 10413                           fsr0h	equ	0xFEA
 10414                           fsr0l	equ	0xFE9
 10415                           wreg	equ	0xFE8
 10416                           postinc1	equ	0xFE6
 10417                           postdec1	equ	0xFE5
 10418                           fsr1h	equ	0xFE2
 10419                           fsr1l	equ	0xFE1
 10420                           indf2	equ	0xFDF
 10421                           postinc2	equ	0xFDE
 10422                           postdec2	equ	0xFDD
 10423                           fsr2h	equ	0xFDA
 10424                           fsr2l	equ	0xFD9
 10425                           status	equ	0xFD8
 10426                           
 10427 ;; *************** function _low_isr *****************
 10428 ;; Defined at:
 10429 ;;		line 33 in file "interruptions.c"
 10430 ;; Parameters:    Size  Location     Type
 10431 ;;		None
 10432 ;; Auto vars:     Size  Location     Type
 10433 ;;		None
 10434 ;; Return value:  Size  Location     Type
 10435 ;;		None               void
 10436 ;; Registers used:
 10437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10438 ;; Tracked objects:
 10439 ;;		On entry : 0/0
 10440 ;;		On exit  : 0/0
 10441 ;;		Unchanged: 0/0
 10442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10443 ;;      Params:         0       0       0       0
 10444 ;;      Locals:         0       0       0       0
 10445 ;;      Temps:         17       0       0       0
 10446 ;;      Totals:        17       0       0       0
 10447 ;;Total ram usage:       17 bytes
 10448 ;; Hardware stack levels used:    1
 10449 ;; Hardware stack levels required when called:    5
 10450 ;; This function calls:
 10451 ;;		_subroutine_interruptions
 10452 ;; This function is called by:
 10453 ;;		Interrupt level 1
 10454 ;; This function uses a non-reentrant model
 10455 ;;
 10456                           
 10457                           	psect	intcodelo
 10458  000018                     __pintcodelo:
 10459                           	opt stack 0
 10460  000018                     _low_isr:
 10461                           	opt stack 17
 10462                           
 10463                           ; BSR set to: 0
 10464                           ;incstack = 0
 10465  000018  CFD8 F004          	movff	status,??_low_isr
 10466  00001C  CFE8 F005          	movff	wreg,??_low_isr+1
 10467  000020  CFE0 F006          	movff	bsr,??_low_isr+2
 10468  000024  CFFA F007          	movff	pclath,??_low_isr+3
 10469  000028  CFFB F008          	movff	pclatu,??_low_isr+4
 10470  00002C  CFE9 F009          	movff	fsr0l,??_low_isr+5
 10471  000030  CFEA F00A          	movff	fsr0h,??_low_isr+6
 10472  000034  CFE1 F00B          	movff	fsr1l,??_low_isr+7
 10473  000038  CFE2 F00C          	movff	fsr1h,??_low_isr+8
 10474  00003C  CFD9 F00D          	movff	fsr2l,??_low_isr+9
 10475  000040  CFDA F00E          	movff	fsr2h,??_low_isr+10
 10476  000044  CFF3 F00F          	movff	prodl,??_low_isr+11
 10477  000048  CFF4 F010          	movff	prodh,??_low_isr+12
 10478  00004C  CFF6 F011          	movff	tblptrl,??_low_isr+13
 10479  000050  CFF7 F012          	movff	tblptrh,??_low_isr+14
 10480  000054  CFF8 F013          	movff	tblptru,??_low_isr+15
 10481  000058  CFF5 F014          	movff	tablat,??_low_isr+16
 10482                           
 10483                           ;interruptions.c: 35: subroutine_interruptions(0b0);
 10484  00005C  0E00               	movlw	0
 10485  00005E  ECBA  F017         	call	_subroutine_interruptions
 10486  000062  C014  FFF5         	movff	??_low_isr+16,tablat
 10487  000066  C013  FFF8         	movff	??_low_isr+15,tblptru
 10488  00006A  C012  FFF7         	movff	??_low_isr+14,tblptrh
 10489  00006E  C011  FFF6         	movff	??_low_isr+13,tblptrl
 10490  000072  C010  FFF4         	movff	??_low_isr+12,prodh
 10491  000076  C00F  FFF3         	movff	??_low_isr+11,prodl
 10492  00007A  C00E  FFDA         	movff	??_low_isr+10,fsr2h
 10493  00007E  C00D  FFD9         	movff	??_low_isr+9,fsr2l
 10494  000082  C00C  FFE2         	movff	??_low_isr+8,fsr1h
 10495  000086  C00B  FFE1         	movff	??_low_isr+7,fsr1l
 10496  00008A  C00A  FFEA         	movff	??_low_isr+6,fsr0h
 10497  00008E  C009  FFE9         	movff	??_low_isr+5,fsr0l
 10498  000092  C008  FFFB         	movff	??_low_isr+4,pclatu
 10499  000096  C007  FFFA         	movff	??_low_isr+3,pclath
 10500  00009A  C006  FFE0         	movff	??_low_isr+2,bsr
 10501  00009E  C005  FFE8         	movff	??_low_isr+1,wreg
 10502  0000A2  C004  FFD8         	movff	??_low_isr,status
 10503  0000A6  0010               	retfie	
 10504  0000A8                     __end_of_low_isr:
 10505                           	opt stack 0
 10506                           pclatu	equ	0xFFB
 10507                           pclath	equ	0xFFA
 10508                           tblptru	equ	0xFF8
 10509                           tblptrh	equ	0xFF7
 10510                           tblptrl	equ	0xFF6
 10511                           tablat	equ	0xFF5
 10512                           prodh	equ	0xFF4
 10513                           prodl	equ	0xFF3
 10514                           intcon	equ	0xFF2
 10515                           intcon2	equ	0xFF1
 10516                           intcon3	equ	0xFF0
 10517                           indf0	equ	0xFEF
 10518                           postinc0	equ	0xFEE
 10519                           fsr0h	equ	0xFEA
 10520                           fsr0l	equ	0xFE9
 10521                           wreg	equ	0xFE8
 10522                           postinc1	equ	0xFE6
 10523                           postdec1	equ	0xFE5
 10524                           fsr1h	equ	0xFE2
 10525                           fsr1l	equ	0xFE1
 10526                           bsr	equ	0xFE0
 10527                           indf2	equ	0xFDF
 10528                           postinc2	equ	0xFDE
 10529                           postdec2	equ	0xFDD
 10530                           fsr2h	equ	0xFDA
 10531                           fsr2l	equ	0xFD9
 10532                           status	equ	0xFD8
 10533                           
 10534 ;; *************** function _subroutine_interruptions *****************
 10535 ;; Defined at:
 10536 ;;		line 43 in file "interruptions.c"
 10537 ;; Parameters:    Size  Location     Type
 10538 ;;  priorite        1    wreg     unsigned char 
 10539 ;; Auto vars:     Size  Location     Type
 10540 ;;  priorite        1    2[COMRAM] unsigned char 
 10541 ;; Return value:  Size  Location     Type
 10542 ;;		None               void
 10543 ;; Registers used:
 10544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10545 ;; Tracked objects:
 10546 ;;		On entry : 0/0
 10547 ;;		On exit  : 0/0
 10548 ;;		Unchanged: 0/0
 10549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10550 ;;      Params:         0       0       0       0
 10551 ;;      Locals:         1       0       0       0
 10552 ;;      Temps:          0       0       0       0
 10553 ;;      Totals:         1       0       0       0
 10554 ;;Total ram usage:        1 bytes
 10555 ;; Hardware stack levels used:    1
 10556 ;; Hardware stack levels required when called:    4
 10557 ;; This function calls:
 10558 ;;		_interrupt_RX
 10559 ;;		_interrupt_TX
 10560 ;;		_interruption_INT0
 10561 ;;		_interruption_QEI
 10562 ;;		_interruption_timer0
 10563 ;;		_interruption_timer1
 10564 ;;		_interruption_timer2
 10565 ;;		_interuption_QEI_sens
 10566 ;; This function is called by:
 10567 ;;		_low_isr
 10568 ;; This function uses a non-reentrant model
 10569 ;;
 10570                           
 10571                           	psect	text45
 10572  002F74                     __ptext45:
 10573                           	opt stack 0
 10574  002F74                     _subroutine_interruptions:
 10575                           	opt stack 17
 10576                           
 10577                           ;incstack = 0
 10578                           ;subroutine_interruptions@priorite stored from wreg
 10579  002F74  6E03               	movwf	subroutine_interruptions@priorite,c
 10580                           
 10581                           ;interruptions.c: 45: if ( PIR3bits.IC2QEIF == 1 && 0b1 == 1 && priorite == 0b1)
 10582  002F76  A4A4               	btfss	4004,2,c	;volatile
 10583  002F78  D006               	goto	i1l364
 10584  002F7A  0403               	decf	subroutine_interruptions@priorite,w,c
 10585  002F7C  A4D8               	btfss	status,2,c
 10586  002F7E  D003               	goto	i1l364
 10587                           
 10588                           ;interruptions.c: 46: {
 10589                           ;interruptions.c: 47: interruption_QEI();
 10590  002F80  EC91  F01B         	call	_interruption_QEI	;wreg free
 10591                           
 10592                           ;interruptions.c: 48: }
 10593  002F84  D038               	goto	i1l379
 10594  002F86                     i1l364:
 10595                           
 10596                           ;interruptions.c: 49: else if ( PIR3bits.IC3DRIF == 1 && 0b0 == 1 && priorite == 0b1)
 10597  002F86  50A4               	movf	4004,w,c	;volatile
 10598  002F88  D006               	goto	i1l366
 10599  002F8A  0403               	decf	subroutine_interruptions@priorite,w,c
 10600  002F8C  A4D8               	btfss	status,2,c
 10601  002F8E  D003               	goto	i1l366
 10602                           
 10603                           ;interruptions.c: 50: {
 10604                           ;interruptions.c: 51: interuption_QEI_sens();
 10605  002F90  EC04  F01C         	call	_interuption_QEI_sens	;wreg free
 10606                           
 10607                           ;interruptions.c: 52: }
 10608  002F94  D030               	goto	i1l379
 10609  002F96                     i1l366:
 10610                           
 10611                           ;interruptions.c: 53: else if ( INTCONbits.TMR0IF == 1 && 0b0 == 1 && priorite == 0b1)
 10612  002F96  50F2               	movf	intcon,w,c	;volatile
 10613  002F98  D006               	goto	i1l368
 10614  002F9A  0403               	decf	subroutine_interruptions@priorite,w,c
 10615  002F9C  A4D8               	btfss	status,2,c
 10616  002F9E  D003               	goto	i1l368
 10617                           
 10618                           ;interruptions.c: 54: {
 10619                           ;interruptions.c: 55: interruption_timer0();
 10620  002FA0  ECFC  F01B         	call	_interruption_timer0	;wreg free
 10621                           
 10622                           ;interruptions.c: 56: }
 10623  002FA4  D028               	goto	i1l379
 10624  002FA6                     i1l368:
 10625                           
 10626                           ;interruptions.c: 57: else if ( PIR1bits.TMR1IF == 1 && 0b1 == 1 && priorite == 0b1)
 10627  002FA6  A09E               	btfss	3998,0,c	;volatile
 10628  002FA8  D006               	goto	i1l370
 10629  002FAA  0403               	decf	subroutine_interruptions@priorite,w,c
 10630  002FAC  A4D8               	btfss	status,2,c
 10631  002FAE  D003               	goto	i1l370
 10632                           
 10633                           ;interruptions.c: 58: {
 10634                           ;interruptions.c: 59: interruption_timer1();
 10635  002FB0  EC74  F01A         	call	_interruption_timer1	;wreg free
 10636                           
 10637                           ;interruptions.c: 60: }
 10638  002FB4  D020               	goto	i1l379
 10639  002FB6                     i1l370:
 10640                           
 10641                           ;interruptions.c: 61: else if ( PIR1bits.TMR2IF == 1 && 0b0 == 1 && priorite == 0b0)
 10642  002FB6  509E               	movf	3998,w,c	;volatile
 10643  002FB8  D006               	goto	i1l372
 10644  002FBA  5003               	movf	subroutine_interruptions@priorite,w,c
 10645  002FBC  A4D8               	btfss	status,2,c
 10646  002FBE  D003               	goto	i1l372
 10647                           
 10648                           ;interruptions.c: 62: {
 10649                           ;interruptions.c: 63: interruption_timer2();
 10650  002FC0  EC06  F01C         	call	_interruption_timer2	;wreg free
 10651                           
 10652                           ;interruptions.c: 64: }
 10653  002FC4  D018               	goto	i1l379
 10654  002FC6                     i1l372:
 10655                           
 10656                           ;interruptions.c: 65: else if (INTCONbits.INT0IF == 1 && 0b1 == 1 && priorite == 0b1)
 10657  002FC6  A2F2               	btfss	intcon,1,c	;volatile
 10658  002FC8  D006               	goto	i1l374
 10659  002FCA  0403               	decf	subroutine_interruptions@priorite,w,c
 10660  002FCC  A4D8               	btfss	status,2,c
 10661  002FCE  D003               	goto	i1l374
 10662                           
 10663                           ;interruptions.c: 66: {
 10664                           ;interruptions.c: 67: interruption_INT0();
 10665  002FD0  EC06  F01A         	call	_interruption_INT0	;wreg free
 10666                           
 10667                           ;interruptions.c: 68: }
 10668  002FD4  D010               	goto	i1l379
 10669  002FD6                     i1l374:
 10670                           
 10671                           ;interruptions.c: 85: else if ( PIR1bits.RCIF == 1 && 0b1 == 1 && priorite == 0b1)
 10672  002FD6  AA9E               	btfss	3998,5,c	;volatile
 10673  002FD8  D006               	goto	i1l376
 10674  002FDA  0403               	decf	subroutine_interruptions@priorite,w,c
 10675  002FDC  A4D8               	btfss	status,2,c
 10676  002FDE  D003               	goto	i1l376
 10677                           
 10678                           ;interruptions.c: 86: {
 10679                           ;interruptions.c: 87: interrupt_RX();
 10680  002FE0  ECDA  F01A         	call	_interrupt_RX	;wreg free
 10681                           
 10682                           ;interruptions.c: 88: }
 10683  002FE4  D008               	goto	i1l379
 10684  002FE6                     i1l376:
 10685                           
 10686                           ;interruptions.c: 89: else if (PIR1bits.TXIF == 1 && 0b0 == 1 && priorite == 0b0)
 10687  002FE6  509E               	movf	3998,w,c	;volatile
 10688  002FE8  D006               	goto	i1l379
 10689  002FEA  5003               	movf	subroutine_interruptions@priorite,w,c
 10690  002FEC  A4D8               	btfss	status,2,c
 10691  002FEE  D003               	goto	i1l379
 10692                           
 10693                           ;interruptions.c: 90: {
 10694                           ;interruptions.c: 91: interrupt_TX();
 10695  002FF0  EC08  F01C         	call	_interrupt_TX	;wreg free
 10696  002FF4  D000               	goto	i1l379
 10697  002FF6                     i1l379:
 10698  002FF6  0012               	return		;funcret
 10699  002FF8                     __end_of_subroutine_interruptions:
 10700                           	opt stack 0
 10701                           pclatu	equ	0xFFB
 10702                           pclath	equ	0xFFA
 10703                           tblptru	equ	0xFF8
 10704                           tblptrh	equ	0xFF7
 10705                           tblptrl	equ	0xFF6
 10706                           tablat	equ	0xFF5
 10707                           prodh	equ	0xFF4
 10708                           prodl	equ	0xFF3
 10709                           intcon	equ	0xFF2
 10710                           intcon2	equ	0xFF1
 10711                           intcon3	equ	0xFF0
 10712                           indf0	equ	0xFEF
 10713                           postinc0	equ	0xFEE
 10714                           fsr0h	equ	0xFEA
 10715                           fsr0l	equ	0xFE9
 10716                           wreg	equ	0xFE8
 10717                           postinc1	equ	0xFE6
 10718                           postdec1	equ	0xFE5
 10719                           fsr1h	equ	0xFE2
 10720                           fsr1l	equ	0xFE1
 10721                           bsr	equ	0xFE0
 10722                           indf2	equ	0xFDF
 10723                           postinc2	equ	0xFDE
 10724                           postdec2	equ	0xFDD
 10725                           fsr2h	equ	0xFDA
 10726                           fsr2l	equ	0xFD9
 10727                           status	equ	0xFD8
 10728                           
 10729 ;; *************** function _interuption_QEI_sens *****************
 10730 ;; Defined at:
 10731 ;;		line 193 in file "interruptions.c"
 10732 ;; Parameters:    Size  Location     Type
 10733 ;;		None
 10734 ;; Auto vars:     Size  Location     Type
 10735 ;;		None
 10736 ;; Return value:  Size  Location     Type
 10737 ;;		None               void
 10738 ;; Registers used:
 10739 ;;		None
 10740 ;; Tracked objects:
 10741 ;;		On entry : 0/0
 10742 ;;		On exit  : 0/0
 10743 ;;		Unchanged: 0/0
 10744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10745 ;;      Params:         0       0       0       0
 10746 ;;      Locals:         0       0       0       0
 10747 ;;      Temps:          0       0       0       0
 10748 ;;      Totals:         0       0       0       0
 10749 ;;Total ram usage:        0 bytes
 10750 ;; Hardware stack levels used:    1
 10751 ;; Hardware stack levels required when called:    3
 10752 ;; This function calls:
 10753 ;;		Nothing
 10754 ;; This function is called by:
 10755 ;;		_subroutine_interruptions
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           	psect	text46
 10760  003808                     __ptext46:
 10761                           	opt stack 0
 10762  003808                     _interuption_QEI_sens:
 10763                           	opt stack 17
 10764                           
 10765                           ;interruptions.c: 195: PIR3bits.IC3DRIF = 0;
 10766                           
 10767                           ;incstack = 0
 10768  003808  96A4               	bcf	4004,3,c	;volatile
 10769  00380A  0012               	return		;funcret
 10770  00380C                     __end_of_interuption_QEI_sens:
 10771                           	opt stack 0
 10772                           pclatu	equ	0xFFB
 10773                           pclath	equ	0xFFA
 10774                           tblptru	equ	0xFF8
 10775                           tblptrh	equ	0xFF7
 10776                           tblptrl	equ	0xFF6
 10777                           tablat	equ	0xFF5
 10778                           prodh	equ	0xFF4
 10779                           prodl	equ	0xFF3
 10780                           intcon	equ	0xFF2
 10781                           intcon2	equ	0xFF1
 10782                           intcon3	equ	0xFF0
 10783                           indf0	equ	0xFEF
 10784                           postinc0	equ	0xFEE
 10785                           fsr0h	equ	0xFEA
 10786                           fsr0l	equ	0xFE9
 10787                           wreg	equ	0xFE8
 10788                           postinc1	equ	0xFE6
 10789                           postdec1	equ	0xFE5
 10790                           fsr1h	equ	0xFE2
 10791                           fsr1l	equ	0xFE1
 10792                           bsr	equ	0xFE0
 10793                           indf2	equ	0xFDF
 10794                           postinc2	equ	0xFDE
 10795                           postdec2	equ	0xFDD
 10796                           fsr2h	equ	0xFDA
 10797                           fsr2l	equ	0xFD9
 10798                           status	equ	0xFD8
 10799                           
 10800 ;; *************** function _interruption_timer2 *****************
 10801 ;; Defined at:
 10802 ;;		line 129 in file "interruptions.c"
 10803 ;; Parameters:    Size  Location     Type
 10804 ;;		None
 10805 ;; Auto vars:     Size  Location     Type
 10806 ;;		None
 10807 ;; Return value:  Size  Location     Type
 10808 ;;		None               void
 10809 ;; Registers used:
 10810 ;;		None
 10811 ;; Tracked objects:
 10812 ;;		On entry : 0/0
 10813 ;;		On exit  : 0/0
 10814 ;;		Unchanged: 0/0
 10815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10816 ;;      Params:         0       0       0       0
 10817 ;;      Locals:         0       0       0       0
 10818 ;;      Temps:          0       0       0       0
 10819 ;;      Totals:         0       0       0       0
 10820 ;;Total ram usage:        0 bytes
 10821 ;; Hardware stack levels used:    1
 10822 ;; Hardware stack levels required when called:    3
 10823 ;; This function calls:
 10824 ;;		Nothing
 10825 ;; This function is called by:
 10826 ;;		_subroutine_interruptions
 10827 ;; This function uses a non-reentrant model
 10828 ;;
 10829                           
 10830                           	psect	text47
 10831  00380C                     __ptext47:
 10832                           	opt stack 0
 10833  00380C                     _interruption_timer2:
 10834                           	opt stack 17
 10835                           
 10836                           ;interruptions.c: 131: PIR1bits.TMR2IF = 0;
 10837                           
 10838                           ;incstack = 0
 10839  00380C  929E               	bcf	3998,1,c	;volatile
 10840  00380E  0012               	return		;funcret
 10841  003810                     __end_of_interruption_timer2:
 10842                           	opt stack 0
 10843                           pclatu	equ	0xFFB
 10844                           pclath	equ	0xFFA
 10845                           tblptru	equ	0xFF8
 10846                           tblptrh	equ	0xFF7
 10847                           tblptrl	equ	0xFF6
 10848                           tablat	equ	0xFF5
 10849                           prodh	equ	0xFF4
 10850                           prodl	equ	0xFF3
 10851                           intcon	equ	0xFF2
 10852                           intcon2	equ	0xFF1
 10853                           intcon3	equ	0xFF0
 10854                           indf0	equ	0xFEF
 10855                           postinc0	equ	0xFEE
 10856                           fsr0h	equ	0xFEA
 10857                           fsr0l	equ	0xFE9
 10858                           wreg	equ	0xFE8
 10859                           postinc1	equ	0xFE6
 10860                           postdec1	equ	0xFE5
 10861                           fsr1h	equ	0xFE2
 10862                           fsr1l	equ	0xFE1
 10863                           bsr	equ	0xFE0
 10864                           indf2	equ	0xFDF
 10865                           postinc2	equ	0xFDE
 10866                           postdec2	equ	0xFDD
 10867                           fsr2h	equ	0xFDA
 10868                           fsr2l	equ	0xFD9
 10869                           status	equ	0xFD8
 10870                           
 10871 ;; *************** function _interruption_timer1 *****************
 10872 ;; Defined at:
 10873 ;;		line 112 in file "interruptions.c"
 10874 ;; Parameters:    Size  Location     Type
 10875 ;;		None
 10876 ;; Auto vars:     Size  Location     Type
 10877 ;;		None
 10878 ;; Return value:  Size  Location     Type
 10879 ;;		None               void
 10880 ;; Registers used:
 10881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10882 ;; Tracked objects:
 10883 ;;		On entry : 0/0
 10884 ;;		On exit  : 0/0
 10885 ;;		Unchanged: 0/0
 10886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10887 ;;      Params:         0       0       0       0
 10888 ;;      Locals:         0       0       0       0
 10889 ;;      Temps:          1       0       0       0
 10890 ;;      Totals:         1       0       0       0
 10891 ;;Total ram usage:        1 bytes
 10892 ;; Hardware stack levels used:    1
 10893 ;; Hardware stack levels required when called:    3
 10894 ;; This function calls:
 10895 ;;		Nothing
 10896 ;; This function is called by:
 10897 ;;		_subroutine_interruptions
 10898 ;; This function uses a non-reentrant model
 10899 ;;
 10900                           
 10901                           	psect	text48
 10902  0034E8                     __ptext48:
 10903                           	opt stack 0
 10904  0034E8                     _interruption_timer1:
 10905                           	opt stack 17
 10906                           
 10907                           ;interruptions.c: 114: PIR1bits.TMR1IF = 0;
 10908                           
 10909                           ;incstack = 0
 10910  0034E8  909E               	bcf	3998,0,c	;volatile
 10911                           
 10912                           ;interruptions.c: 115: TMR1 = 65535 - 810;
 10913  0034EA  0EFC               	movlw	252
 10914  0034EC  6ECF               	movwf	4047,c	;volatile
 10915  0034EE  0ED5               	movlw	213
 10916  0034F0  6ECE               	movwf	4046,c	;volatile
 10917                           
 10918                           ;interruptions.c: 117: if (uart_logiciel.transmission_en_cours == 1)
 10919  0034F2  0443               	decf	_uart_logiciel+11,w,c
 10920  0034F4  A4D8               	btfss	status,2,c
 10921  0034F6  D018               	goto	i1l385
 10922                           
 10923                           ;interruptions.c: 118: {
 10924                           ;interruptions.c: 119: PORTCbits.RC5 = uart_logiciel.buffer_uart[uart_logiciel.indice];
 10925  0034F8  5044               	movf	_uart_logiciel+12,w,c
 10926  0034FA  0D01               	mullw	1
 10927  0034FC  0E38               	movlw	low _uart_logiciel
 10928  0034FE  24F3               	addwf	prodl,w,c
 10929  003500  6ED9               	movwf	fsr2l,c
 10930  003502  0E00               	movlw	high _uart_logiciel
 10931  003504  20F4               	addwfc	prodh,w,c
 10932  003506  6EDA               	movwf	fsr2h,c
 10933  003508  50DF               	movf	indf2,w,c
 10934  00350A  6E01               	movwf	??_interruption_timer1& (0+255),c
 10935  00350C  3A01               	swapf	??_interruption_timer1,f,c
 10936  00350E  4601               	rlncf	??_interruption_timer1,f,c
 10937  003510  5082               	movf	3970,w,c	;volatile
 10938  003512  1801               	xorwf	??_interruption_timer1,w,c
 10939  003514  0BDF               	andlw	-33
 10940  003516  1801               	xorwf	??_interruption_timer1,w,c
 10941  003518  6E82               	movwf	3970,c	;volatile
 10942                           
 10943                           ;interruptions.c: 120: uart_logiciel.indice++;
 10944  00351A  2A44               	incf	_uart_logiciel+12,f,c
 10945                           
 10946                           ;interruptions.c: 122: if (uart_logiciel.indice > 10)
 10947  00351C  0E0A               	movlw	10
 10948  00351E  6444               	cpfsgt	_uart_logiciel+12,c
 10949  003520  D005               	goto	i1l388
 10950                           
 10951                           ;interruptions.c: 123: uart_logiciel.transmission_en_cours = 0;
 10952  003522  0E00               	movlw	0
 10953  003524  6E43               	movwf	_uart_logiciel+11,c
 10954                           
 10955                           ;interruptions.c: 124: }
 10956  003526  D002               	goto	i1l388
 10957  003528                     i1l385:
 10958                           
 10959                           ;interruptions.c: 125: else
 10960                           ;interruptions.c: 126: PORTCbits.RC5 = 1;
 10961  003528  8A82               	bsf	3970,5,c	;volatile
 10962  00352A  D000               	goto	i1l388
 10963  00352C                     i1l388:
 10964  00352C  0012               	return		;funcret
 10965  00352E                     __end_of_interruption_timer1:
 10966                           	opt stack 0
 10967                           pclatu	equ	0xFFB
 10968                           pclath	equ	0xFFA
 10969                           tblptru	equ	0xFF8
 10970                           tblptrh	equ	0xFF7
 10971                           tblptrl	equ	0xFF6
 10972                           tablat	equ	0xFF5
 10973                           prodh	equ	0xFF4
 10974                           prodl	equ	0xFF3
 10975                           intcon	equ	0xFF2
 10976                           intcon2	equ	0xFF1
 10977                           intcon3	equ	0xFF0
 10978                           indf0	equ	0xFEF
 10979                           postinc0	equ	0xFEE
 10980                           fsr0h	equ	0xFEA
 10981                           fsr0l	equ	0xFE9
 10982                           wreg	equ	0xFE8
 10983                           postinc1	equ	0xFE6
 10984                           postdec1	equ	0xFE5
 10985                           fsr1h	equ	0xFE2
 10986                           fsr1l	equ	0xFE1
 10987                           bsr	equ	0xFE0
 10988                           indf2	equ	0xFDF
 10989                           postinc2	equ	0xFDE
 10990                           postdec2	equ	0xFDD
 10991                           fsr2h	equ	0xFDA
 10992                           fsr2l	equ	0xFD9
 10993                           status	equ	0xFD8
 10994                           
 10995 ;; *************** function _interruption_timer0 *****************
 10996 ;; Defined at:
 10997 ;;		line 104 in file "interruptions.c"
 10998 ;; Parameters:    Size  Location     Type
 10999 ;;		None
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;		None
 11002 ;; Return value:  Size  Location     Type
 11003 ;;		None               void
 11004 ;; Registers used:
 11005 ;;		wreg, status,2
 11006 ;; Tracked objects:
 11007 ;;		On entry : 0/0
 11008 ;;		On exit  : 0/0
 11009 ;;		Unchanged: 0/0
 11010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11011 ;;      Params:         0       0       0       0
 11012 ;;      Locals:         0       0       0       0
 11013 ;;      Temps:          0       0       0       0
 11014 ;;      Totals:         0       0       0       0
 11015 ;;Total ram usage:        0 bytes
 11016 ;; Hardware stack levels used:    1
 11017 ;; Hardware stack levels required when called:    3
 11018 ;; This function calls:
 11019 ;;		Nothing
 11020 ;; This function is called by:
 11021 ;;		_subroutine_interruptions
 11022 ;; This function uses a non-reentrant model
 11023 ;;
 11024                           
 11025                           	psect	text49
 11026  0037F8                     __ptext49:
 11027                           	opt stack 0
 11028  0037F8                     _interruption_timer0:
 11029                           	opt stack 17
 11030                           
 11031                           ;interruptions.c: 106: INTCONbits.TMR0IF = 0;
 11032                           
 11033                           ;incstack = 0
 11034  0037F8  94F2               	bcf	intcon,2,c	;volatile
 11035                           
 11036                           ;interruptions.c: 107: TMR0L = 131;
 11037  0037FA  0E83               	movlw	131
 11038  0037FC  6ED6               	movwf	4054,c	;volatile
 11039  0037FE  0012               	return		;funcret
 11040  003800                     __end_of_interruption_timer0:
 11041                           	opt stack 0
 11042                           pclatu	equ	0xFFB
 11043                           pclath	equ	0xFFA
 11044                           tblptru	equ	0xFF8
 11045                           tblptrh	equ	0xFF7
 11046                           tblptrl	equ	0xFF6
 11047                           tablat	equ	0xFF5
 11048                           prodh	equ	0xFF4
 11049                           prodl	equ	0xFF3
 11050                           intcon	equ	0xFF2
 11051                           intcon2	equ	0xFF1
 11052                           intcon3	equ	0xFF0
 11053                           indf0	equ	0xFEF
 11054                           postinc0	equ	0xFEE
 11055                           fsr0h	equ	0xFEA
 11056                           fsr0l	equ	0xFE9
 11057                           wreg	equ	0xFE8
 11058                           postinc1	equ	0xFE6
 11059                           postdec1	equ	0xFE5
 11060                           fsr1h	equ	0xFE2
 11061                           fsr1l	equ	0xFE1
 11062                           bsr	equ	0xFE0
 11063                           indf2	equ	0xFDF
 11064                           postinc2	equ	0xFDE
 11065                           postdec2	equ	0xFDD
 11066                           fsr2h	equ	0xFDA
 11067                           fsr2l	equ	0xFD9
 11068                           status	equ	0xFD8
 11069                           
 11070 ;; *************** function _interruption_QEI *****************
 11071 ;; Defined at:
 11072 ;;		line 168 in file "interruptions.c"
 11073 ;; Parameters:    Size  Location     Type
 11074 ;;		None
 11075 ;; Auto vars:     Size  Location     Type
 11076 ;;		None
 11077 ;; Return value:  Size  Location     Type
 11078 ;;		None               void
 11079 ;; Registers used:
 11080 ;;		wreg, status,2, status,0
 11081 ;; Tracked objects:
 11082 ;;		On entry : 0/0
 11083 ;;		On exit  : 0/0
 11084 ;;		Unchanged: 0/0
 11085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11086 ;;      Params:         0       0       0       0
 11087 ;;      Locals:         0       0       0       0
 11088 ;;      Temps:          0       0       0       0
 11089 ;;      Totals:         0       0       0       0
 11090 ;;Total ram usage:        0 bytes
 11091 ;; Hardware stack levels used:    1
 11092 ;; Hardware stack levels required when called:    3
 11093 ;; This function calls:
 11094 ;;		Nothing
 11095 ;; This function is called by:
 11096 ;;		_subroutine_interruptions
 11097 ;; This function uses a non-reentrant model
 11098 ;;
 11099                           
 11100                           	psect	text50
 11101  003722                     __ptext50:
 11102                           	opt stack 0
 11103  003722                     _interruption_QEI:
 11104                           	opt stack 17
 11105                           
 11106                           ;interruptions.c: 170: PIR3bits.IC2QEIF = 0;
 11107                           
 11108                           ;incstack = 0
 11109  003722  94A4               	bcf	4004,2,c	;volatile
 11110                           
 11111                           ;interruptions.c: 171: QEICONbits.QERR = 0;
 11112  003724  9CB6               	bcf	4022,6,c	;volatile
 11113                           
 11114                           ;interruptions.c: 173: if (capteur.synchro_debut_tour == 1)
 11115  003726  0100               	movlb	0	; () banked
 11116  003728  05DA               	decf	(_capteur+1)& (0+255),w,b
 11117  00372A  A4D8               	btfss	status,2,c
 11118  00372C  D007               	goto	i1l3213
 11119                           
 11120                           ; BSR set to: 0
 11121                           ;interruptions.c: 174: {
 11122                           ;interruptions.c: 175: capteur.tour_en_cours = 1;
 11123  00372E  0E01               	movlw	1
 11124  003730  0100               	movlb	0	; () banked
 11125  003732  6FD9               	movwf	_capteur& (0+255),b
 11126                           
 11127                           ;interruptions.c: 176: capteur.synchro_debut_tour = 0;
 11128  003734  0E00               	movlw	0
 11129  003736  0100               	movlb	0	; () banked
 11130  003738  6FDA               	movwf	(_capteur+1)& (0+255),b
 11131                           
 11132                           ;interruptions.c: 177: }
 11133  00373A  D004               	goto	i1l411
 11134  00373C                     i1l3213:
 11135                           
 11136                           ; BSR set to: 0
 11137                           ;interruptions.c: 178: else
 11138                           ;interruptions.c: 179: capteur.tour_en_cours = 0;
 11139  00373C  0E00               	movlw	0
 11140  00373E  0100               	movlb	0	; () banked
 11141  003740  6FD9               	movwf	_capteur& (0+255),b
 11142  003742  D000               	goto	i1l411
 11143  003744                     i1l411:
 11144                           
 11145                           ; BSR set to: 0
 11146  003744  0012               	return		;funcret
 11147  003746                     __end_of_interruption_QEI:
 11148                           	opt stack 0
 11149                           pclatu	equ	0xFFB
 11150                           pclath	equ	0xFFA
 11151                           tblptru	equ	0xFF8
 11152                           tblptrh	equ	0xFF7
 11153                           tblptrl	equ	0xFF6
 11154                           tablat	equ	0xFF5
 11155                           prodh	equ	0xFF4
 11156                           prodl	equ	0xFF3
 11157                           intcon	equ	0xFF2
 11158                           intcon2	equ	0xFF1
 11159                           intcon3	equ	0xFF0
 11160                           indf0	equ	0xFEF
 11161                           postinc0	equ	0xFEE
 11162                           fsr0h	equ	0xFEA
 11163                           fsr0l	equ	0xFE9
 11164                           wreg	equ	0xFE8
 11165                           postinc1	equ	0xFE6
 11166                           postdec1	equ	0xFE5
 11167                           fsr1h	equ	0xFE2
 11168                           fsr1l	equ	0xFE1
 11169                           bsr	equ	0xFE0
 11170                           indf2	equ	0xFDF
 11171                           postinc2	equ	0xFDE
 11172                           postdec2	equ	0xFDD
 11173                           fsr2h	equ	0xFDA
 11174                           fsr2l	equ	0xFD9
 11175                           status	equ	0xFD8
 11176                           
 11177 ;; *************** function _interruption_INT0 *****************
 11178 ;; Defined at:
 11179 ;;		line 141 in file "interruptions.c"
 11180 ;; Parameters:    Size  Location     Type
 11181 ;;		None
 11182 ;; Auto vars:     Size  Location     Type
 11183 ;;		None
 11184 ;; Return value:  Size  Location     Type
 11185 ;;		None               void
 11186 ;; Registers used:
 11187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11188 ;; Tracked objects:
 11189 ;;		On entry : 0/0
 11190 ;;		On exit  : 0/0
 11191 ;;		Unchanged: 0/0
 11192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11193 ;;      Params:         0       0       0       0
 11194 ;;      Locals:         0       0       0       0
 11195 ;;      Temps:          2       0       0       0
 11196 ;;      Totals:         2       0       0       0
 11197 ;;Total ram usage:        2 bytes
 11198 ;; Hardware stack levels used:    1
 11199 ;; Hardware stack levels required when called:    3
 11200 ;; This function calls:
 11201 ;;		Nothing
 11202 ;; This function is called by:
 11203 ;;		_subroutine_interruptions
 11204 ;; This function uses a non-reentrant model
 11205 ;;
 11206                           
 11207                           	psect	text51
 11208  00340C                     __ptext51:
 11209                           	opt stack 0
 11210  00340C                     _interruption_INT0:
 11211                           	opt stack 17
 11212                           
 11213                           ;interruptions.c: 143: if (capteur.tour_en_cours == 1)
 11214                           
 11215                           ; BSR set to: 0
 11216                           ;incstack = 0
 11217  00340C  0100               	movlb	0	; () banked
 11218  00340E  05D9               	decf	_capteur& (0+255),w,b
 11219  003410  A4D8               	btfss	status,2,c
 11220  003412  D01F               	goto	i1l3225
 11221                           
 11222                           ; BSR set to: 0
 11223                           ;interruptions.c: 144: {
 11224                           ;interruptions.c: 145: if (capteur.indice < 3)
 11225  003414  0E03               	movlw	3
 11226  003416  0100               	movlb	0	; () banked
 11227  003418  61F4               	cpfslt	(_capteur+27)& (0+255),b
 11228  00341A  D018               	goto	i1l3223
 11229                           
 11230                           ; BSR set to: 0
 11231                           ;interruptions.c: 146: {
 11232                           ;interruptions.c: 147: capteur.position[capteur.indice++] = POSCNTH * 256 + POSCNTL;
 11233  00341C  5066               	movf	3942,w,c	;volatile
 11234  00341E  CF67 F001          	movff	3943,??_interruption_INT0	;volatile
 11235  003422  6A02               	clrf	(??_interruption_INT0+1)& (0+255),c
 11236  003424  C001  F002         	movff	??_interruption_INT0,??_interruption_INT0+1
 11237  003428  6A01               	clrf	??_interruption_INT0,c
 11238  00342A  2601               	addwf	??_interruption_INT0,f,c
 11239  00342C  0E00               	movlw	0
 11240  00342E  2202               	addwfc	??_interruption_INT0+1,f,c
 11241  003430  0100               	movlb	0	; () banked
 11242  003432  51F4               	movf	(_capteur+27)& (0+255),w,b
 11243  003434  0D02               	mullw	2
 11244  003436  0EEE               	movlw	low (_capteur+21)
 11245  003438  24F3               	addwf	prodl,w,c
 11246  00343A  6ED9               	movwf	fsr2l,c
 11247  00343C  0E00               	movlw	high (_capteur+21)
 11248  00343E  20F4               	addwfc	prodh,w,c
 11249  003440  6EDA               	movwf	fsr2h,c
 11250  003442  C001  FFDE         	movff	??_interruption_INT0,postinc2
 11251  003446  C002  FFDD         	movff	??_interruption_INT0+1,postdec2
 11252  00344A  D000               	goto	i1l3223
 11253  00344C                     i1l3223:
 11254                           
 11255                           ; BSR set to: 0
 11256                           ;interruptions.c: 149: else
 11257                           ;interruptions.c: 150: capteur.indice++;
 11258  00344C  0100               	movlb	0	; () banked
 11259  00344E  2BF4               	incf	(_capteur+27)& (0+255),f,b
 11260                           
 11261                           ; BSR set to: 0
 11262  003450  D000               	goto	i1l3225
 11263  003452                     i1l3225:
 11264                           
 11265                           ; BSR set to: 0
 11266                           ;interruptions.c: 151: }
 11267                           ;interruptions.c: 152: INTCONbits.INT0IF = 0;
 11268  003452  92F2               	bcf	intcon,1,c	;volatile
 11269                           
 11270                           ; BSR set to: 0
 11271  003454  0012               	return		;funcret
 11272  003456                     __end_of_interruption_INT0:
 11273                           	opt stack 0
 11274                           pclatu	equ	0xFFB
 11275                           pclath	equ	0xFFA
 11276                           tblptru	equ	0xFF8
 11277                           tblptrh	equ	0xFF7
 11278                           tblptrl	equ	0xFF6
 11279                           tablat	equ	0xFF5
 11280                           prodh	equ	0xFF4
 11281                           prodl	equ	0xFF3
 11282                           intcon	equ	0xFF2
 11283                           intcon2	equ	0xFF1
 11284                           intcon3	equ	0xFF0
 11285                           indf0	equ	0xFEF
 11286                           postinc0	equ	0xFEE
 11287                           fsr0h	equ	0xFEA
 11288                           fsr0l	equ	0xFE9
 11289                           wreg	equ	0xFE8
 11290                           postinc1	equ	0xFE6
 11291                           postdec1	equ	0xFE5
 11292                           fsr1h	equ	0xFE2
 11293                           fsr1l	equ	0xFE1
 11294                           bsr	equ	0xFE0
 11295                           indf2	equ	0xFDF
 11296                           postinc2	equ	0xFDE
 11297                           postdec2	equ	0xFDD
 11298                           fsr2h	equ	0xFDA
 11299                           fsr2l	equ	0xFD9
 11300                           status	equ	0xFD8
 11301                           
 11302 ;; *************** function _interrupt_TX *****************
 11303 ;; Defined at:
 11304 ;;		line 226 in file "interruptions.c"
 11305 ;; Parameters:    Size  Location     Type
 11306 ;;		None
 11307 ;; Auto vars:     Size  Location     Type
 11308 ;;		None
 11309 ;; Return value:  Size  Location     Type
 11310 ;;		None               void
 11311 ;; Registers used:
 11312 ;;		None
 11313 ;; Tracked objects:
 11314 ;;		On entry : 0/0
 11315 ;;		On exit  : 0/0
 11316 ;;		Unchanged: 0/0
 11317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11318 ;;      Params:         0       0       0       0
 11319 ;;      Locals:         0       0       0       0
 11320 ;;      Temps:          0       0       0       0
 11321 ;;      Totals:         0       0       0       0
 11322 ;;Total ram usage:        0 bytes
 11323 ;; Hardware stack levels used:    1
 11324 ;; Hardware stack levels required when called:    3
 11325 ;; This function calls:
 11326 ;;		Nothing
 11327 ;; This function is called by:
 11328 ;;		_subroutine_interruptions
 11329 ;; This function uses a non-reentrant model
 11330 ;;
 11331                           
 11332                           	psect	text52
 11333  003810                     __ptext52:
 11334                           	opt stack 0
 11335  003810                     _interrupt_TX:
 11336                           	opt stack 17
 11337                           
 11338                           ;interruptions.c: 228: PIR1bits.TXIF = 0;
 11339                           
 11340                           ; BSR set to: 0
 11341                           ;incstack = 0
 11342  003810  989E               	bcf	3998,4,c	;volatile
 11343  003812  0012               	return		;funcret
 11344  003814                     __end_of_interrupt_TX:
 11345                           	opt stack 0
 11346                           pclatu	equ	0xFFB
 11347                           pclath	equ	0xFFA
 11348                           tblptru	equ	0xFF8
 11349                           tblptrh	equ	0xFF7
 11350                           tblptrl	equ	0xFF6
 11351                           tablat	equ	0xFF5
 11352                           prodh	equ	0xFF4
 11353                           prodl	equ	0xFF3
 11354                           intcon	equ	0xFF2
 11355                           intcon2	equ	0xFF1
 11356                           intcon3	equ	0xFF0
 11357                           indf0	equ	0xFEF
 11358                           postinc0	equ	0xFEE
 11359                           fsr0h	equ	0xFEA
 11360                           fsr0l	equ	0xFE9
 11361                           wreg	equ	0xFE8
 11362                           postinc1	equ	0xFE6
 11363                           postdec1	equ	0xFE5
 11364                           fsr1h	equ	0xFE2
 11365                           fsr1l	equ	0xFE1
 11366                           bsr	equ	0xFE0
 11367                           indf2	equ	0xFDF
 11368                           postinc2	equ	0xFDE
 11369                           postdec2	equ	0xFDD
 11370                           fsr2h	equ	0xFDA
 11371                           fsr2l	equ	0xFD9
 11372                           status	equ	0xFD8
 11373                           
 11374 ;; *************** function _interrupt_RX *****************
 11375 ;; Defined at:
 11376 ;;		line 207 in file "interruptions.c"
 11377 ;; Parameters:    Size  Location     Type
 11378 ;;		None
 11379 ;; Auto vars:     Size  Location     Type
 11380 ;;  temp            1    0[COMRAM] unsigned char 
 11381 ;; Return value:  Size  Location     Type
 11382 ;;		None               void
 11383 ;; Registers used:
 11384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11385 ;; Tracked objects:
 11386 ;;		On entry : 0/0
 11387 ;;		On exit  : 0/0
 11388 ;;		Unchanged: 0/0
 11389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11390 ;;      Params:         0       0       0       0
 11391 ;;      Locals:         1       0       0       0
 11392 ;;      Temps:          0       0       0       0
 11393 ;;      Totals:         1       0       0       0
 11394 ;;Total ram usage:        1 bytes
 11395 ;; Hardware stack levels used:    1
 11396 ;; Hardware stack levels required when called:    3
 11397 ;; This function calls:
 11398 ;;		Nothing
 11399 ;; This function is called by:
 11400 ;;		_subroutine_interruptions
 11401 ;; This function uses a non-reentrant model
 11402 ;;
 11403                           
 11404                           	psect	text53
 11405  0035B4                     __ptext53:
 11406                           	opt stack 0
 11407  0035B4                     _interrupt_RX:
 11408                           	opt stack 17
 11409                           
 11410                           ;interruptions.c: 209: PIR1bits.RCIF = 0;
 11411                           
 11412                           ;incstack = 0
 11413  0035B4  9A9E               	bcf	3998,5,c	;volatile
 11414                           
 11415                           ;interruptions.c: 210: PORTBbits.RB0 = 1;
 11416  0035B6  8081               	bsf	3969,0,c	;volatile
 11417                           
 11418                           ;interruptions.c: 212: if (uart_reception.indice < 100)
 11419  0035B8  0E64               	movlw	100
 11420  0035BA  0101               	movlb	1	; () banked
 11421  0035BC  617A               	cpfslt	(_uart_reception+100)& (0+255),b
 11422  0035BE  D011               	goto	i1l3237
 11423                           
 11424                           ; BSR set to: 1
 11425                           ;interruptions.c: 213: {
 11426                           ;interruptions.c: 214: uart_reception.buffer_reeption[uart_reception.indice] = RCREG;
 11427  0035C0  0101               	movlb	1	; () banked
 11428  0035C2  517A               	movf	(_uart_reception+100)& (0+255),w,b
 11429  0035C4  0D01               	mullw	1
 11430  0035C6  0E16               	movlw	low _uart_reception
 11431  0035C8  24F3               	addwf	prodl,w,c
 11432  0035CA  6ED9               	movwf	fsr2l,c
 11433  0035CC  0E01               	movlw	high _uart_reception
 11434  0035CE  20F4               	addwfc	prodh,w,c
 11435  0035D0  6EDA               	movwf	fsr2h,c
 11436  0035D2  CFAE FFDF          	movff	4014,indf2	;volatile
 11437                           
 11438                           ; BSR set to: 1
 11439                           ;interruptions.c: 215: uart_reception.buffer_vide = 0;
 11440  0035D6  0E00               	movlw	0
 11441  0035D8  0101               	movlb	1	; () banked
 11442  0035DA  6F7C               	movwf	(_uart_reception+102)& (0+255),b
 11443                           
 11444                           ; BSR set to: 1
 11445                           ;interruptions.c: 216: uart_reception.indice++;
 11446  0035DC  0101               	movlb	1	; () banked
 11447  0035DE  2B7A               	incf	(_uart_reception+100)& (0+255),f,b
 11448                           
 11449                           ;interruptions.c: 217: }
 11450  0035E0  D006               	goto	i1l422
 11451  0035E2                     i1l3237:
 11452                           
 11453                           ; BSR set to: 1
 11454                           ;interruptions.c: 218: else
 11455                           ;interruptions.c: 219: {
 11456                           ;interruptions.c: 220: uart_reception.buffer_plein = 1;
 11457  0035E2  0E01               	movlw	1
 11458  0035E4  0101               	movlb	1	; () banked
 11459  0035E6  6F7B               	movwf	(_uart_reception+101)& (0+255),b
 11460                           
 11461                           ; BSR set to: 1
 11462                           ;interruptions.c: 221: uint8_t temp = RCREG;
 11463  0035E8  CFAE F001          	movff	4014,interrupt_RX@temp	;volatile
 11464  0035EC  D000               	goto	i1l422
 11465  0035EE                     i1l422:
 11466                           
 11467                           ; BSR set to: 1
 11468  0035EE  0012               	return		;funcret
 11469  0035F0                     __end_of_interrupt_RX:
 11470                           	opt stack 0
 11471                           pclatu	equ	0xFFB
 11472                           pclath	equ	0xFFA
 11473                           tblptru	equ	0xFF8
 11474                           tblptrh	equ	0xFF7
 11475                           tblptrl	equ	0xFF6
 11476                           tablat	equ	0xFF5
 11477                           prodh	equ	0xFF4
 11478                           prodl	equ	0xFF3
 11479                           intcon	equ	0xFF2
 11480                           intcon2	equ	0xFF1
 11481                           intcon3	equ	0xFF0
 11482                           indf0	equ	0xFEF
 11483                           postinc0	equ	0xFEE
 11484                           fsr0h	equ	0xFEA
 11485                           fsr0l	equ	0xFE9
 11486                           wreg	equ	0xFE8
 11487                           postinc1	equ	0xFE6
 11488                           postdec1	equ	0xFE5
 11489                           fsr1h	equ	0xFE2
 11490                           fsr1l	equ	0xFE1
 11491                           bsr	equ	0xFE0
 11492                           indf2	equ	0xFDF
 11493                           postinc2	equ	0xFDE
 11494                           postdec2	equ	0xFDD
 11495                           fsr2h	equ	0xFDA
 11496                           fsr2l	equ	0xFD9
 11497                           status	equ	0xFD8
 11498                           
 11499 ;; *************** function _high_isr *****************
 11500 ;; Defined at:
 11501 ;;		line 27 in file "interruptions.c"
 11502 ;; Parameters:    Size  Location     Type
 11503 ;;		None
 11504 ;; Auto vars:     Size  Location     Type
 11505 ;;		None
 11506 ;; Return value:  Size  Location     Type
 11507 ;;		None               void
 11508 ;; Registers used:
 11509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11510 ;; Tracked objects:
 11511 ;;		On entry : 0/0
 11512 ;;		On exit  : 0/0
 11513 ;;		Unchanged: 0/0
 11514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11515 ;;      Params:         0       0       0       0
 11516 ;;      Locals:         0       0       0       0
 11517 ;;      Temps:         14       0       0       0
 11518 ;;      Totals:        14       0       0       0
 11519 ;;Total ram usage:       14 bytes
 11520 ;; Hardware stack levels used:    1
 11521 ;; Hardware stack levels required when called:    2
 11522 ;; This function calls:
 11523 ;;		i2_subroutine_interruptions
 11524 ;; This function is called by:
 11525 ;;		Interrupt level 2
 11526 ;; This function uses a non-reentrant model
 11527 ;;
 11528                           
 11529                           	psect	intcode
 11530  000008                     __pintcode:
 11531                           	opt stack 0
 11532  000008                     _high_isr:
 11533                           	opt stack 17
 11534                           
 11535                           ; BSR set to: 1
 11536                           ;incstack = 0
 11537  000008  CFFA F018          	movff	pclath,??_high_isr
 11538  00000C  CFFB F019          	movff	pclatu,??_high_isr+1
 11539  000010  CFE9 F01A          	movff	fsr0l,??_high_isr+2
 11540  000014  EFEB  F018         	goto	int_func
 11541                           pclatu	equ	0xFFB
 11542                           pclath	equ	0xFFA
 11543                           tblptru	equ	0xFF8
 11544                           tblptrh	equ	0xFF7
 11545                           tblptrl	equ	0xFF6
 11546                           tablat	equ	0xFF5
 11547                           prodh	equ	0xFF4
 11548                           prodl	equ	0xFF3
 11549                           intcon	equ	0xFF2
 11550                           intcon2	equ	0xFF1
 11551                           intcon3	equ	0xFF0
 11552                           indf0	equ	0xFEF
 11553                           postinc0	equ	0xFEE
 11554                           fsr0h	equ	0xFEA
 11555                           fsr0l	equ	0xFE9
 11556                           wreg	equ	0xFE8
 11557                           postinc1	equ	0xFE6
 11558                           postdec1	equ	0xFE5
 11559                           fsr1h	equ	0xFE2
 11560                           fsr1l	equ	0xFE1
 11561                           bsr	equ	0xFE0
 11562                           indf2	equ	0xFDF
 11563                           postinc2	equ	0xFDE
 11564                           postdec2	equ	0xFDD
 11565                           fsr2h	equ	0xFDA
 11566                           fsr2l	equ	0xFD9
 11567                           status	equ	0xFD8
 11568                           
 11569                           	psect	intcode_body
 11570  0031D6                     __pintcode_body:
 11571                           	opt stack 17
 11572  0031D6                     int_func:
 11573                           	opt stack 17
 11574  0031D6  CFEA F01B          	movff	fsr0h,??_high_isr+3
 11575  0031DA  CFE1 F01C          	movff	fsr1l,??_high_isr+4
 11576  0031DE  CFE2 F01D          	movff	fsr1h,??_high_isr+5
 11577  0031E2  CFD9 F01E          	movff	fsr2l,??_high_isr+6
 11578  0031E6  CFDA F01F          	movff	fsr2h,??_high_isr+7
 11579  0031EA  CFF3 F020          	movff	prodl,??_high_isr+8
 11580  0031EE  CFF4 F021          	movff	prodh,??_high_isr+9
 11581  0031F2  CFF6 F022          	movff	tblptrl,??_high_isr+10
 11582  0031F6  CFF7 F023          	movff	tblptrh,??_high_isr+11
 11583  0031FA  CFF8 F024          	movff	tblptru,??_high_isr+12
 11584  0031FE  CFF5 F025          	movff	tablat,??_high_isr+13
 11585                           
 11586                           ;interruptions.c: 29: subroutine_interruptions(0b1);
 11587  003202  0E01               	movlw	1
 11588  003204  ECFC  F017         	call	i2_subroutine_interruptions
 11589  003208  C025  FFF5         	movff	??_high_isr+13,tablat
 11590  00320C  C024  FFF8         	movff	??_high_isr+12,tblptru
 11591  003210  C023  FFF7         	movff	??_high_isr+11,tblptrh
 11592  003214  C022  FFF6         	movff	??_high_isr+10,tblptrl
 11593  003218  C021  FFF4         	movff	??_high_isr+9,prodh
 11594  00321C  C020  FFF3         	movff	??_high_isr+8,prodl
 11595  003220  C01F  FFDA         	movff	??_high_isr+7,fsr2h
 11596  003224  C01E  FFD9         	movff	??_high_isr+6,fsr2l
 11597  003228  C01D  FFE2         	movff	??_high_isr+5,fsr1h
 11598  00322C  C01C  FFE1         	movff	??_high_isr+4,fsr1l
 11599  003230  C01B  FFEA         	movff	??_high_isr+3,fsr0h
 11600  003234  C01A  FFE9         	movff	??_high_isr+2,fsr0l
 11601  003238  C019  FFFB         	movff	??_high_isr+1,pclatu
 11602  00323C  C018  FFFA         	movff	??_high_isr,pclath
 11603  003240  0011               	retfie		f
 11604  003242                     __end_of_high_isr:
 11605                           	opt stack 0
 11606                           pclatu	equ	0xFFB
 11607                           pclath	equ	0xFFA
 11608                           tblptru	equ	0xFF8
 11609                           tblptrh	equ	0xFF7
 11610                           tblptrl	equ	0xFF6
 11611                           tablat	equ	0xFF5
 11612                           prodh	equ	0xFF4
 11613                           prodl	equ	0xFF3
 11614                           intcon	equ	0xFF2
 11615                           intcon2	equ	0xFF1
 11616                           intcon3	equ	0xFF0
 11617                           indf0	equ	0xFEF
 11618                           postinc0	equ	0xFEE
 11619                           fsr0h	equ	0xFEA
 11620                           fsr0l	equ	0xFE9
 11621                           wreg	equ	0xFE8
 11622                           postinc1	equ	0xFE6
 11623                           postdec1	equ	0xFE5
 11624                           fsr1h	equ	0xFE2
 11625                           fsr1l	equ	0xFE1
 11626                           bsr	equ	0xFE0
 11627                           indf2	equ	0xFDF
 11628                           postinc2	equ	0xFDE
 11629                           postdec2	equ	0xFDD
 11630                           fsr2h	equ	0xFDA
 11631                           fsr2l	equ	0xFD9
 11632                           status	equ	0xFD8
 11633                           
 11634 ;; *************** function i2_subroutine_interruptions *****************
 11635 ;; Defined at:
 11636 ;;		line 43 in file "interruptions.c"
 11637 ;; Parameters:    Size  Location     Type
 11638 ;;  priorite        1    wreg     unsigned char 
 11639 ;; Auto vars:     Size  Location     Type
 11640 ;;  priorite        1   22[COMRAM] unsigned char 
 11641 ;; Return value:  Size  Location     Type
 11642 ;;		None               void
 11643 ;; Registers used:
 11644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11645 ;; Tracked objects:
 11646 ;;		On entry : 0/0
 11647 ;;		On exit  : 0/0
 11648 ;;		Unchanged: 0/0
 11649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11650 ;;      Params:         0       0       0       0
 11651 ;;      Locals:         1       0       0       0
 11652 ;;      Temps:          0       0       0       0
 11653 ;;      Totals:         1       0       0       0
 11654 ;;Total ram usage:        1 bytes
 11655 ;; Hardware stack levels used:    1
 11656 ;; Hardware stack levels required when called:    1
 11657 ;; This function calls:
 11658 ;;		i2_interrupt_RX
 11659 ;;		i2_interrupt_TX
 11660 ;;		i2_interruption_INT0
 11661 ;;		i2_interruption_QEI
 11662 ;;		i2_interruption_timer0
 11663 ;;		i2_interruption_timer1
 11664 ;;		i2_interruption_timer2
 11665 ;;		i2_interuption_QEI_sens
 11666 ;; This function is called by:
 11667 ;;		_high_isr
 11668 ;; This function uses a non-reentrant model
 11669 ;;
 11670                           
 11671                           	psect	text55
 11672  002FF8                     __ptext55:
 11673                           	opt stack 0
 11674  002FF8                     i2_subroutine_interruptions:
 11675                           	opt stack 17
 11676                           
 11677                           ;incstack = 0
 11678                           ;i2subroutine_interruptions@priorite stored from wreg
 11679  002FF8  6E17               	movwf	i2subroutine_interruptions@priorite,c
 11680                           
 11681                           ;interruptions.c: 45: if ( PIR3bits.IC2QEIF == 1 && 0b1 == 1 && priorite == 0b1)
 11682  002FFA  A4A4               	btfss	4004,2,c	;volatile
 11683  002FFC  D006               	goto	i2l364
 11684  002FFE  0417               	decf	i2subroutine_interruptions@priorite,w,c
 11685  003000  A4D8               	btfss	status,2,c
 11686  003002  D003               	goto	i2l364
 11687                           
 11688                           ;interruptions.c: 46: {
 11689                           ;interruptions.c: 47: interruption_QEI();
 11690  003004  ECA3  F01B         	call	i2_interruption_QEI	;wreg free
 11691                           
 11692                           ;interruptions.c: 48: }
 11693  003008  D038               	goto	i2l379
 11694  00300A                     i2l364:
 11695                           
 11696                           ;interruptions.c: 49: else if ( PIR3bits.IC3DRIF == 1 && 0b0 == 1 && priorite == 0b1)
 11697  00300A  50A4               	movf	4004,w,c	;volatile
 11698  00300C  D006               	goto	i2l366
 11699  00300E  0417               	decf	i2subroutine_interruptions@priorite,w,c
 11700  003010  A4D8               	btfss	status,2,c
 11701  003012  D003               	goto	i2l366
 11702                           
 11703                           ;interruptions.c: 50: {
 11704                           ;interruptions.c: 51: interuption_QEI_sens();
 11705  003014  EC0A  F01C         	call	i2_interuption_QEI_sens	;wreg free
 11706                           
 11707                           ;interruptions.c: 52: }
 11708  003018  D030               	goto	i2l379
 11709  00301A                     i2l366:
 11710                           
 11711                           ;interruptions.c: 53: else if ( INTCONbits.TMR0IF == 1 && 0b0 == 1 && priorite == 0b1)
 11712  00301A  50F2               	movf	intcon,w,c	;volatile
 11713  00301C  D006               	goto	i2l368
 11714  00301E  0417               	decf	i2subroutine_interruptions@priorite,w,c
 11715  003020  A4D8               	btfss	status,2,c
 11716  003022  D003               	goto	i2l368
 11717                           
 11718                           ;interruptions.c: 54: {
 11719                           ;interruptions.c: 55: interruption_timer0();
 11720  003024  EC00  F01C         	call	i2_interruption_timer0	;wreg free
 11721                           
 11722                           ;interruptions.c: 56: }
 11723  003028  D028               	goto	i2l379
 11724  00302A                     i2l368:
 11725                           
 11726                           ;interruptions.c: 57: else if ( PIR1bits.TMR1IF == 1 && 0b1 == 1 && priorite == 0b1)
 11727  00302A  A09E               	btfss	3998,0,c	;volatile
 11728  00302C  D006               	goto	i2l370
 11729  00302E  0417               	decf	i2subroutine_interruptions@priorite,w,c
 11730  003030  A4D8               	btfss	status,2,c
 11731  003032  D003               	goto	i2l370
 11732                           
 11733                           ;interruptions.c: 58: {
 11734                           ;interruptions.c: 59: interruption_timer1();
 11735  003034  EC97  F01A         	call	i2_interruption_timer1	;wreg free
 11736                           
 11737                           ;interruptions.c: 60: }
 11738  003038  D020               	goto	i2l379
 11739  00303A                     i2l370:
 11740                           
 11741                           ;interruptions.c: 61: else if ( PIR1bits.TMR2IF == 1 && 0b0 == 1 && priorite == 0b0)
 11742  00303A  509E               	movf	3998,w,c	;volatile
 11743  00303C  D006               	goto	i2l372
 11744  00303E  5017               	movf	i2subroutine_interruptions@priorite,w,c
 11745  003040  A4D8               	btfss	status,2,c
 11746  003042  D003               	goto	i2l372
 11747                           
 11748                           ;interruptions.c: 62: {
 11749                           ;interruptions.c: 63: interruption_timer2();
 11750  003044  EC0C  F01C         	call	i2_interruption_timer2	;wreg free
 11751                           
 11752                           ;interruptions.c: 64: }
 11753  003048  D018               	goto	i2l379
 11754  00304A                     i2l372:
 11755                           
 11756                           ;interruptions.c: 65: else if (INTCONbits.INT0IF == 1 && 0b1 == 1 && priorite == 0b1)
 11757  00304A  A2F2               	btfss	intcon,1,c	;volatile
 11758  00304C  D006               	goto	i2l374
 11759  00304E  0417               	decf	i2subroutine_interruptions@priorite,w,c
 11760  003050  A4D8               	btfss	status,2,c
 11761  003052  D003               	goto	i2l374
 11762                           
 11763                           ;interruptions.c: 66: {
 11764                           ;interruptions.c: 67: interruption_INT0();
 11765  003054  EC2B  F01A         	call	i2_interruption_INT0	;wreg free
 11766                           
 11767                           ;interruptions.c: 68: }
 11768  003058  D010               	goto	i2l379
 11769  00305A                     i2l374:
 11770                           
 11771                           ;interruptions.c: 85: else if ( PIR1bits.RCIF == 1 && 0b1 == 1 && priorite == 0b1)
 11772  00305A  AA9E               	btfss	3998,5,c	;volatile
 11773  00305C  D006               	goto	i2l376
 11774  00305E  0417               	decf	i2subroutine_interruptions@priorite,w,c
 11775  003060  A4D8               	btfss	status,2,c
 11776  003062  D003               	goto	i2l376
 11777                           
 11778                           ;interruptions.c: 86: {
 11779                           ;interruptions.c: 87: interrupt_RX();
 11780  003064  ECF8  F01A         	call	i2_interrupt_RX	;wreg free
 11781                           
 11782                           ;interruptions.c: 88: }
 11783  003068  D008               	goto	i2l379
 11784  00306A                     i2l376:
 11785                           
 11786                           ;interruptions.c: 89: else if (PIR1bits.TXIF == 1 && 0b0 == 1 && priorite == 0b0)
 11787  00306A  509E               	movf	3998,w,c	;volatile
 11788  00306C  D006               	goto	i2l379
 11789  00306E  5017               	movf	i2subroutine_interruptions@priorite,w,c
 11790  003070  A4D8               	btfss	status,2,c
 11791  003072  D003               	goto	i2l379
 11792                           
 11793                           ;interruptions.c: 90: {
 11794                           ;interruptions.c: 91: interrupt_TX();
 11795  003074  EC0E  F01C         	call	i2_interrupt_TX	;wreg free
 11796  003078  D000               	goto	i2l379
 11797  00307A                     i2l379:
 11798  00307A  0012               	return		;funcret
 11799  00307C                     __end_ofi2_subroutine_interruptions:
 11800                           	opt stack 0
 11801                           pclatu	equ	0xFFB
 11802                           pclath	equ	0xFFA
 11803                           tblptru	equ	0xFF8
 11804                           tblptrh	equ	0xFF7
 11805                           tblptrl	equ	0xFF6
 11806                           tablat	equ	0xFF5
 11807                           prodh	equ	0xFF4
 11808                           prodl	equ	0xFF3
 11809                           intcon	equ	0xFF2
 11810                           intcon2	equ	0xFF1
 11811                           intcon3	equ	0xFF0
 11812                           indf0	equ	0xFEF
 11813                           postinc0	equ	0xFEE
 11814                           fsr0h	equ	0xFEA
 11815                           fsr0l	equ	0xFE9
 11816                           wreg	equ	0xFE8
 11817                           postinc1	equ	0xFE6
 11818                           postdec1	equ	0xFE5
 11819                           fsr1h	equ	0xFE2
 11820                           fsr1l	equ	0xFE1
 11821                           bsr	equ	0xFE0
 11822                           indf2	equ	0xFDF
 11823                           postinc2	equ	0xFDE
 11824                           postdec2	equ	0xFDD
 11825                           fsr2h	equ	0xFDA
 11826                           fsr2l	equ	0xFD9
 11827                           status	equ	0xFD8
 11828                           
 11829 ;; *************** function i2_interuption_QEI_sens *****************
 11830 ;; Defined at:
 11831 ;;		line 193 in file "interruptions.c"
 11832 ;; Parameters:    Size  Location     Type
 11833 ;;		None
 11834 ;; Auto vars:     Size  Location     Type
 11835 ;;		None
 11836 ;; Return value:  Size  Location     Type
 11837 ;;		None               void
 11838 ;; Registers used:
 11839 ;;		None
 11840 ;; Tracked objects:
 11841 ;;		On entry : 0/0
 11842 ;;		On exit  : 0/0
 11843 ;;		Unchanged: 0/0
 11844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11845 ;;      Params:         0       0       0       0
 11846 ;;      Locals:         0       0       0       0
 11847 ;;      Temps:          0       0       0       0
 11848 ;;      Totals:         0       0       0       0
 11849 ;;Total ram usage:        0 bytes
 11850 ;; Hardware stack levels used:    1
 11851 ;; This function calls:
 11852 ;;		Nothing
 11853 ;; This function is called by:
 11854 ;;		i2_subroutine_interruptions
 11855 ;; This function uses a non-reentrant model
 11856 ;;
 11857                           
 11858                           	psect	text56
 11859  003814                     __ptext56:
 11860                           	opt stack 0
 11861  003814                     i2_interuption_QEI_sens:
 11862                           	opt stack 17
 11863                           
 11864                           ;interruptions.c: 195: PIR3bits.IC3DRIF = 0;
 11865                           
 11866                           ;incstack = 0
 11867  003814  96A4               	bcf	4004,3,c	;volatile
 11868  003816  0012               	return		;funcret
 11869  003818                     __end_ofi2_interuption_QEI_sens:
 11870                           	opt stack 0
 11871                           pclatu	equ	0xFFB
 11872                           pclath	equ	0xFFA
 11873                           tblptru	equ	0xFF8
 11874                           tblptrh	equ	0xFF7
 11875                           tblptrl	equ	0xFF6
 11876                           tablat	equ	0xFF5
 11877                           prodh	equ	0xFF4
 11878                           prodl	equ	0xFF3
 11879                           intcon	equ	0xFF2
 11880                           intcon2	equ	0xFF1
 11881                           intcon3	equ	0xFF0
 11882                           indf0	equ	0xFEF
 11883                           postinc0	equ	0xFEE
 11884                           fsr0h	equ	0xFEA
 11885                           fsr0l	equ	0xFE9
 11886                           wreg	equ	0xFE8
 11887                           postinc1	equ	0xFE6
 11888                           postdec1	equ	0xFE5
 11889                           fsr1h	equ	0xFE2
 11890                           fsr1l	equ	0xFE1
 11891                           bsr	equ	0xFE0
 11892                           indf2	equ	0xFDF
 11893                           postinc2	equ	0xFDE
 11894                           postdec2	equ	0xFDD
 11895                           fsr2h	equ	0xFDA
 11896                           fsr2l	equ	0xFD9
 11897                           status	equ	0xFD8
 11898                           
 11899 ;; *************** function i2_interruption_timer2 *****************
 11900 ;; Defined at:
 11901 ;;		line 129 in file "interruptions.c"
 11902 ;; Parameters:    Size  Location     Type
 11903 ;;		None
 11904 ;; Auto vars:     Size  Location     Type
 11905 ;;		None
 11906 ;; Return value:  Size  Location     Type
 11907 ;;		None               void
 11908 ;; Registers used:
 11909 ;;		None
 11910 ;; Tracked objects:
 11911 ;;		On entry : 0/0
 11912 ;;		On exit  : 0/0
 11913 ;;		Unchanged: 0/0
 11914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11915 ;;      Params:         0       0       0       0
 11916 ;;      Locals:         0       0       0       0
 11917 ;;      Temps:          0       0       0       0
 11918 ;;      Totals:         0       0       0       0
 11919 ;;Total ram usage:        0 bytes
 11920 ;; Hardware stack levels used:    1
 11921 ;; This function calls:
 11922 ;;		Nothing
 11923 ;; This function is called by:
 11924 ;;		i2_subroutine_interruptions
 11925 ;; This function uses a non-reentrant model
 11926 ;;
 11927                           
 11928                           	psect	text57
 11929  003818                     __ptext57:
 11930                           	opt stack 0
 11931  003818                     i2_interruption_timer2:
 11932                           	opt stack 17
 11933                           
 11934                           ;interruptions.c: 131: PIR1bits.TMR2IF = 0;
 11935                           
 11936                           ;incstack = 0
 11937  003818  929E               	bcf	3998,1,c	;volatile
 11938  00381A  0012               	return		;funcret
 11939  00381C                     __end_ofi2_interruption_timer2:
 11940                           	opt stack 0
 11941                           pclatu	equ	0xFFB
 11942                           pclath	equ	0xFFA
 11943                           tblptru	equ	0xFF8
 11944                           tblptrh	equ	0xFF7
 11945                           tblptrl	equ	0xFF6
 11946                           tablat	equ	0xFF5
 11947                           prodh	equ	0xFF4
 11948                           prodl	equ	0xFF3
 11949                           intcon	equ	0xFF2
 11950                           intcon2	equ	0xFF1
 11951                           intcon3	equ	0xFF0
 11952                           indf0	equ	0xFEF
 11953                           postinc0	equ	0xFEE
 11954                           fsr0h	equ	0xFEA
 11955                           fsr0l	equ	0xFE9
 11956                           wreg	equ	0xFE8
 11957                           postinc1	equ	0xFE6
 11958                           postdec1	equ	0xFE5
 11959                           fsr1h	equ	0xFE2
 11960                           fsr1l	equ	0xFE1
 11961                           bsr	equ	0xFE0
 11962                           indf2	equ	0xFDF
 11963                           postinc2	equ	0xFDE
 11964                           postdec2	equ	0xFDD
 11965                           fsr2h	equ	0xFDA
 11966                           fsr2l	equ	0xFD9
 11967                           status	equ	0xFD8
 11968                           
 11969 ;; *************** function i2_interruption_timer1 *****************
 11970 ;; Defined at:
 11971 ;;		line 112 in file "interruptions.c"
 11972 ;; Parameters:    Size  Location     Type
 11973 ;;		None
 11974 ;; Auto vars:     Size  Location     Type
 11975 ;;		None
 11976 ;; Return value:  Size  Location     Type
 11977 ;;		None               void
 11978 ;; Registers used:
 11979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11980 ;; Tracked objects:
 11981 ;;		On entry : 0/0
 11982 ;;		On exit  : 0/0
 11983 ;;		Unchanged: 0/0
 11984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11985 ;;      Params:         0       0       0       0
 11986 ;;      Locals:         0       0       0       0
 11987 ;;      Temps:          1       0       0       0
 11988 ;;      Totals:         1       0       0       0
 11989 ;;Total ram usage:        1 bytes
 11990 ;; Hardware stack levels used:    1
 11991 ;; This function calls:
 11992 ;;		Nothing
 11993 ;; This function is called by:
 11994 ;;		i2_subroutine_interruptions
 11995 ;; This function uses a non-reentrant model
 11996 ;;
 11997                           
 11998                           	psect	text58
 11999  00352E                     __ptext58:
 12000                           	opt stack 0
 12001  00352E                     i2_interruption_timer1:
 12002                           	opt stack 17
 12003                           
 12004                           ;interruptions.c: 114: PIR1bits.TMR1IF = 0;
 12005                           
 12006                           ;incstack = 0
 12007  00352E  909E               	bcf	3998,0,c	;volatile
 12008                           
 12009                           ;interruptions.c: 115: TMR1 = 65535 - 810;
 12010  003530  0EFC               	movlw	252
 12011  003532  6ECF               	movwf	4047,c	;volatile
 12012  003534  0ED5               	movlw	213
 12013  003536  6ECE               	movwf	4046,c	;volatile
 12014                           
 12015                           ;interruptions.c: 117: if (uart_logiciel.transmission_en_cours == 1)
 12016  003538  0443               	decf	_uart_logiciel+11,w,c
 12017  00353A  A4D8               	btfss	status,2,c
 12018  00353C  D018               	goto	i2l385
 12019                           
 12020                           ;interruptions.c: 118: {
 12021                           ;interruptions.c: 119: PORTCbits.RC5 = uart_logiciel.buffer_uart[uart_logiciel.indice];
 12022  00353E  5044               	movf	_uart_logiciel+12,w,c
 12023  003540  0D01               	mullw	1
 12024  003542  0E38               	movlw	low _uart_logiciel
 12025  003544  24F3               	addwf	prodl,w,c
 12026  003546  6ED9               	movwf	fsr2l,c
 12027  003548  0E00               	movlw	high _uart_logiciel
 12028  00354A  20F4               	addwfc	prodh,w,c
 12029  00354C  6EDA               	movwf	fsr2h,c
 12030  00354E  50DF               	movf	indf2,w,c
 12031  003550  6E15               	movwf	??i2_interruption_timer1& (0+255),c
 12032  003552  3A15               	swapf	??i2_interruption_timer1,f,c
 12033  003554  4615               	rlncf	??i2_interruption_timer1,f,c
 12034  003556  5082               	movf	3970,w,c	;volatile
 12035  003558  1815               	xorwf	??i2_interruption_timer1,w,c
 12036  00355A  0BDF               	andlw	-33
 12037  00355C  1815               	xorwf	??i2_interruption_timer1,w,c
 12038  00355E  6E82               	movwf	3970,c	;volatile
 12039                           
 12040                           ;interruptions.c: 120: uart_logiciel.indice++;
 12041  003560  2A44               	incf	_uart_logiciel+12,f,c
 12042                           
 12043                           ;interruptions.c: 122: if (uart_logiciel.indice > 10)
 12044  003562  0E0A               	movlw	10
 12045  003564  6444               	cpfsgt	_uart_logiciel+12,c
 12046  003566  D005               	goto	i2l388
 12047                           
 12048                           ;interruptions.c: 123: uart_logiciel.transmission_en_cours = 0;
 12049  003568  0E00               	movlw	0
 12050  00356A  6E43               	movwf	_uart_logiciel+11,c
 12051                           
 12052                           ;interruptions.c: 124: }
 12053  00356C  D002               	goto	i2l388
 12054  00356E                     i2l385:
 12055                           
 12056                           ;interruptions.c: 125: else
 12057                           ;interruptions.c: 126: PORTCbits.RC5 = 1;
 12058  00356E  8A82               	bsf	3970,5,c	;volatile
 12059  003570  D000               	goto	i2l388
 12060  003572                     i2l388:
 12061  003572  0012               	return		;funcret
 12062  003574                     __end_ofi2_interruption_timer1:
 12063                           	opt stack 0
 12064                           pclatu	equ	0xFFB
 12065                           pclath	equ	0xFFA
 12066                           tblptru	equ	0xFF8
 12067                           tblptrh	equ	0xFF7
 12068                           tblptrl	equ	0xFF6
 12069                           tablat	equ	0xFF5
 12070                           prodh	equ	0xFF4
 12071                           prodl	equ	0xFF3
 12072                           intcon	equ	0xFF2
 12073                           intcon2	equ	0xFF1
 12074                           intcon3	equ	0xFF0
 12075                           indf0	equ	0xFEF
 12076                           postinc0	equ	0xFEE
 12077                           fsr0h	equ	0xFEA
 12078                           fsr0l	equ	0xFE9
 12079                           wreg	equ	0xFE8
 12080                           postinc1	equ	0xFE6
 12081                           postdec1	equ	0xFE5
 12082                           fsr1h	equ	0xFE2
 12083                           fsr1l	equ	0xFE1
 12084                           bsr	equ	0xFE0
 12085                           indf2	equ	0xFDF
 12086                           postinc2	equ	0xFDE
 12087                           postdec2	equ	0xFDD
 12088                           fsr2h	equ	0xFDA
 12089                           fsr2l	equ	0xFD9
 12090                           status	equ	0xFD8
 12091                           
 12092 ;; *************** function i2_interruption_timer0 *****************
 12093 ;; Defined at:
 12094 ;;		line 104 in file "interruptions.c"
 12095 ;; Parameters:    Size  Location     Type
 12096 ;;		None
 12097 ;; Auto vars:     Size  Location     Type
 12098 ;;		None
 12099 ;; Return value:  Size  Location     Type
 12100 ;;		None               void
 12101 ;; Registers used:
 12102 ;;		wreg, status,2
 12103 ;; Tracked objects:
 12104 ;;		On entry : 0/0
 12105 ;;		On exit  : 0/0
 12106 ;;		Unchanged: 0/0
 12107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12108 ;;      Params:         0       0       0       0
 12109 ;;      Locals:         0       0       0       0
 12110 ;;      Temps:          0       0       0       0
 12111 ;;      Totals:         0       0       0       0
 12112 ;;Total ram usage:        0 bytes
 12113 ;; Hardware stack levels used:    1
 12114 ;; This function calls:
 12115 ;;		Nothing
 12116 ;; This function is called by:
 12117 ;;		i2_subroutine_interruptions
 12118 ;; This function uses a non-reentrant model
 12119 ;;
 12120                           
 12121                           	psect	text59
 12122  003800                     __ptext59:
 12123                           	opt stack 0
 12124  003800                     i2_interruption_timer0:
 12125                           	opt stack 17
 12126                           
 12127                           ;interruptions.c: 106: INTCONbits.TMR0IF = 0;
 12128                           
 12129                           ;incstack = 0
 12130  003800  94F2               	bcf	intcon,2,c	;volatile
 12131                           
 12132                           ;interruptions.c: 107: TMR0L = 131;
 12133  003802  0E83               	movlw	131
 12134  003804  6ED6               	movwf	4054,c	;volatile
 12135  003806  0012               	return		;funcret
 12136  003808                     __end_ofi2_interruption_timer0:
 12137                           	opt stack 0
 12138                           pclatu	equ	0xFFB
 12139                           pclath	equ	0xFFA
 12140                           tblptru	equ	0xFF8
 12141                           tblptrh	equ	0xFF7
 12142                           tblptrl	equ	0xFF6
 12143                           tablat	equ	0xFF5
 12144                           prodh	equ	0xFF4
 12145                           prodl	equ	0xFF3
 12146                           intcon	equ	0xFF2
 12147                           intcon2	equ	0xFF1
 12148                           intcon3	equ	0xFF0
 12149                           indf0	equ	0xFEF
 12150                           postinc0	equ	0xFEE
 12151                           fsr0h	equ	0xFEA
 12152                           fsr0l	equ	0xFE9
 12153                           wreg	equ	0xFE8
 12154                           postinc1	equ	0xFE6
 12155                           postdec1	equ	0xFE5
 12156                           fsr1h	equ	0xFE2
 12157                           fsr1l	equ	0xFE1
 12158                           bsr	equ	0xFE0
 12159                           indf2	equ	0xFDF
 12160                           postinc2	equ	0xFDE
 12161                           postdec2	equ	0xFDD
 12162                           fsr2h	equ	0xFDA
 12163                           fsr2l	equ	0xFD9
 12164                           status	equ	0xFD8
 12165                           
 12166 ;; *************** function i2_interruption_QEI *****************
 12167 ;; Defined at:
 12168 ;;		line 168 in file "interruptions.c"
 12169 ;; Parameters:    Size  Location     Type
 12170 ;;		None
 12171 ;; Auto vars:     Size  Location     Type
 12172 ;;		None
 12173 ;; Return value:  Size  Location     Type
 12174 ;;		None               void
 12175 ;; Registers used:
 12176 ;;		wreg, status,2, status,0
 12177 ;; Tracked objects:
 12178 ;;		On entry : 0/0
 12179 ;;		On exit  : 0/0
 12180 ;;		Unchanged: 0/0
 12181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12182 ;;      Params:         0       0       0       0
 12183 ;;      Locals:         0       0       0       0
 12184 ;;      Temps:          0       0       0       0
 12185 ;;      Totals:         0       0       0       0
 12186 ;;Total ram usage:        0 bytes
 12187 ;; Hardware stack levels used:    1
 12188 ;; This function calls:
 12189 ;;		Nothing
 12190 ;; This function is called by:
 12191 ;;		i2_subroutine_interruptions
 12192 ;; This function uses a non-reentrant model
 12193 ;;
 12194                           
 12195                           	psect	text60
 12196  003746                     __ptext60:
 12197                           	opt stack 0
 12198  003746                     i2_interruption_QEI:
 12199                           	opt stack 17
 12200                           
 12201                           ;interruptions.c: 170: PIR3bits.IC2QEIF = 0;
 12202                           
 12203                           ;incstack = 0
 12204  003746  94A4               	bcf	4004,2,c	;volatile
 12205                           
 12206                           ;interruptions.c: 171: QEICONbits.QERR = 0;
 12207  003748  9CB6               	bcf	4022,6,c	;volatile
 12208                           
 12209                           ;interruptions.c: 173: if (capteur.synchro_debut_tour == 1)
 12210  00374A  0100               	movlb	0	; () banked
 12211  00374C  05DA               	decf	(_capteur+1)& (0+255),w,b
 12212  00374E  A4D8               	btfss	status,2,c
 12213  003750  D007               	goto	i2l3345
 12214                           
 12215                           ; BSR set to: 0
 12216                           ;interruptions.c: 174: {
 12217                           ;interruptions.c: 175: capteur.tour_en_cours = 1;
 12218  003752  0E01               	movlw	1
 12219  003754  0100               	movlb	0	; () banked
 12220  003756  6FD9               	movwf	_capteur& (0+255),b
 12221                           
 12222                           ;interruptions.c: 176: capteur.synchro_debut_tour = 0;
 12223  003758  0E00               	movlw	0
 12224  00375A  0100               	movlb	0	; () banked
 12225  00375C  6FDA               	movwf	(_capteur+1)& (0+255),b
 12226                           
 12227                           ;interruptions.c: 177: }
 12228  00375E  D004               	goto	i2l411
 12229  003760                     i2l3345:
 12230                           
 12231                           ; BSR set to: 0
 12232                           ;interruptions.c: 178: else
 12233                           ;interruptions.c: 179: capteur.tour_en_cours = 0;
 12234  003760  0E00               	movlw	0
 12235  003762  0100               	movlb	0	; () banked
 12236  003764  6FD9               	movwf	_capteur& (0+255),b
 12237  003766  D000               	goto	i2l411
 12238  003768                     i2l411:
 12239                           
 12240                           ; BSR set to: 0
 12241  003768  0012               	return		;funcret
 12242  00376A                     __end_ofi2_interruption_QEI:
 12243                           	opt stack 0
 12244                           pclatu	equ	0xFFB
 12245                           pclath	equ	0xFFA
 12246                           tblptru	equ	0xFF8
 12247                           tblptrh	equ	0xFF7
 12248                           tblptrl	equ	0xFF6
 12249                           tablat	equ	0xFF5
 12250                           prodh	equ	0xFF4
 12251                           prodl	equ	0xFF3
 12252                           intcon	equ	0xFF2
 12253                           intcon2	equ	0xFF1
 12254                           intcon3	equ	0xFF0
 12255                           indf0	equ	0xFEF
 12256                           postinc0	equ	0xFEE
 12257                           fsr0h	equ	0xFEA
 12258                           fsr0l	equ	0xFE9
 12259                           wreg	equ	0xFE8
 12260                           postinc1	equ	0xFE6
 12261                           postdec1	equ	0xFE5
 12262                           fsr1h	equ	0xFE2
 12263                           fsr1l	equ	0xFE1
 12264                           bsr	equ	0xFE0
 12265                           indf2	equ	0xFDF
 12266                           postinc2	equ	0xFDE
 12267                           postdec2	equ	0xFDD
 12268                           fsr2h	equ	0xFDA
 12269                           fsr2l	equ	0xFD9
 12270                           status	equ	0xFD8
 12271                           
 12272 ;; *************** function i2_interruption_INT0 *****************
 12273 ;; Defined at:
 12274 ;;		line 141 in file "interruptions.c"
 12275 ;; Parameters:    Size  Location     Type
 12276 ;;		None
 12277 ;; Auto vars:     Size  Location     Type
 12278 ;;		None
 12279 ;; Return value:  Size  Location     Type
 12280 ;;		None               void
 12281 ;; Registers used:
 12282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12283 ;; Tracked objects:
 12284 ;;		On entry : 0/0
 12285 ;;		On exit  : 0/0
 12286 ;;		Unchanged: 0/0
 12287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12288 ;;      Params:         0       0       0       0
 12289 ;;      Locals:         0       0       0       0
 12290 ;;      Temps:          2       0       0       0
 12291 ;;      Totals:         2       0       0       0
 12292 ;;Total ram usage:        2 bytes
 12293 ;; Hardware stack levels used:    1
 12294 ;; This function calls:
 12295 ;;		Nothing
 12296 ;; This function is called by:
 12297 ;;		i2_subroutine_interruptions
 12298 ;; This function uses a non-reentrant model
 12299 ;;
 12300                           
 12301                           	psect	text61
 12302  003456                     __ptext61:
 12303                           	opt stack 0
 12304  003456                     i2_interruption_INT0:
 12305                           	opt stack 17
 12306                           
 12307                           ;interruptions.c: 143: if (capteur.tour_en_cours == 1)
 12308                           
 12309                           ; BSR set to: 0
 12310                           ;incstack = 0
 12311  003456  0100               	movlb	0	; () banked
 12312  003458  05D9               	decf	_capteur& (0+255),w,b
 12313  00345A  A4D8               	btfss	status,2,c
 12314  00345C  D01F               	goto	i2l3337
 12315                           
 12316                           ; BSR set to: 0
 12317                           ;interruptions.c: 144: {
 12318                           ;interruptions.c: 145: if (capteur.indice < 3)
 12319  00345E  0E03               	movlw	3
 12320  003460  0100               	movlb	0	; () banked
 12321  003462  61F4               	cpfslt	(_capteur+27)& (0+255),b
 12322  003464  D018               	goto	i2l3335
 12323                           
 12324                           ; BSR set to: 0
 12325                           ;interruptions.c: 146: {
 12326                           ;interruptions.c: 147: capteur.position[capteur.indice++] = POSCNTH * 256 + POSCNTL;
 12327  003466  5066               	movf	3942,w,c	;volatile
 12328  003468  CF67 F015          	movff	3943,??i2_interruption_INT0	;volatile
 12329  00346C  6A16               	clrf	(??i2_interruption_INT0+1)& (0+255),c
 12330  00346E  C015  F016         	movff	??i2_interruption_INT0,??i2_interruption_INT0+1
 12331  003472  6A15               	clrf	??i2_interruption_INT0,c
 12332  003474  2615               	addwf	??i2_interruption_INT0,f,c
 12333  003476  0E00               	movlw	0
 12334  003478  2216               	addwfc	??i2_interruption_INT0+1,f,c
 12335  00347A  0100               	movlb	0	; () banked
 12336  00347C  51F4               	movf	(_capteur+27)& (0+255),w,b
 12337  00347E  0D02               	mullw	2
 12338  003480  0EEE               	movlw	low (_capteur+21)
 12339  003482  24F3               	addwf	prodl,w,c
 12340  003484  6ED9               	movwf	fsr2l,c
 12341  003486  0E00               	movlw	high (_capteur+21)
 12342  003488  20F4               	addwfc	prodh,w,c
 12343  00348A  6EDA               	movwf	fsr2h,c
 12344  00348C  C015  FFDE         	movff	??i2_interruption_INT0,postinc2
 12345  003490  C016  FFDD         	movff	??i2_interruption_INT0+1,postdec2
 12346  003494  D000               	goto	i2l3335
 12347  003496                     i2l3335:
 12348                           
 12349                           ; BSR set to: 0
 12350                           ;interruptions.c: 149: else
 12351                           ;interruptions.c: 150: capteur.indice++;
 12352  003496  0100               	movlb	0	; () banked
 12353  003498  2BF4               	incf	(_capteur+27)& (0+255),f,b
 12354                           
 12355                           ; BSR set to: 0
 12356  00349A  D000               	goto	i2l3337
 12357  00349C                     i2l3337:
 12358                           
 12359                           ; BSR set to: 0
 12360                           ;interruptions.c: 151: }
 12361                           ;interruptions.c: 152: INTCONbits.INT0IF = 0;
 12362  00349C  92F2               	bcf	intcon,1,c	;volatile
 12363                           
 12364                           ; BSR set to: 0
 12365  00349E  0012               	return		;funcret
 12366  0034A0                     __end_ofi2_interruption_INT0:
 12367                           	opt stack 0
 12368                           pclatu	equ	0xFFB
 12369                           pclath	equ	0xFFA
 12370                           tblptru	equ	0xFF8
 12371                           tblptrh	equ	0xFF7
 12372                           tblptrl	equ	0xFF6
 12373                           tablat	equ	0xFF5
 12374                           prodh	equ	0xFF4
 12375                           prodl	equ	0xFF3
 12376                           intcon	equ	0xFF2
 12377                           intcon2	equ	0xFF1
 12378                           intcon3	equ	0xFF0
 12379                           indf0	equ	0xFEF
 12380                           postinc0	equ	0xFEE
 12381                           fsr0h	equ	0xFEA
 12382                           fsr0l	equ	0xFE9
 12383                           wreg	equ	0xFE8
 12384                           postinc1	equ	0xFE6
 12385                           postdec1	equ	0xFE5
 12386                           fsr1h	equ	0xFE2
 12387                           fsr1l	equ	0xFE1
 12388                           bsr	equ	0xFE0
 12389                           indf2	equ	0xFDF
 12390                           postinc2	equ	0xFDE
 12391                           postdec2	equ	0xFDD
 12392                           fsr2h	equ	0xFDA
 12393                           fsr2l	equ	0xFD9
 12394                           status	equ	0xFD8
 12395                           
 12396 ;; *************** function i2_interrupt_TX *****************
 12397 ;; Defined at:
 12398 ;;		line 226 in file "interruptions.c"
 12399 ;; Parameters:    Size  Location     Type
 12400 ;;		None
 12401 ;; Auto vars:     Size  Location     Type
 12402 ;;		None
 12403 ;; Return value:  Size  Location     Type
 12404 ;;		None               void
 12405 ;; Registers used:
 12406 ;;		None
 12407 ;; Tracked objects:
 12408 ;;		On entry : 0/0
 12409 ;;		On exit  : 0/0
 12410 ;;		Unchanged: 0/0
 12411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12412 ;;      Params:         0       0       0       0
 12413 ;;      Locals:         0       0       0       0
 12414 ;;      Temps:          0       0       0       0
 12415 ;;      Totals:         0       0       0       0
 12416 ;;Total ram usage:        0 bytes
 12417 ;; Hardware stack levels used:    1
 12418 ;; This function calls:
 12419 ;;		Nothing
 12420 ;; This function is called by:
 12421 ;;		i2_subroutine_interruptions
 12422 ;; This function uses a non-reentrant model
 12423 ;;
 12424                           
 12425                           	psect	text62
 12426  00381C                     __ptext62:
 12427                           	opt stack 0
 12428  00381C                     i2_interrupt_TX:
 12429                           	opt stack 17
 12430                           
 12431                           ;interruptions.c: 228: PIR1bits.TXIF = 0;
 12432                           
 12433                           ; BSR set to: 0
 12434                           ;incstack = 0
 12435  00381C  989E               	bcf	3998,4,c	;volatile
 12436  00381E  0012               	return		;funcret
 12437  003820                     __end_ofi2_interrupt_TX:
 12438                           	opt stack 0
 12439                           pclatu	equ	0xFFB
 12440                           pclath	equ	0xFFA
 12441                           tblptru	equ	0xFF8
 12442                           tblptrh	equ	0xFF7
 12443                           tblptrl	equ	0xFF6
 12444                           tablat	equ	0xFF5
 12445                           prodh	equ	0xFF4
 12446                           prodl	equ	0xFF3
 12447                           intcon	equ	0xFF2
 12448                           intcon2	equ	0xFF1
 12449                           intcon3	equ	0xFF0
 12450                           indf0	equ	0xFEF
 12451                           postinc0	equ	0xFEE
 12452                           fsr0h	equ	0xFEA
 12453                           fsr0l	equ	0xFE9
 12454                           wreg	equ	0xFE8
 12455                           postinc1	equ	0xFE6
 12456                           postdec1	equ	0xFE5
 12457                           fsr1h	equ	0xFE2
 12458                           fsr1l	equ	0xFE1
 12459                           bsr	equ	0xFE0
 12460                           indf2	equ	0xFDF
 12461                           postinc2	equ	0xFDE
 12462                           postdec2	equ	0xFDD
 12463                           fsr2h	equ	0xFDA
 12464                           fsr2l	equ	0xFD9
 12465                           status	equ	0xFD8
 12466                           
 12467 ;; *************** function i2_interrupt_RX *****************
 12468 ;; Defined at:
 12469 ;;		line 207 in file "interruptions.c"
 12470 ;; Parameters:    Size  Location     Type
 12471 ;;		None
 12472 ;; Auto vars:     Size  Location     Type
 12473 ;;  interrupt_RX    1   20[COMRAM] unsigned char 
 12474 ;; Return value:  Size  Location     Type
 12475 ;;		None               void
 12476 ;; Registers used:
 12477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12478 ;; Tracked objects:
 12479 ;;		On entry : 0/0
 12480 ;;		On exit  : 0/0
 12481 ;;		Unchanged: 0/0
 12482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12483 ;;      Params:         0       0       0       0
 12484 ;;      Locals:         1       0       0       0
 12485 ;;      Temps:          0       0       0       0
 12486 ;;      Totals:         1       0       0       0
 12487 ;;Total ram usage:        1 bytes
 12488 ;; Hardware stack levels used:    1
 12489 ;; This function calls:
 12490 ;;		Nothing
 12491 ;; This function is called by:
 12492 ;;		i2_subroutine_interruptions
 12493 ;; This function uses a non-reentrant model
 12494 ;;
 12495                           
 12496                           	psect	text63
 12497  0035F0                     __ptext63:
 12498                           	opt stack 0
 12499  0035F0                     i2_interrupt_RX:
 12500                           	opt stack 17
 12501                           
 12502                           ;interruptions.c: 209: PIR1bits.RCIF = 0;
 12503                           
 12504                           ;incstack = 0
 12505  0035F0  9A9E               	bcf	3998,5,c	;volatile
 12506                           
 12507                           ;interruptions.c: 210: PORTBbits.RB0 = 1;
 12508  0035F2  8081               	bsf	3969,0,c	;volatile
 12509                           
 12510                           ;interruptions.c: 212: if (uart_reception.indice < 100)
 12511  0035F4  0E64               	movlw	100
 12512  0035F6  0101               	movlb	1	; () banked
 12513  0035F8  617A               	cpfslt	(_uart_reception+100)& (0+255),b
 12514  0035FA  D011               	goto	i2l3359
 12515                           
 12516                           ; BSR set to: 1
 12517                           ;interruptions.c: 213: {
 12518                           ;interruptions.c: 214: uart_reception.buffer_reeption[uart_reception.indice] = RCREG;
 12519  0035FC  0101               	movlb	1	; () banked
 12520  0035FE  517A               	movf	(_uart_reception+100)& (0+255),w,b
 12521  003600  0D01               	mullw	1
 12522  003602  0E16               	movlw	low _uart_reception
 12523  003604  24F3               	addwf	prodl,w,c
 12524  003606  6ED9               	movwf	fsr2l,c
 12525  003608  0E01               	movlw	high _uart_reception
 12526  00360A  20F4               	addwfc	prodh,w,c
 12527  00360C  6EDA               	movwf	fsr2h,c
 12528  00360E  CFAE FFDF          	movff	4014,indf2	;volatile
 12529                           
 12530                           ; BSR set to: 1
 12531                           ;interruptions.c: 215: uart_reception.buffer_vide = 0;
 12532  003612  0E00               	movlw	0
 12533  003614  0101               	movlb	1	; () banked
 12534  003616  6F7C               	movwf	(_uart_reception+102)& (0+255),b
 12535                           
 12536                           ; BSR set to: 1
 12537                           ;interruptions.c: 216: uart_reception.indice++;
 12538  003618  0101               	movlb	1	; () banked
 12539  00361A  2B7A               	incf	(_uart_reception+100)& (0+255),f,b
 12540                           
 12541                           ;interruptions.c: 217: }
 12542  00361C  D006               	goto	i2l422
 12543  00361E                     i2l3359:
 12544                           
 12545                           ; BSR set to: 1
 12546                           ;interruptions.c: 218: else
 12547                           ;interruptions.c: 219: {
 12548                           ;interruptions.c: 220: uart_reception.buffer_plein = 1;
 12549  00361E  0E01               	movlw	1
 12550  003620  0101               	movlb	1	; () banked
 12551  003622  6F7B               	movwf	(_uart_reception+101)& (0+255),b
 12552                           
 12553                           ; BSR set to: 1
 12554                           ;interruptions.c: 221: uint8_t temp = RCREG;
 12555  003624  CFAE F015          	movff	4014,i2interrupt_RX@temp	;volatile
 12556  003628  D000               	goto	i2l422
 12557  00362A                     i2l422:
 12558                           
 12559                           ; BSR set to: 1
 12560  00362A  0012               	return		;funcret
 12561  00362C                     __end_ofi2_interrupt_RX:
 12562                           	opt stack 0
 12563                           pclatu	equ	0xFFB
 12564                           pclath	equ	0xFFA
 12565                           tblptru	equ	0xFF8
 12566                           tblptrh	equ	0xFF7
 12567                           tblptrl	equ	0xFF6
 12568                           tablat	equ	0xFF5
 12569                           prodh	equ	0xFF4
 12570                           prodl	equ	0xFF3
 12571                           intcon	equ	0xFF2
 12572                           intcon2	equ	0xFF1
 12573                           intcon3	equ	0xFF0
 12574                           indf0	equ	0xFEF
 12575                           postinc0	equ	0xFEE
 12576                           fsr0h	equ	0xFEA
 12577                           fsr0l	equ	0xFE9
 12578                           wreg	equ	0xFE8
 12579                           postinc1	equ	0xFE6
 12580                           postdec1	equ	0xFE5
 12581                           fsr1h	equ	0xFE2
 12582                           fsr1l	equ	0xFE1
 12583                           bsr	equ	0xFE0
 12584                           indf2	equ	0xFDF
 12585                           postinc2	equ	0xFDE
 12586                           postdec2	equ	0xFDD
 12587                           fsr2h	equ	0xFDA
 12588                           fsr2l	equ	0xFD9
 12589                           status	equ	0xFD8
 12590                           pclatu	equ	0xFFB
 12591                           pclath	equ	0xFFA
 12592                           tblptru	equ	0xFF8
 12593                           tblptrh	equ	0xFF7
 12594                           tblptrl	equ	0xFF6
 12595                           tablat	equ	0xFF5
 12596                           prodh	equ	0xFF4
 12597                           prodl	equ	0xFF3
 12598                           intcon	equ	0xFF2
 12599                           intcon2	equ	0xFF1
 12600                           intcon3	equ	0xFF0
 12601                           indf0	equ	0xFEF
 12602                           postinc0	equ	0xFEE
 12603                           fsr0h	equ	0xFEA
 12604                           fsr0l	equ	0xFE9
 12605                           wreg	equ	0xFE8
 12606                           postinc1	equ	0xFE6
 12607                           postdec1	equ	0xFE5
 12608                           fsr1h	equ	0xFE2
 12609                           fsr1l	equ	0xFE1
 12610                           bsr	equ	0xFE0
 12611                           indf2	equ	0xFDF
 12612                           postinc2	equ	0xFDE
 12613                           postdec2	equ	0xFDD
 12614                           fsr2h	equ	0xFDA
 12615                           fsr2l	equ	0xFD9
 12616                           status	equ	0xFD8
 12617                           
 12618                           	psect	rparam
 12619  0000                     pclatu	equ	0xFFB
 12620                           pclath	equ	0xFFA
 12621                           tblptru	equ	0xFF8
 12622                           tblptrh	equ	0xFF7
 12623                           tblptrl	equ	0xFF6
 12624                           tablat	equ	0xFF5
 12625                           prodh	equ	0xFF4
 12626                           prodl	equ	0xFF3
 12627                           intcon	equ	0xFF2
 12628                           intcon2	equ	0xFF1
 12629                           intcon3	equ	0xFF0
 12630                           indf0	equ	0xFEF
 12631                           postinc0	equ	0xFEE
 12632                           fsr0h	equ	0xFEA
 12633                           fsr0l	equ	0xFE9
 12634                           wreg	equ	0xFE8
 12635                           postinc1	equ	0xFE6
 12636                           postdec1	equ	0xFE5
 12637                           fsr1h	equ	0xFE2
 12638                           fsr1l	equ	0xFE1
 12639                           bsr	equ	0xFE0
 12640                           indf2	equ	0xFDF
 12641                           postinc2	equ	0xFDE
 12642                           postdec2	equ	0xFDD
 12643                           fsr2h	equ	0xFDA
 12644                           fsr2l	equ	0xFD9
 12645                           status	equ	0xFD8


Data Sizes:
    Strings     189
    Constant    27
    Data        1
    BSS         235
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      71
    BANK0           160    100     160
    BANK1           256    104     246
    BANK2           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 15
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), 

    triangulation@y	PTR  size(2) Largest target is 9
		 -> main@y(BANK1[9]), 

    triangulation@x	PTR  size(2) Largest target is 9
		 -> main@x(BANK0[9]), 

    sp__IntToC	PTR unsigned char  size(2) Largest target is 8
		 -> IntToC@out(BANK1[8]), 

    PutsUART@chaine	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_10(CODE[2]), STR_9(CODE[6]), STR_8(CODE[16]), STR_7(CODE[24]), 
		 -> STR_6(CODE[24]), IntToC@out(BANK1[8]), STR_5(CODE[20]), STR_4(CODE[8]), 
		 -> STR_3(CODE[24]), STR_2(CODE[43]), STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_subroutine_interruptions
    i2_subroutine_interruptions->i2_interruption_INT0

Critical Paths under _low_isr in COMRAM

    _low_isr->_subroutine_interruptions
    _subroutine_interruptions->_interruption_INT0

Critical Paths under _main in BANK0

    _triangulation->_Cot
    _saturation->___ftge
    _Cot->_tan
    _tan->_cos
    _cos->_sin
    _sin->___ftdiv
    _floor->___ftadd
    ___altoft->___fttol
    _eval_poly->___ftadd
    _conversion_degre_radian->___ftdiv
    _obtention_angle->___ftdiv
    ___lwtoft->___ftpack
    ___ftdiv->_eval_poly
    _get_distance->_sqrt
    _sqrt->___ftsub
    ___ftsub->_floor
    ___ftadd->___ftneg
    _envoit_pwm->___ftge
    ___ftneg->___ftmul
    ___ftmul->___ftpack
    ___ftge->___ftneg
    _affichage_position->_PutIntUART
    _PutIntUART->_PutsUART
    _PutsUART->_IntToC
    _PutcUART->___awdiv
    _IntToC->___awdiv
    ___awdiv->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_triangulation

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     3      5  362350
                                             99 BANK0      1     1      0
                                             97 BANK1      7     2      5
                         _PutIntUART
                           _PutsUART
                             ___ftge
                             ___wmul
                 _affichage_position
                         _envoit_pwm
                       _get_distance
                        _init_system
                    _obtention_angle
                      _triangulation
 ---------------------------------------------------------------------------------
 (1) _triangulation                                      118   105     13  246324
                                              0 BANK1     97    84     13
                                _Cot
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                         _saturation
 ---------------------------------------------------------------------------------
 (2) _saturation                                           6     0      6    6569
                                             35 BANK0      6     0      6
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (2) _Cot                                                  6     3      3  208113
                                             93 BANK0      6     3      3
                            ___ftdiv
            _conversion_degre_radian
                                _tan
 ---------------------------------------------------------------------------------
 (3) _tan                                                  9     6      3  190040
                                             84 BANK0      9     6      3
                            ___ftdiv
                                _cos
                                _sin
 ---------------------------------------------------------------------------------
 (4) _cos                                                  9     6      3  100037
                                             78 BANK0      6     3      3
                            ___ftadd
                             ___ftge
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 13    10      3   85352
                                             65 BANK0     13    10      3
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                                8     5      3   18914
                                             38 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                7     2      5     452
                                              0 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (6) ___altoft                                            10     6      4    2882
                                             15 BANK0     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           12     5      7   23645
                                             38 BANK0     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _conversion_degre_radian                              3     0      3   13376
                                             65 BANK0      3     0      3
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (1) _obtention_angle                                      6     3      3   16153
                                             65 BANK0      6     3      3
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2709
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    4444
                                             50 BANK0     15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_system                                          0     0      0       0
                    _ConfigInterrupt
                        _ConfigPorts
                         _config_QEI
                         _config_pwm
                        _config_uart
                       _init_capteur
                       _init_timer_0
                 _init_uart_logiciel
                _init_uart_reception
                        _reglage_PID
 ---------------------------------------------------------------------------------
 (2) _reglage_PID                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_uart_reception                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_uart_logiciel                                   0     0      0       0
                       _init_timer_1
 ---------------------------------------------------------------------------------
 (3) _init_timer_1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_capteur                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_uart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_pwm                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_QEI                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ConfigPorts                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ConfigInterrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_distance                                        24    12     12   47827
                                             71 BANK0     24    12     12
                            ___ftadd
                            ___ftmul
                            ___ftneg
                             ___wmul (ARG)
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _sqrt                                                19    16      3   24666
                                             52 BANK0     19    16      3
                             ___ftge
                            ___ftmul
                            ___ftsub
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6   11773
                                             46 BANK0      6     0      6
                            ___ftadd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6   10947
                                             26 BANK0     12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _envoit_pwm                                           6     3      3   15878
                                             35 BANK0      6     3      3
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3    2452
                                             23 BANK0      3     0      3
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    8824
                                              8 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2524
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    3432
                                             26 BANK0      9     3      6
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (1) _affichage_position                                   6     0      6   15063
                                             38 BANK0      6     0      6
                         _PutIntUART
                           _PutsUART
                            ___fttol
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             15    11      4     756
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (2) _PutIntUART                                           3     1      2   10471
                                             35 BANK0      3     1      2
                             _IntToC
                           _PutsUART
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _PutsUART                                             5     3      2    3620
                                             30 BANK0      5     3      2
                             _IntToC (ARG)
                           _PutcUART
 ---------------------------------------------------------------------------------
 (3) _PutcUART                                             8     7      1    2680
                                             14 BANK0      8     7      1
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _IntToC                                              16    14      2    6481
                                             14 BANK0     16    14      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    3158
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    2139
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                             17    17      0     177
                                              3 COMRAM    17    17      0
           _subroutine_interruptions
 ---------------------------------------------------------------------------------
 (10) _subroutine_interruptions                            1     1      0     177
                                              2 COMRAM     1     1      0
                       _interrupt_RX
                       _interrupt_TX
                  _interruption_INT0
                   _interruption_QEI
                _interruption_timer0
                _interruption_timer1
                _interruption_timer2
               _interuption_QEI_sens
 ---------------------------------------------------------------------------------
 (11) _interuption_QEI_sens                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _interruption_timer2                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _interruption_timer1                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _interruption_timer0                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _interruption_QEI                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _interruption_INT0                                   2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _interrupt_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _interrupt_RX                                        1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _high_isr                                           14    14      0     177
                                             23 COMRAM    14    14      0
         i2_subroutine_interruptions
 ---------------------------------------------------------------------------------
 (13) i2_subroutine_interruptions                          1     1      0     177
                                             22 COMRAM     1     1      0
                     i2_interrupt_RX
                     i2_interrupt_TX
                i2_interruption_INT0
                 i2_interruption_QEI
              i2_interruption_timer0
              i2_interruption_timer1
              i2_interruption_timer2
             i2_interuption_QEI_sens
 ---------------------------------------------------------------------------------
 (14) i2_interuption_QEI_sens                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_interruption_timer2                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_interruption_timer1                               1     1      0       0
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) i2_interruption_timer0                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_interruption_QEI                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_interruption_INT0                                 2     2      0       0
                                             20 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (14) i2_interrupt_TX                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_interrupt_RX                                      1     1      0       1
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PutIntUART
     _IntToC
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _PutsUART
       _IntToC (ARG)
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _PutcUART (ARG)
         ___awdiv
           ___wmul (ARG)
     ___fttol (ARG)
   _PutsUART
     _IntToC (ARG)
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _PutcUART (ARG)
       ___awdiv
         ___wmul (ARG)
   ___ftge
     ___ftneg (ARG)
       ___ftmul (ARG)
         ___ftpack
   ___wmul
   _affichage_position
     _PutIntUART
       _IntToC
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _PutsUART
         _IntToC (ARG)
           ___awdiv
             ___wmul (ARG)
           ___wmul
         _PutcUART (ARG)
           ___awdiv
             ___wmul (ARG)
       ___fttol (ARG)
     _PutsUART
       _IntToC (ARG)
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _PutcUART (ARG)
         ___awdiv
           ___wmul (ARG)
     ___fttol
   _envoit_pwm
     ___ftge
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftmul (ARG)
         ___ftpack
     ___fttol
   _get_distance
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftmul (ARG)
         ___ftpack
     ___wmul (ARG)
     _sqrt (ARG)
       ___ftge
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftmul
         ___ftpack
       ___ftsub
         ___ftadd
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftge
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___fttol
           _frexp
   _init_system
     _ConfigInterrupt
     _ConfigPorts
     _config_QEI
     _config_pwm
     _config_uart
     _init_capteur
     _init_timer_0
     _init_uart_logiciel
       _init_timer_1
     _init_uart_reception
     _reglage_PID
   _obtention_angle
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _eval_poly (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul
           ___ftpack
         ___wmul
     ___ftmul
       ___ftpack
     ___lwtoft
       ___ftpack
   _triangulation
     _Cot
       ___ftdiv
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _eval_poly (ARG)
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___wmul
       _conversion_degre_radian
         ___ftdiv
           ___ftadd (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _eval_poly (ARG)
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul
               ___ftpack
             ___wmul
         ___ftmul
           ___ftpack
       _tan
         ___ftdiv
           ___ftadd (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _eval_poly (ARG)
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul
               ___ftpack
             ___wmul
         _cos
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftge
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
           _sin
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftdiv
               ___ftadd (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _eval_poly (ARG)
                 ___ftadd
                   ___ftmul (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___ftpack
                 ___wmul
             ___ftge
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
             ___ftmul
               ___ftpack
             ___ftneg
               ___ftmul (ARG)
                 ___ftpack
             ___ftsub
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               _floor (ARG)
                 ___altoft
                   ___ftpack
                   ___fttol (ARG)
                 ___ftadd
                   ___ftmul (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftge
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                 ___fttol
                 _frexp
             _eval_poly
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___ftpack
               ___wmul
             _floor
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftge
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
               ___fttol
               _frexp
         _sin
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftdiv
             ___ftadd (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _eval_poly (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___ftpack
               ___wmul
           ___ftge
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___ftmul
             ___ftpack
           ___ftneg
             ___ftmul (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             _floor (ARG)
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftge
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
               ___fttol
               _frexp
           _eval_poly
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul
               ___ftpack
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftge
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
             ___fttol
             _frexp
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _eval_poly (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul
           ___ftpack
         ___wmul
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftmul (ARG)
         ___ftpack
     _saturation
       ___ftge
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftneg
         ___ftmul (ARG)
           ___ftpack

 _low_isr (ROOT)
   _subroutine_interruptions
     _interrupt_RX
     _interrupt_TX
     _interruption_INT0
     _interruption_QEI
     _interruption_timer0
     _interruption_timer1
     _interruption_timer2
     _interuption_QEI_sens

 _high_isr (ROOT)
   i2_subroutine_interruptions
     i2_interrupt_RX
     i2_interrupt_TX
     i2_interruption_INT0
     i2_interruption_QEI
     i2_interruption_timer0
     i2_interruption_timer1
     i2_interruption_timer2
     i2_interuption_QEI_sens

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     68      F6       7       96.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     64      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     25      47       1       74.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1DD       3        0.0%
DATA                 0      0     1DD      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon May 04 00:31:35 2015

                       ___altoft@exp 0077               __end_ofi2_interrupt_RX 362C  
             __end_ofi2_interrupt_TX 3820                       _ERREUR_VITESSE 00C4  
                      ___altoft@sign 0078                                   l31 0D46  
                                 l62 121E                                   l72 133C  
                                 l65 1274                         ___awdiv@sign 006B  
                                 bsr 000FE0                 ?_init_uart_reception 0001  
                ___wmul@multiplicand 0062                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                         ___ftadd@exp1 0085  
                       ___ftadd@exp2 0084                         ___ftadd@sign 0083  
                                l302 1A06                                  l503 30F2  
                                l285 16BE                                  l278 1354  
                                l607 27CA                                  l640 369A  
                                l483 28DE                                  l486 2960  
                                l583 32AA                                  l592 33BA  
                                l833 2A6A                                  l737 2D3C  
                                l589 2DCC                                  l948 25D2  
                                l959 259A                                  l992 1D46  
                                l994 1D70                                  l988 1D0C  
                                l989 1F20                         __CFG_CPB$OFF 000000  
                                _PID 0100                         __CFG_CPD$OFF 000000  
                                _Cot 3242                                  _cos 2B3A  
                                _tan 32AC                                  _sin 1A08  
                                prod 000FF3                                  wreg 000FE8  
__size_ofi2_subroutine_interruptions 0084                         __CFG_LVP$OFF 000000  
                       ___ftdiv@cntr 009B                                 ?_Cot 00BD  
                       ___ftdiv@sign 00A0                                 l1003 1E54  
                               l1012 1E7E                                 l1020 2380  
                               l1023 2348                                 l1201 330E  
                               l1035 223E                                 l1052 340A  
                               l1029 2B38                                 l1045 36BE  
                               l1222 1B9E                                 l1223 1C96  
                               l1207 2BF0                                 l1056 24B2  
                               l1224 1CA2                                 l1245 2E5C  
                               l1237 26CE                                 l1190 1F6C  
                               l1191 1F58                                 l1239 26C2  
                               l1192 20E2                                 l1185 36F6  
                               l4011 1EAA                                 l4003 1E34  
                               l4021 1EFA                                 l4005 1E44  
                               l4031 210E                                 l4121 244C  
                               l4033 2134                                 l4115 2430  
                               l4051 2198                                 l4203 33E0  
                               l4133 24A0                                 l4125 2462  
                               l4061 21DC                                 l4037 2148  
                               l4221 260E                                 l4127 2474  
                               l4119 2444                                 l4055 21B8  
                               l4143 2DF0                                 l4129 2482  
                               l4081 2AF0                                 l4065 21FC  
                               l4161 2290                                 l4225 2622  
                               l4305 1B38                                 l4323 1360  
                               l4059 21D4                                 l4261 29F0  
                               l4077 2AAE                                 l4069 2218  
                               l4165 22A4                                 l4237 2816  
                               l4229 2640                                 ?_cos 00AE  
                               l4263 29FE                                 l4255 29D2  
                               l4087 2B34                                 l4159 226A  
                               l4239 28A0                                 l4511 2DBE  
                               l4281 2A60                                 l4273 2A3A  
                               l4265 2A08                                 l4249 29BA  
                               l4361 316C                                 l4097 23AC  
                               l4185 2306                                 l4531 1FD6  
                               l4195 235A                                 l4355 2BA4  
                               l4507 2D6E                                 l4277 2A4A  
                               l4381 1708                                 l3901 24CE  
                               l4293 1A38                                 l3913 2548  
                               l3905 24E4                                 l4545 20B8  
                               l4801 0F5A                                 l3923 25A6  
                               l3915 257A                                 l3907 24F4  
                               l3917 258A                                 l3909 2526  
                               l4821 10EA                                 l4583 2964  
                               l4575 28EC                                 l4831 11C0  
                               l4807 0FB8                                 l3929 25C4  
                               l4825 1104                                 l4841 128E  
                               l4817 1020                                 l4579 2956  
                               l3963 1D1A                                 l3947 2CC8  
                               l3949 2CDA                                 l4837 1238  
                               l3991 1DD8                                 l3975 1D66  
                               l4783 0EE4                                 l3993 1DE8  
                               l3985 1DA8                                 l3969 1D54  
                               l4849 12CE                                 l4785 0EF0  
                               l3995 1DF8                                 l4795 0F36  
                               l4779 0ED6                                 l3997 1E04  
                               l4797 0F40                                 ?_tan 00B4  
                               ?_sin 00A1                                 STR_1 038F  
                               STR_2 031C                                 STR_3 0377  
                               STR_4 03CB                                 STR_5 03A7  
                               STR_6 0347                                 STR_7 035F  
                               STR_8 03BB                                 STR_9 03D3  
                               u4000 31CE                                 u4007 31C4  
                               u3311 1CBA                                 u3321 1CD8  
                               u4300 12CC                                 u4310 133A  
                               u3521 20FA                                 u3611 2398  
                               u3700 2E22                                 u3541 2124  
                               u3630 23D2                                 u3711 2256  
                               u4407 0D6C                                 u3800 2632  
                               u4417 0D7C                                 u3635 23C8  
                               u3731 2280                                 u4507 0E0C  
                               u4427 0D8C                                 u3708 2E26  
                               u4517 0E1C                                 u4437 0D9C  
                               u3910 1B30                                 u4607 0EAC  
                               u4527 0E2C                                 u4447 0DAC  
                               u3920 1B32                                 u4617 0EBC  
                               u4537 0E3C                                 u4457 0DBC  
                               u4627 0ECC                                 u4547 0E4C  
                               u4467 0DCC                                 u4557 0E5C  
                               u4477 0DDC                                 u4567 0E6C  
                               u4487 0DEC                                 u4577 0E7C  
                               u4497 0DFC                                 u4587 0E8C  
                               u4597 0E9C                                 u3990 318C  
                               u3997 3182                                 _TMR1 000FCE  
                     ??_get_distance 00B3                                 _main 0D1E  
                       ___ftpack@arg 0060                                 cos@f 00AE  
                       ___ftpack@exp 0063                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 indf0 000FEF  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 _sqrt 1F22  
                               tan@x 00B4                                 pclat 000FFA  
                               sin@f 00A1                                 sin@y 00A4  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00A8                        __CFG_IESO$OFF 000000  
                   ?_obtention_angle 00A1                   _triangulation$3242 01C2  
                 _triangulation$3243 01D4                   _triangulation$3244 01DA  
                 _triangulation$3245 01C5                   _triangulation$3246 01B6  
                      __CFG_MCLRE$ON 000000                         ___ftmul@cntr 0075  
                       ___param_bank 000010                         ___ftmul@sign 0076  
                __end_of_ConfigPorts 2EEC              ??i2_interruption_timer0 0015  
            ??i2_interruption_timer1 0015              ??i2_interruption_timer2 0015  
                       main@ancien_x 00D3                         main@ancien_y 00D6  
                              ??_Cot 00C0                      ?i2_interrupt_RX 0001  
                    ?i2_interrupt_TX 0001                         ___fttol@exp1 006E  
                              ??_cos 00B1                         ___fttol@lval 006A  
                              ??_tan 00B7                                ??_sin 00A4  
              ??_init_uart_reception 0060              __end_of_ConfigInterrupt 2F74  
                       main@distance 0109                        get_distance@x 00AD  
                      get_distance@y 00B0                                ?_main 01EF  
                    __end_of___awdiv 2A6C                      __end_of___ftadd 1F22  
                              STR_10 038D                      __end_of___ftdiv 2382  
                    __end_of___ftneg 36CC                                ?_sqrt 0094  
                    __end_of___ftmul 2240                      ___awdiv@divisor 0068  
                    __end_of___ftsub 340C                      __end_of___fttol 24B4  
                              _LATA0 007C48                                _LATA1 007C49  
                              _LATB0 007C50                                _LATA2 007C4A  
                              _LATB1 007C51                                _LATA3 007C4B  
                              _LATC0 007C58                                _LATB2 007C52  
                              _LATA4 007C4C                                _LATC1 007C59  
                              _LATB3 007C53                                _LATA5 007C4D  
                              _LATD0 007C60                                _LATC2 007C5A  
                              _LATB4 007C54                                _LATA6 007C4E  
                              _LATD1 007C61                                _LATC3 007C5B  
                              _LATB5 007C55                                _LATA7 007C4F  
                              _LATE0 007C68                                _LATD2 007C62  
                              _LATC4 007C5C                                _LATB6 007C56  
                              _LATE1 007C69                                _LATD3 007C63  
                              _LATC5 007C5D                                _LATB7 007C57  
                              _LATE2 007C6A                                _LATD4 007C64  
                              _LATC6 007C5E                                _PDC0H 000F78  
                              _LATD5 007C65                                _LATC7 007C5F  
                              _LATD6 007C66                                _PDC1H 000F76  
                              _LATD7 007C67                                _PDC2H 000F74  
                              _PDC0L 000F79                                _PDC3H 000F72  
                              _PDC1L 000F77                                _PDC2L 000F75  
                              _PDC3L 000F73                                i1l411 3744  
                              i1l422 35EE                                i1l370 2FB6  
                              i1l372 2FC6                                i1l364 2F86  
                              i1l374 2FD6                                i1l366 2F96  
                              i1l376 2FE6                                i1l368 2FA6  
                              i1l385 3528                                i2l411 3768  
                              i1l379 2FF6                                i1l388 352C  
                              i2l422 362A                                i2l370 303A  
                              i2l372 304A                                i2l364 300A  
                              i2l374 305A                                i2l366 301A  
                              i2l376 306A                                i2l368 302A  
                              i2l385 356E                                i2l379 307A  
                              i2l388 3572                      ___awdiv@counter 006A  
    __end_of_conversion_degre_radian 33BC                                _RCREG 000FAE  
           __end_of_interruption_QEI 3746                                _TMR0L 000FD6  
                              _SPBRG 000FAF                   __end_ofsin@coeff_a 0310  
                 __end_ofsin@coeff_b 031C                                _TXREG 000FAD  
                      _triangulation 03DA                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
            obtention_angle@position 00A1                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                       ?_init_system 0001                       __CFG_EBTRB$OFF 000000  
         ??_subroutine_interruptions 0003                                _floor 25D4  
                              _frexp 2DCE                                _errno 0034  
                      ___ftpack@sign 0064                                main@i 01F4  
                              main@x 00F6                                main@y 017D  
           ??i2_interuption_QEI_sens 0015                      __end_of_low_isr 00A8  
                     __CFG_BOREN$OFF 000000                                sin@x2 00AA  
                              tablat 000FF5                                sqrt@i 00A0  
                              sqrt@q 00A1                                sqrt@x 00A4  
                              sqrt@y 0094                                sqrt@z 009D  
                              status 000FD8                     saturation@valeur 0083  
                    __initialization 3574                       __CFG_HPOL$HIGH 000000  
                       ?_reglage_PID 0001                         __end_of_main 1342  
                       __end_of_sqrt 20E4                       __CFG_OSC$HSPLL 000000  
                     __CFG_LPOL$HIGH 000000                               ??_main 00C3  
                      ___fttol@sign1 0069                               ??_sqrt 0097  
                      __activetblptr 000002                       ?_triangulation 018E  
                 i2interrupt_RX@temp 0015                     __end_of_PutcUART 16C0  
                   __end_of_PutsUART 31D6                               ?_floor 0086  
                             ?_frexp 0060                     __end_of___altoft 2D3E  
                   ___awdiv@dividend 0066                               _ANSEL0 000FB8  
                   __end_of___ftpack 25D4                        ?_init_capteur 0001  
       __size_ofi2_interruption_INT0 004A                               i1l3213 373C  
                             i1l3223 344C                               i1l3225 3452  
                             i1l3237 35E2                       __CFG_WDTEN$OFF 000000  
                             i2l3335 3496                               i2l3337 349C  
                             i2l3345 3760                               i2l3359 361E  
                   __end_of___lwtoft 36F8                       __CFG_WINEN$OFF 000000  
                             _TMR0ON 007EAF                               _TMR1ON 007E68  
                             _PTPERH 000F7A                               _PTPERL 000F7B  
                        _ConfigPorts 2E5E                        ?_init_timer_0 0001  
                      ?_init_timer_1 0001                               _IntToC 16C0  
         __end_of_init_uart_logiciel 37F8                       __CFG_SSPMX$RC7 000000  
                   __end_of_high_isr 3242                               ___ftge 2A6C  
                             ___wmul 3664                            ??___awdiv 006A  
                          ??___ftadd 0080                   i2_interruption_QEI 3746  
                          ??___ftdiv 0098                            ??___ftneg 007A  
               __size_of_config_uart 001C                            ??___ftmul 006E  
                          ??___ftsub 0094                            ??___fttol 0064  
                         _PutIntUART 376A                               clear_0 357A  
                             clear_1 3586                               clear_2 3592  
                   ___awdiv@quotient 006C                     ?_ConfigInterrupt 0001  
               __end_of_get_distance 27CC                               floor@i 0089  
                             floor@x 0086                ___ftmul@f3_as_product 0072  
                ?i2_interruption_QEI 0001                               sin@sgn 00AD  
                       __mediumconst 0000                            ??_low_isr 0004  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                               sqrt@og 009A  
                     ??_init_capteur 0060      __size_ofi2_interuption_QEI_sens 0004  
                 _affichage_position 30F4                           __accesstop 0060  
            __end_of__initialization 35AA                           ___altoft@c 006F  
                         ___ftadd@f1 007A                           ___ftadd@f2 007D  
                    __CFG_FLTAMX$RC1 000000                 ??i2_interruption_QEI 0015  
                         ___ftge@ff1 007A                           ___ftge@ff2 007D  
                     ??_init_timer_0 0060                       ??_init_timer_1 0060  
                       eval_poly@res 008F                        ___rparam_used 000001  
                         ___ftdiv@f1 0092                           ___ftdiv@f2 0095  
                         ___ftdiv@f3 009C                           ___ftneg@f1 0077  
                  saturation@maximum 0086                           ___ftmul@f1 0068  
                         ___ftmul@f2 006B                  ?_affichage_position 0086  
                         ___ftsub@f1 008E                           ___ftsub@f2 0091  
                         ___fttol@f1 0060                       __pcstackCOMRAM 0001  
                      ?_interrupt_RX 0001                        ?_interrupt_TX 0001  
                       __pidataBANK0 3820                        __end_of_floor 26D0  
                      __end_of_frexp 2E5E        __size_of_interuption_QEI_sens 0004  
                affichage_position@x 0086                  affichage_position@y 0089  
                    ??_triangulation 00C3                           ___lwtoft@c 0068  
               ??_affichage_position 008C     __end_of_subroutine_interruptions 2FF8  
        __end_of_interruption_timer0 3800          __end_of_interruption_timer1 352E  
        __end_of_interruption_timer2 3810                              ??_floor 0089  
                            ??_frexp 0065                           __pbssBANK0 00C4  
                         __pbssBANK1 0100                 __size_of_init_system 002A  
                 __size_of_eval_poly 00EE                     ??i2_interrupt_RX 0015  
                   ??i2_interrupt_TX 0015                              ?_IntToC 006E  
       conversion_degre_radian@angle 00A1                       ??_interrupt_RX 0001  
                     ??_interrupt_TX 0001                              ?___ftge 007A  
                          ?_PutcUART 006E                              ?___wmul 0060  
                          ?_PutsUART 007E                      __CFG_WDPS$32768 000000  
             i2_interuption_QEI_sens 3814       __size_ofi2_interruption_timer0 0008  
     __size_ofi2_interruption_timer1 0046       __size_ofi2_interruption_timer2 0004  
                        ?_PutIntUART 0083                            ?___altoft 006F  
      __end_ofi2_interruption_timer0 3808        __end_ofi2_interruption_timer1 3574  
      __end_ofi2_interruption_timer2 381C                 __size_of_reglage_PID 0038  
                          ?___ftpack 0060                            ?___lwtoft 0068  
                    __CFG_PWM4MX$RB5 000000                              _MAXCNTH 000F65  
                            _MAXCNTL 000F64                    ?_interruption_QEI 0001  
                         _config_QEI 3310                    PutcUART@type_uart 0075  
                         _config_pwm 34A0                              _POSCNTH 000F67  
                            _POSCNTL 000F66                   ??_interruption_QEI 0001  
                            _VITESSE 00CD                            ?_high_isr 0001  
                            IntToC@i 0072                              IntToC@j 007C  
           ?_conversion_degre_radian 00A1                      __CFG_PWMPIN$OFF 000000  
                       _flag_cpateur 0037                      __CFG_PWRTEN$OFF 000000  
       ??i2_subroutine_interruptions 0017                              __Hparam 0000  
        __end_of_init_uart_reception 37EA                      __size_of_IntToC 0348  
                            __Lparam 0000                    triangulation@c12x 01B9  
                  triangulation@c12y 01BC                    triangulation@c23x 01CE  
                  triangulation@c31x 01A7                    triangulation@c23y 01D1  
                  triangulation@c31y 01AA                           ??_PutcUART 006F  
              __size_of_get_distance 00FC                      __size_of___ftge 00CE  
                  triangulation@invD 01B3                              ___awdiv 299C  
                            ___ftadd 1CA4                              ___ftdiv 2240  
                         ??_PutsUART 0080                              ___ftneg 369C  
                    __size_of___wmul 0038                              ___ftmul 20E4  
                            ___ftsub 33BC                              ___fttol 2382  
                         _envoit_pwm 28BA                 __end_of_init_capteur 2C9C  
                       __psmallconst 0300                           ??___altoft 0073  
                i2_interruption_INT0 3456                      __CFG_STVREN$OFF 000000  
                            __pcinit 3574                           ??___ftpack 0065  
                  __end_of_eval_poly 28BA                              _capteur 00D9  
                            __ramtop 0300             __size_of_obtention_angle 0078  
                            __ptext0 0D1E                              __ptext1 03DA  
                            __ptext2 2D3E                              __ptext3 3242  
                            __ptext4 32AC                              __ptext5 2B3A  
                            __ptext6 1A08                              __ptext7 25D4  
                            __ptext8 2DCE                              __ptext9 2C9C  
                         ??___lwtoft 006B                            _T0CONbits 000FD5  
                PutIntUART@type_uart 0085                            _T1CONbits 000FCD  
                       __size_of_Cot 006A                         __size_of_cos 00B8  
                       __size_of_tan 0064                         __size_of_sin 029C  
               __end_of_init_timer_0 37D6                 __end_of_init_timer_1 37C0  
                get_distance@delta_x 00B9                  get_distance@delta_y 00BC  
                            _low_isr 0018                 fonction_PID@commande 0031  
                         ??_high_isr 0018                       __pintcode_body 31D6  
               end_of_initialization 35AA                 ?i2_interruption_INT0 0001  
                __size_of_PutIntUART 0022                        __Lmediumconst 0000  
                            int_func 31D6                         ?_ConfigPorts 0001  
                       _get_distance 26D0    __size_of_subroutine_interruptions 0084  
                          _RCSTAbits 000FAB            ?_subroutine_interruptions 0001  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE                      _OVERFLOW_CODEUR 0036  
                         _saturation 2D3E                            _PORTBbits 000F81  
                          _PORTCbits 000F82                            _PORTDbits 000F83  
                 _init_uart_logiciel 37EA                          ?_config_QEI 0001  
                  _get_distance$3249 00B6                            _TRISAbits 000F92  
                          _TRISBbits 000F93                            _TRISCbits 000F94  
                        ?_config_pwm 0001                            _TRISDbits 000F95  
                          _TRISEbits 000F96                          _CAP1CONbits 000F63  
               __end_of_interrupt_RX 35F0                 __end_of_interrupt_TX 3814  
                ?_init_uart_logiciel 0001                     envoit_pwm@valeur 0083  
               obtention_angle@angle 00A4                ??i2_interruption_INT0 0015  
                          IntToC@out 0186                          ___ftdiv@exp 009F  
                          _TXSTAbits 000FAC                     __CFG_T1OSCMX$OFF 000000  
                      ??_config_uart 0060                          ___ftmul@exp 0071  
                     __end_of_IntToC 1A08                 ??_init_uart_logiciel 0060  
                        ?_envoit_pwm 0083                       __end_of___ftge 2B3A  
                   __CFG_EXCLKMX$RC3 000000                       __end_of___wmul 369C  
                        _BAUDCONbits 000FAA                    main@premiere_fois 00FF  
                         floor@expon 008C                  start_initialization 3574  
                         eval_poly@d 0089                           eval_poly@n 008B  
                         eval_poly@x 0086                          __end_of_Cot 32AC  
                  ??_obtention_angle 00A4                          __end_of_cos 2BF2  
                        __end_of_tan 3310                          __end_of_sin 1CA4  
           __size_of_ConfigInterrupt 0088         __end_of_interuption_QEI_sens 380C  
                         frexp@value 0060   __end_ofi2_subroutine_interruptions 307C  
         i2_subroutine_interruptions 2FF8          __size_ofi2_interruption_QEI 0024  
                           ??_IntToC 0070                __size_of_init_capteur 00AA  
                __size_of_config_QEI 0058              ?i2_interuption_QEI_sens 0001  
                           ??___ftge 0080                  __size_of_config_pwm 0048  
                           ??___wmul 0064                          ?_saturation 0083  
                        __pdataBANK0 00FF                         ??_PutIntUART 0085  
                  __size_of_PutcUART 037E                __size_of_init_timer_0 0016  
              __size_of_init_timer_1 0018                  __end_of_config_uart 37A8  
                  __size_of_PutsUART 006E                          _DFLTCONbits 000F60  
                triangulation@angle1 0192                  triangulation@angle2 0195  
                triangulation@angle3 0198                    __size_of___altoft 00A2  
                triangulation@cot_12 01DD                  triangulation@cot_23 01E0  
                triangulation@cot_31 01D7                    __size_of___ftpack 0120  
              __end_of_triangulation 0D1E                          __pbssCOMRAM 0026  
                  __size_of___lwtoft 002C                        __pcstackBANK0 0060  
                      __pcstackBANK1 018E          __size_of_affichage_position 0074  
                      ??_init_system 0060                         _init_capteur 2BF2  
                __size_of_envoit_pwm 00E2                    __size_of_high_isr 323A  
                         sin@coeff_a 0301                           sin@coeff_b 0310  
                 __end_of_PutIntUART 378C   i2subroutine_interruptions@priorite 0017  
   subroutine_interruptions@priorite 0003         __size_of_interruption_timer0 0008  
       __size_of_interruption_timer1 0046         __size_of_interruption_timer2 0004  
          __size_of_interruption_QEI 0024       __end_ofi2_interuption_QEI_sens 3818  
               __size_of_ConfigPorts 008E                         _init_timer_0 37C0  
                       _init_timer_1 37A8                        ??_reglage_PID 0060  
                          __pintcode 0008                             ?___awdiv 0066  
                           ?___ftadd 007A                             ?___ftdiv 0092  
                           ?___ftneg 0077     __size_of_conversion_degre_radian 0054  
                           ?___ftmul 0068                             ?___ftsub 008E  
                           ?___fttol 0060                          __pintcodelo 0018  
                     _uart_reception 0116                i2_interruption_timer0 3800  
              i2_interruption_timer1 352E                i2_interruption_timer2 3818  
              __size_of_interrupt_RX 003C                __size_of_interrupt_TX 0004  
                     asserv@commande 0045                          __smallconst 0300  
                          _eval_poly 27CC                    PutsUART@type_uart 0082  
                           ?_low_isr 0001                     triangulation@k31 01AD  
                   triangulation@x1_ 01E3                     triangulation@x3_ 01E9  
                   triangulation@y1_ 01E6                     triangulation@y3_ 01EC  
               get_valeur_codeur@res 0112                        PutcUART@octet 006E  
                     __size_of_floor 00FC                       __size_of_frexp 0090  
                  _interruption_INT0 340C                  __size_of_saturation 0090  
                __end_of_init_system 3722                       ___wmul@product 0064  
                           _LATCbits 000F8B                   ?_interruption_INT0 0001  
                  ??_ConfigInterrupt 0060                             _IPR1bits 000F9F  
                           _IPR2bits 000FA2                             _PIE1bits 000F9D  
                           _IPR3bits 000FA5                             _PIE2bits 000FA0  
                           _PIE3bits 000FA3                             Cot@angle 00BD  
                           _PIR1bits 000F9E                             _PIR2bits 000FA1  
                           _PIR3bits 000FA4                          _config_uart 378C  
                           _RCONbits 000FD0                  ??_interruption_INT0 0001  
                       _interrupt_RX 35B4                         _interrupt_TX 3810  
                           _Cot$3247 00C0                 _interuption_QEI_sens 3808  
       __size_of_init_uart_reception 0014              __size_ofi2_interrupt_RX 003C  
            __size_ofi2_interrupt_TX 0004                    ___wmul@multiplier 0060  
                __end_of_reglage_PID 3664                             IntToC@nb 006E  
                       ??_config_QEI 0060                           ?_eval_poly 0086  
                       ??_config_pwm 0060            __end_of_interruption_INT0 3456  
                        _INTCON2bits 000FF1                          _INTCON3bits 000FF0  
                          frexp@eptr 0063                             __Hrparam 0000  
                           __Lrparam 0000                   __end_of_config_QEI 3368  
                           _PutcUART 1342                   __end_of_config_pwm 34E8  
                       ??_envoit_pwm 0086                             _PutsUART 3168  
                   __size_of___awdiv 00D0                     interrupt_RX@temp 0001  
                    _obtention_angle 307C                     __size_of___ftadd 027E  
              ?_interuption_QEI_sens 0001                     __size_of___ftdiv 0142  
                   __size_of___ftneg 0030                             ___altoft 2C9C  
                   __size_of___ftmul 015C                     __size_of___ftsub 0050  
                   __size_of___fttol 0132                             _cos$3252 00B1  
                           ___ftpack 24B4               ?i2_interruption_timer0 0001  
             ?i2_interruption_timer1 0001               ?i2_interruption_timer2 0001  
                           ___lwtoft 36CC          __end_ofi2_interruption_INT0 34A0  
                           _tan$3250 00B7                             _tan$3251 00BA  
                   __size_of_low_isr 0090                             __ptext10 27CC  
                           __ptext11 3368                             __ptext20 37C0  
                           __ptext12 307C                             __ptext21 2BF2  
                           __ptext13 36CC                             __ptext30 1CA4  
                           __ptext22 378C                             __ptext14 2240  
                           __ptext31 28BA                             __ptext23 34A0  
                           __ptext15 36F8                             __ptext40 1342  
                           __ptext32 369C                             __ptext24 3310  
                           __ptext16 362C                             __ptext41 16C0  
                           __ptext33 20E4                             __ptext25 2E5E  
                           __ptext17 37D6                             __ptext50 3722  
                           __ptext42 3664                             __ptext34 24B4  
                           __ptext26 2EEC                             __ptext18 37EA  
                           __ptext51 340C                             __ptext43 299C  
                           __ptext35 2A6C                             __ptext27 26D0  
                           __ptext19 37A8                             __ptext60 3746  
                           __ptext52 3810                             __ptext36 30F4  
                           __ptext28 1F22                             __ptext61 3456  
                           __ptext53 35B4                             __ptext45 2F74  
                           __ptext37 2382                             __ptext29 33BC  
                           __ptext62 381C                             __ptext46 3808  
                           __ptext38 376A                             __ptext63 35F0  
                           __ptext55 2FF8                             __ptext47 380C  
                           __ptext39 3168                             __ptext56 3814  
                           __ptext48 34E8                             __ptext57 3818  
                           __ptext49 37F8                          _init_system 36F8  
                           __ptext58 352E                             __ptext59 3800  
                           _sin$3253 00A7                         PutIntUART@nb 0083  
                      _uart_logiciel 0038                             _high_isr 0008  
                 __end_of_envoit_pwm 299C                      triangulation@x1 019B  
                    triangulation@x2 01C8                      triangulation@x3 01A1  
                    triangulation@y1 019E                      triangulation@y2 01CB  
                    triangulation@y3 01A4                        __size_of_main 0624  
                      __size_of_sqrt 01C2                 get_distance@ancien_x 00A7  
               get_distance@ancien_y 00AA                     _interruption_QEI 3722  
        ?i2_subroutine_interruptions 0001             _subroutine_interruptions 2F74  
               get_distance@distance 00B3              _conversion_degre_radian 3368  
                        _reglage_PID 362C          __size_of_init_uart_logiciel 000E  
                           _position 0026                         ??_saturation 0089  
                           main@argc 01EF                             main@argv 01F1  
                _interruption_timer0 37F8                  _interruption_timer1 34E8  
                _interruption_timer2 380C                           _INTCONbits 000FF2  
                        ??_eval_poly 008D                           _QEICONbits 000FB6  
         __size_of_interruption_INT0 004A                             intlevel1 0000  
                           intlevel2 0000           __end_ofi2_interruption_QEI 376A  
                 __end_of_saturation 2DCE                 ?_interruption_timer0 0001  
               ?_interruption_timer1 0001                 ?_interruption_timer2 0001  
                     triangulation@D 01B0                       triangulation@K 01BF  
                     triangulation@x 018E                       triangulation@y 0190  
            __end_of_obtention_angle 30F4                          _PWMCON0bits 000F6F  
                        _PWMCON1bits 000F6E               ??_interuption_QEI_sens 0001  
               envoit_pwm@abs_valeur 0086                           _PTCON0bits 000F7F  
                     PutsUART@chaine 007E                           _PTCON1bits 000F7E  
                     i2_interrupt_RX 35F0                       i2_interrupt_TX 381C  
         __end_of_affichage_position 3168                      _ConfigInterrupt 2EEC  
                _init_uart_reception 37D6                        ??_ConfigPorts 0060  
                      ?_get_distance 00A7                ??_interruption_timer0 0001  
              ??_interruption_timer1 0001                ??_interruption_timer2 0001  
          ??_conversion_degre_radian 00A4               __size_of_triangulation 0944  
                       ?_config_uart 0001  
