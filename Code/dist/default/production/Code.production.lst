

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon May 04 22:25:07 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    81  0000                     
    82                           	psect	idataBANK0
    83  00362C                     __pidataBANK0:
    84                           	opt stack 0
    85                           
    86                           ;initializer for main@premiere_fois
    87  00362C  01                 	db	1
    88                           
    89                           	psect	smallconst
    90  000300                     __psmallconst:
    91                           	opt stack 0
    92  000300  00                 	db	0
    93  000301                     sin@coeff_a:
    94                           	opt stack 0
    95  000301  F4                 	db	244
    96  000302  4A                 	db	74
    97  000303  48                 	db	72
    98  000304  95                 	db	149
    99  000305  95                 	db	149
   100  000306  C7                 	db	199
   101  000307  C1                 	db	193
   102  000308  DC                 	db	220
   103  000309  45                 	db	69
   104  00030A  DC                 	db	220
   105  00030B  6D                 	db	109
   106  00030C  C3                 	db	195
   107  00030D  B3                 	db	179
   108  00030E  33                 	db	51
   109  00030F  40                 	db	64
   110  000310                     __end_ofsin@coeff_a:
   111                           	opt stack 0
   112  000310                     sin@coeff_b:
   113                           	opt stack 0
   114  000310  34                 	db	52
   115  000311  01                 	db	1
   116  000312  48                 	db	72
   117  000313  9D                 	db	157
   118  000314  B0                 	db	176
   119  000315  45                 	db	69
   120  000316  00                 	db	0
   121  000317  DA                 	db	218
   122  000318  42                 	db	66
   123  000319  00                 	db	0
   124  00031A  80                 	db	128
   125  00031B  3F                 	db	63
   126  00031C                     __end_ofsin@coeff_b:
   127                           	opt stack 0
   128  0000                     _TMR0	set	4054
   129  0000                     _TMR1	set	4046
   130  0000                     _ANSEL0	set	4024
   131  0000                     _BAUDCONbits	set	4010
   132  0000                     _CAP1CONbits	set	3939
   133  0000                     _DFLTCONbits	set	3936
   134  0000                     _INTCON2bits	set	4081
   135  0000                     _INTCON3bits	set	4080
   136  0000                     _INTCONbits	set	4082
   137  0000                     _IPR1bits	set	3999
   138  0000                     _IPR2bits	set	4002
   139  0000                     _IPR3bits	set	4005
   140  0000                     _LATCbits	set	3979
   141  0000                     _MAXCNTH	set	3941
   142  0000                     _MAXCNTL	set	3940
   143  0000                     _PDC0H	set	3960
   144  0000                     _PDC0L	set	3961
   145  0000                     _PDC1H	set	3958
   146  0000                     _PDC1L	set	3959
   147  0000                     _PDC2H	set	3956
   148  0000                     _PDC2L	set	3957
   149  0000                     _PDC3H	set	3954
   150  0000                     _PDC3L	set	3955
   151  0000                     _PIE1bits	set	3997
   152  0000                     _PIE2bits	set	4000
   153  0000                     _PIE3bits	set	4003
   154  0000                     _PIR1bits	set	3998
   155  0000                     _PIR2bits	set	4001
   156  0000                     _PIR3bits	set	4004
   157  0000                     _PORTBbits	set	3969
   158  0000                     _PORTCbits	set	3970
   159  0000                     _PORTDbits	set	3971
   160  0000                     _POSCNTH	set	3943
   161  0000                     _POSCNTL	set	3942
   162  0000                     _PTCON0bits	set	3967
   163  0000                     _PTCON1bits	set	3966
   164  0000                     _PTPERH	set	3962
   165  0000                     _PTPERL	set	3963
   166  0000                     _PWMCON0bits	set	3951
   167  0000                     _PWMCON1bits	set	3950
   168  0000                     _QEICONbits	set	4022
   169  0000                     _RCONbits	set	4048
   170  0000                     _RCREG	set	4014
   171  0000                     _RCSTAbits	set	4011
   172  0000                     _SPBRG	set	4015
   173  0000                     _T0CONbits	set	4053
   174  0000                     _T1CONbits	set	4045
   175  0000                     _TRISAbits	set	3986
   176  0000                     _TRISBbits	set	3987
   177  0000                     _TRISCbits	set	3988
   178  0000                     _TRISDbits	set	3989
   179  0000                     _TRISEbits	set	3990
   180  0000                     _TXREG	set	4013
   181  0000                     _TXSTAbits	set	4012
   182  0000                     _LATA0	set	31816
   183  0000                     _LATA1	set	31817
   184  0000                     _LATA2	set	31818
   185  0000                     _LATA3	set	31819
   186  0000                     _LATA4	set	31820
   187  0000                     _LATA5	set	31821
   188  0000                     _LATA6	set	31822
   189  0000                     _LATA7	set	31823
   190  0000                     _LATB0	set	31824
   191  0000                     _LATB1	set	31825
   192  0000                     _LATB2	set	31826
   193  0000                     _LATB3	set	31827
   194  0000                     _LATB4	set	31828
   195  0000                     _LATB5	set	31829
   196  0000                     _LATB6	set	31830
   197  0000                     _LATB7	set	31831
   198  0000                     _LATC0	set	31832
   199  0000                     _LATC1	set	31833
   200  0000                     _LATC2	set	31834
   201  0000                     _LATC3	set	31835
   202  0000                     _LATC4	set	31836
   203  0000                     _LATC5	set	31837
   204  0000                     _LATC6	set	31838
   205  0000                     _LATC7	set	31839
   206  0000                     _LATD0	set	31840
   207  0000                     _LATD1	set	31841
   208  0000                     _LATD2	set	31842
   209  0000                     _LATD3	set	31843
   210  0000                     _LATD4	set	31844
   211  0000                     _LATD5	set	31845
   212  0000                     _LATD6	set	31846
   213  0000                     _LATD7	set	31847
   214  0000                     _LATE0	set	31848
   215  0000                     _LATE1	set	31849
   216  0000                     _LATE2	set	31850
   217  0000                     _TMR0ON	set	32431
   218  0000                     _TMR1ON	set	32360
   219  00031C                     STR_2:
   220                           
   221                           ; BSR set to: 1
   222  00031C  0A                 	db	10
   223  00031D  0A                 	db	10
   224  00031E  50                 	db	80	;'P'
   225  00031F  72                 	db	114	;'r'
   226  000320  6F                 	db	111	;'o'
   227  000321  62                 	db	98	;'b'
   228  000322  6C                 	db	108	;'l'
   229  000323  65                 	db	101	;'e'
   230  000324  6D                 	db	109	;'m'
   231  000325  65                 	db	101	;'e'
   232  000326  20                 	db	32
   233  000327  64                 	db	100	;'d'
   234  000328  65                 	db	101	;'e'
   235  000329  20                 	db	32
   236  00032A  64                 	db	100	;'d'
   237  00032B  65                 	db	101	;'e'
   238  00032C  74                 	db	116	;'t'
   239  00032D  65                 	db	101	;'e'
   240  00032E  63                 	db	99	;'c'
   241  00032F  74                 	db	116	;'t'
   242  000330  69                 	db	105	;'i'
   243  000331  6F                 	db	111	;'o'
   244  000332  6E                 	db	110	;'n'
   245  000333  20                 	db	32
   246  000334  64                 	db	100	;'d'
   247  000335  65                 	db	101	;'e'
   248  000336  20                 	db	32
   249  000337  62                 	db	98	;'b'
   250  000338  61                 	db	97	;'a'
   251  000339  6C                 	db	108	;'l'
   252  00033A  69                 	db	105	;'i'
   253  00033B  73                 	db	115	;'s'
   254  00033C  65                 	db	101	;'e'
   255  00033D  73                 	db	115	;'s'
   256  00033E  20                 	db	32
   257  00033F  2E                 	db	46
   258  000340  2E                 	db	46
   259  000341  2E                 	db	46
   260  000342  2E                 	db	46
   261  000343  20                 	db	32
   262  000344  3A                 	db	58	;':'
   263  000345  20                 	db	32
   264  000346  00                 	db	0
   265  000347                     STR_3:
   266                           
   267                           ; BSR set to: 1
   268  000347  20                 	db	32
   269  000348  42                 	db	66	;'B'
   270  000349  61                 	db	97	;'a'
   271  00034A  6C                 	db	108	;'l'
   272  00034B  69                 	db	105	;'i'
   273  00034C  73                 	db	115	;'s'
   274  00034D  65                 	db	101	;'e'
   275  00034E  73                 	db	115	;'s'
   276  00034F  20                 	db	32
   277  000350  64                 	db	100	;'d'
   278  000351  65                 	db	101	;'e'
   279  000352  74                 	db	116	;'t'
   280  000353  65                 	db	101	;'e'
   281  000354  63                 	db	99	;'c'
   282  000355  74                 	db	116	;'t'
   283  000356  65                 	db	101	;'e'
   284  000357  65                 	db	101	;'e'
   285  000358  73                 	db	115	;'s'
   286  000359  20                 	db	32
   287  00035A  0A                 	db	10
   288  00035B  0A                 	db	10
   289  00035C  0A                 	db	10
   290  00035D  0D                 	db	13
   291  00035E  00                 	db	0
   292  00035F                     STR_1:
   293                           
   294                           ; BSR set to: 1
   295  00035F  42                 	db	66	;'B'
   296  000360  6F                 	db	111	;'o'
   297  000361  6E                 	db	110	;'n'
   298  000362  6A                 	db	106	;'j'
   299  000363  6F                 	db	111	;'o'
   300  000364  75                 	db	117	;'u'
   301  000365  72                 	db	114	;'r'
   302  000366  20                 	db	32
   303  000367  6C                 	db	108	;'l'
   304  000368  65                 	db	101	;'e'
   305  000369  73                 	db	115	;'s'
   306  00036A  20                 	db	32
   307  00036B  61                 	db	97	;'a'
   308  00036C  6D                 	db	109	;'m'
   309  00036D  69                 	db	105	;'i'
   310  00036E  73                 	db	115	;'s'
   311  00036F  20                 	db	32
   312  000370  21                 	db	33
   313  000371  21                 	db	33
   314  000372  21                 	db	33
   315  000373  20                 	db	32
   316  000374  3D                 	db	61	;'='
   317  000375  29                 	db	41
   318  000376  00                 	db	0
   319  000377                     
   320                           ; BSR set to: 1
   321  000377  20                 	db	32
   322  000378  64                 	db	100	;'d'
   323  000379  61                 	db	97	;'a'
   324  00037A  6E                 	db	110	;'n'
   325  00037B  73                 	db	115	;'s'
   326  00037C  20                 	db	32
   327  00037D  6C                 	db	108	;'l'
   328  00037E  65                 	db	101	;'e'
   329  00037F  20                 	db	32
   330  000380  62                 	db	98	;'b'
   331  000381  75                 	db	117	;'u'
   332  000382  66                 	db	102	;'f'
   333  000383  66                 	db	102	;'f'
   334  000384  65                 	db	101	;'e'
   335  000385  72                 	db	114	;'r'
   336  000386  20                 	db	32
   337  000387  0A                 	db	10
   338  000388  0A                 	db	10
   339  000389  0D                 	db	13
   340  00038A  00                 	db	0
   341  00038B                     
   342                           ; BSR set to: 1
   343  00038B  49                 	db	73	;'I'
   344  00038C  4C                 	db	76	;'L'
   345  00038D  20                 	db	32
   346  00038E  79                 	db	121	;'y'
   347  00038F  20                 	db	32
   348  000390  61                 	db	97	;'a'
   349  000391  20                 	db	32
   350  000392  00                 	db	0
   351  000393                     STR_11:
   352                           
   353                           ; BSR set to: 1
   354  000393  2D                 	db	45
   355  000394  20                 	db	32
   356  000395  00                 	db	0
   357  000396                     STR_10:
   358                           
   359                           ; BSR set to: 1
   360  000396  4F                 	db	79	;'O'
   361  000397  20                 	db	32
   362  000398  00                 	db	0
   363  000399                     STR_6:
   364                           
   365                           ; BSR set to: 1
   366  000399  58                 	db	88	;'X'
   367  00039A  20                 	db	32
   368  00039B  00                 	db	0
   369  00039C                     STR_9:
   370                           
   371                           ; BSR set to: 1
   372  00039C  20                 	db	32
   373  00039D  7C                 	db	124
   374  00039E  00                 	db	0
   375  00039F                     STR_13:
   376                           
   377                           ; BSR set to: 1
   378  00039F  58                 	db	88	;'X'
   379  0003A0  00                 	db	0
   380  0003A1                     STR_7:
   381                           
   382                           ; BSR set to: 1
   383  0003A1  7E                 	db	126
   384  0003A2  00                 	db	0
   385  0000                     
   386                           ; #config settings
   387  0003A3  00                 	db	0	; dummy byte at the end
   388  0000                     
   389                           	psect	cinit
   390  003378                     __pcinit:
   391                           	opt stack 0
   392  003378                     start_initialization:
   393                           	opt stack 0
   394  003378                     __initialization:
   395                           	opt stack 0
   396                           
   397                           ; Clear objects allocated to BANK1 (146 bytes)
   398  003378  EE01  F000         	lfsr	0,__pbssBANK1
   399  00337C  0E92               	movlw	146
   400  00337E                     clear_0:
   401  00337E  6AEE               	clrf	postinc0,c
   402  003380  06E8               	decf	wreg,f,c
   403  003382  E1FD               	bnz	clear_0
   404                           
   405                           ; Clear objects allocated to BANK0 (13 bytes)
   406  003384  EE00  F0F2         	lfsr	0,__pbssBANK0
   407  003388  0E0D               	movlw	13
   408  00338A                     clear_1:
   409  00338A  6AEE               	clrf	postinc0,c
   410  00338C  06E8               	decf	wreg,f,c
   411  00338E  E1FD               	bnz	clear_1
   412                           
   413                           ; Clear objects allocated to COMRAM (23 bytes)
   414  003390  EE00  F026         	lfsr	0,__pbssCOMRAM
   415  003394  0E17               	movlw	23
   416  003396                     clear_2:
   417  003396  6AEE               	clrf	postinc0,c
   418  003398  06E8               	decf	wreg,f,c
   419  00339A  E1FD               	bnz	clear_2
   420                           
   421                           ; Initialize objects allocated to BANK0 (1 bytes)
   422                           ; load TBLPTR registers with __pidataBANK0
   423  00339C  0E2C               	movlw	low __pidataBANK0
   424  00339E  6EF6               	movwf	tblptrl,c
   425  0033A0  0E36               	movlw	high __pidataBANK0
   426  0033A2  6EF7               	movwf	tblptrh,c
   427  0033A4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   428  0033A6  6EF8               	movwf	tblptru,c
   429  0033A8  0009               	tblrd		*+	;fetch initializer
   430  0033AA  CFF5 F0FF          	movff	tablat,__pdataBANK0
   431  0033AE                     end_of_initialization:
   432                           	opt stack 0
   433  0033AE                     __end_of__initialization:
   434                           	opt stack 0
   435  0033AE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   436  0033B0  6EF8               	movwf	tblptru,c
   437  0033B2  0100               	movlb	0
   438  0033B4  EF39  F005         	goto	_main	;jump to C main() function
   439                           tblptru	equ	0xFF8
   440                           tblptrh	equ	0xFF7
   441                           tblptrl	equ	0xFF6
   442                           tablat	equ	0xFF5
   443                           postinc0	equ	0xFEE
   444                           wreg	equ	0xFE8
   445                           
   446                           	psect	bssCOMRAM
   447  000026                     __pbssCOMRAM:
   448                           	opt stack 0
   449  000026                     _OVERFLOW_CODEUR:
   450                           	opt stack 0
   451  000026                     	ds	1
   452  000027                     _flag_cpateur:
   453                           	opt stack 0
   454  000027                     	ds	1
   455  000028                     _uart_logiciel:
   456                           	opt stack 0
   457  000028                     	ds	13
   458  000035                     IntToC@out:
   459                           	opt stack 0
   460  000035                     	ds	8
   461                           tblptru	equ	0xFF8
   462                           tblptrh	equ	0xFF7
   463                           tblptrl	equ	0xFF6
   464                           tablat	equ	0xFF5
   465                           postinc0	equ	0xFEE
   466                           wreg	equ	0xFE8
   467                           
   468                           	psect	bssBANK0
   469  0000F2                     __pbssBANK0:
   470                           	opt stack 0
   471  0000F2                     main@distance:
   472                           	opt stack 0
   473  0000F2                     	ds	9
   474  0000FB                     _errno:
   475                           	opt stack 0
   476  0000FB                     	ds	2
   477  0000FD                     affichage_position@compteur:
   478                           	opt stack 0
   479  0000FD                     	ds	2
   480                           tblptru	equ	0xFF8
   481                           tblptrh	equ	0xFF7
   482                           tblptrl	equ	0xFF6
   483                           tablat	equ	0xFF5
   484                           postinc0	equ	0xFEE
   485                           wreg	equ	0xFE8
   486                           
   487                           	psect	dataBANK0
   488  0000FF                     __pdataBANK0:
   489                           	opt stack 0
   490  0000FF                     main@premiere_fois:
   491                           	opt stack 0
   492  0000FF                     	ds	1
   493                           tblptru	equ	0xFF8
   494                           tblptrh	equ	0xFF7
   495                           tblptrl	equ	0xFF6
   496                           tablat	equ	0xFF5
   497                           postinc0	equ	0xFEE
   498                           wreg	equ	0xFE8
   499                           
   500                           	psect	bssBANK1
   501  000100                     __pbssBANK1:
   502                           	opt stack 0
   503  000100                     _uart_reception:
   504                           	opt stack 0
   505  000100                     	ds	103
   506  000167                     _capteur:
   507                           	opt stack 0
   508  000167                     	ds	25
   509  000180                     main@c:
   510                           	opt stack 0
   511  000180                     	ds	18
   512                           tblptru	equ	0xFF8
   513                           tblptrh	equ	0xFF7
   514                           tblptrl	equ	0xFF6
   515                           tablat	equ	0xFF5
   516                           postinc0	equ	0xFEE
   517                           wreg	equ	0xFE8
   518                           
   519                           	psect	cstackBANK1
   520  000192                     __pcstackBANK1:
   521                           	opt stack 0
   522  000192                     triangulation@c:
   523                           	opt stack 0
   524  000192                     get_distance@distance:
   525                           	opt stack 0
   526                           
   527                           ; 3 bytes @ 0x0
   528  000192                     	ds	2
   529  000194                     triangulation@angle1:
   530                           	opt stack 0
   531                           
   532                           ; 3 bytes @ 0x2
   533  000194                     	ds	1
   534  000195                     _get_distance$3140:
   535                           	opt stack 0
   536                           
   537                           ; 3 bytes @ 0x3
   538  000195                     	ds	2
   539  000197                     triangulation@angle2:
   540                           	opt stack 0
   541                           
   542                           ; 3 bytes @ 0x5
   543  000197                     	ds	1
   544  000198                     get_distance@delta_x:
   545                           	opt stack 0
   546                           
   547                           ; 3 bytes @ 0x6
   548  000198                     	ds	2
   549  00019A                     triangulation@angle3:
   550                           	opt stack 0
   551                           
   552                           ; 3 bytes @ 0x8
   553  00019A                     	ds	1
   554  00019B                     get_distance@delta_y:
   555                           	opt stack 0
   556                           
   557                           ; 3 bytes @ 0x9
   558  00019B                     	ds	2
   559  00019D                     _triangulation$3137:
   560                           	opt stack 0
   561                           
   562                           ; 3 bytes @ 0xB
   563  00019D                     	ds	3
   564  0001A0                     _triangulation$3138:
   565                           	opt stack 0
   566                           
   567                           ; 3 bytes @ 0xE
   568  0001A0                     	ds	3
   569  0001A3                     _triangulation$3135:
   570                           	opt stack 0
   571                           
   572                           ; 3 bytes @ 0x11
   573  0001A3                     	ds	3
   574  0001A6                     _triangulation$3136:
   575                           	opt stack 0
   576                           
   577                           ; 3 bytes @ 0x14
   578  0001A6                     	ds	3
   579  0001A9                     triangulation@t:
   580                           	opt stack 0
   581                           
   582                           ; 33 bytes @ 0x17
   583  0001A9                     	ds	33
   584                           tblptru	equ	0xFF8
   585                           tblptrh	equ	0xFF7
   586                           tblptrl	equ	0xFF6
   587                           tablat	equ	0xFF5
   588                           postinc0	equ	0xFEE
   589                           wreg	equ	0xFE8
   590                           
   591                           	psect	cstackBANK0
   592  000060                     __pcstackBANK0:
   593                           	opt stack 0
   594  000060                     ?___wmul:
   595                           	opt stack 0
   596  000060                     ?___ftpack:
   597                           	opt stack 0
   598  000060                     ___wmul@multiplier:
   599                           	opt stack 0
   600  000060                     ___ftpack@arg:
   601                           	opt stack 0
   602  000060                     frexp@value:
   603                           	opt stack 0
   604                           
   605                           ; 3 bytes @ 0x0
   606  000060                     	ds	2
   607  000062                     ___wmul@multiplicand:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x2
   611  000062                     	ds	1
   612  000063                     ___ftpack@exp:
   613                           	opt stack 0
   614  000063                     frexp@eptr:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x3
   618  000063                     	ds	1
   619  000064                     ___ftpack@sign:
   620                           	opt stack 0
   621  000064                     ___wmul@product:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x4
   625  000064                     	ds	1
   626  000065                     ??___ftpack:
   627  000065                     ??_frexp:
   628                           
   629                           ; 0 bytes @ 0x5
   630  000065                     	ds	1
   631  000066                     ?___awdiv:
   632                           	opt stack 0
   633  000066                     ___awdiv@dividend:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x6
   637  000066                     	ds	2
   638  000068                     ?___ftmul:
   639                           	opt stack 0
   640  000068                     ?___lwtoft:
   641                           	opt stack 0
   642  000068                     ___awdiv@divisor:
   643                           	opt stack 0
   644  000068                     ___lwtoft@c:
   645                           	opt stack 0
   646  000068                     ___ftmul@f1:
   647                           	opt stack 0
   648                           
   649                           ; 3 bytes @ 0x8
   650  000068                     	ds	2
   651  00006A                     ___awdiv@counter:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0xA
   655  00006A                     	ds	1
   656  00006B                     ___awdiv@sign:
   657                           	opt stack 0
   658  00006B                     ___ftmul@f2:
   659                           	opt stack 0
   660                           
   661                           ; 3 bytes @ 0xB
   662  00006B                     	ds	1
   663  00006C                     ___awdiv@quotient:
   664                           	opt stack 0
   665                           
   666                           ; 2 bytes @ 0xC
   667  00006C                     	ds	2
   668  00006E                     ??___ftmul:
   669  00006E                     ?_IntToC:
   670                           	opt stack 0
   671  00006E                     PutcUART@octet:
   672                           	opt stack 0
   673  00006E                     IntToC@nb:
   674                           	opt stack 0
   675                           
   676                           ; 2 bytes @ 0xE
   677  00006E                     	ds	1
   678  00006F                     ??_PutcUART:
   679                           
   680                           ; 0 bytes @ 0xF
   681  00006F                     	ds	1
   682  000070                     ??_IntToC:
   683                           
   684                           ; 0 bytes @ 0x10
   685  000070                     	ds	1
   686  000071                     ___ftmul@exp:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x11
   690  000071                     	ds	1
   691  000072                     ___ftmul@f3_as_product:
   692                           	opt stack 0
   693  000072                     IntToC@i:
   694                           	opt stack 0
   695                           
   696                           ; 10 bytes @ 0x12
   697  000072                     	ds	3
   698  000075                     PutcUART@type_uart:
   699                           	opt stack 0
   700  000075                     ___ftmul@cntr:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x15
   704  000075                     	ds	1
   705  000076                     ___ftmul@sign:
   706                           	opt stack 0
   707                           
   708                           ; 1 bytes @ 0x16
   709  000076                     	ds	1
   710  000077                     ?___ftneg:
   711                           	opt stack 0
   712  000077                     ___ftneg@f1:
   713                           	opt stack 0
   714                           
   715                           ; 3 bytes @ 0x17
   716  000077                     	ds	3
   717  00007A                     ?___ftadd:
   718                           	opt stack 0
   719  00007A                     ___ftadd@f1:
   720                           	opt stack 0
   721  00007A                     ___ftge@ff1:
   722                           	opt stack 0
   723                           
   724                           ; 3 bytes @ 0x1A
   725  00007A                     	ds	2
   726  00007C                     IntToC@j:
   727                           	opt stack 0
   728                           
   729                           ; 2 bytes @ 0x1C
   730  00007C                     	ds	1
   731  00007D                     ___ftadd@f2:
   732                           	opt stack 0
   733  00007D                     ___ftge@ff2:
   734                           	opt stack 0
   735                           
   736                           ; 3 bytes @ 0x1D
   737  00007D                     	ds	1
   738  00007E                     PutsUART@chaine:
   739                           	opt stack 0
   740                           
   741                           ; 2 bytes @ 0x1E
   742  00007E                     	ds	2
   743  000080                     ??_PutsUART:
   744  000080                     ??___ftadd:
   745  000080                     ??___ftge:
   746                           
   747                           ; 0 bytes @ 0x20
   748  000080                     	ds	2
   749  000082                     PutsUART@type_uart:
   750                           	opt stack 0
   751                           
   752                           ; 1 bytes @ 0x22
   753  000082                     	ds	1
   754  000083                     ?_saturation:
   755                           	opt stack 0
   756  000083                     ___ftadd@sign:
   757                           	opt stack 0
   758  000083                     saturation@valeur:
   759                           	opt stack 0
   760                           
   761                           ; 3 bytes @ 0x23
   762  000083                     	ds	1
   763  000084                     ___ftadd@exp2:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x24
   767  000084                     	ds	1
   768  000085                     ___ftadd@exp1:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x25
   772  000085                     	ds	1
   773  000086                     ?_eval_poly:
   774                           	opt stack 0
   775  000086                     saturation@maximum:
   776                           	opt stack 0
   777  000086                     eval_poly@x:
   778                           	opt stack 0
   779                           
   780                           ; 3 bytes @ 0x26
   781  000086                     	ds	3
   782  000089                     eval_poly@d:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x29
   786  000089                     	ds	2
   787  00008B                     eval_poly@n:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x2B
   791  00008B                     	ds	2
   792  00008D                     ??_eval_poly:
   793                           
   794                           ; 0 bytes @ 0x2D
   795  00008D                     	ds	2
   796  00008F                     eval_poly@res:
   797                           	opt stack 0
   798                           
   799                           ; 3 bytes @ 0x2F
   800  00008F                     	ds	3
   801  000092                     ?___ftdiv:
   802                           	opt stack 0
   803  000092                     ___ftdiv@f1:
   804                           	opt stack 0
   805                           
   806                           ; 3 bytes @ 0x32
   807  000092                     	ds	3
   808  000095                     ___ftdiv@f2:
   809                           	opt stack 0
   810                           
   811                           ; 3 bytes @ 0x35
   812  000095                     	ds	3
   813  000098                     ??___ftdiv:
   814                           
   815                           ; 0 bytes @ 0x38
   816  000098                     	ds	3
   817  00009B                     ___ftdiv@cntr:
   818                           	opt stack 0
   819                           
   820                           ; 1 bytes @ 0x3B
   821  00009B                     	ds	1
   822  00009C                     ___ftdiv@f3:
   823                           	opt stack 0
   824                           
   825                           ; 3 bytes @ 0x3C
   826  00009C                     	ds	3
   827  00009F                     ___ftdiv@exp:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x3F
   831  00009F                     	ds	1
   832  0000A0                     ___ftdiv@sign:
   833                           	opt stack 0
   834                           
   835                           ; 1 bytes @ 0x40
   836  0000A0                     	ds	1
   837  0000A1                     ?_obtention_angle:
   838                           	opt stack 0
   839  0000A1                     ?_conversion_degre_radian:
   840                           	opt stack 0
   841  0000A1                     ?___fttol:
   842                           	opt stack 0
   843  0000A1                     obtention_angle@position:
   844                           	opt stack 0
   845  0000A1                     conversion_degre_radian@angle:
   846                           	opt stack 0
   847  0000A1                     ___fttol@f1:
   848                           	opt stack 0
   849                           
   850                           ; 3 bytes @ 0x41
   851  0000A1                     	ds	3
   852  0000A4                     obtention_angle@angle:
   853                           	opt stack 0
   854                           
   855                           ; 3 bytes @ 0x44
   856  0000A4                     	ds	1
   857  0000A5                     ??___fttol:
   858                           
   859                           ; 0 bytes @ 0x45
   860  0000A5                     	ds	5
   861  0000AA                     ___fttol@sign1:
   862                           	opt stack 0
   863                           
   864                           ; 1 bytes @ 0x4A
   865  0000AA                     	ds	1
   866  0000AB                     ___fttol@lval:
   867                           	opt stack 0
   868                           
   869                           ; 4 bytes @ 0x4B
   870  0000AB                     	ds	4
   871  0000AF                     ___fttol@exp1:
   872                           	opt stack 0
   873                           
   874                           ; 1 bytes @ 0x4F
   875  0000AF                     	ds	1
   876  0000B0                     ?___altoft:
   877                           	opt stack 0
   878  0000B0                     PutIntUART@nb:
   879                           	opt stack 0
   880  0000B0                     envoit_pwm@valeur:
   881                           	opt stack 0
   882  0000B0                     ___altoft@c:
   883                           	opt stack 0
   884                           
   885                           ; 4 bytes @ 0x50
   886  0000B0                     	ds	2
   887  0000B2                     PutIntUART@type_uart:
   888                           	opt stack 0
   889                           
   890                           ; 1 bytes @ 0x52
   891  0000B2                     	ds	1
   892  0000B3                     affichage_position@_x:
   893                           	opt stack 0
   894  0000B3                     envoit_pwm@abs_valeur:
   895                           	opt stack 0
   896                           
   897                           ; 3 bytes @ 0x53
   898  0000B3                     	ds	1
   899  0000B4                     ??___altoft:
   900                           
   901                           ; 0 bytes @ 0x54
   902  0000B4                     	ds	1
   903  0000B5                     affichage_position@_y:
   904                           	opt stack 0
   905                           
   906                           ; 2 bytes @ 0x55
   907  0000B5                     	ds	2
   908  0000B7                     affichage_position@j:
   909                           	opt stack 0
   910                           
   911                           ; 2 bytes @ 0x57
   912  0000B7                     	ds	1
   913  0000B8                     ___altoft@exp:
   914                           	opt stack 0
   915                           
   916                           ; 1 bytes @ 0x58
   917  0000B8                     	ds	1
   918  0000B9                     ___altoft@sign:
   919                           	opt stack 0
   920  0000B9                     affichage_position@i:
   921                           	opt stack 0
   922                           
   923                           ; 2 bytes @ 0x59
   924  0000B9                     	ds	1
   925  0000BA                     ?_floor:
   926                           	opt stack 0
   927  0000BA                     floor@x:
   928                           	opt stack 0
   929                           
   930                           ; 3 bytes @ 0x5A
   931  0000BA                     	ds	3
   932  0000BD                     floor@i:
   933                           	opt stack 0
   934                           
   935                           ; 3 bytes @ 0x5D
   936  0000BD                     	ds	3
   937  0000C0                     floor@expon:
   938                           	opt stack 0
   939                           
   940                           ; 2 bytes @ 0x60
   941  0000C0                     	ds	2
   942  0000C2                     ?___ftsub:
   943                           	opt stack 0
   944  0000C2                     ___ftsub@f1:
   945                           	opt stack 0
   946                           
   947                           ; 3 bytes @ 0x62
   948  0000C2                     	ds	3
   949  0000C5                     ___ftsub@f2:
   950                           	opt stack 0
   951                           
   952                           ; 3 bytes @ 0x65
   953  0000C5                     	ds	3
   954  0000C8                     ?_sqrt:
   955                           	opt stack 0
   956  0000C8                     ?_sin:
   957                           	opt stack 0
   958  0000C8                     sqrt@y:
   959                           	opt stack 0
   960  0000C8                     sin@f:
   961                           	opt stack 0
   962                           
   963                           ; 3 bytes @ 0x68
   964  0000C8                     	ds	3
   965  0000CB                     ??_sqrt:
   966  0000CB                     sin@y:
   967                           	opt stack 0
   968                           
   969                           ; 3 bytes @ 0x6B
   970  0000CB                     	ds	3
   971  0000CE                     sqrt@og:
   972                           	opt stack 0
   973  0000CE                     _sin$3144:
   974                           	opt stack 0
   975                           
   976                           ; 3 bytes @ 0x6E
   977  0000CE                     	ds	3
   978  0000D1                     sqrt@z:
   979                           	opt stack 0
   980  0000D1                     sin@x2:
   981                           	opt stack 0
   982                           
   983                           ; 3 bytes @ 0x71
   984  0000D1                     	ds	3
   985  0000D4                     sqrt@i:
   986                           	opt stack 0
   987  0000D4                     sin@sgn:
   988                           	opt stack 0
   989                           
   990                           ; 1 bytes @ 0x74
   991  0000D4                     	ds	1
   992  0000D5                     ?_cos:
   993                           	opt stack 0
   994  0000D5                     sqrt@q:
   995                           	opt stack 0
   996  0000D5                     cos@f:
   997                           	opt stack 0
   998                           
   999                           ; 3 bytes @ 0x75
  1000  0000D5                     	ds	3
  1001  0000D8                     sqrt@x:
  1002                           	opt stack 0
  1003  0000D8                     _cos$3143:
  1004                           	opt stack 0
  1005                           
  1006                           ; 3 bytes @ 0x78
  1007  0000D8                     	ds	3
  1008  0000DB                     ?_get_distance:
  1009                           	opt stack 0
  1010  0000DB                     ?_tan:
  1011                           	opt stack 0
  1012  0000DB                     tan@x:
  1013                           	opt stack 0
  1014  0000DB                     get_distance@ancien:
  1015                           	opt stack 0
  1016                           
  1017                           ; 6 bytes @ 0x7B
  1018  0000DB                     	ds	3
  1019  0000DE                     _tan$3141:
  1020                           	opt stack 0
  1021                           
  1022                           ; 3 bytes @ 0x7E
  1023  0000DE                     	ds	3
  1024  0000E1                     _tan$3142:
  1025                           	opt stack 0
  1026  0000E1                     get_distance@actu:
  1027                           	opt stack 0
  1028                           
  1029                           ; 6 bytes @ 0x81
  1030  0000E1                     	ds	3
  1031  0000E4                     ?_cotangeante:
  1032                           	opt stack 0
  1033  0000E4                     cotangeante@angle:
  1034                           	opt stack 0
  1035                           
  1036                           ; 3 bytes @ 0x84
  1037  0000E4                     	ds	3
  1038  0000E7                     _cotangeante$3139:
  1039                           	opt stack 0
  1040                           
  1041                           ; 3 bytes @ 0x87
  1042  0000E7                     	ds	3
  1043  0000EA                     
  1044                           ; 2 bytes @ 0x8A
  1045  0000EA                     	ds	2
  1046  0000EC                     
  1047                           ; 3 bytes @ 0x8C
  1048  0000EC                     	ds	3
  1049  0000EF                     ??_main:
  1050                           
  1051                           ; 0 bytes @ 0x8F
  1052  0000EF                     	ds	1
  1053  0000F0                     main@i:
  1054                           	opt stack 0
  1055                           
  1056                           ; 2 bytes @ 0x90
  1057  0000F0                     	ds	2
  1058                           tblptru	equ	0xFF8
  1059                           tblptrh	equ	0xFF7
  1060                           tblptrl	equ	0xFF6
  1061                           tablat	equ	0xFF5
  1062                           postinc0	equ	0xFEE
  1063                           wreg	equ	0xFE8
  1064                           
  1065                           	psect	cstackCOMRAM
  1066  000001                     __pcstackCOMRAM:
  1067                           	opt stack 0
  1068  000001                     ??_interruption_timer1:
  1069  000001                     ??_interruption_INT0:
  1070  000001                     interrupt_RX@temp:
  1071                           	opt stack 0
  1072                           
  1073                           ; 1 bytes @ 0x0
  1074  000001                     	ds	2
  1075  000003                     subroutine_interruptions@priorite:
  1076                           	opt stack 0
  1077                           
  1078                           ; 1 bytes @ 0x2
  1079  000003                     	ds	1
  1080  000004                     ??_low_isr:
  1081                           
  1082                           ; 0 bytes @ 0x3
  1083  000004                     	ds	17
  1084  000015                     ??i2_interruption_timer1:
  1085  000015                     ??i2_interruption_INT0:
  1086  000015                     i2interrupt_RX@temp:
  1087                           	opt stack 0
  1088                           
  1089                           ; 1 bytes @ 0x14
  1090  000015                     	ds	2
  1091  000017                     i2subroutine_interruptions@priorite:
  1092                           	opt stack 0
  1093                           
  1094                           ; 1 bytes @ 0x16
  1095  000017                     	ds	1
  1096  000018                     ??_high_isr:
  1097                           
  1098                           ; 0 bytes @ 0x17
  1099  000018                     	ds	14
  1100                           tblptru	equ	0xFF8
  1101                           tblptrh	equ	0xFF7
  1102                           tblptrl	equ	0xFF6
  1103                           tablat	equ	0xFF5
  1104                           postinc0	equ	0xFEE
  1105                           wreg	equ	0xFE8
  1106                           
  1107 ;;
  1108 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1109 ;;
  1110 ;; *************** function _main *****************
  1111 ;; Defined at:
  1112 ;;		line 83 in file "main.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  argc            2  138[BANK0 ] int 
  1115 ;;  argv            3  140[BANK0 ] PTR PTR unsigned char 
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;  i               2  144[BANK0 ] int 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  2  138[BANK0 ] int 
  1120 ;; Registers used:
  1121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1127 ;;      Params:         0       5       0       0
  1128 ;;      Locals:         0       2       0       0
  1129 ;;      Temps:          0       1       0       0
  1130 ;;      Totals:         0       8       0       0
  1131 ;;Total ram usage:        8 bytes
  1132 ;; Hardware stack levels required when called:   14
  1133 ;; This function calls:
  1134 ;;		_PutIntUART
  1135 ;;		_PutsUART
  1136 ;;		___ftge
  1137 ;;		___wmul
  1138 ;;		_affichage_position
  1139 ;;		_envoit_pwm
  1140 ;;		_get_distance
  1141 ;;		_init_system
  1142 ;;		_obtention_angle
  1143 ;;		_triangulation
  1144 ;; This function is called by:
  1145 ;;		Startup code after reset
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text0
  1150  000A72                     __ptext0:
  1151                           	opt stack 0
  1152  000A72                     _main:
  1153                           	opt stack 17
  1154                           
  1155                           ;main.c: 86: init_system ();
  1156                           
  1157                           ; BSR set to: 1
  1158                           ;incstack = 0
  1159  000A72  EC7E  F01A         	call	_init_system	;wreg free
  1160                           
  1161                           ;main.c: 87: int i = 0;
  1162  000A76  0E00               	movlw	0
  1163  000A78  0100               	movlb	0	; () banked
  1164  000A7A  6FF1               	movwf	(main@i+1)& (0+255),b
  1165  000A7C  0E00               	movlw	0
  1166  000A7E  6FF0               	movwf	main@i& (0+255),b
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;main.c: 89: PORTDbits.RD1 = 1;
  1170  000A80  8283               	bsf	3971,1,c	;volatile
  1171                           
  1172                           ; BSR set to: 0
  1173                           ;main.c: 90: LATCbits.LATC2 = 1;
  1174  000A82  848B               	bsf	3979,2,c	;volatile
  1175                           
  1176                           ; BSR set to: 0
  1177                           ;main.c: 91: PORTBbits.RB0 = 1;
  1178  000A84  8081               	bsf	3969,0,c	;volatile
  1179                           
  1180                           ; BSR set to: 0
  1181                           ;main.c: 93: PutsUART(0, "Bonjour les amis !!! =)");
  1182  000A86  0E5F               	movlw	low STR_1
  1183  000A88  0100               	movlb	0	; () banked
  1184  000A8A  6F7E               	movwf	PutsUART@chaine& (0+255),b
  1185  000A8C  0E03               	movlw	high STR_1
  1186  000A8E  0100               	movlb	0	; () banked
  1187  000A90  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  1188  000A92  0E00               	movlw	0
  1189  000A94  ECE2  F017         	call	_PutsUART
  1190                           
  1191                           ;main.c: 95: while(PORTCbits.RC4 == 0);
  1192  000A98  D000               	goto	l31
  1193  000A9A                     l31:
  1194  000A9A  A882               	btfss	3970,4,c	;volatile
  1195  000A9C  D7FE               	goto	l31
  1196                           
  1197                           ;main.c: 96: PORTBbits.RB0= 0;
  1198  000A9E  9081               	bcf	3969,0,c	;volatile
  1199                           
  1200                           ;main.c: 97: PORTBbits.RB4 =1;
  1201  000AA0  8881               	bsf	3969,4,c	;volatile
  1202                           
  1203                           ;main.c: 98: envoit_pwm(60);
  1204  000AA2  0E00               	movlw	0
  1205  000AA4  0100               	movlb	0	; () banked
  1206  000AA6  6FB0               	movwf	envoit_pwm@valeur& (0+255),b
  1207  000AA8  0E70               	movlw	112
  1208  000AAA  0100               	movlb	0	; () banked
  1209  000AAC  6FB1               	movwf	(envoit_pwm@valeur+1)& (0+255),b
  1210  000AAE  0E42               	movlw	66
  1211  000AB0  0100               	movlb	0	; () banked
  1212  000AB2  6FB2               	movwf	(envoit_pwm@valeur+2)& (0+255),b
  1213  000AB4  ECE3  F013         	call	_envoit_pwm	;wreg free
  1214                           
  1215                           ;main.c: 101: _delay((unsigned long)((10)*(40000000/4000.0)));
  1216  000AB8  0E82               	movlw	130
  1217  000ABA  0100               	movlb	0	; () banked
  1218  000ABC  6FEF               	movwf	??_main& (0+255),b
  1219  000ABE  0EDE               	movlw	222
  1220  000AC0                     u4217:
  1221  000AC0  2EE8               	decfsz	wreg,f,c
  1222  000AC2  D7FE               	goto	u4217
  1223  000AC4  2FEF               	decfsz	??_main& (0+255),f,b
  1224  000AC6  D7FC               	goto	u4217
  1225                           
  1226                           ;main.c: 102: _delay((unsigned long)((10)*(40000000/4000.0)));
  1227  000AC8  0E82               	movlw	130
  1228  000ACA  0100               	movlb	0	; () banked
  1229  000ACC  6FEF               	movwf	??_main& (0+255),b
  1230  000ACE  0EDE               	movlw	222
  1231  000AD0                     u4227:
  1232  000AD0  2EE8               	decfsz	wreg,f,c
  1233  000AD2  D7FE               	goto	u4227
  1234  000AD4  2FEF               	decfsz	??_main& (0+255),f,b
  1235  000AD6  D7FC               	goto	u4227
  1236                           
  1237                           ;main.c: 103: _delay((unsigned long)((10)*(40000000/4000.0)));
  1238  000AD8  0E82               	movlw	130
  1239  000ADA  0100               	movlb	0	; () banked
  1240  000ADC  6FEF               	movwf	??_main& (0+255),b
  1241  000ADE  0EDE               	movlw	222
  1242  000AE0                     u4237:
  1243  000AE0  2EE8               	decfsz	wreg,f,c
  1244  000AE2  D7FE               	goto	u4237
  1245  000AE4  2FEF               	decfsz	??_main& (0+255),f,b
  1246  000AE6  D7FC               	goto	u4237
  1247                           
  1248                           ;main.c: 104: _delay((unsigned long)((10)*(40000000/4000.0)));
  1249  000AE8  0E82               	movlw	130
  1250  000AEA  0100               	movlb	0	; () banked
  1251  000AEC  6FEF               	movwf	??_main& (0+255),b
  1252  000AEE  0EDE               	movlw	222
  1253  000AF0                     u4247:
  1254  000AF0  2EE8               	decfsz	wreg,f,c
  1255  000AF2  D7FE               	goto	u4247
  1256  000AF4  2FEF               	decfsz	??_main& (0+255),f,b
  1257  000AF6  D7FC               	goto	u4247
  1258                           
  1259                           ;main.c: 105: _delay((unsigned long)((10)*(40000000/4000.0)));
  1260  000AF8  0E82               	movlw	130
  1261  000AFA  0100               	movlb	0	; () banked
  1262  000AFC  6FEF               	movwf	??_main& (0+255),b
  1263  000AFE  0EDE               	movlw	222
  1264  000B00                     u4257:
  1265  000B00  2EE8               	decfsz	wreg,f,c
  1266  000B02  D7FE               	goto	u4257
  1267  000B04  2FEF               	decfsz	??_main& (0+255),f,b
  1268  000B06  D7FC               	goto	u4257
  1269                           
  1270                           ;main.c: 106: _delay((unsigned long)((10)*(40000000/4000.0)));
  1271  000B08  0E82               	movlw	130
  1272  000B0A  0100               	movlb	0	; () banked
  1273  000B0C  6FEF               	movwf	??_main& (0+255),b
  1274  000B0E  0EDE               	movlw	222
  1275  000B10                     u4267:
  1276  000B10  2EE8               	decfsz	wreg,f,c
  1277  000B12  D7FE               	goto	u4267
  1278  000B14  2FEF               	decfsz	??_main& (0+255),f,b
  1279  000B16  D7FC               	goto	u4267
  1280                           
  1281                           ;main.c: 107: _delay((unsigned long)((10)*(40000000/4000.0)));
  1282  000B18  0E82               	movlw	130
  1283  000B1A  0100               	movlb	0	; () banked
  1284  000B1C  6FEF               	movwf	??_main& (0+255),b
  1285  000B1E  0EDE               	movlw	222
  1286  000B20                     u4277:
  1287  000B20  2EE8               	decfsz	wreg,f,c
  1288  000B22  D7FE               	goto	u4277
  1289  000B24  2FEF               	decfsz	??_main& (0+255),f,b
  1290  000B26  D7FC               	goto	u4277
  1291                           
  1292                           ;main.c: 108: _delay((unsigned long)((10)*(40000000/4000.0)));
  1293  000B28  0E82               	movlw	130
  1294  000B2A  0100               	movlb	0	; () banked
  1295  000B2C  6FEF               	movwf	??_main& (0+255),b
  1296  000B2E  0EDE               	movlw	222
  1297  000B30                     u4287:
  1298  000B30  2EE8               	decfsz	wreg,f,c
  1299  000B32  D7FE               	goto	u4287
  1300  000B34  2FEF               	decfsz	??_main& (0+255),f,b
  1301  000B36  D7FC               	goto	u4287
  1302                           
  1303                           ;main.c: 109: _delay((unsigned long)((10)*(40000000/4000.0)));
  1304  000B38  0E82               	movlw	130
  1305  000B3A  0100               	movlb	0	; () banked
  1306  000B3C  6FEF               	movwf	??_main& (0+255),b
  1307  000B3E  0EDE               	movlw	222
  1308  000B40                     u4297:
  1309  000B40  2EE8               	decfsz	wreg,f,c
  1310  000B42  D7FE               	goto	u4297
  1311  000B44  2FEF               	decfsz	??_main& (0+255),f,b
  1312  000B46  D7FC               	goto	u4297
  1313                           
  1314                           ;main.c: 110: _delay((unsigned long)((10)*(40000000/4000.0)));
  1315  000B48  0E82               	movlw	130
  1316  000B4A  0100               	movlb	0	; () banked
  1317  000B4C  6FEF               	movwf	??_main& (0+255),b
  1318  000B4E  0EDE               	movlw	222
  1319  000B50                     u4307:
  1320  000B50  2EE8               	decfsz	wreg,f,c
  1321  000B52  D7FE               	goto	u4307
  1322  000B54  2FEF               	decfsz	??_main& (0+255),f,b
  1323  000B56  D7FC               	goto	u4307
  1324                           
  1325                           ;main.c: 111: _delay((unsigned long)((10)*(40000000/4000.0)));
  1326  000B58  0E82               	movlw	130
  1327  000B5A  0100               	movlb	0	; () banked
  1328  000B5C  6FEF               	movwf	??_main& (0+255),b
  1329  000B5E  0EDE               	movlw	222
  1330  000B60                     u4317:
  1331  000B60  2EE8               	decfsz	wreg,f,c
  1332  000B62  D7FE               	goto	u4317
  1333  000B64  2FEF               	decfsz	??_main& (0+255),f,b
  1334  000B66  D7FC               	goto	u4317
  1335                           
  1336                           ;main.c: 112: _delay((unsigned long)((10)*(40000000/4000.0)));
  1337  000B68  0E82               	movlw	130
  1338  000B6A  0100               	movlb	0	; () banked
  1339  000B6C  6FEF               	movwf	??_main& (0+255),b
  1340  000B6E  0EDE               	movlw	222
  1341  000B70                     u4327:
  1342  000B70  2EE8               	decfsz	wreg,f,c
  1343  000B72  D7FE               	goto	u4327
  1344  000B74  2FEF               	decfsz	??_main& (0+255),f,b
  1345  000B76  D7FC               	goto	u4327
  1346                           
  1347                           ;main.c: 113: _delay((unsigned long)((10)*(40000000/4000.0)));
  1348  000B78  0E82               	movlw	130
  1349  000B7A  0100               	movlb	0	; () banked
  1350  000B7C  6FEF               	movwf	??_main& (0+255),b
  1351  000B7E  0EDE               	movlw	222
  1352  000B80                     u4337:
  1353  000B80  2EE8               	decfsz	wreg,f,c
  1354  000B82  D7FE               	goto	u4337
  1355  000B84  2FEF               	decfsz	??_main& (0+255),f,b
  1356  000B86  D7FC               	goto	u4337
  1357                           
  1358                           ;main.c: 114: _delay((unsigned long)((10)*(40000000/4000.0)));
  1359  000B88  0E82               	movlw	130
  1360  000B8A  0100               	movlb	0	; () banked
  1361  000B8C  6FEF               	movwf	??_main& (0+255),b
  1362  000B8E  0EDE               	movlw	222
  1363  000B90                     u4347:
  1364  000B90  2EE8               	decfsz	wreg,f,c
  1365  000B92  D7FE               	goto	u4347
  1366  000B94  2FEF               	decfsz	??_main& (0+255),f,b
  1367  000B96  D7FC               	goto	u4347
  1368                           
  1369                           ;main.c: 115: _delay((unsigned long)((10)*(40000000/4000.0)));
  1370  000B98  0E82               	movlw	130
  1371  000B9A  0100               	movlb	0	; () banked
  1372  000B9C  6FEF               	movwf	??_main& (0+255),b
  1373  000B9E  0EDE               	movlw	222
  1374  000BA0                     u4357:
  1375  000BA0  2EE8               	decfsz	wreg,f,c
  1376  000BA2  D7FE               	goto	u4357
  1377  000BA4  2FEF               	decfsz	??_main& (0+255),f,b
  1378  000BA6  D7FC               	goto	u4357
  1379                           
  1380                           ;main.c: 116: _delay((unsigned long)((10)*(40000000/4000.0)));
  1381  000BA8  0E82               	movlw	130
  1382  000BAA  0100               	movlb	0	; () banked
  1383  000BAC  6FEF               	movwf	??_main& (0+255),b
  1384  000BAE  0EDE               	movlw	222
  1385  000BB0                     u4367:
  1386  000BB0  2EE8               	decfsz	wreg,f,c
  1387  000BB2  D7FE               	goto	u4367
  1388  000BB4  2FEF               	decfsz	??_main& (0+255),f,b
  1389  000BB6  D7FC               	goto	u4367
  1390                           
  1391                           ;main.c: 117: _delay((unsigned long)((10)*(40000000/4000.0)));
  1392  000BB8  0E82               	movlw	130
  1393  000BBA  0100               	movlb	0	; () banked
  1394  000BBC  6FEF               	movwf	??_main& (0+255),b
  1395  000BBE  0EDE               	movlw	222
  1396  000BC0                     u4377:
  1397  000BC0  2EE8               	decfsz	wreg,f,c
  1398  000BC2  D7FE               	goto	u4377
  1399  000BC4  2FEF               	decfsz	??_main& (0+255),f,b
  1400  000BC6  D7FC               	goto	u4377
  1401                           
  1402                           ;main.c: 118: _delay((unsigned long)((10)*(40000000/4000.0)));
  1403  000BC8  0E82               	movlw	130
  1404  000BCA  0100               	movlb	0	; () banked
  1405  000BCC  6FEF               	movwf	??_main& (0+255),b
  1406  000BCE  0EDE               	movlw	222
  1407  000BD0                     u4387:
  1408  000BD0  2EE8               	decfsz	wreg,f,c
  1409  000BD2  D7FE               	goto	u4387
  1410  000BD4  2FEF               	decfsz	??_main& (0+255),f,b
  1411  000BD6  D7FC               	goto	u4387
  1412                           
  1413                           ;main.c: 119: _delay((unsigned long)((10)*(40000000/4000.0)));
  1414  000BD8  0E82               	movlw	130
  1415  000BDA  0100               	movlb	0	; () banked
  1416  000BDC  6FEF               	movwf	??_main& (0+255),b
  1417  000BDE  0EDE               	movlw	222
  1418  000BE0                     u4397:
  1419  000BE0  2EE8               	decfsz	wreg,f,c
  1420  000BE2  D7FE               	goto	u4397
  1421  000BE4  2FEF               	decfsz	??_main& (0+255),f,b
  1422  000BE6  D7FC               	goto	u4397
  1423                           
  1424                           ;main.c: 120: _delay((unsigned long)((10)*(40000000/4000.0)));
  1425  000BE8  0E82               	movlw	130
  1426  000BEA  0100               	movlb	0	; () banked
  1427  000BEC  6FEF               	movwf	??_main& (0+255),b
  1428  000BEE  0EDE               	movlw	222
  1429  000BF0                     u4407:
  1430  000BF0  2EE8               	decfsz	wreg,f,c
  1431  000BF2  D7FE               	goto	u4407
  1432  000BF4  2FEF               	decfsz	??_main& (0+255),f,b
  1433  000BF6  D7FC               	goto	u4407
  1434                           
  1435                           ;main.c: 121: _delay((unsigned long)((10)*(40000000/4000.0)));
  1436  000BF8  0E82               	movlw	130
  1437  000BFA  0100               	movlb	0	; () banked
  1438  000BFC  6FEF               	movwf	??_main& (0+255),b
  1439  000BFE  0EDE               	movlw	222
  1440  000C00                     u4417:
  1441  000C00  2EE8               	decfsz	wreg,f,c
  1442  000C02  D7FE               	goto	u4417
  1443  000C04  2FEF               	decfsz	??_main& (0+255),f,b
  1444  000C06  D7FC               	goto	u4417
  1445                           
  1446                           ;main.c: 122: _delay((unsigned long)((10)*(40000000/4000.0)));
  1447  000C08  0E82               	movlw	130
  1448  000C0A  0100               	movlb	0	; () banked
  1449  000C0C  6FEF               	movwf	??_main& (0+255),b
  1450  000C0E  0EDE               	movlw	222
  1451  000C10                     u4427:
  1452  000C10  2EE8               	decfsz	wreg,f,c
  1453  000C12  D7FE               	goto	u4427
  1454  000C14  2FEF               	decfsz	??_main& (0+255),f,b
  1455  000C16  D7FC               	goto	u4427
  1456                           
  1457                           ;main.c: 123: _delay((unsigned long)((10)*(40000000/4000.0)));
  1458  000C18  0E82               	movlw	130
  1459  000C1A  0100               	movlb	0	; () banked
  1460  000C1C  6FEF               	movwf	??_main& (0+255),b
  1461  000C1E  0EDE               	movlw	222
  1462  000C20                     u4437:
  1463  000C20  2EE8               	decfsz	wreg,f,c
  1464  000C22  D7FE               	goto	u4437
  1465  000C24  2FEF               	decfsz	??_main& (0+255),f,b
  1466  000C26  D7FC               	goto	u4437
  1467  000C28  D000               	goto	l4374
  1468  000C2A                     l4374:
  1469                           
  1470                           ;main.c: 126: {
  1471                           ;main.c: 127: static _coordonees c[3];
  1472                           ;main.c: 128: static double distance[3];
  1473                           ;main.c: 129: static bool premiere_fois = 1;
  1474                           ;main.c: 131: capteur.indice = 0;
  1475  000C2A  0E00               	movlw	0
  1476  000C2C  0101               	movlb	1	; () banked
  1477  000C2E  6F79               	movwf	(_capteur+18)& (0+255),b
  1478                           
  1479                           ; BSR set to: 1
  1480                           ;main.c: 132: capteur.synchro_debut_tour = 1;
  1481  000C30  0E01               	movlw	1
  1482  000C32  0101               	movlb	1	; () banked
  1483  000C34  6F68               	movwf	(_capteur+1)& (0+255),b
  1484                           
  1485                           ; BSR set to: 1
  1486                           
  1487                           ;main.c: 134: while(capteur.synchro_debut_tour == 1);
  1488  000C36  D000               	goto	l4378
  1489  000C38                     l4378:
  1490                           
  1491                           ; BSR set to: 1
  1492  000C38  0101               	movlb	1	; () banked
  1493  000C3A  0568               	decf	(_capteur+1)& (0+255),w,b
  1494  000C3C  A4D8               	btfss	status,2,c
  1495  000C3E  D002               	goto	l4380
  1496  000C40  D7FB               	goto	l4378
  1497                           
  1498                           ; BSR set to: 1
  1499                           
  1500                           ; BSR set to: 1
  1501                           ;main.c: 135: while(capteur.tour_en_cours == 1);
  1502  000C42  D000               	goto	l4380
  1503  000C44                     l4380:
  1504                           
  1505                           ; BSR set to: 1
  1506  000C44  0101               	movlb	1	; () banked
  1507  000C46  0567               	decf	_capteur& (0+255),w,b
  1508  000C48  B4D8               	btfsc	status,2,c
  1509  000C4A  D7FC               	goto	l4380
  1510                           
  1511                           ; BSR set to: 1
  1512                           ;main.c: 137: if (capteur.indice != 3)
  1513                           
  1514                           ; BSR set to: 1
  1515  000C4C  0E03               	movlw	3
  1516  000C4E  0101               	movlb	1	; () banked
  1517  000C50  1979               	xorwf	(_capteur+18)& (0+255),w,b
  1518  000C52  B4D8               	btfsc	status,2,c
  1519  000C54  D01A               	goto	l4390
  1520                           
  1521                           ; BSR set to: 1
  1522                           ;main.c: 138: {
  1523                           ;main.c: 139: PutsUART(0, "\n\nProbleme de detection de balises .... : ");
  1524  000C56  0E1C               	movlw	low STR_2
  1525  000C58  0100               	movlb	0	; () banked
  1526  000C5A  6F7E               	movwf	PutsUART@chaine& (0+255),b
  1527  000C5C  0E03               	movlw	high STR_2
  1528  000C5E  0100               	movlb	0	; () banked
  1529  000C60  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  1530  000C62  0E00               	movlw	0
  1531  000C64  ECE2  F017         	call	_PutsUART
  1532                           
  1533                           ;main.c: 140: PutIntUART(0, (uint16_t) capteur.indice);
  1534  000C68  C179  F0B0         	movff	_capteur+18,PutIntUART@nb
  1535  000C6C  0100               	movlb	0	; () banked
  1536  000C6E  6BB1               	clrf	(PutIntUART@nb+1)& (0+255),b
  1537  000C70  0E00               	movlw	0
  1538  000C72  ECB5  F01A         	call	_PutIntUART
  1539                           
  1540                           ;main.c: 141: PutsUART(0, " Balises detectees \n\n\n\r");
  1541  000C76  0E47               	movlw	low STR_3
  1542  000C78  0100               	movlb	0	; () banked
  1543  000C7A  6F7E               	movwf	PutsUART@chaine& (0+255),b
  1544  000C7C  0E03               	movlw	high STR_3
  1545  000C7E  0100               	movlb	0	; () banked
  1546  000C80  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  1547  000C82  0E00               	movlw	0
  1548  000C84  ECE2  F017         	call	_PutsUART
  1549                           
  1550                           ;main.c: 142: }
  1551  000C88  D7D0               	goto	l4374
  1552  000C8A                     l4390:
  1553                           
  1554                           ;main.c: 143: else
  1555                           ;main.c: 144: {
  1556                           ;main.c: 145: for (i = 0; i < 3 ; i++)
  1557  000C8A  0E00               	movlw	0
  1558  000C8C  0100               	movlb	0	; () banked
  1559  000C8E  6FF1               	movwf	(main@i+1)& (0+255),b
  1560  000C90  0E00               	movlw	0
  1561  000C92  6FF0               	movwf	main@i& (0+255),b
  1562  000C94                     l4392:
  1563                           
  1564                           ; BSR set to: 0
  1565  000C94  0100               	movlb	0	; () banked
  1566  000C96  BFF1               	btfsc	(main@i+1)& (0+255),7,b
  1567  000C98  D00A               	goto	l4396
  1568  000C9A  0100               	movlb	0	; () banked
  1569  000C9C  51F1               	movf	(main@i+1)& (0+255),w,b
  1570  000C9E  E136               	bnz	l4402
  1571  000CA0  0E03               	movlw	3
  1572  000CA2  0100               	movlb	0	; () banked
  1573  000CA4  5DF0               	subwf	main@i& (0+255),w,b
  1574  000CA6  B0D8               	btfsc	status,0,c
  1575  000CA8  D031               	goto	l4402
  1576  000CAA  D001               	goto	l4396
  1577                           
  1578                           ; BSR set to: 0
  1579  000CAC  D02F               	goto	l4402
  1580  000CAE                     l4396:
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;main.c: 146: capteur.angle[i] = obtention_angle(capteur.position[i]);
  1584  000CAE  C0F0  F060         	movff	main@i,___wmul@multiplier
  1585  000CB2  C0F1  F061         	movff	main@i+1,___wmul@multiplier+1
  1586  000CB6  0E00               	movlw	0
  1587  000CB8  0100               	movlb	0	; () banked
  1588  000CBA  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1589  000CBC  0E03               	movlw	3
  1590  000CBE  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1591  000CC0  EC34  F01A         	call	___wmul	;wreg free
  1592  000CC4  0E6A               	movlw	low (_capteur+3)
  1593  000CC6  0100               	movlb	0	; () banked
  1594  000CC8  2560               	addwf	?___wmul& (0+255),w,b
  1595  000CCA  6ED9               	movwf	fsr2l,c
  1596  000CCC  0E01               	movlw	high (_capteur+3)
  1597  000CCE  0100               	movlb	0	; () banked
  1598  000CD0  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1599  000CD2  6EDA               	movwf	fsr2h,c
  1600  000CD4  90D8               	bcf	status,0,c
  1601  000CD6  0100               	movlb	0	; () banked
  1602  000CD8  35F0               	rlcf	main@i& (0+255),w,b
  1603  000CDA  6EE1               	movwf	fsr1l,c
  1604  000CDC  0100               	movlb	0	; () banked
  1605  000CDE  35F1               	rlcf	(main@i+1)& (0+255),w,b
  1606  000CE0  6EE2               	movwf	fsr1h,c
  1607  000CE2  0E73               	movlw	low (_capteur+12)
  1608  000CE4  26E1               	addwf	fsr1l,f,c
  1609  000CE6  0E01               	movlw	high (_capteur+12)
  1610  000CE8  22E2               	addwfc	fsr1h,f,c
  1611  000CEA  CFE6 F0A1          	movff	postinc1,obtention_angle@position
  1612  000CEE  CFE5 F0A2          	movff	postdec1,obtention_angle@position+1
  1613  000CF2  EC6F  F017         	call	_obtention_angle	;wreg free
  1614  000CF6  C0A1  FFDE         	movff	?_obtention_angle,postinc2
  1615  000CFA  C0A2  FFDE         	movff	?_obtention_angle+1,postinc2
  1616  000CFE  C0A3  FFDE         	movff	?_obtention_angle+2,postinc2
  1617  000D02  0100               	movlb	0	; () banked
  1618  000D04  4BF0               	infsnz	main@i& (0+255),f,b
  1619  000D06  2BF1               	incf	(main@i+1)& (0+255),f,b
  1620  000D08  D7C5               	goto	l4392
  1621                           
  1622                           ; BSR set to: 0
  1623  000D0A  D000               	goto	l4402
  1624  000D0C                     l4402:
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;main.c: 151: if (premiere_fois == 1)
  1628  000D0C  0100               	movlb	0	; () banked
  1629  000D0E  05FF               	decf	main@premiere_fois& (0+255),w,b
  1630  000D10  A4D8               	btfss	status,2,c
  1631  000D12  D02A               	goto	l4412
  1632                           
  1633                           ; BSR set to: 0
  1634                           ;main.c: 152: {
  1635                           ;main.c: 153: triangulation(&c[0], capteur.angle[0], capteur.angle[1], capteur.angle[2])
      +                          ;
  1636  000D14  0E80               	movlw	low main@c
  1637  000D16  0101               	movlb	1	; () banked
  1638  000D18  6F92               	movwf	triangulation@c& (0+255),b
  1639  000D1A  0E01               	movlw	high main@c
  1640  000D1C  0101               	movlb	1	; () banked
  1641  000D1E  6F93               	movwf	(triangulation@c+1)& (0+255),b
  1642  000D20  C16A  F194         	movff	_capteur+3,triangulation@angle1
  1643  000D24  C16B  F195         	movff	_capteur+4,triangulation@angle1+1
  1644  000D28  C16C  F196         	movff	_capteur+5,triangulation@angle1+2
  1645  000D2C  C16D  F197         	movff	_capteur+6,triangulation@angle2
  1646  000D30  C16E  F198         	movff	_capteur+7,triangulation@angle2+1
  1647  000D34  C16F  F199         	movff	_capteur+8,triangulation@angle2+2
  1648  000D38  C170  F19A         	movff	_capteur+9,triangulation@angle3
  1649  000D3C  C171  F19B         	movff	_capteur+10,triangulation@angle3+1
  1650  000D40  C172  F19C         	movff	_capteur+11,triangulation@angle3+2
  1651  000D44  ECD2  F001         	call	_triangulation	;wreg free
  1652                           
  1653                           ;main.c: 154: capteur.c.x = c[0].x;
  1654  000D48  C180  F17A         	movff	main@c,_capteur+19
  1655  000D4C  C181  F17B         	movff	main@c+1,_capteur+20
  1656  000D50  C182  F17C         	movff	main@c+2,_capteur+21
  1657                           
  1658                           ;main.c: 155: capteur.c.y = c[0].y;
  1659  000D54  C183  F17D         	movff	main@c+3,_capteur+22
  1660  000D58  C184  F17E         	movff	main@c+4,_capteur+23
  1661  000D5C  C185  F17F         	movff	main@c+5,_capteur+24
  1662                           
  1663                           ;main.c: 156: premiere_fois = 0;
  1664  000D60  0E00               	movlw	0
  1665  000D62  0100               	movlb	0	; () banked
  1666  000D64  6FFF               	movwf	main@premiere_fois& (0+255),b
  1667                           
  1668                           ;main.c: 157: }
  1669  000D66  D10A               	goto	l4436
  1670  000D68                     l4412:
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;main.c: 158: else
  1674                           ;main.c: 159: {
  1675                           ;main.c: 160: triangulation(&c[0], capteur.angle[0], capteur.angle[1], capteur.angle[2])
      +                          ;
  1676  000D68  0E80               	movlw	low main@c
  1677  000D6A  0101               	movlb	1	; () banked
  1678  000D6C  6F92               	movwf	triangulation@c& (0+255),b
  1679  000D6E  0E01               	movlw	high main@c
  1680  000D70  0101               	movlb	1	; () banked
  1681  000D72  6F93               	movwf	(triangulation@c+1)& (0+255),b
  1682  000D74  C16A  F194         	movff	_capteur+3,triangulation@angle1
  1683  000D78  C16B  F195         	movff	_capteur+4,triangulation@angle1+1
  1684  000D7C  C16C  F196         	movff	_capteur+5,triangulation@angle1+2
  1685  000D80  C16D  F197         	movff	_capteur+6,triangulation@angle2
  1686  000D84  C16E  F198         	movff	_capteur+7,triangulation@angle2+1
  1687  000D88  C16F  F199         	movff	_capteur+8,triangulation@angle2+2
  1688  000D8C  C170  F19A         	movff	_capteur+9,triangulation@angle3
  1689  000D90  C171  F19B         	movff	_capteur+10,triangulation@angle3+1
  1690  000D94  C172  F19C         	movff	_capteur+11,triangulation@angle3+2
  1691  000D98  ECD2  F001         	call	_triangulation	;wreg free
  1692                           
  1693                           ;main.c: 161: triangulation(&c[1], capteur.angle[1], capteur.angle[2], capteur.angle[0])
      +                          ;
  1694  000D9C  0E86               	movlw	low (main@c+6)
  1695  000D9E  0101               	movlb	1	; () banked
  1696  000DA0  6F92               	movwf	triangulation@c& (0+255),b
  1697  000DA2  0E01               	movlw	high (main@c+6)
  1698  000DA4  0101               	movlb	1	; () banked
  1699  000DA6  6F93               	movwf	(triangulation@c+1)& (0+255),b
  1700  000DA8  C16D  F194         	movff	_capteur+6,triangulation@angle1
  1701  000DAC  C16E  F195         	movff	_capteur+7,triangulation@angle1+1
  1702  000DB0  C16F  F196         	movff	_capteur+8,triangulation@angle1+2
  1703  000DB4  C170  F197         	movff	_capteur+9,triangulation@angle2
  1704  000DB8  C171  F198         	movff	_capteur+10,triangulation@angle2+1
  1705  000DBC  C172  F199         	movff	_capteur+11,triangulation@angle2+2
  1706  000DC0  C16A  F19A         	movff	_capteur+3,triangulation@angle3
  1707  000DC4  C16B  F19B         	movff	_capteur+4,triangulation@angle3+1
  1708  000DC8  C16C  F19C         	movff	_capteur+5,triangulation@angle3+2
  1709  000DCC  ECD2  F001         	call	_triangulation	;wreg free
  1710                           
  1711                           ;main.c: 162: triangulation(&c[2], capteur.angle[2], capteur.angle[0], capteur.angle[1])
      +                          ;
  1712  000DD0  0E8C               	movlw	low (main@c+12)
  1713  000DD2  0101               	movlb	1	; () banked
  1714  000DD4  6F92               	movwf	triangulation@c& (0+255),b
  1715  000DD6  0E01               	movlw	high (main@c+12)
  1716  000DD8  0101               	movlb	1	; () banked
  1717  000DDA  6F93               	movwf	(triangulation@c+1)& (0+255),b
  1718  000DDC  C170  F194         	movff	_capteur+9,triangulation@angle1
  1719  000DE0  C171  F195         	movff	_capteur+10,triangulation@angle1+1
  1720  000DE4  C172  F196         	movff	_capteur+11,triangulation@angle1+2
  1721  000DE8  C16A  F197         	movff	_capteur+3,triangulation@angle2
  1722  000DEC  C16B  F198         	movff	_capteur+4,triangulation@angle2+1
  1723  000DF0  C16C  F199         	movff	_capteur+5,triangulation@angle2+2
  1724  000DF4  C16D  F19A         	movff	_capteur+6,triangulation@angle3
  1725  000DF8  C16E  F19B         	movff	_capteur+7,triangulation@angle3+1
  1726  000DFC  C16F  F19C         	movff	_capteur+8,triangulation@angle3+2
  1727  000E00  ECD2  F001         	call	_triangulation	;wreg free
  1728                           
  1729                           ;main.c: 164: for (i = 0 ; i < 3 ; i++)
  1730  000E04  0E00               	movlw	0
  1731  000E06  0100               	movlb	0	; () banked
  1732  000E08  6FF1               	movwf	(main@i+1)& (0+255),b
  1733  000E0A  0E00               	movlw	0
  1734  000E0C  6FF0               	movwf	main@i& (0+255),b
  1735  000E0E                     l4416:
  1736                           
  1737                           ; BSR set to: 0
  1738  000E0E  0100               	movlb	0	; () banked
  1739  000E10  BFF1               	btfsc	(main@i+1)& (0+255),7,b
  1740  000E12  D00A               	goto	l4420
  1741  000E14  0100               	movlb	0	; () banked
  1742  000E16  51F1               	movf	(main@i+1)& (0+255),w,b
  1743  000E18  E14A               	bnz	l4426
  1744  000E1A  0E03               	movlw	3
  1745  000E1C  0100               	movlb	0	; () banked
  1746  000E1E  5DF0               	subwf	main@i& (0+255),w,b
  1747  000E20  B0D8               	btfsc	status,0,c
  1748  000E22  D045               	goto	l4426
  1749  000E24  D001               	goto	l4420
  1750                           
  1751                           ; BSR set to: 0
  1752  000E26  D043               	goto	l4426
  1753  000E28                     l4420:
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;main.c: 165: distance[i] = get_distance(capteur.c, c[i]);
  1757  000E28  C0F0  F060         	movff	main@i,___wmul@multiplier
  1758  000E2C  C0F1  F061         	movff	main@i+1,___wmul@multiplier+1
  1759  000E30  0E00               	movlw	0
  1760  000E32  0100               	movlb	0	; () banked
  1761  000E34  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1762  000E36  0E03               	movlw	3
  1763  000E38  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1764  000E3A  EC34  F01A         	call	___wmul	;wreg free
  1765  000E3E  0EF2               	movlw	low main@distance
  1766  000E40  0100               	movlb	0	; () banked
  1767  000E42  2560               	addwf	?___wmul& (0+255),w,b
  1768  000E44  6ED9               	movwf	fsr2l,c
  1769  000E46  0E00               	movlw	high main@distance
  1770  000E48  0100               	movlb	0	; () banked
  1771  000E4A  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1772  000E4C  6EDA               	movwf	fsr2h,c
  1773  000E4E  EE11  F07A         	lfsr	1,_capteur+19
  1774  000E52  EE00  F0DB         	lfsr	0,get_distance@ancien
  1775  000E56  0E05               	movlw	5
  1776  000E58                     u4121:
  1777  000E58  CFE3 FFEB          	movff	plusw1,plusw0
  1778  000E5C  06E8               	decf	wreg,f,c
  1779  000E5E  E2FC               	bc	u4121
  1780  000E60  C0F0  F060         	movff	main@i,___wmul@multiplier
  1781  000E64  C0F1  F061         	movff	main@i+1,___wmul@multiplier+1
  1782  000E68  0E00               	movlw	0
  1783  000E6A  0100               	movlb	0	; () banked
  1784  000E6C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1785  000E6E  0E06               	movlw	6
  1786  000E70  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1787  000E72  EC34  F01A         	call	___wmul	;wreg free
  1788  000E76  0E80               	movlw	low main@c
  1789  000E78  0100               	movlb	0	; () banked
  1790  000E7A  2560               	addwf	?___wmul& (0+255),w,b
  1791  000E7C  6EE1               	movwf	fsr1l,c
  1792  000E7E  0E01               	movlw	high main@c
  1793  000E80  0100               	movlb	0	; () banked
  1794  000E82  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1795  000E84  6EE2               	movwf	fsr1h,c
  1796  000E86  EE00  F0E1         	lfsr	0,get_distance@actu
  1797  000E8A  0E05               	movlw	5
  1798  000E8C                     u4131:
  1799  000E8C  CFE3 FFEB          	movff	plusw1,plusw0
  1800  000E90  06E8               	decf	wreg,f,c
  1801  000E92  E2FC               	bc	u4131
  1802  000E94  ECEE  F012         	call	_get_distance	;wreg free
  1803  000E98  C0DB  FFDE         	movff	?_get_distance,postinc2
  1804  000E9C  C0DC  FFDE         	movff	?_get_distance+1,postinc2
  1805  000EA0  C0DD  FFDE         	movff	?_get_distance+2,postinc2
  1806  000EA4  0100               	movlb	0	; () banked
  1807  000EA6  4BF0               	infsnz	main@i& (0+255),f,b
  1808  000EA8  2BF1               	incf	(main@i+1)& (0+255),f,b
  1809  000EAA  D7B1               	goto	l4416
  1810                           
  1811                           ; BSR set to: 0
  1812  000EAC  D000               	goto	l4426
  1813  000EAE                     l4426:
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;main.c: 167: if (distance[0] < distance[1])
  1817  000EAE  C0F2  F07A         	movff	main@distance,___ftge@ff1
  1818  000EB2  C0F3  F07B         	movff	main@distance+1,___ftge@ff1+1
  1819  000EB6  C0F4  F07C         	movff	main@distance+2,___ftge@ff1+2
  1820  000EBA  C0F5  F07D         	movff	main@distance+3,___ftge@ff2
  1821  000EBE  C0F6  F07E         	movff	main@distance+4,___ftge@ff2+1
  1822  000EC2  C0F7  F07F         	movff	main@distance+5,___ftge@ff2+2
  1823  000EC6  ECBC  F014         	call	___ftge	;wreg free
  1824  000ECA  0100               	movlb	0	; () banked
  1825  000ECC  B0D8               	btfsc	status,0,c
  1826  000ECE  D02B               	goto	l4432
  1827                           
  1828                           ; BSR set to: 0
  1829                           ;main.c: 168: {
  1830                           ;main.c: 169: if (distance[0] < distance[2])
  1831  000ED0  C0F2  F07A         	movff	main@distance,___ftge@ff1
  1832  000ED4  C0F3  F07B         	movff	main@distance+1,___ftge@ff1+1
  1833  000ED8  C0F4  F07C         	movff	main@distance+2,___ftge@ff1+2
  1834  000EDC  C0F8  F07D         	movff	main@distance+6,___ftge@ff2
  1835  000EE0  C0F9  F07E         	movff	main@distance+7,___ftge@ff2+1
  1836  000EE4  C0FA  F07F         	movff	main@distance+8,___ftge@ff2+2
  1837  000EE8  ECBC  F014         	call	___ftge	;wreg free
  1838  000EEC  0100               	movlb	0	; () banked
  1839  000EEE  B0D8               	btfsc	status,0,c
  1840  000EF0  D00D               	goto	l56
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;main.c: 170: {
  1844                           ;main.c: 171: capteur.c.x = c[0].x;
  1845  000EF2  C180  F17A         	movff	main@c,_capteur+19
  1846  000EF6  C181  F17B         	movff	main@c+1,_capteur+20
  1847  000EFA  C182  F17C         	movff	main@c+2,_capteur+21
  1848                           
  1849                           ;main.c: 172: capteur.c.y = c[0].y;
  1850  000EFE  C183  F17D         	movff	main@c+3,_capteur+22
  1851  000F02  C184  F17E         	movff	main@c+4,_capteur+23
  1852  000F06  C185  F17F         	movff	main@c+5,_capteur+24
  1853                           
  1854                           ;main.c: 174: }
  1855  000F0A  D038               	goto	l4436
  1856  000F0C                     l56:
  1857                           
  1858                           ; BSR set to: 0
  1859                           ;main.c: 175: else
  1860                           ;main.c: 176: {
  1861                           ;main.c: 178: capteur.c.x = c[2].x;
  1862  000F0C  C18C  F17A         	movff	main@c+12,_capteur+19
  1863  000F10  C18D  F17B         	movff	main@c+13,_capteur+20
  1864  000F14  C18E  F17C         	movff	main@c+14,_capteur+21
  1865                           
  1866                           ;main.c: 179: capteur.c.y = c[2].y;
  1867  000F18  C18F  F17D         	movff	main@c+15,_capteur+22
  1868  000F1C  C190  F17E         	movff	main@c+16,_capteur+23
  1869  000F20  C191  F17F         	movff	main@c+17,_capteur+24
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;main.c: 180: }
  1873                           ;main.c: 181: }
  1874  000F24  D02B               	goto	l4436
  1875  000F26                     l4432:
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;main.c: 182: else if (distance[1] < distance[2])
  1879  000F26  C0F5  F07A         	movff	main@distance+3,___ftge@ff1
  1880  000F2A  C0F6  F07B         	movff	main@distance+4,___ftge@ff1+1
  1881  000F2E  C0F7  F07C         	movff	main@distance+5,___ftge@ff1+2
  1882  000F32  C0F8  F07D         	movff	main@distance+6,___ftge@ff2
  1883  000F36  C0F9  F07E         	movff	main@distance+7,___ftge@ff2+1
  1884  000F3A  C0FA  F07F         	movff	main@distance+8,___ftge@ff2+2
  1885  000F3E  ECBC  F014         	call	___ftge	;wreg free
  1886  000F42  0100               	movlb	0	; () banked
  1887  000F44  B0D8               	btfsc	status,0,c
  1888  000F46  D00D               	goto	l59
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;main.c: 183: {
  1892                           ;main.c: 185: capteur.c.x = c[1].x;
  1893  000F48  C186  F17A         	movff	main@c+6,_capteur+19
  1894  000F4C  C187  F17B         	movff	main@c+7,_capteur+20
  1895  000F50  C188  F17C         	movff	main@c+8,_capteur+21
  1896                           
  1897                           ;main.c: 186: capteur.c.y = c[1].y;
  1898  000F54  C189  F17D         	movff	main@c+9,_capteur+22
  1899  000F58  C18A  F17E         	movff	main@c+10,_capteur+23
  1900  000F5C  C18B  F17F         	movff	main@c+11,_capteur+24
  1901                           
  1902                           ;main.c: 187: }
  1903  000F60  D00D               	goto	l4436
  1904  000F62                     l59:
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;main.c: 188: else
  1908                           ;main.c: 189: {
  1909                           ;main.c: 191: capteur.c.x = c[2].x;
  1910  000F62  C18C  F17A         	movff	main@c+12,_capteur+19
  1911  000F66  C18D  F17B         	movff	main@c+13,_capteur+20
  1912  000F6A  C18E  F17C         	movff	main@c+14,_capteur+21
  1913                           
  1914                           ;main.c: 192: capteur.c.y = c[2].y;
  1915  000F6E  C18F  F17D         	movff	main@c+15,_capteur+22
  1916  000F72  C190  F17E         	movff	main@c+16,_capteur+23
  1917  000F76  C191  F17F         	movff	main@c+17,_capteur+24
  1918                           
  1919                           ; BSR set to: 0
  1920                           
  1921                           ; BSR set to: 0
  1922  000F7A  D000               	goto	l4436
  1923  000F7C                     l4436:
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;main.c: 193: }
  1927                           ;main.c: 195: }
  1928                           ;main.c: 196: affichage_position();
  1929  000F7C  EC27  F00B         	call	_affichage_position	;wreg free
  1930  000F80  D654               	goto	l4374
  1931  000F82  D7FF               	goto	l64
  1932                           
  1933                           ;main.c: 206: return (0);
  1934                           ;	Return value of _main is never used
  1935  000F84  EF54  F000         	goto	start
  1936  000F88                     __end_of_main:
  1937                           	opt stack 0
  1938                           tblptru	equ	0xFF8
  1939                           tblptrh	equ	0xFF7
  1940                           tblptrl	equ	0xFF6
  1941                           tablat	equ	0xFF5
  1942                           postinc0	equ	0xFEE
  1943                           plusw0	equ	0xFEB
  1944                           wreg	equ	0xFE8
  1945                           postinc1	equ	0xFE6
  1946                           postdec1	equ	0xFE5
  1947                           plusw1	equ	0xFE3
  1948                           fsr1h	equ	0xFE2
  1949                           fsr1l	equ	0xFE1
  1950                           postinc2	equ	0xFDE
  1951                           fsr2h	equ	0xFDA
  1952                           fsr2l	equ	0xFD9
  1953                           status	equ	0xFD8
  1954                           
  1955 ;; *************** function _triangulation *****************
  1956 ;; Defined at:
  1957 ;;		line 24 in file "triangulation.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  c               2    0[BANK1 ] PTR struct .
  1960 ;;		 -> main@c(18), 
  1961 ;;  angle1          3    2[BANK1 ] PTR struct .
  1962 ;;  angle2          3    5[BANK1 ] PTR struct .
  1963 ;;  angle3          3    8[BANK1 ] PTR struct .
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  t              33   23[BANK1 ] struct .
  1966 ;; Return value:  Size  Location     Type
  1967 ;;		None               void
  1968 ;; Registers used:
  1969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1975 ;;      Params:         0       0      11       0
  1976 ;;      Locals:         0       0      45       0
  1977 ;;      Temps:          0       0       0       0
  1978 ;;      Totals:         0       0      56       0
  1979 ;;Total ram usage:       56 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:   13
  1982 ;; This function calls:
  1983 ;;		___ftadd
  1984 ;;		___ftdiv
  1985 ;;		___ftmul
  1986 ;;		___ftneg
  1987 ;;		_cotangeante
  1988 ;;		_saturation
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text1
  1995  0003A4                     __ptext1:
  1996                           	opt stack 0
  1997  0003A4                     _triangulation:
  1998                           	opt stack 17
  1999                           
  2000                           ;triangulation.c: 26: _triangulation t;
  2001                           ;triangulation.c: 29: t.cotan_1_2= cotangeante( angle2 - angle1 ) ;
  2002                           
  2003                           ;incstack = 0
  2004  0003A4  C194  F077         	movff	triangulation@angle1,___ftneg@f1
  2005  0003A8  C195  F078         	movff	triangulation@angle1+1,___ftneg@f1+1
  2006  0003AC  C196  F079         	movff	triangulation@angle1+2,___ftneg@f1+2
  2007  0003B0  EC50  F01A         	call	___ftneg	;wreg free
  2008  0003B4  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2009  0003B8  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2010  0003BC  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2011  0003C0  C197  F07D         	movff	triangulation@angle2,___ftadd@f2
  2012  0003C4  C198  F07E         	movff	triangulation@angle2+1,___ftadd@f2+1
  2013  0003C8  C199  F07F         	movff	triangulation@angle2+2,___ftadd@f2+2
  2014  0003CC  ECD7  F00D         	call	___ftadd	;wreg free
  2015  0003D0  C07A  F1A3         	movff	?___ftadd,_triangulation$3135
  2016  0003D4  C07B  F1A4         	movff	?___ftadd+1,_triangulation$3135+1
  2017  0003D8  C07C  F1A5         	movff	?___ftadd+2,_triangulation$3135+2
  2018                           
  2019                           ;triangulation.c: 26: _triangulation t;
  2020                           ;triangulation.c: 29: t.cotan_1_2= cotangeante( angle2 - angle1 ) ;
  2021  0003DC  C1A3  F0E4         	movff	_triangulation$3135,cotangeante@angle
  2022  0003E0  C1A4  F0E5         	movff	_triangulation$3135+1,cotangeante@angle+1
  2023  0003E4  C1A5  F0E6         	movff	_triangulation$3135+2,cotangeante@angle+2
  2024  0003E8  EC4F  F018         	call	_cotangeante	;wreg free
  2025  0003EC  C0E4  F1BB         	movff	?_cotangeante,triangulation@t+18
  2026  0003F0  C0E5  F1BC         	movff	?_cotangeante+1,triangulation@t+19
  2027  0003F4  C0E6  F1BD         	movff	?_cotangeante+2,triangulation@t+20
  2028                           
  2029                           ;triangulation.c: 30: t.cotan_2_3 = cotangeante( angle3 - angle2 ) ;
  2030  0003F8  C197  F077         	movff	triangulation@angle2,___ftneg@f1
  2031  0003FC  C198  F078         	movff	triangulation@angle2+1,___ftneg@f1+1
  2032  000400  C199  F079         	movff	triangulation@angle2+2,___ftneg@f1+2
  2033  000404  EC50  F01A         	call	___ftneg	;wreg free
  2034  000408  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2035  00040C  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2036  000410  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2037  000414  C19A  F07D         	movff	triangulation@angle3,___ftadd@f2
  2038  000418  C19B  F07E         	movff	triangulation@angle3+1,___ftadd@f2+1
  2039  00041C  C19C  F07F         	movff	triangulation@angle3+2,___ftadd@f2+2
  2040  000420  ECD7  F00D         	call	___ftadd	;wreg free
  2041  000424  C07A  F1A3         	movff	?___ftadd,_triangulation$3135
  2042  000428  C07B  F1A4         	movff	?___ftadd+1,_triangulation$3135+1
  2043  00042C  C07C  F1A5         	movff	?___ftadd+2,_triangulation$3135+2
  2044                           
  2045                           ;triangulation.c: 30: t.cotan_2_3 = cotangeante( angle3 - angle2 ) ;
  2046  000430  C1A3  F0E4         	movff	_triangulation$3135,cotangeante@angle
  2047  000434  C1A4  F0E5         	movff	_triangulation$3135+1,cotangeante@angle+1
  2048  000438  C1A5  F0E6         	movff	_triangulation$3135+2,cotangeante@angle+2
  2049  00043C  EC4F  F018         	call	_cotangeante	;wreg free
  2050  000440  C0E4  F1BE         	movff	?_cotangeante,triangulation@t+21
  2051  000444  C0E5  F1BF         	movff	?_cotangeante+1,triangulation@t+22
  2052  000448  C0E6  F1C0         	movff	?_cotangeante+2,triangulation@t+23
  2053                           
  2054                           ;triangulation.c: 33: t.cotan_1_2 = saturation( t.cotan_1_2 , 100000000 ) ;
  2055  00044C  C1BB  F083         	movff	triangulation@t+18,saturation@valeur
  2056  000450  C1BC  F084         	movff	triangulation@t+19,saturation@valeur+1
  2057  000454  C1BD  F085         	movff	triangulation@t+20,saturation@valeur+2
  2058  000458  0EBC               	movlw	188
  2059  00045A  0100               	movlb	0	; () banked
  2060  00045C  6F86               	movwf	saturation@maximum& (0+255),b
  2061  00045E  0EBE               	movlw	190
  2062  000460  0100               	movlb	0	; () banked
  2063  000462  6F87               	movwf	(saturation@maximum+1)& (0+255),b
  2064  000464  0E4C               	movlw	76
  2065  000466  0100               	movlb	0	; () banked
  2066  000468  6F88               	movwf	(saturation@maximum+2)& (0+255),b
  2067  00046A  ECD0  F015         	call	_saturation	;wreg free
  2068  00046E  C083  F1BB         	movff	?_saturation,triangulation@t+18
  2069  000472  C084  F1BC         	movff	?_saturation+1,triangulation@t+19
  2070  000476  C085  F1BD         	movff	?_saturation+2,triangulation@t+20
  2071                           
  2072                           ;triangulation.c: 34: t.cotan_2_3 = saturation( t.cotan_2_3 , 100000000 ) ;
  2073  00047A  C1BE  F083         	movff	triangulation@t+21,saturation@valeur
  2074  00047E  C1BF  F084         	movff	triangulation@t+22,saturation@valeur+1
  2075  000482  C1C0  F085         	movff	triangulation@t+23,saturation@valeur+2
  2076  000486  0EBC               	movlw	188
  2077  000488  0100               	movlb	0	; () banked
  2078  00048A  6F86               	movwf	saturation@maximum& (0+255),b
  2079  00048C  0EBE               	movlw	190
  2080  00048E  0100               	movlb	0	; () banked
  2081  000490  6F87               	movwf	(saturation@maximum+1)& (0+255),b
  2082  000492  0E4C               	movlw	76
  2083  000494  0100               	movlb	0	; () banked
  2084  000496  6F88               	movwf	(saturation@maximum+2)& (0+255),b
  2085  000498  ECD0  F015         	call	_saturation	;wreg free
  2086  00049C  C083  F1BE         	movff	?_saturation,triangulation@t+21
  2087  0004A0  C084  F1BF         	movff	?_saturation+1,triangulation@t+22
  2088  0004A4  C085  F1C0         	movff	?_saturation+2,triangulation@t+23
  2089                           
  2090                           ;triangulation.c: 36: t.cotan_3_1 = ( 1.0 - t.cotan_1_2 * t.cotan_2_3 ) / ( t.cotan_1_2 
      +                          + t.cotan_2_3 ) ;
  2091  0004A8  0E00               	movlw	0
  2092  0004AA  0100               	movlb	0	; () banked
  2093  0004AC  6F7D               	movwf	___ftadd@f2& (0+255),b
  2094  0004AE  0E80               	movlw	128
  2095  0004B0  0100               	movlb	0	; () banked
  2096  0004B2  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2097  0004B4  0E3F               	movlw	63
  2098  0004B6  0100               	movlb	0	; () banked
  2099  0004B8  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2100  0004BA  C1BE  F06B         	movff	triangulation@t+21,___ftmul@f2
  2101  0004BE  C1BF  F06C         	movff	triangulation@t+22,___ftmul@f2+1
  2102  0004C2  C1C0  F06D         	movff	triangulation@t+23,___ftmul@f2+2
  2103  0004C6  C1BB  F068         	movff	triangulation@t+18,___ftmul@f1
  2104  0004CA  C1BC  F069         	movff	triangulation@t+19,___ftmul@f1+1
  2105  0004CE  C1BD  F06A         	movff	triangulation@t+20,___ftmul@f1+2
  2106  0004D2  ECF8  F00F         	call	___ftmul	;wreg free
  2107  0004D6  C068  F077         	movff	?___ftmul,___ftneg@f1
  2108  0004DA  C069  F078         	movff	?___ftmul+1,___ftneg@f1+1
  2109  0004DE  C06A  F079         	movff	?___ftmul+2,___ftneg@f1+2
  2110  0004E2  EC50  F01A         	call	___ftneg	;wreg free
  2111  0004E6  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2112  0004EA  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2113  0004EE  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2114  0004F2  ECD7  F00D         	call	___ftadd	;wreg free
  2115  0004F6  C07A  F092         	movff	?___ftadd,___ftdiv@f1
  2116  0004FA  C07B  F093         	movff	?___ftadd+1,___ftdiv@f1+1
  2117  0004FE  C07C  F094         	movff	?___ftadd+2,___ftdiv@f1+2
  2118  000502  C1BE  F07D         	movff	triangulation@t+21,___ftadd@f2
  2119  000506  C1BF  F07E         	movff	triangulation@t+22,___ftadd@f2+1
  2120  00050A  C1C0  F07F         	movff	triangulation@t+23,___ftadd@f2+2
  2121  00050E  C1BB  F07A         	movff	triangulation@t+18,___ftadd@f1
  2122  000512  C1BC  F07B         	movff	triangulation@t+19,___ftadd@f1+1
  2123  000516  C1BD  F07C         	movff	triangulation@t+20,___ftadd@f1+2
  2124  00051A  ECD7  F00D         	call	___ftadd	;wreg free
  2125  00051E  C07A  F095         	movff	?___ftadd,___ftdiv@f2
  2126  000522  C07B  F096         	movff	?___ftadd+1,___ftdiv@f2+1
  2127  000526  C07C  F097         	movff	?___ftadd+2,___ftdiv@f2+2
  2128  00052A  ECA6  F010         	call	___ftdiv	;wreg free
  2129  00052E  C092  F1C1         	movff	?___ftdiv,triangulation@t+24
  2130  000532  C093  F1C2         	movff	?___ftdiv+1,triangulation@t+25
  2131  000536  C094  F1C3         	movff	?___ftdiv+2,triangulation@t+26
  2132                           
  2133                           ;triangulation.c: 37: t.cotan_3_1 = saturation( t.cotan_3_1 , 100000000 ) ;
  2134  00053A  C1C1  F083         	movff	triangulation@t+24,saturation@valeur
  2135  00053E  C1C2  F084         	movff	triangulation@t+25,saturation@valeur+1
  2136  000542  C1C3  F085         	movff	triangulation@t+26,saturation@valeur+2
  2137  000546  0EBC               	movlw	188
  2138  000548  0100               	movlb	0	; () banked
  2139  00054A  6F86               	movwf	saturation@maximum& (0+255),b
  2140  00054C  0EBE               	movlw	190
  2141  00054E  0100               	movlb	0	; () banked
  2142  000550  6F87               	movwf	(saturation@maximum+1)& (0+255),b
  2143  000552  0E4C               	movlw	76
  2144  000554  0100               	movlb	0	; () banked
  2145  000556  6F88               	movwf	(saturation@maximum+2)& (0+255),b
  2146  000558  ECD0  F015         	call	_saturation	;wreg free
  2147  00055C  C083  F1C1         	movff	?_saturation,triangulation@t+24
  2148  000560  C084  F1C2         	movff	?_saturation+1,triangulation@t+25
  2149  000564  C085  F1C3         	movff	?_saturation+2,triangulation@t+26
  2150                           
  2151                           ;triangulation.c: 40: t.cercle._1_2.x = (2062. - -62.) + t.cotan_1_2 * (3062. - 3062.) ;
  2152  000568  0E00               	movlw	0
  2153  00056A  0100               	movlb	0	; () banked
  2154  00056C  6F6B               	movwf	___ftmul@f2& (0+255),b
  2155  00056E  0E00               	movlw	0
  2156  000570  0100               	movlb	0	; () banked
  2157  000572  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  2158  000574  0E00               	movlw	0
  2159  000576  0100               	movlb	0	; () banked
  2160  000578  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  2161  00057A  C1BB  F068         	movff	triangulation@t+18,___ftmul@f1
  2162  00057E  C1BC  F069         	movff	triangulation@t+19,___ftmul@f1+1
  2163  000582  C1BD  F06A         	movff	triangulation@t+20,___ftmul@f1+2
  2164  000586  ECF8  F00F         	call	___ftmul	;wreg free
  2165  00058A  C068  F07A         	movff	?___ftmul,___ftadd@f1
  2166  00058E  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  2167  000592  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  2168  000596  0EC0               	movlw	192
  2169  000598  0100               	movlb	0	; () banked
  2170  00059A  6F7D               	movwf	___ftadd@f2& (0+255),b
  2171  00059C  0E04               	movlw	4
  2172  00059E  0100               	movlb	0	; () banked
  2173  0005A0  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2174  0005A2  0E45               	movlw	69
  2175  0005A4  0100               	movlb	0	; () banked
  2176  0005A6  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2177  0005A8  ECD7  F00D         	call	___ftadd	;wreg free
  2178  0005AC  C07A  F1A9         	movff	?___ftadd,triangulation@t
  2179  0005B0  C07B  F1AA         	movff	?___ftadd+1,triangulation@t+1
  2180  0005B4  C07C  F1AB         	movff	?___ftadd+2,triangulation@t+2
  2181                           
  2182                           ;triangulation.c: 41: t.cercle._1_2.y = (3062. - 3062.) - t.cotan_1_2 * (2062. - -62.) ;
  2183  0005B8  0E60               	movlw	96
  2184  0005BA  0100               	movlb	0	; () banked
  2185  0005BC  6F7D               	movwf	___ftadd@f2& (0+255),b
  2186  0005BE  0E3F               	movlw	63
  2187  0005C0  0100               	movlb	0	; () banked
  2188  0005C2  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2189  0005C4  0E45               	movlw	69
  2190  0005C6  0100               	movlb	0	; () banked
  2191  0005C8  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2192  0005CA  0EC0               	movlw	192
  2193  0005CC  0100               	movlb	0	; () banked
  2194  0005CE  6F6B               	movwf	___ftmul@f2& (0+255),b
  2195  0005D0  0E04               	movlw	4
  2196  0005D2  0100               	movlb	0	; () banked
  2197  0005D4  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  2198  0005D6  0E45               	movlw	69
  2199  0005D8  0100               	movlb	0	; () banked
  2200  0005DA  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  2201  0005DC  C1BB  F068         	movff	triangulation@t+18,___ftmul@f1
  2202  0005E0  C1BC  F069         	movff	triangulation@t+19,___ftmul@f1+1
  2203  0005E4  C1BD  F06A         	movff	triangulation@t+20,___ftmul@f1+2
  2204  0005E8  ECF8  F00F         	call	___ftmul	;wreg free
  2205  0005EC  C068  F07A         	movff	?___ftmul,___ftadd@f1
  2206  0005F0  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  2207  0005F4  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  2208  0005F8  ECD7  F00D         	call	___ftadd	;wreg free
  2209  0005FC  C07A  F077         	movff	?___ftadd,___ftneg@f1
  2210  000600  C07B  F078         	movff	?___ftadd+1,___ftneg@f1+1
  2211  000604  C07C  F079         	movff	?___ftadd+2,___ftneg@f1+2
  2212  000608  EC50  F01A         	call	___ftneg	;wreg free
  2213  00060C  C077  F1A6         	movff	?___ftneg,_triangulation$3136
  2214  000610  C078  F1A7         	movff	?___ftneg+1,_triangulation$3136+1
  2215  000614  C079  F1A8         	movff	?___ftneg+2,_triangulation$3136+2
  2216                           
  2217                           ;triangulation.c: 41: t.cercle._1_2.y = (3062. - 3062.) - t.cotan_1_2 * (2062. - -62.) ;
  2218  000618  C1A6  F07A         	movff	_triangulation$3136,___ftadd@f1
  2219  00061C  C1A7  F07B         	movff	_triangulation$3136+1,___ftadd@f1+1
  2220  000620  C1A8  F07C         	movff	_triangulation$3136+2,___ftadd@f1+2
  2221  000624  0E60               	movlw	96
  2222  000626  0100               	movlb	0	; () banked
  2223  000628  6F7D               	movwf	___ftadd@f2& (0+255),b
  2224  00062A  0E3F               	movlw	63
  2225  00062C  0100               	movlb	0	; () banked
  2226  00062E  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2227  000630  0E45               	movlw	69
  2228  000632  0100               	movlb	0	; () banked
  2229  000634  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2230  000636  ECD7  F00D         	call	___ftadd	;wreg free
  2231  00063A  C07A  F1AC         	movff	?___ftadd,triangulation@t+3
  2232  00063E  C07B  F1AD         	movff	?___ftadd+1,triangulation@t+4
  2233  000642  C07C  F1AE         	movff	?___ftadd+2,triangulation@t+5
  2234                           
  2235                           ;triangulation.c: 44: t.cercle._2_3.x = (1000. - -62.) - t.cotan_2_3 * (-62. - 3062.);
  2236  000646  0E40               	movlw	64
  2237  000648  0100               	movlb	0	; () banked
  2238  00064A  6F6B               	movwf	___ftmul@f2& (0+255),b
  2239  00064C  0E43               	movlw	67
  2240  00064E  0100               	movlb	0	; () banked
  2241  000650  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  2242  000652  0EC5               	movlw	197
  2243  000654  0100               	movlb	0	; () banked
  2244  000656  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  2245  000658  C1BE  F068         	movff	triangulation@t+21,___ftmul@f1
  2246  00065C  C1BF  F069         	movff	triangulation@t+22,___ftmul@f1+1
  2247  000660  C1C0  F06A         	movff	triangulation@t+23,___ftmul@f1+2
  2248  000664  ECF8  F00F         	call	___ftmul	;wreg free
  2249  000668  C068  F077         	movff	?___ftmul,___ftneg@f1
  2250  00066C  C069  F078         	movff	?___ftmul+1,___ftneg@f1+1
  2251  000670  C06A  F079         	movff	?___ftmul+2,___ftneg@f1+2
  2252  000674  EC50  F01A         	call	___ftneg	;wreg free
  2253  000678  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2254  00067C  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2255  000680  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2256  000684  0EC0               	movlw	192
  2257  000686  0100               	movlb	0	; () banked
  2258  000688  6F7D               	movwf	___ftadd@f2& (0+255),b
  2259  00068A  0E84               	movlw	132
  2260  00068C  0100               	movlb	0	; () banked
  2261  00068E  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2262  000690  0E44               	movlw	68
  2263  000692  0100               	movlb	0	; () banked
  2264  000694  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2265  000696  ECD7  F00D         	call	___ftadd	;wreg free
  2266  00069A  C07A  F1AF         	movff	?___ftadd,triangulation@t+6
  2267  00069E  C07B  F1B0         	movff	?___ftadd+1,triangulation@t+7
  2268  0006A2  C07C  F1B1         	movff	?___ftadd+2,triangulation@t+8
  2269                           
  2270                           ;triangulation.c: 45: t.cercle._2_3.y = (-62. - 3062.) + t.cotan_2_3 * (1000. - -62.);
  2271  0006A6  0EC0               	movlw	192
  2272  0006A8  0100               	movlb	0	; () banked
  2273  0006AA  6F6B               	movwf	___ftmul@f2& (0+255),b
  2274  0006AC  0E84               	movlw	132
  2275  0006AE  0100               	movlb	0	; () banked
  2276  0006B0  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  2277  0006B2  0E44               	movlw	68
  2278  0006B4  0100               	movlb	0	; () banked
  2279  0006B6  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  2280  0006B8  C1BE  F068         	movff	triangulation@t+21,___ftmul@f1
  2281  0006BC  C1BF  F069         	movff	triangulation@t+22,___ftmul@f1+1
  2282  0006C0  C1C0  F06A         	movff	triangulation@t+23,___ftmul@f1+2
  2283  0006C4  ECF8  F00F         	call	___ftmul	;wreg free
  2284  0006C8  C068  F07A         	movff	?___ftmul,___ftadd@f1
  2285  0006CC  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  2286  0006D0  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  2287  0006D4  0E40               	movlw	64
  2288  0006D6  0100               	movlb	0	; () banked
  2289  0006D8  6F7D               	movwf	___ftadd@f2& (0+255),b
  2290  0006DA  0E43               	movlw	67
  2291  0006DC  0100               	movlb	0	; () banked
  2292  0006DE  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2293  0006E0  0EC5               	movlw	197
  2294  0006E2  0100               	movlb	0	; () banked
  2295  0006E4  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2296  0006E6  ECD7  F00D         	call	___ftadd	;wreg free
  2297  0006EA  C07A  F1B2         	movff	?___ftadd,triangulation@t+9
  2298  0006EE  C07B  F1B3         	movff	?___ftadd+1,triangulation@t+10
  2299  0006F2  C07C  F1B4         	movff	?___ftadd+2,triangulation@t+11
  2300                           
  2301                           ;triangulation.c: 48: t.cercle._3_1.x = ((1000. - -62.) + (2062. - -62.)) + t.cotan_3_1 
      +                          * ((-62. - 3062.) - (3062. - 3062.));
  2302  0006F6  0E40               	movlw	64
  2303  0006F8  0100               	movlb	0	; () banked
  2304  0006FA  6F6B               	movwf	___ftmul@f2& (0+255),b
  2305  0006FC  0E43               	movlw	67
  2306  0006FE  0100               	movlb	0	; () banked
  2307  000700  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  2308  000702  0EC5               	movlw	197
  2309  000704  0100               	movlb	0	; () banked
  2310  000706  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  2311  000708  C1C1  F068         	movff	triangulation@t+24,___ftmul@f1
  2312  00070C  C1C2  F069         	movff	triangulation@t+25,___ftmul@f1+1
  2313  000710  C1C3  F06A         	movff	triangulation@t+26,___ftmul@f1+2
  2314  000714  ECF8  F00F         	call	___ftmul	;wreg free
  2315  000718  C068  F07A         	movff	?___ftmul,___ftadd@f1
  2316  00071C  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  2317  000720  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  2318  000724  0E20               	movlw	32
  2319  000726  0100               	movlb	0	; () banked
  2320  000728  6F7D               	movwf	___ftadd@f2& (0+255),b
  2321  00072A  0E47               	movlw	71
  2322  00072C  0100               	movlb	0	; () banked
  2323  00072E  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2324  000730  0E45               	movlw	69
  2325  000732  0100               	movlb	0	; () banked
  2326  000734  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2327  000736  ECD7  F00D         	call	___ftadd	;wreg free
  2328  00073A  C07A  F1B5         	movff	?___ftadd,triangulation@t+12
  2329  00073E  C07B  F1B6         	movff	?___ftadd+1,triangulation@t+13
  2330  000742  C07C  F1B7         	movff	?___ftadd+2,triangulation@t+14
  2331                           
  2332                           ;triangulation.c: 49: t.cercle._3_1.y = ((-62. - 3062.) + (3062. - 3062.)) - t.cotan_3_1
      +                           * ((1000. - -62.) - (2062. - -62.));
  2333  000746  0EC0               	movlw	192
  2334  000748  0100               	movlb	0	; () banked
  2335  00074A  6F6B               	movwf	___ftmul@f2& (0+255),b
  2336  00074C  0E84               	movlw	132
  2337  00074E  0100               	movlb	0	; () banked
  2338  000750  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  2339  000752  0EC4               	movlw	196
  2340  000754  0100               	movlb	0	; () banked
  2341  000756  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  2342  000758  C1C1  F068         	movff	triangulation@t+24,___ftmul@f1
  2343  00075C  C1C2  F069         	movff	triangulation@t+25,___ftmul@f1+1
  2344  000760  C1C3  F06A         	movff	triangulation@t+26,___ftmul@f1+2
  2345  000764  ECF8  F00F         	call	___ftmul	;wreg free
  2346  000768  C068  F077         	movff	?___ftmul,___ftneg@f1
  2347  00076C  C069  F078         	movff	?___ftmul+1,___ftneg@f1+1
  2348  000770  C06A  F079         	movff	?___ftmul+2,___ftneg@f1+2
  2349  000774  EC50  F01A         	call	___ftneg	;wreg free
  2350  000778  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2351  00077C  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2352  000780  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2353  000784  0E40               	movlw	64
  2354  000786  0100               	movlb	0	; () banked
  2355  000788  6F7D               	movwf	___ftadd@f2& (0+255),b
  2356  00078A  0E43               	movlw	67
  2357  00078C  0100               	movlb	0	; () banked
  2358  00078E  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2359  000790  0EC5               	movlw	197
  2360  000792  0100               	movlb	0	; () banked
  2361  000794  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2362  000796  ECD7  F00D         	call	___ftadd	;wreg free
  2363  00079A  C07A  F1B8         	movff	?___ftadd,triangulation@t+15
  2364  00079E  C07B  F1B9         	movff	?___ftadd+1,triangulation@t+16
  2365  0007A2  C07C  F1BA         	movff	?___ftadd+2,triangulation@t+17
  2366                           
  2367                           ;triangulation.c: 51: t.K = ((1000. - -62.) * (2062. - -62.)) + ((-62. - 3062.) * (3062.
      +                           - 3062.)) + t.cotan_3_1 * ( ((-62. - 3062.) * (2062. - -62.)) - ((1000. - -62.) * (3062
      +                          . - 3062.)));
  2368  0007A6  0E7F               	movlw	127
  2369  0007A8  0100               	movlb	0	; () banked
  2370  0007AA  6F6B               	movwf	___ftmul@f2& (0+255),b
  2371  0007AC  0ECA               	movlw	202
  2372  0007AE  0100               	movlb	0	; () banked
  2373  0007B0  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  2374  0007B2  0ECA               	movlw	202
  2375  0007B4  0100               	movlb	0	; () banked
  2376  0007B6  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  2377  0007B8  C1C1  F068         	movff	triangulation@t+24,___ftmul@f1
  2378  0007BC  C1C2  F069         	movff	triangulation@t+25,___ftmul@f1+1
  2379  0007C0  C1C3  F06A         	movff	triangulation@t+26,___ftmul@f1+2
  2380  0007C4  ECF8  F00F         	call	___ftmul	;wreg free
  2381  0007C8  C068  F07A         	movff	?___ftmul,___ftadd@f1
  2382  0007CC  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  2383  0007D0  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  2384  0007D4  0EAD               	movlw	173
  2385  0007D6  0100               	movlb	0	; () banked
  2386  0007D8  6F7D               	movwf	___ftadd@f2& (0+255),b
  2387  0007DA  0E09               	movlw	9
  2388  0007DC  0100               	movlb	0	; () banked
  2389  0007DE  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2390  0007E0  0E4A               	movlw	74
  2391  0007E2  0100               	movlb	0	; () banked
  2392  0007E4  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2393  0007E6  ECD7  F00D         	call	___ftadd	;wreg free
  2394  0007EA  C07A  F1C7         	movff	?___ftadd,triangulation@t+30
  2395  0007EE  C07B  F1C8         	movff	?___ftadd+1,triangulation@t+31
  2396  0007F2  C07C  F1C9         	movff	?___ftadd+2,triangulation@t+32
  2397                           
  2398                           ;triangulation.c: 53: t.D = (t.cercle._1_2.x - t.cercle._2_3.x) * (t.cercle._2_3.y - t.c
      +                          ercle._3_1.y) - (t.cercle._2_3.x - t.cercle._3_1.x) * (t.cercle._1_2.y - t.cercle._2_3.y
      +                          );
  2399  0007F6  C1AC  F07D         	movff	triangulation@t+3,___ftadd@f2
  2400  0007FA  C1AD  F07E         	movff	triangulation@t+4,___ftadd@f2+1
  2401  0007FE  C1AE  F07F         	movff	triangulation@t+5,___ftadd@f2+2
  2402  000802  C1B2  F077         	movff	triangulation@t+9,___ftneg@f1
  2403  000806  C1B3  F078         	movff	triangulation@t+10,___ftneg@f1+1
  2404  00080A  C1B4  F079         	movff	triangulation@t+11,___ftneg@f1+2
  2405  00080E  EC50  F01A         	call	___ftneg	;wreg free
  2406  000812  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2407  000816  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2408  00081A  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2409  00081E  ECD7  F00D         	call	___ftadd	;wreg free
  2410  000822  C07A  F06B         	movff	?___ftadd,___ftmul@f2
  2411  000826  C07B  F06C         	movff	?___ftadd+1,___ftmul@f2+1
  2412  00082A  C07C  F06D         	movff	?___ftadd+2,___ftmul@f2+2
  2413  00082E  C1AF  F07D         	movff	triangulation@t+6,___ftadd@f2
  2414  000832  C1B0  F07E         	movff	triangulation@t+7,___ftadd@f2+1
  2415  000836  C1B1  F07F         	movff	triangulation@t+8,___ftadd@f2+2
  2416  00083A  C1B5  F077         	movff	triangulation@t+12,___ftneg@f1
  2417  00083E  C1B6  F078         	movff	triangulation@t+13,___ftneg@f1+1
  2418  000842  C1B7  F079         	movff	triangulation@t+14,___ftneg@f1+2
  2419  000846  EC50  F01A         	call	___ftneg	;wreg free
  2420  00084A  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2421  00084E  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2422  000852  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2423  000856  ECD7  F00D         	call	___ftadd	;wreg free
  2424  00085A  C07A  F068         	movff	?___ftadd,___ftmul@f1
  2425  00085E  C07B  F069         	movff	?___ftadd+1,___ftmul@f1+1
  2426  000862  C07C  F06A         	movff	?___ftadd+2,___ftmul@f1+2
  2427  000866  ECF8  F00F         	call	___ftmul	;wreg free
  2428  00086A  C068  F19D         	movff	?___ftmul,_triangulation$3137
  2429  00086E  C069  F19E         	movff	?___ftmul+1,_triangulation$3137+1
  2430  000872  C06A  F19F         	movff	?___ftmul+2,_triangulation$3137+2
  2431                           
  2432                           ;triangulation.c: 53: t.D = (t.cercle._1_2.x - t.cercle._2_3.x) * (t.cercle._2_3.y - t.c
      +                          ercle._3_1.y) - (t.cercle._2_3.x - t.cercle._3_1.x) * (t.cercle._1_2.y - t.cercle._2_3.y
      +                          );
  2433  000876  C1B2  F07D         	movff	triangulation@t+9,___ftadd@f2
  2434  00087A  C1B3  F07E         	movff	triangulation@t+10,___ftadd@f2+1
  2435  00087E  C1B4  F07F         	movff	triangulation@t+11,___ftadd@f2+2
  2436  000882  C1B8  F077         	movff	triangulation@t+15,___ftneg@f1
  2437  000886  C1B9  F078         	movff	triangulation@t+16,___ftneg@f1+1
  2438  00088A  C1BA  F079         	movff	triangulation@t+17,___ftneg@f1+2
  2439  00088E  EC50  F01A         	call	___ftneg	;wreg free
  2440  000892  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2441  000896  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2442  00089A  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2443  00089E  ECD7  F00D         	call	___ftadd	;wreg free
  2444  0008A2  C07A  F06B         	movff	?___ftadd,___ftmul@f2
  2445  0008A6  C07B  F06C         	movff	?___ftadd+1,___ftmul@f2+1
  2446  0008AA  C07C  F06D         	movff	?___ftadd+2,___ftmul@f2+2
  2447  0008AE  C1A9  F07D         	movff	triangulation@t,___ftadd@f2
  2448  0008B2  C1AA  F07E         	movff	triangulation@t+1,___ftadd@f2+1
  2449  0008B6  C1AB  F07F         	movff	triangulation@t+2,___ftadd@f2+2
  2450  0008BA  C1AF  F077         	movff	triangulation@t+6,___ftneg@f1
  2451  0008BE  C1B0  F078         	movff	triangulation@t+7,___ftneg@f1+1
  2452  0008C2  C1B1  F079         	movff	triangulation@t+8,___ftneg@f1+2
  2453  0008C6  EC50  F01A         	call	___ftneg	;wreg free
  2454  0008CA  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2455  0008CE  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2456  0008D2  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2457  0008D6  ECD7  F00D         	call	___ftadd	;wreg free
  2458  0008DA  C07A  F068         	movff	?___ftadd,___ftmul@f1
  2459  0008DE  C07B  F069         	movff	?___ftadd+1,___ftmul@f1+1
  2460  0008E2  C07C  F06A         	movff	?___ftadd+2,___ftmul@f1+2
  2461  0008E6  ECF8  F00F         	call	___ftmul	;wreg free
  2462  0008EA  C068  F1A0         	movff	?___ftmul,_triangulation$3138
  2463  0008EE  C069  F1A1         	movff	?___ftmul+1,_triangulation$3138+1
  2464  0008F2  C06A  F1A2         	movff	?___ftmul+2,_triangulation$3138+2
  2465                           
  2466                           ;triangulation.c: 53: t.D = (t.cercle._1_2.x - t.cercle._2_3.x) * (t.cercle._2_3.y - t.c
      +                          ercle._3_1.y) - (t.cercle._2_3.x - t.cercle._3_1.x) * (t.cercle._1_2.y - t.cercle._2_3.y
      +                          );
  2467  0008F6  C1A0  F07A         	movff	_triangulation$3138,___ftadd@f1
  2468  0008FA  C1A1  F07B         	movff	_triangulation$3138+1,___ftadd@f1+1
  2469  0008FE  C1A2  F07C         	movff	_triangulation$3138+2,___ftadd@f1+2
  2470  000902  C19D  F077         	movff	_triangulation$3137,___ftneg@f1
  2471  000906  C19E  F078         	movff	_triangulation$3137+1,___ftneg@f1+1
  2472  00090A  C19F  F079         	movff	_triangulation$3137+2,___ftneg@f1+2
  2473  00090E  EC50  F01A         	call	___ftneg	;wreg free
  2474  000912  C077  F07D         	movff	?___ftneg,___ftadd@f2
  2475  000916  C078  F07E         	movff	?___ftneg+1,___ftadd@f2+1
  2476  00091A  C079  F07F         	movff	?___ftneg+2,___ftadd@f2+2
  2477  00091E  ECD7  F00D         	call	___ftadd	;wreg free
  2478  000922  C07A  F1C4         	movff	?___ftadd,triangulation@t+27
  2479  000926  C07B  F1C5         	movff	?___ftadd+1,triangulation@t+28
  2480  00092A  C07C  F1C6         	movff	?___ftadd+2,triangulation@t+29
  2481                           
  2482                           ;triangulation.c: 54: t.K /= t.D;
  2483  00092E  C1C7  F092         	movff	triangulation@t+30,___ftdiv@f1
  2484  000932  C1C8  F093         	movff	triangulation@t+31,___ftdiv@f1+1
  2485  000936  C1C9  F094         	movff	triangulation@t+32,___ftdiv@f1+2
  2486  00093A  C1C4  F095         	movff	triangulation@t+27,___ftdiv@f2
  2487  00093E  C1C5  F096         	movff	triangulation@t+28,___ftdiv@f2+1
  2488  000942  C1C6  F097         	movff	triangulation@t+29,___ftdiv@f2+2
  2489  000946  ECA6  F010         	call	___ftdiv	;wreg free
  2490  00094A  C092  F1C7         	movff	?___ftdiv,triangulation@t+30
  2491  00094E  C093  F1C8         	movff	?___ftdiv+1,triangulation@t+31
  2492  000952  C094  F1C9         	movff	?___ftdiv+2,triangulation@t+32
  2493                           
  2494                           ;triangulation.c: 56: c->x = t.K * (t.cercle._1_2.y - t.cercle._2_3.y) + -62. ;
  2495  000956  C1C7  F06B         	movff	triangulation@t+30,___ftmul@f2
  2496  00095A  C1C8  F06C         	movff	triangulation@t+31,___ftmul@f2+1
  2497  00095E  C1C9  F06D         	movff	triangulation@t+32,___ftmul@f2+2
  2498  000962  C1AC  F07D         	movff	triangulation@t+3,___ftadd@f2
  2499  000966  C1AD  F07E         	movff	triangulation@t+4,___ftadd@f2+1
  2500  00096A  C1AE  F07F         	movff	triangulation@t+5,___ftadd@f2+2
  2501  00096E  C1B2  F077         	movff	triangulation@t+9,___ftneg@f1
  2502  000972  C1B3  F078         	movff	triangulation@t+10,___ftneg@f1+1
  2503  000976  C1B4  F079         	movff	triangulation@t+11,___ftneg@f1+2
  2504  00097A  EC50  F01A         	call	___ftneg	;wreg free
  2505  00097E  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2506  000982  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2507  000986  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2508  00098A  ECD7  F00D         	call	___ftadd	;wreg free
  2509  00098E  C07A  F068         	movff	?___ftadd,___ftmul@f1
  2510  000992  C07B  F069         	movff	?___ftadd+1,___ftmul@f1+1
  2511  000996  C07C  F06A         	movff	?___ftadd+2,___ftmul@f1+2
  2512  00099A  ECF8  F00F         	call	___ftmul	;wreg free
  2513  00099E  C068  F1A6         	movff	?___ftmul,_triangulation$3136
  2514  0009A2  C069  F1A7         	movff	?___ftmul+1,_triangulation$3136+1
  2515  0009A6  C06A  F1A8         	movff	?___ftmul+2,_triangulation$3136+2
  2516                           
  2517                           ;triangulation.c: 56: c->x = t.K * (t.cercle._1_2.y - t.cercle._2_3.y) + -62. ;
  2518  0009AA  C1A6  F07A         	movff	_triangulation$3136,___ftadd@f1
  2519  0009AE  C1A7  F07B         	movff	_triangulation$3136+1,___ftadd@f1+1
  2520  0009B2  C1A8  F07C         	movff	_triangulation$3136+2,___ftadd@f1+2
  2521  0009B6  0E00               	movlw	0
  2522  0009B8  0100               	movlb	0	; () banked
  2523  0009BA  6F7D               	movwf	___ftadd@f2& (0+255),b
  2524  0009BC  0E78               	movlw	120
  2525  0009BE  0100               	movlb	0	; () banked
  2526  0009C0  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2527  0009C2  0EC2               	movlw	194
  2528  0009C4  0100               	movlb	0	; () banked
  2529  0009C6  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2530  0009C8  ECD7  F00D         	call	___ftadd	;wreg free
  2531  0009CC  C192  FFD9         	movff	triangulation@c,fsr2l
  2532  0009D0  C193  FFDA         	movff	triangulation@c+1,fsr2h
  2533  0009D4  C07A  FFDE         	movff	?___ftadd,postinc2
  2534  0009D8  C07B  FFDE         	movff	?___ftadd+1,postinc2
  2535  0009DC  C07C  FFDE         	movff	?___ftadd+2,postinc2
  2536                           
  2537                           ;triangulation.c: 57: c->y = t.K * (t.cercle._2_3.x - t.cercle._1_2.x) + 3062. ;
  2538  0009E0  C1C7  F06B         	movff	triangulation@t+30,___ftmul@f2
  2539  0009E4  C1C8  F06C         	movff	triangulation@t+31,___ftmul@f2+1
  2540  0009E8  C1C9  F06D         	movff	triangulation@t+32,___ftmul@f2+2
  2541  0009EC  C1AF  F07D         	movff	triangulation@t+6,___ftadd@f2
  2542  0009F0  C1B0  F07E         	movff	triangulation@t+7,___ftadd@f2+1
  2543  0009F4  C1B1  F07F         	movff	triangulation@t+8,___ftadd@f2+2
  2544  0009F8  C1A9  F077         	movff	triangulation@t,___ftneg@f1
  2545  0009FC  C1AA  F078         	movff	triangulation@t+1,___ftneg@f1+1
  2546  000A00  C1AB  F079         	movff	triangulation@t+2,___ftneg@f1+2
  2547  000A04  EC50  F01A         	call	___ftneg	;wreg free
  2548  000A08  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2549  000A0C  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2550  000A10  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2551  000A14  ECD7  F00D         	call	___ftadd	;wreg free
  2552  000A18  C07A  F068         	movff	?___ftadd,___ftmul@f1
  2553  000A1C  C07B  F069         	movff	?___ftadd+1,___ftmul@f1+1
  2554  000A20  C07C  F06A         	movff	?___ftadd+2,___ftmul@f1+2
  2555  000A24  ECF8  F00F         	call	___ftmul	;wreg free
  2556  000A28  C068  F1A6         	movff	?___ftmul,_triangulation$3136
  2557  000A2C  C069  F1A7         	movff	?___ftmul+1,_triangulation$3136+1
  2558  000A30  C06A  F1A8         	movff	?___ftmul+2,_triangulation$3136+2
  2559                           
  2560                           ;triangulation.c: 57: c->y = t.K * (t.cercle._2_3.x - t.cercle._1_2.x) + 3062. ;
  2561  000A34  C1A6  F07A         	movff	_triangulation$3136,___ftadd@f1
  2562  000A38  C1A7  F07B         	movff	_triangulation$3136+1,___ftadd@f1+1
  2563  000A3C  C1A8  F07C         	movff	_triangulation$3136+2,___ftadd@f1+2
  2564  000A40  0E60               	movlw	96
  2565  000A42  0100               	movlb	0	; () banked
  2566  000A44  6F7D               	movwf	___ftadd@f2& (0+255),b
  2567  000A46  0E3F               	movlw	63
  2568  000A48  0100               	movlb	0	; () banked
  2569  000A4A  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2570  000A4C  0E45               	movlw	69
  2571  000A4E  0100               	movlb	0	; () banked
  2572  000A50  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2573  000A52  ECD7  F00D         	call	___ftadd	;wreg free
  2574  000A56  0101               	movlb	1	; () banked
  2575  000A58  EE20 F003          	lfsr	2,3
  2576  000A5C  5192               	movf	triangulation@c& (0+255),w,b
  2577  000A5E  26D9               	addwf	fsr2l,f,c
  2578  000A60  5193               	movf	(triangulation@c+1)& (0+255),w,b
  2579  000A62  22DA               	addwfc	fsr2h,f,c
  2580  000A64  C07A  FFDE         	movff	?___ftadd,postinc2
  2581  000A68  C07B  FFDE         	movff	?___ftadd+1,postinc2
  2582  000A6C  C07C  FFDE         	movff	?___ftadd+2,postinc2
  2583                           
  2584                           ; BSR set to: 1
  2585  000A70  0012               	return		;funcret
  2586  000A72                     __end_of_triangulation:
  2587                           	opt stack 0
  2588                           tblptru	equ	0xFF8
  2589                           tblptrh	equ	0xFF7
  2590                           tblptrl	equ	0xFF6
  2591                           tablat	equ	0xFF5
  2592                           postinc0	equ	0xFEE
  2593                           plusw0	equ	0xFEB
  2594                           wreg	equ	0xFE8
  2595                           postinc1	equ	0xFE6
  2596                           postdec1	equ	0xFE5
  2597                           plusw1	equ	0xFE3
  2598                           fsr1h	equ	0xFE2
  2599                           fsr1l	equ	0xFE1
  2600                           postinc2	equ	0xFDE
  2601                           fsr2h	equ	0xFDA
  2602                           fsr2l	equ	0xFD9
  2603                           status	equ	0xFD8
  2604                           
  2605 ;; *************** function _saturation *****************
  2606 ;; Defined at:
  2607 ;;		line 67 in file "triangulation.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  valeur          3   35[BANK0 ] struct .
  2610 ;;  maximum         3   38[BANK0 ] struct .
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;		None
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  3   35[BANK0 ] struct .
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2622 ;;      Params:         0       6       0       0
  2623 ;;      Locals:         0       0       0       0
  2624 ;;      Temps:          0       0       0       0
  2625 ;;      Totals:         0       6       0       0
  2626 ;;Total ram usage:        6 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    7
  2629 ;; This function calls:
  2630 ;;		___ftge
  2631 ;;		___ftneg
  2632 ;; This function is called by:
  2633 ;;		_triangulation
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text2
  2638  002BA0                     __ptext2:
  2639                           	opt stack 0
  2640  002BA0                     _saturation:
  2641                           	opt stack 22
  2642                           
  2643                           ;triangulation.c: 69: if (valeur > maximum)
  2644                           
  2645                           ; BSR set to: 1
  2646                           ;incstack = 0
  2647  002BA0  C086  F07A         	movff	saturation@maximum,___ftge@ff1
  2648  002BA4  C087  F07B         	movff	saturation@maximum+1,___ftge@ff1+1
  2649  002BA8  C088  F07C         	movff	saturation@maximum+2,___ftge@ff1+2
  2650  002BAC  C083  F07D         	movff	saturation@valeur,___ftge@ff2
  2651  002BB0  C084  F07E         	movff	saturation@valeur+1,___ftge@ff2+1
  2652  002BB4  C085  F07F         	movff	saturation@valeur+2,___ftge@ff2+2
  2653  002BB8  ECBC  F014         	call	___ftge	;wreg free
  2654  002BBC  0100               	movlb	0	; () banked
  2655  002BBE  B0D8               	btfsc	status,0,c
  2656  002BC0  D007               	goto	l4098
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;triangulation.c: 70: valeur = maximum;
  2660  002BC2  C086  F083         	movff	saturation@maximum,saturation@valeur
  2661  002BC6  C087  F084         	movff	saturation@maximum+1,saturation@valeur+1
  2662  002BCA  C088  F085         	movff	saturation@maximum+2,saturation@valeur+2
  2663  002BCE  D028               	goto	l4102
  2664  002BD0                     l4098:
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;triangulation.c: 71: else if (valeur < -maximum)
  2668  002BD0  C083  F07A         	movff	saturation@valeur,___ftge@ff1
  2669  002BD4  C084  F07B         	movff	saturation@valeur+1,___ftge@ff1+1
  2670  002BD8  C085  F07C         	movff	saturation@valeur+2,___ftge@ff1+2
  2671  002BDC  C086  F077         	movff	saturation@maximum,___ftneg@f1
  2672  002BE0  C087  F078         	movff	saturation@maximum+1,___ftneg@f1+1
  2673  002BE4  C088  F079         	movff	saturation@maximum+2,___ftneg@f1+2
  2674  002BE8  EC50  F01A         	call	___ftneg	;wreg free
  2675  002BEC  C077  F07D         	movff	?___ftneg,___ftge@ff2
  2676  002BF0  C078  F07E         	movff	?___ftneg+1,___ftge@ff2+1
  2677  002BF4  C079  F07F         	movff	?___ftneg+2,___ftge@ff2+2
  2678  002BF8  ECBC  F014         	call	___ftge	;wreg free
  2679  002BFC  0100               	movlb	0	; () banked
  2680  002BFE  B0D8               	btfsc	status,0,c
  2681  002C00  D00F               	goto	l4102
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;triangulation.c: 72: valeur = -maximum;
  2685  002C02  C086  F077         	movff	saturation@maximum,___ftneg@f1
  2686  002C06  C087  F078         	movff	saturation@maximum+1,___ftneg@f1+1
  2687  002C0A  C088  F079         	movff	saturation@maximum+2,___ftneg@f1+2
  2688  002C0E  EC50  F01A         	call	___ftneg	;wreg free
  2689  002C12  C077  F083         	movff	?___ftneg,saturation@valeur
  2690  002C16  C078  F084         	movff	?___ftneg+1,saturation@valeur+1
  2691  002C1A  C079  F085         	movff	?___ftneg+2,saturation@valeur+2
  2692  002C1E  D000               	goto	l4102
  2693  002C20                     l4102:
  2694                           
  2695                           ;triangulation.c: 73: return valeur;
  2696  002C20  C083  F083         	movff	saturation@valeur,?_saturation
  2697  002C24  C084  F084         	movff	saturation@valeur+1,?_saturation+1
  2698  002C28  C085  F085         	movff	saturation@valeur+2,?_saturation+2
  2699  002C2C  D000               	goto	l513
  2700  002C2E                     l513:
  2701  002C2E  0012               	return		;funcret
  2702  002C30                     __end_of_saturation:
  2703                           	opt stack 0
  2704                           tblptru	equ	0xFF8
  2705                           tblptrh	equ	0xFF7
  2706                           tblptrl	equ	0xFF6
  2707                           tablat	equ	0xFF5
  2708                           postinc0	equ	0xFEE
  2709                           plusw0	equ	0xFEB
  2710                           wreg	equ	0xFE8
  2711                           postinc1	equ	0xFE6
  2712                           postdec1	equ	0xFE5
  2713                           plusw1	equ	0xFE3
  2714                           fsr1h	equ	0xFE2
  2715                           fsr1l	equ	0xFE1
  2716                           postinc2	equ	0xFDE
  2717                           fsr2h	equ	0xFDA
  2718                           fsr2l	equ	0xFD9
  2719                           status	equ	0xFD8
  2720                           
  2721 ;; *************** function _cotangeante *****************
  2722 ;; Defined at:
  2723 ;;		line 60 in file "triangulation.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;  angle           3  132[BANK0 ] struct .
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;		None
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  3  132[BANK0 ] struct .
  2730 ;; Registers used:
  2731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2737 ;;      Params:         0       3       0       0
  2738 ;;      Locals:         0       3       0       0
  2739 ;;      Temps:          0       0       0       0
  2740 ;;      Totals:         0       6       0       0
  2741 ;;Total ram usage:        6 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:   12
  2744 ;; This function calls:
  2745 ;;		___ftdiv
  2746 ;;		_conversion_degre_radian
  2747 ;;		_tan
  2748 ;; This function is called by:
  2749 ;;		_triangulation
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           	psect	text3
  2754  00309E                     __ptext3:
  2755                           	opt stack 0
  2756  00309E                     _cotangeante:
  2757                           	opt stack 17
  2758                           
  2759                           ;triangulation.c: 62: angle = conversion_degre_radian(angle);
  2760                           
  2761                           ;incstack = 0
  2762  00309E  C0E4  F0A1         	movff	cotangeante@angle,conversion_degre_radian@angle
  2763  0030A2  C0E5  F0A2         	movff	cotangeante@angle+1,conversion_degre_radian@angle+1
  2764  0030A6  C0E6  F0A3         	movff	cotangeante@angle+2,conversion_degre_radian@angle+2
  2765  0030AA  ECB6  F018         	call	_conversion_degre_radian	;wreg free
  2766  0030AE  C0A1  F0E4         	movff	?_conversion_degre_radian,cotangeante@angle
  2767  0030B2  C0A2  F0E5         	movff	?_conversion_degre_radian+1,cotangeante@angle+1
  2768  0030B6  C0A3  F0E6         	movff	?_conversion_degre_radian+2,cotangeante@angle+2
  2769                           
  2770                           ;triangulation.c: 63: return (1 / tan(angle));
  2771  0030BA  C0E4  F0DB         	movff	cotangeante@angle,tan@x
  2772  0030BE  C0E5  F0DC         	movff	cotangeante@angle+1,tan@x+1
  2773  0030C2  C0E6  F0DD         	movff	cotangeante@angle+2,tan@x+2
  2774  0030C6  EC84  F018         	call	_tan	;wreg free
  2775  0030CA  C0DB  F0E7         	movff	?_tan,_cotangeante$3139
  2776  0030CE  C0DC  F0E8         	movff	?_tan+1,_cotangeante$3139+1
  2777  0030D2  C0DD  F0E9         	movff	?_tan+2,_cotangeante$3139+2
  2778                           
  2779                           ;triangulation.c: 63: return (1 / tan(angle));
  2780  0030D6  0E00               	movlw	0
  2781  0030D8  0100               	movlb	0	; () banked
  2782  0030DA  6F92               	movwf	___ftdiv@f1& (0+255),b
  2783  0030DC  0E80               	movlw	128
  2784  0030DE  0100               	movlb	0	; () banked
  2785  0030E0  6F93               	movwf	(___ftdiv@f1+1)& (0+255),b
  2786  0030E2  0E3F               	movlw	63
  2787  0030E4  0100               	movlb	0	; () banked
  2788  0030E6  6F94               	movwf	(___ftdiv@f1+2)& (0+255),b
  2789  0030E8  C0E7  F095         	movff	_cotangeante$3139,___ftdiv@f2
  2790  0030EC  C0E8  F096         	movff	_cotangeante$3139+1,___ftdiv@f2+1
  2791  0030F0  C0E9  F097         	movff	_cotangeante$3139+2,___ftdiv@f2+2
  2792  0030F4  ECA6  F010         	call	___ftdiv	;wreg free
  2793  0030F8  C092  F0E4         	movff	?___ftdiv,?_cotangeante
  2794  0030FC  C093  F0E5         	movff	?___ftdiv+1,?_cotangeante+1
  2795  003100  C094  F0E6         	movff	?___ftdiv+2,?_cotangeante+2
  2796  003104  D000               	goto	l507
  2797  003106                     l507:
  2798  003106  0012               	return		;funcret
  2799  003108                     __end_of_cotangeante:
  2800                           	opt stack 0
  2801                           tblptru	equ	0xFF8
  2802                           tblptrh	equ	0xFF7
  2803                           tblptrl	equ	0xFF6
  2804                           tablat	equ	0xFF5
  2805                           postinc0	equ	0xFEE
  2806                           plusw0	equ	0xFEB
  2807                           wreg	equ	0xFE8
  2808                           postinc1	equ	0xFE6
  2809                           postdec1	equ	0xFE5
  2810                           plusw1	equ	0xFE3
  2811                           fsr1h	equ	0xFE2
  2812                           fsr1l	equ	0xFE1
  2813                           postinc2	equ	0xFDE
  2814                           fsr2h	equ	0xFDA
  2815                           fsr2l	equ	0xFD9
  2816                           status	equ	0xFD8
  2817                           
  2818 ;; *************** function _tan *****************
  2819 ;; Defined at:
  2820 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\tan.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  x               3  123[BANK0 ] struct .
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;		None
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  3  123[BANK0 ] struct .
  2827 ;; Registers used:
  2828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2834 ;;      Params:         0       3       0       0
  2835 ;;      Locals:         0       6       0       0
  2836 ;;      Temps:          0       0       0       0
  2837 ;;      Totals:         0       9       0       0
  2838 ;;Total ram usage:        9 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; Hardware stack levels required when called:   11
  2841 ;; This function calls:
  2842 ;;		___ftdiv
  2843 ;;		_cos
  2844 ;;		_sin
  2845 ;; This function is called by:
  2846 ;;		_cotangeante
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           	psect	text4
  2851  003108                     __ptext4:
  2852                           	opt stack 0
  2853  003108                     _tan:
  2854                           	opt stack 17
  2855                           
  2856                           ;incstack = 0
  2857  003108  C0DB  F0C8         	movff	tan@x,sin@f
  2858  00310C  C0DC  F0C9         	movff	tan@x+1,sin@f+1
  2859  003110  C0DD  F0CA         	movff	tan@x+2,sin@f+2
  2860  003114  EC89  F00C         	call	_sin	;wreg free
  2861  003118  C0C8  F0DE         	movff	?_sin,_tan$3141
  2862  00311C  C0C9  F0DF         	movff	?_sin+1,_tan$3141+1
  2863  003120  C0CA  F0E0         	movff	?_sin+2,_tan$3141+2
  2864  003124  C0DB  F0D5         	movff	tan@x,cos@f
  2865  003128  C0DC  F0D6         	movff	tan@x+1,cos@f+1
  2866  00312C  C0DD  F0D7         	movff	tan@x+2,cos@f+2
  2867  003130  EC23  F015         	call	_cos	;wreg free
  2868  003134  C0D5  F0E1         	movff	?_cos,_tan$3142
  2869  003138  C0D6  F0E2         	movff	?_cos+1,_tan$3142+1
  2870  00313C  C0D7  F0E3         	movff	?_cos+2,_tan$3142+2
  2871  003140  C0DE  F092         	movff	_tan$3141,___ftdiv@f1
  2872  003144  C0DF  F093         	movff	_tan$3141+1,___ftdiv@f1+1
  2873  003148  C0E0  F094         	movff	_tan$3141+2,___ftdiv@f1+2
  2874  00314C  C0E1  F095         	movff	_tan$3142,___ftdiv@f2
  2875  003150  C0E2  F096         	movff	_tan$3142+1,___ftdiv@f2+1
  2876  003154  C0E3  F097         	movff	_tan$3142+2,___ftdiv@f2+2
  2877  003158  ECA6  F010         	call	___ftdiv	;wreg free
  2878  00315C  C092  F0DB         	movff	?___ftdiv,?_tan
  2879  003160  C093  F0DC         	movff	?___ftdiv+1,?_tan+1
  2880  003164  C094  F0DD         	movff	?___ftdiv+2,?_tan+2
  2881  003168  D000               	goto	l1100
  2882  00316A                     l1100:
  2883  00316A  0012               	return		;funcret
  2884  00316C                     __end_of_tan:
  2885                           	opt stack 0
  2886                           tblptru	equ	0xFF8
  2887                           tblptrh	equ	0xFF7
  2888                           tblptrl	equ	0xFF6
  2889                           tablat	equ	0xFF5
  2890                           postinc0	equ	0xFEE
  2891                           plusw0	equ	0xFEB
  2892                           wreg	equ	0xFE8
  2893                           postinc1	equ	0xFE6
  2894                           postdec1	equ	0xFE5
  2895                           plusw1	equ	0xFE3
  2896                           fsr1h	equ	0xFE2
  2897                           fsr1l	equ	0xFE1
  2898                           postinc2	equ	0xFDE
  2899                           fsr2h	equ	0xFDA
  2900                           fsr2l	equ	0xFD9
  2901                           status	equ	0xFD8
  2902                           
  2903 ;; *************** function _cos *****************
  2904 ;; Defined at:
  2905 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\cos.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  f               3  117[BANK0 ] struct .
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;		None
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  3  117[BANK0 ] struct .
  2912 ;; Registers used:
  2913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2919 ;;      Params:         0       3       0       0
  2920 ;;      Locals:         0       3       0       0
  2921 ;;      Temps:          0       0       0       0
  2922 ;;      Totals:         0       6       0       0
  2923 ;;Total ram usage:        6 bytes
  2924 ;; Hardware stack levels used:    1
  2925 ;; Hardware stack levels required when called:   10
  2926 ;; This function calls:
  2927 ;;		___ftadd
  2928 ;;		___ftge
  2929 ;;		_sin
  2930 ;; This function is called by:
  2931 ;;		_tan
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text5
  2936  002A46                     __ptext5:
  2937                           	opt stack 0
  2938  002A46                     _cos:
  2939                           	opt stack 17
  2940                           
  2941                           ;incstack = 0
  2942  002A46  0E10               	movlw	16
  2943  002A48  0100               	movlb	0	; () banked
  2944  002A4A  6F7A               	movwf	___ftge@ff1& (0+255),b
  2945  002A4C  0E49               	movlw	73
  2946  002A4E  0100               	movlb	0	; () banked
  2947  002A50  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  2948  002A52  0E40               	movlw	64
  2949  002A54  0100               	movlb	0	; () banked
  2950  002A56  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  2951  002A58  C0D5  F07D         	movff	cos@f,___ftge@ff2
  2952  002A5C  C0D6  F07E         	movff	cos@f+1,___ftge@ff2+1
  2953  002A60  C0D7  F07F         	movff	cos@f+2,___ftge@ff2+2
  2954  002A64  ECBC  F014         	call	___ftge	;wreg free
  2955  002A68  0100               	movlb	0	; () banked
  2956  002A6A  B0D8               	btfsc	status,0,c
  2957  002A6C  D021               	goto	l3956
  2958                           
  2959                           ; BSR set to: 0
  2960  002A6E  C0D5  F07A         	movff	cos@f,___ftadd@f1
  2961  002A72  C0D6  F07B         	movff	cos@f+1,___ftadd@f1+1
  2962  002A76  C0D7  F07C         	movff	cos@f+2,___ftadd@f1+2
  2963  002A7A  0ECC               	movlw	204
  2964  002A7C  0100               	movlb	0	; () banked
  2965  002A7E  6F7D               	movwf	___ftadd@f2& (0+255),b
  2966  002A80  0E96               	movlw	150
  2967  002A82  0100               	movlb	0	; () banked
  2968  002A84  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2969  002A86  0EC0               	movlw	192
  2970  002A88  0100               	movlb	0	; () banked
  2971  002A8A  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2972  002A8C  ECD7  F00D         	call	___ftadd	;wreg free
  2973  002A90  C07A  F0D8         	movff	?___ftadd,_cos$3143
  2974  002A94  C07B  F0D9         	movff	?___ftadd+1,_cos$3143+1
  2975  002A98  C07C  F0DA         	movff	?___ftadd+2,_cos$3143+2
  2976  002A9C  C0D8  F0C8         	movff	_cos$3143,sin@f
  2977  002AA0  C0D9  F0C9         	movff	_cos$3143+1,sin@f+1
  2978  002AA4  C0DA  F0CA         	movff	_cos$3143+2,sin@f+2
  2979  002AA8  EC89  F00C         	call	_sin	;wreg free
  2980  002AAC  D020               	goto	L1
  2981  002AAE  D026               	goto	l1106
  2982  002AB0                     l3956:
  2983  002AB0  C0D5  F07A         	movff	cos@f,___ftadd@f1
  2984  002AB4  C0D6  F07B         	movff	cos@f+1,___ftadd@f1+1
  2985  002AB8  C0D7  F07C         	movff	cos@f+2,___ftadd@f1+2
  2986  002ABC  0E10               	movlw	16
  2987  002ABE  0100               	movlb	0	; () banked
  2988  002AC0  6F7D               	movwf	___ftadd@f2& (0+255),b
  2989  002AC2  0EC9               	movlw	201
  2990  002AC4  0100               	movlb	0	; () banked
  2991  002AC6  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2992  002AC8  0E3F               	movlw	63
  2993  002ACA  0100               	movlb	0	; () banked
  2994  002ACC  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2995  002ACE  ECD7  F00D         	call	___ftadd	;wreg free
  2996  002AD2  C07A  F0D8         	movff	?___ftadd,_cos$3143
  2997  002AD6  C07B  F0D9         	movff	?___ftadd+1,_cos$3143+1
  2998  002ADA  C07C  F0DA         	movff	?___ftadd+2,_cos$3143+2
  2999  002ADE  C0D8  F0C8         	movff	_cos$3143,sin@f
  3000  002AE2  C0D9  F0C9         	movff	_cos$3143+1,sin@f+1
  3001  002AE6  C0DA  F0CA         	movff	_cos$3143+2,sin@f+2
  3002  002AEA  EC89  F00C         	call	_sin	;wreg free
  3003  002AEE                     L1:
  3004  002AEE  C0C8  F0D5         	movff	?_sin,?_cos
  3005  002AF2  C0C9  F0D6         	movff	?_sin+1,?_cos+1
  3006  002AF6  C0CA  F0D7         	movff	?_sin+2,?_cos+2
  3007  002AFA  D000               	goto	l1106
  3008  002AFC                     l1106:
  3009  002AFC  0012               	return		;funcret
  3010  002AFE                     __end_of_cos:
  3011                           	opt stack 0
  3012                           tblptru	equ	0xFF8
  3013                           tblptrh	equ	0xFF7
  3014                           tblptrl	equ	0xFF6
  3015                           tablat	equ	0xFF5
  3016                           postinc0	equ	0xFEE
  3017                           plusw0	equ	0xFEB
  3018                           wreg	equ	0xFE8
  3019                           postinc1	equ	0xFE6
  3020                           postdec1	equ	0xFE5
  3021                           plusw1	equ	0xFE3
  3022                           fsr1h	equ	0xFE2
  3023                           fsr1l	equ	0xFE1
  3024                           postinc2	equ	0xFDE
  3025                           fsr2h	equ	0xFDA
  3026                           fsr2l	equ	0xFD9
  3027                           status	equ	0xFD8
  3028                           
  3029 ;; *************** function _sin *****************
  3030 ;; Defined at:
  3031 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\sin.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  f               3  104[BANK0 ] struct .
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  x2              3  113[BANK0 ] struct .
  3036 ;;  y               3  107[BANK0 ] struct .
  3037 ;;  sgn             1  116[BANK0 ] unsigned char 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  3  104[BANK0 ] unsigned char 
  3040 ;; Registers used:
  3041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3047 ;;      Params:         0       3       0       0
  3048 ;;      Locals:         0      10       0       0
  3049 ;;      Temps:          0       0       0       0
  3050 ;;      Totals:         0      13       0       0
  3051 ;;Total ram usage:       13 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:    9
  3054 ;; This function calls:
  3055 ;;		___ftadd
  3056 ;;		___ftdiv
  3057 ;;		___ftge
  3058 ;;		___ftmul
  3059 ;;		___ftneg
  3060 ;;		___ftsub
  3061 ;;		_eval_poly
  3062 ;;		_floor
  3063 ;; This function is called by:
  3064 ;;		_tan
  3065 ;;		_cos
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text6
  3070  001912                     __ptext6:
  3071                           	opt stack 0
  3072  001912                     _sin:
  3073                           	opt stack 18
  3074                           
  3075                           ;incstack = 0
  3076  001912  0E00               	movlw	0
  3077  001914  0100               	movlb	0	; () banked
  3078  001916  6FD4               	movwf	sin@sgn& (0+255),b
  3079                           
  3080                           ; BSR set to: 0
  3081  001918  0100               	movlb	0	; () banked
  3082  00191A  AFCA               	btfss	(sin@f+2)& (0+255),7,b
  3083  00191C  D012               	goto	l3894
  3084                           
  3085                           ; BSR set to: 0
  3086  00191E  C0C8  F077         	movff	sin@f,___ftneg@f1
  3087  001922  C0C9  F078         	movff	sin@f+1,___ftneg@f1+1
  3088  001926  C0CA  F079         	movff	sin@f+2,___ftneg@f1+2
  3089  00192A  EC50  F01A         	call	___ftneg	;wreg free
  3090  00192E  C077  F0C8         	movff	?___ftneg,sin@f
  3091  001932  C078  F0C9         	movff	?___ftneg+1,sin@f+1
  3092  001936  C079  F0CA         	movff	?___ftneg+2,sin@f+2
  3093  00193A  0E01               	movlw	1
  3094  00193C  0100               	movlb	0	; () banked
  3095  00193E  6FD4               	movwf	sin@sgn& (0+255),b
  3096  001940  D000               	goto	l3894
  3097  001942                     l3894:
  3098                           
  3099                           ; BSR set to: 0
  3100  001942  C0C8  F068         	movff	sin@f,___ftmul@f1
  3101  001946  C0C9  F069         	movff	sin@f+1,___ftmul@f1+1
  3102  00194A  C0CA  F06A         	movff	sin@f+2,___ftmul@f1+2
  3103  00194E  0EFA               	movlw	250
  3104  001950  0100               	movlb	0	; () banked
  3105  001952  6F6B               	movwf	___ftmul@f2& (0+255),b
  3106  001954  0E22               	movlw	34
  3107  001956  0100               	movlb	0	; () banked
  3108  001958  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  3109  00195A  0E3E               	movlw	62
  3110  00195C  0100               	movlb	0	; () banked
  3111  00195E  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  3112  001960  ECF8  F00F         	call	___ftmul	;wreg free
  3113  001964  C068  F0C8         	movff	?___ftmul,sin@f
  3114  001968  C069  F0C9         	movff	?___ftmul+1,sin@f+1
  3115  00196C  C06A  F0CA         	movff	?___ftmul+2,sin@f+2
  3116  001970  C0C8  F0C2         	movff	sin@f,___ftsub@f1
  3117  001974  C0C9  F0C3         	movff	sin@f+1,___ftsub@f1+1
  3118  001978  C0CA  F0C4         	movff	sin@f+2,___ftsub@f1+2
  3119  00197C  C0C8  F0BA         	movff	sin@f,floor@x
  3120  001980  C0C9  F0BB         	movff	sin@f+1,floor@x+1
  3121  001984  C0CA  F0BC         	movff	sin@f+2,floor@x+2
  3122  001988  EC70  F012         	call	_floor	;wreg free
  3123  00198C  C0BA  F0C5         	movff	?_floor,___ftsub@f2
  3124  001990  C0BB  F0C6         	movff	?_floor+1,___ftsub@f2+1
  3125  001994  C0BC  F0C7         	movff	?_floor+2,___ftsub@f2+2
  3126  001998  ECE0  F018         	call	___ftsub	;wreg free
  3127  00199C  C0C2  F0C8         	movff	?___ftsub,sin@f
  3128  0019A0  C0C3  F0C9         	movff	?___ftsub+1,sin@f+1
  3129  0019A4  C0C4  F0CA         	movff	?___ftsub+2,sin@f+2
  3130  0019A8  C0C8  F068         	movff	sin@f,___ftmul@f1
  3131  0019AC  C0C9  F069         	movff	sin@f+1,___ftmul@f1+1
  3132  0019B0  C0CA  F06A         	movff	sin@f+2,___ftmul@f1+2
  3133  0019B4  0E00               	movlw	0
  3134  0019B6  0100               	movlb	0	; () banked
  3135  0019B8  6F6B               	movwf	___ftmul@f2& (0+255),b
  3136  0019BA  0E80               	movlw	128
  3137  0019BC  0100               	movlb	0	; () banked
  3138  0019BE  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  3139  0019C0  0E40               	movlw	64
  3140  0019C2  0100               	movlb	0	; () banked
  3141  0019C4  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  3142  0019C6  ECF8  F00F         	call	___ftmul	;wreg free
  3143  0019CA  C068  F0C8         	movff	?___ftmul,sin@f
  3144  0019CE  C069  F0C9         	movff	?___ftmul+1,sin@f+1
  3145  0019D2  C06A  F0CA         	movff	?___ftmul+2,sin@f+2
  3146  0019D6  0E00               	movlw	0
  3147  0019D8  0100               	movlb	0	; () banked
  3148  0019DA  6F7A               	movwf	___ftge@ff1& (0+255),b
  3149  0019DC  0E00               	movlw	0
  3150  0019DE  0100               	movlb	0	; () banked
  3151  0019E0  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  3152  0019E2  0E40               	movlw	64
  3153  0019E4  0100               	movlb	0	; () banked
  3154  0019E6  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  3155  0019E8  C0C8  F07D         	movff	sin@f,___ftge@ff2
  3156  0019EC  C0C9  F07E         	movff	sin@f+1,___ftge@ff2+1
  3157  0019F0  C0CA  F07F         	movff	sin@f+2,___ftge@ff2+2
  3158  0019F4  ECBC  F014         	call	___ftge	;wreg free
  3159  0019F8  0100               	movlb	0	; () banked
  3160  0019FA  B0D8               	btfsc	status,0,c
  3161  0019FC  D022               	goto	l3906
  3162                           
  3163                           ; BSR set to: 0
  3164  0019FE  C0C8  F0C2         	movff	sin@f,___ftsub@f1
  3165  001A02  C0C9  F0C3         	movff	sin@f+1,___ftsub@f1+1
  3166  001A06  C0CA  F0C4         	movff	sin@f+2,___ftsub@f1+2
  3167  001A0A  0E00               	movlw	0
  3168  001A0C  0100               	movlb	0	; () banked
  3169  001A0E  6FC5               	movwf	___ftsub@f2& (0+255),b
  3170  001A10  0E00               	movlw	0
  3171  001A12  0100               	movlb	0	; () banked
  3172  001A14  6FC6               	movwf	(___ftsub@f2+1)& (0+255),b
  3173  001A16  0E40               	movlw	64
  3174  001A18  0100               	movlb	0	; () banked
  3175  001A1A  6FC7               	movwf	(___ftsub@f2+2)& (0+255),b
  3176  001A1C  ECE0  F018         	call	___ftsub	;wreg free
  3177  001A20  C0C2  F0C8         	movff	?___ftsub,sin@f
  3178  001A24  C0C3  F0C9         	movff	?___ftsub+1,sin@f+1
  3179  001A28  C0C4  F0CA         	movff	?___ftsub+2,sin@f+2
  3180  001A2C  0100               	movlb	0	; () banked
  3181  001A2E  51D4               	movf	sin@sgn& (0+255),w,b
  3182  001A30  0100               	movlb	0	; () banked
  3183  001A32  A4D8               	btfss	status,2,c
  3184  001A34  D002               	goto	u3730
  3185  001A36  0E01               	movlw	1
  3186  001A38  D001               	goto	u3740
  3187  001A3A                     u3730:
  3188  001A3A  0E00               	movlw	0
  3189  001A3C                     u3740:
  3190  001A3C  0100               	movlb	0	; () banked
  3191  001A3E  6FD4               	movwf	sin@sgn& (0+255),b
  3192  001A40  D000               	goto	l3906
  3193  001A42                     l3906:
  3194                           
  3195                           ; BSR set to: 0
  3196  001A42  0E00               	movlw	0
  3197  001A44  0100               	movlb	0	; () banked
  3198  001A46  6F7A               	movwf	___ftge@ff1& (0+255),b
  3199  001A48  0E80               	movlw	128
  3200  001A4A  0100               	movlb	0	; () banked
  3201  001A4C  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  3202  001A4E  0E3F               	movlw	63
  3203  001A50  0100               	movlb	0	; () banked
  3204  001A52  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  3205  001A54  C0C8  F07D         	movff	sin@f,___ftge@ff2
  3206  001A58  C0C9  F07E         	movff	sin@f+1,___ftge@ff2+1
  3207  001A5C  C0CA  F07F         	movff	sin@f+2,___ftge@ff2+2
  3208  001A60  ECBC  F014         	call	___ftge	;wreg free
  3209  001A64  0100               	movlb	0	; () banked
  3210  001A66  B0D8               	btfsc	status,0,c
  3211  001A68  D01F               	goto	l1121
  3212                           
  3213                           ; BSR set to: 0
  3214  001A6A  C0C8  F077         	movff	sin@f,___ftneg@f1
  3215  001A6E  C0C9  F078         	movff	sin@f+1,___ftneg@f1+1
  3216  001A72  C0CA  F079         	movff	sin@f+2,___ftneg@f1+2
  3217  001A76  EC50  F01A         	call	___ftneg	;wreg free
  3218  001A7A  C077  F07A         	movff	?___ftneg,___ftadd@f1
  3219  001A7E  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  3220  001A82  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  3221  001A86  0E00               	movlw	0
  3222  001A88  0100               	movlb	0	; () banked
  3223  001A8A  6F7D               	movwf	___ftadd@f2& (0+255),b
  3224  001A8C  0E00               	movlw	0
  3225  001A8E  0100               	movlb	0	; () banked
  3226  001A90  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  3227  001A92  0E40               	movlw	64
  3228  001A94  0100               	movlb	0	; () banked
  3229  001A96  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  3230  001A98  ECD7  F00D         	call	___ftadd	;wreg free
  3231  001A9C  C07A  F0C8         	movff	?___ftadd,sin@f
  3232  001AA0  C07B  F0C9         	movff	?___ftadd+1,sin@f+1
  3233  001AA4  C07C  F0CA         	movff	?___ftadd+2,sin@f+2
  3234  001AA8                     l1121:
  3235  001AA8  C0C8  F068         	movff	sin@f,___ftmul@f1
  3236  001AAC  C0C9  F069         	movff	sin@f+1,___ftmul@f1+1
  3237  001AB0  C0CA  F06A         	movff	sin@f+2,___ftmul@f1+2
  3238  001AB4  C0C8  F06B         	movff	sin@f,___ftmul@f2
  3239  001AB8  C0C9  F06C         	movff	sin@f+1,___ftmul@f2+1
  3240  001ABC  C0CA  F06D         	movff	sin@f+2,___ftmul@f2+2
  3241  001AC0  ECF8  F00F         	call	___ftmul	;wreg free
  3242  001AC4  C068  F0D1         	movff	?___ftmul,sin@x2
  3243  001AC8  C069  F0D2         	movff	?___ftmul+1,sin@x2+1
  3244  001ACC  C06A  F0D3         	movff	?___ftmul+2,sin@x2+2
  3245  001AD0  C0D1  F086         	movff	sin@x2,eval_poly@x
  3246  001AD4  C0D2  F087         	movff	sin@x2+1,eval_poly@x+1
  3247  001AD8  C0D3  F088         	movff	sin@x2+2,eval_poly@x+2
  3248  001ADC  0E10               	movlw	low sin@coeff_b
  3249  001ADE  0100               	movlb	0	; () banked
  3250  001AE0  6F89               	movwf	eval_poly@d& (0+255),b
  3251  001AE2  0E03               	movlw	high sin@coeff_b
  3252  001AE4  0100               	movlb	0	; () banked
  3253  001AE6  6F8A               	movwf	(eval_poly@d+1)& (0+255),b
  3254  001AE8  0E00               	movlw	0
  3255  001AEA  0100               	movlb	0	; () banked
  3256  001AEC  6F8C               	movwf	(eval_poly@n+1)& (0+255),b
  3257  001AEE  0E03               	movlw	3
  3258  001AF0  6F8B               	movwf	eval_poly@n& (0+255),b
  3259  001AF2  EC6C  F013         	call	_eval_poly	;wreg free
  3260  001AF6  C086  F0CB         	movff	?_eval_poly,sin@y
  3261  001AFA  C087  F0CC         	movff	?_eval_poly+1,sin@y+1
  3262  001AFE  C088  F0CD         	movff	?_eval_poly+2,sin@y+2
  3263  001B02  C0CB  F095         	movff	sin@y,___ftdiv@f2
  3264  001B06  C0CC  F096         	movff	sin@y+1,___ftdiv@f2+1
  3265  001B0A  C0CD  F097         	movff	sin@y+2,___ftdiv@f2+2
  3266  001B0E  0E00               	movlw	0
  3267  001B10  0100               	movlb	0	; () banked
  3268  001B12  6F8C               	movwf	(eval_poly@n+1)& (0+255),b
  3269  001B14  0E04               	movlw	4
  3270  001B16  6F8B               	movwf	eval_poly@n& (0+255),b
  3271  001B18  0E01               	movlw	low sin@coeff_a
  3272  001B1A  0100               	movlb	0	; () banked
  3273  001B1C  6F89               	movwf	eval_poly@d& (0+255),b
  3274  001B1E  0E03               	movlw	high sin@coeff_a
  3275  001B20  0100               	movlb	0	; () banked
  3276  001B22  6F8A               	movwf	(eval_poly@d+1)& (0+255),b
  3277  001B24  C0D1  F086         	movff	sin@x2,eval_poly@x
  3278  001B28  C0D2  F087         	movff	sin@x2+1,eval_poly@x+1
  3279  001B2C  C0D3  F088         	movff	sin@x2+2,eval_poly@x+2
  3280  001B30  EC6C  F013         	call	_eval_poly	;wreg free
  3281  001B34  C086  F092         	movff	?_eval_poly,___ftdiv@f1
  3282  001B38  C087  F093         	movff	?_eval_poly+1,___ftdiv@f1+1
  3283  001B3C  C088  F094         	movff	?_eval_poly+2,___ftdiv@f1+2
  3284  001B40  ECA6  F010         	call	___ftdiv	;wreg free
  3285  001B44  C092  F0CE         	movff	?___ftdiv,_sin$3144
  3286  001B48  C093  F0CF         	movff	?___ftdiv+1,_sin$3144+1
  3287  001B4C  C094  F0D0         	movff	?___ftdiv+2,_sin$3144+2
  3288  001B50  C0C8  F068         	movff	sin@f,___ftmul@f1
  3289  001B54  C0C9  F069         	movff	sin@f+1,___ftmul@f1+1
  3290  001B58  C0CA  F06A         	movff	sin@f+2,___ftmul@f1+2
  3291  001B5C  C0CE  F06B         	movff	_sin$3144,___ftmul@f2
  3292  001B60  C0CF  F06C         	movff	_sin$3144+1,___ftmul@f2+1
  3293  001B64  C0D0  F06D         	movff	_sin$3144+2,___ftmul@f2+2
  3294  001B68  ECF8  F00F         	call	___ftmul	;wreg free
  3295  001B6C  C068  F0C8         	movff	?___ftmul,sin@f
  3296  001B70  C069  F0C9         	movff	?___ftmul+1,sin@f+1
  3297  001B74  C06A  F0CA         	movff	?___ftmul+2,sin@f+2
  3298  001B78  0100               	movlb	0	; () banked
  3299  001B7A  51D4               	movf	sin@sgn& (0+255),w,b
  3300  001B7C  0100               	movlb	0	; () banked
  3301  001B7E  B4D8               	btfsc	status,2,c
  3302  001B80  D00F               	goto	l1122
  3303                           
  3304                           ; BSR set to: 0
  3305  001B82  C0C8  F077         	movff	sin@f,___ftneg@f1
  3306  001B86  C0C9  F078         	movff	sin@f+1,___ftneg@f1+1
  3307  001B8A  C0CA  F079         	movff	sin@f+2,___ftneg@f1+2
  3308  001B8E  EC50  F01A         	call	___ftneg	;wreg free
  3309  001B92  C077  F0C8         	movff	?___ftneg,?_sin
  3310  001B96  C078  F0C9         	movff	?___ftneg+1,?_sin+1
  3311  001B9A  C079  F0CA         	movff	?___ftneg+2,?_sin+2
  3312  001B9E  D006               	goto	l1123
  3313  001BA0                     l1122:
  3314                           
  3315                           ; BSR set to: 0
  3316  001BA0  C0C8  F0C8         	movff	sin@f,?_sin
  3317  001BA4  C0C9  F0C9         	movff	sin@f+1,?_sin+1
  3318  001BA8  C0CA  F0CA         	movff	sin@f+2,?_sin+2
  3319  001BAC                     l1123:
  3320  001BAC  0012               	return		;funcret
  3321  001BAE                     __end_of_sin:
  3322                           	opt stack 0
  3323                           tblptru	equ	0xFF8
  3324                           tblptrh	equ	0xFF7
  3325                           tblptrl	equ	0xFF6
  3326                           tablat	equ	0xFF5
  3327                           postinc0	equ	0xFEE
  3328                           plusw0	equ	0xFEB
  3329                           wreg	equ	0xFE8
  3330                           postinc1	equ	0xFE6
  3331                           postdec1	equ	0xFE5
  3332                           plusw1	equ	0xFE3
  3333                           fsr1h	equ	0xFE2
  3334                           fsr1l	equ	0xFE1
  3335                           postinc2	equ	0xFDE
  3336                           fsr2h	equ	0xFDA
  3337                           fsr2l	equ	0xFD9
  3338                           status	equ	0xFD8
  3339                           
  3340 ;; *************** function _floor *****************
  3341 ;; Defined at:
  3342 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\floor.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  x               3   90[BANK0 ] unsigned char 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  i               3   93[BANK0 ] unsigned char 
  3347 ;;  expon           2   96[BANK0 ] int 
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  3   90[BANK0 ] int 
  3350 ;; Registers used:
  3351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3357 ;;      Params:         0       3       0       0
  3358 ;;      Locals:         0       5       0       0
  3359 ;;      Temps:          0       0       0       0
  3360 ;;      Totals:         0       8       0       0
  3361 ;;Total ram usage:        8 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    8
  3364 ;; This function calls:
  3365 ;;		___altoft
  3366 ;;		___ftadd
  3367 ;;		___ftge
  3368 ;;		___fttol
  3369 ;;		_frexp
  3370 ;; This function is called by:
  3371 ;;		_sin
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text7
  3376  0024E0                     __ptext7:
  3377                           	opt stack 0
  3378  0024E0                     _floor:
  3379                           	opt stack 18
  3380                           
  3381                           ;incstack = 0
  3382  0024E0  C0BA  F060         	movff	floor@x,frexp@value
  3383  0024E4  C0BB  F061         	movff	floor@x+1,frexp@value+1
  3384  0024E8  C0BC  F062         	movff	floor@x+2,frexp@value+2
  3385  0024EC  0EC0               	movlw	low floor@expon
  3386  0024EE  0100               	movlb	0	; () banked
  3387  0024F0  6F63               	movwf	frexp@eptr& (0+255),b
  3388  0024F2  0E00               	movlw	high floor@expon
  3389  0024F4  0100               	movlb	0	; () banked
  3390  0024F6  6F64               	movwf	(frexp@eptr+1)& (0+255),b
  3391  0024F8  EC18  F016         	call	_frexp	;wreg free
  3392  0024FC  0100               	movlb	0	; () banked
  3393  0024FE  AFC1               	btfss	(floor@expon+1)& (0+255),7,b
  3394  002500  D016               	goto	l3826
  3395                           
  3396                           ; BSR set to: 0
  3397  002502  0100               	movlb	0	; () banked
  3398  002504  AFBC               	btfss	(floor@x+2)& (0+255),7,b
  3399  002506  D009               	goto	l3822
  3400                           
  3401                           ; BSR set to: 0
  3402  002508  0E00               	movlw	0
  3403  00250A  0100               	movlb	0	; () banked
  3404  00250C  6FBA               	movwf	?_floor& (0+255),b
  3405  00250E  0E80               	movlw	128
  3406  002510  0100               	movlb	0	; () banked
  3407  002512  6FBB               	movwf	(?_floor+1)& (0+255),b
  3408  002514  0EBF               	movlw	191
  3409  002516  D008               	goto	L2
  3410                           
  3411                           ; BSR set to: 0
  3412  002518  D060               	goto	l1136
  3413  00251A                     l3822:
  3414                           
  3415                           ; BSR set to: 0
  3416  00251A  0E00               	movlw	0
  3417  00251C  0100               	movlb	0	; () banked
  3418  00251E  6FBA               	movwf	?_floor& (0+255),b
  3419  002520  0E00               	movlw	0
  3420  002522  0100               	movlb	0	; () banked
  3421  002524  6FBB               	movwf	(?_floor+1)& (0+255),b
  3422  002526  0E00               	movlw	0
  3423  002528                     L2:
  3424  002528  0100               	movlb	0	; () banked
  3425  00252A  6FBC               	movwf	(?_floor+2)& (0+255),b
  3426                           
  3427                           ; BSR set to: 0
  3428  00252C  D056               	goto	l1136
  3429  00252E                     l3826:
  3430                           
  3431                           ; BSR set to: 0
  3432  00252E  0100               	movlb	0	; () banked
  3433  002530  51C1               	movf	(floor@expon+1)& (0+255),w,b
  3434  002532  E105               	bnz	u3620
  3435  002534  0E15               	movlw	21
  3436  002536  0100               	movlb	0	; () banked
  3437  002538  5DC0               	subwf	floor@expon& (0+255),w,b
  3438  00253A  A0D8               	btfss	status,0,c
  3439  00253C  D007               	goto	l3830
  3440  00253E                     u3620:
  3441                           
  3442                           ; BSR set to: 0
  3443  00253E  C0BA  F0BA         	movff	floor@x,?_floor
  3444  002542  C0BB  F0BB         	movff	floor@x+1,?_floor+1
  3445  002546  C0BC  F0BC         	movff	floor@x+2,?_floor+2
  3446  00254A  D047               	goto	l1136
  3447  00254C                     l3830:
  3448                           
  3449                           ; BSR set to: 0
  3450  00254C  C0BA  F0A1         	movff	floor@x,___fttol@f1
  3451  002550  C0BB  F0A2         	movff	floor@x+1,___fttol@f1+1
  3452  002554  C0BC  F0A3         	movff	floor@x+2,___fttol@f1+2
  3453  002558  EC47  F011         	call	___fttol	;wreg free
  3454  00255C  C0A1  F0B0         	movff	?___fttol,___altoft@c
  3455  002560  C0A2  F0B1         	movff	?___fttol+1,___altoft@c+1
  3456  002564  C0A3  F0B2         	movff	?___fttol+2,___altoft@c+2
  3457  002568  C0A4  F0B3         	movff	?___fttol+3,___altoft@c+3
  3458  00256C  EC7F  F015         	call	___altoft	;wreg free
  3459  002570  C0B0  F0BD         	movff	?___altoft,floor@i
  3460  002574  C0B1  F0BE         	movff	?___altoft+1,floor@i+1
  3461  002578  C0B2  F0BF         	movff	?___altoft+2,floor@i+2
  3462  00257C  C0BA  F07A         	movff	floor@x,___ftge@ff1
  3463  002580  C0BB  F07B         	movff	floor@x+1,___ftge@ff1+1
  3464  002584  C0BC  F07C         	movff	floor@x+2,___ftge@ff1+2
  3465  002588  C0BD  F07D         	movff	floor@i,___ftge@ff2
  3466  00258C  C0BE  F07E         	movff	floor@i+1,___ftge@ff2+1
  3467  002590  C0BF  F07F         	movff	floor@i+2,___ftge@ff2+2
  3468  002594  ECBC  F014         	call	___ftge	;wreg free
  3469  002598  0100               	movlb	0	; () banked
  3470  00259A  B0D8               	btfsc	status,0,c
  3471  00259C  D018               	goto	l1138
  3472                           
  3473                           ; BSR set to: 0
  3474  00259E  C0BD  F07A         	movff	floor@i,___ftadd@f1
  3475  0025A2  C0BE  F07B         	movff	floor@i+1,___ftadd@f1+1
  3476  0025A6  C0BF  F07C         	movff	floor@i+2,___ftadd@f1+2
  3477  0025AA  0E00               	movlw	0
  3478  0025AC  0100               	movlb	0	; () banked
  3479  0025AE  6F7D               	movwf	___ftadd@f2& (0+255),b
  3480  0025B0  0E80               	movlw	128
  3481  0025B2  0100               	movlb	0	; () banked
  3482  0025B4  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  3483  0025B6  0EBF               	movlw	191
  3484  0025B8  0100               	movlb	0	; () banked
  3485  0025BA  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  3486  0025BC  ECD7  F00D         	call	___ftadd	;wreg free
  3487  0025C0  C07A  F0BA         	movff	?___ftadd,?_floor
  3488  0025C4  C07B  F0BB         	movff	?___ftadd+1,?_floor+1
  3489  0025C8  C07C  F0BC         	movff	?___ftadd+2,?_floor+2
  3490  0025CC  D006               	goto	l1136
  3491  0025CE                     l1138:
  3492                           
  3493                           ; BSR set to: 0
  3494  0025CE  C0BD  F0BA         	movff	floor@i,?_floor
  3495  0025D2  C0BE  F0BB         	movff	floor@i+1,?_floor+1
  3496  0025D6  C0BF  F0BC         	movff	floor@i+2,?_floor+2
  3497  0025DA                     l1136:
  3498  0025DA  0012               	return		;funcret
  3499  0025DC                     __end_of_floor:
  3500                           	opt stack 0
  3501                           tblptru	equ	0xFF8
  3502                           tblptrh	equ	0xFF7
  3503                           tblptrl	equ	0xFF6
  3504                           tablat	equ	0xFF5
  3505                           postinc0	equ	0xFEE
  3506                           plusw0	equ	0xFEB
  3507                           wreg	equ	0xFE8
  3508                           postinc1	equ	0xFE6
  3509                           postdec1	equ	0xFE5
  3510                           plusw1	equ	0xFE3
  3511                           fsr1h	equ	0xFE2
  3512                           fsr1l	equ	0xFE1
  3513                           postinc2	equ	0xFDE
  3514                           fsr2h	equ	0xFDA
  3515                           fsr2l	equ	0xFD9
  3516                           status	equ	0xFD8
  3517                           
  3518 ;; *************** function _frexp *****************
  3519 ;; Defined at:
  3520 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;  value           3    0[BANK0 ] int 
  3523 ;;  eptr            2    3[BANK0 ] PTR int 
  3524 ;;		 -> floor@expon(2), 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;		None
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  3    0[BANK0 ] PTR int 
  3529 ;; Registers used:
  3530 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3536 ;;      Params:         0       5       0       0
  3537 ;;      Locals:         0       0       0       0
  3538 ;;      Temps:          0       2       0       0
  3539 ;;      Totals:         0       7       0       0
  3540 ;;Total ram usage:        7 bytes
  3541 ;; Hardware stack levels used:    1
  3542 ;; Hardware stack levels required when called:    6
  3543 ;; This function calls:
  3544 ;;		Nothing
  3545 ;; This function is called by:
  3546 ;;		_floor
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           	psect	text8
  3551  002C30                     __ptext8:
  3552                           	opt stack 0
  3553  002C30                     _frexp:
  3554                           	opt stack 19
  3555                           
  3556                           ;incstack = 0
  3557  002C30  0100               	movlb	0	; () banked
  3558  002C32  5160               	movf	frexp@value& (0+255),w,b
  3559  002C34  0100               	movlb	0	; () banked
  3560  002C36  1161               	iorwf	(frexp@value+1)& (0+255),w,b
  3561  002C38  0100               	movlb	0	; () banked
  3562  002C3A  1162               	iorwf	(frexp@value+2)& (0+255),w,b
  3563  002C3C  A4D8               	btfss	status,2,c
  3564  002C3E  D009               	goto	l3744
  3565                           
  3566                           ; BSR set to: 0
  3567  002C40  C063  FFD9         	movff	frexp@eptr,fsr2l
  3568  002C44  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  3569  002C48  0E00               	movlw	0
  3570  002C4A  6EDE               	movwf	postinc2,c
  3571  002C4C  0E00               	movlw	0
  3572  002C4E  6EDD               	movwf	postdec2,c
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;	Return value of _frexp is never used
  3576  002C50  D036               	goto	l1144
  3577  002C52                     l3744:
  3578                           
  3579                           ; BSR set to: 0
  3580  002C52  0100               	movlb	0	; () banked
  3581  002C54  5162               	movf	(frexp@value+2)& (0+255),w,b
  3582  002C56  0B7F               	andlw	127
  3583  002C58  0100               	movlb	0	; () banked
  3584  002C5A  6F65               	movwf	??_frexp& (0+255),b
  3585  002C5C  6B66               	clrf	(??_frexp+1)& (0+255),b
  3586  002C5E  90D8               	bcf	status,0,c
  3587  002C60  0100               	movlb	0	; () banked
  3588  002C62  3765               	rlcf	??_frexp& (0+255),f,b
  3589  002C64  3766               	rlcf	(??_frexp+1)& (0+255),f,b
  3590  002C66  C063  FFD9         	movff	frexp@eptr,fsr2l
  3591  002C6A  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  3592  002C6E  C065  FFDE         	movff	??_frexp,postinc2
  3593  002C72  C066  FFDD         	movff	??_frexp+1,postdec2
  3594  002C76  0100               	movlb	0	; () banked
  3595  002C78  AF61               	btfss	(frexp@value+1)& (0+255),7,b
  3596  002C7A  D004               	goto	u3520
  3597  002C7C  0100               	movlb	0	; () banked
  3598  002C7E  6B65               	clrf	??_frexp& (0+255),b
  3599  002C80  2B65               	incf	??_frexp& (0+255),f,b
  3600  002C82  D002               	goto	u3528
  3601  002C84                     u3520:
  3602  002C84  0100               	movlb	0	; () banked
  3603  002C86  6B65               	clrf	??_frexp& (0+255),b
  3604  002C88                     u3528:
  3605  002C88  0100               	movlb	0	; () banked
  3606  002C8A  5165               	movf	??_frexp& (0+255),w,b
  3607  002C8C  C063  FFD9         	movff	frexp@eptr,fsr2l
  3608  002C90  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  3609  002C94  12DE               	iorwf	postinc2,f,c
  3610  002C96  0E00               	movlw	0
  3611  002C98  12DD               	iorwf	postdec2,f,c
  3612                           
  3613                           ; BSR set to: 0
  3614  002C9A  C063  FFD9         	movff	frexp@eptr,fsr2l
  3615  002C9E  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  3616  002CA2  0E82               	movlw	130
  3617  002CA4  26DE               	addwf	postinc2,f,c
  3618  002CA6  0EFF               	movlw	255
  3619  002CA8  22DD               	addwfc	postdec2,f,c
  3620                           
  3621                           ; BSR set to: 0
  3622  002CAA  8162               	bsf	(frexp@value+2)& (0+255),0,b
  3623  002CAC  8362               	bsf	(frexp@value+2)& (0+255),1,b
  3624  002CAE  8562               	bsf	(frexp@value+2)& (0+255),2,b
  3625  002CB0  8762               	bsf	(frexp@value+2)& (0+255),3,b
  3626  002CB2  8962               	bsf	(frexp@value+2)& (0+255),4,b
  3627  002CB4  8B62               	bsf	(frexp@value+2)& (0+255),5,b
  3628  002CB6  9D62               	bcf	(frexp@value+2)& (0+255),6,b
  3629                           
  3630                           ; BSR set to: 0
  3631  002CB8  0100               	movlb	0	; () banked
  3632  002CBA  9F61               	bcf	(frexp@value+1)& (0+255),7,b
  3633  002CBC  D000               	goto	l1144
  3634  002CBE                     l1144:
  3635                           
  3636                           ; BSR set to: 0
  3637  002CBE  0012               	return		;funcret
  3638  002CC0                     __end_of_frexp:
  3639                           	opt stack 0
  3640                           tblptru	equ	0xFF8
  3641                           tblptrh	equ	0xFF7
  3642                           tblptrl	equ	0xFF6
  3643                           tablat	equ	0xFF5
  3644                           postinc0	equ	0xFEE
  3645                           plusw0	equ	0xFEB
  3646                           wreg	equ	0xFE8
  3647                           postinc1	equ	0xFE6
  3648                           postdec1	equ	0xFE5
  3649                           plusw1	equ	0xFE3
  3650                           fsr1h	equ	0xFE2
  3651                           fsr1l	equ	0xFE1
  3652                           postinc2	equ	0xFDE
  3653                           postdec2	equ	0xFDD
  3654                           fsr2h	equ	0xFDA
  3655                           fsr2l	equ	0xFD9
  3656                           status	equ	0xFD8
  3657                           
  3658 ;; *************** function ___altoft *****************
  3659 ;; Defined at:
  3660 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  c               4   80[BANK0 ] long 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;  sign            1   89[BANK0 ] unsigned char 
  3665 ;;  exp             1   88[BANK0 ] unsigned char 
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  3   80[BANK0 ] float 
  3668 ;; Registers used:
  3669 ;;		wreg, status,2, status,0, cstack
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3675 ;;      Params:         0       4       0       0
  3676 ;;      Locals:         0       2       0       0
  3677 ;;      Temps:          0       4       0       0
  3678 ;;      Totals:         0      10       0       0
  3679 ;;Total ram usage:       10 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; Hardware stack levels required when called:    7
  3682 ;; This function calls:
  3683 ;;		___ftpack
  3684 ;; This function is called by:
  3685 ;;		_floor
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           	psect	text9
  3690  002AFE                     __ptext9:
  3691                           	opt stack 0
  3692  002AFE                     ___altoft:
  3693                           	opt stack 18
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;incstack = 0
  3697  002AFE  0E00               	movlw	0
  3698  002B00  0100               	movlb	0	; () banked
  3699  002B02  6FB9               	movwf	___altoft@sign& (0+255),b
  3700  002B04  0E8E               	movlw	142
  3701  002B06  0100               	movlb	0	; () banked
  3702  002B08  6FB8               	movwf	___altoft@exp& (0+255),b
  3703                           
  3704                           ; BSR set to: 0
  3705  002B0A  0100               	movlb	0	; () banked
  3706  002B0C  AFB3               	btfss	(___altoft@c+3)& (0+255),7,b
  3707  002B0E  D016               	goto	l3596
  3708                           
  3709                           ; BSR set to: 0
  3710  002B10  0100               	movlb	0	; () banked
  3711  002B12  1FB3               	comf	(___altoft@c+3)& (0+255),f,b
  3712  002B14  1FB2               	comf	(___altoft@c+2)& (0+255),f,b
  3713  002B16  1FB1               	comf	(___altoft@c+1)& (0+255),f,b
  3714  002B18  6DB0               	negf	___altoft@c& (0+255),b
  3715  002B1A  0E00               	movlw	0
  3716  002B1C  23B1               	addwfc	(___altoft@c+1)& (0+255),f,b
  3717  002B1E  23B2               	addwfc	(___altoft@c+2)& (0+255),f,b
  3718  002B20  23B3               	addwfc	(___altoft@c+3)& (0+255),f,b
  3719                           
  3720                           ; BSR set to: 0
  3721  002B22  0E01               	movlw	1
  3722  002B24  0100               	movlb	0	; () banked
  3723  002B26  6FB9               	movwf	___altoft@sign& (0+255),b
  3724                           
  3725                           ; BSR set to: 0
  3726  002B28  D009               	goto	l3596
  3727  002B2A                     l3594:
  3728                           
  3729                           ; BSR set to: 0
  3730  002B2A  0100               	movlb	0	; () banked
  3731  002B2C  90D8               	bcf	status,0,c
  3732  002B2E  33B3               	rrcf	(___altoft@c+3)& (0+255),f,b
  3733  002B30  33B2               	rrcf	(___altoft@c+2)& (0+255),f,b
  3734  002B32  33B1               	rrcf	(___altoft@c+1)& (0+255),f,b
  3735  002B34  33B0               	rrcf	___altoft@c& (0+255),f,b
  3736  002B36  0100               	movlb	0	; () banked
  3737  002B38  2BB8               	incf	___altoft@exp& (0+255),f,b
  3738  002B3A  D000               	goto	l3596
  3739  002B3C                     l3596:
  3740                           
  3741                           ; BSR set to: 0
  3742  002B3C  0E00               	movlw	0
  3743  002B3E  0100               	movlb	0	; () banked
  3744  002B40  15B0               	andwf	___altoft@c& (0+255),w,b
  3745  002B42  0100               	movlb	0	; () banked
  3746  002B44  6FB4               	movwf	??___altoft& (0+255),b
  3747  002B46  0E00               	movlw	0
  3748  002B48  0100               	movlb	0	; () banked
  3749  002B4A  15B1               	andwf	(___altoft@c+1)& (0+255),w,b
  3750  002B4C  0100               	movlb	0	; () banked
  3751  002B4E  6FB5               	movwf	(??___altoft+1)& (0+255),b
  3752  002B50  0E00               	movlw	0
  3753  002B52  0100               	movlb	0	; () banked
  3754  002B54  15B2               	andwf	(___altoft@c+2)& (0+255),w,b
  3755  002B56  0100               	movlb	0	; () banked
  3756  002B58  6FB6               	movwf	(??___altoft+2)& (0+255),b
  3757  002B5A  0EFF               	movlw	255
  3758  002B5C  0100               	movlb	0	; () banked
  3759  002B5E  15B3               	andwf	(___altoft@c+3)& (0+255),w,b
  3760  002B60  0100               	movlb	0	; () banked
  3761  002B62  6FB7               	movwf	(??___altoft+3)& (0+255),b
  3762  002B64  0100               	movlb	0	; () banked
  3763  002B66  51B4               	movf	??___altoft& (0+255),w,b
  3764  002B68  0100               	movlb	0	; () banked
  3765  002B6A  11B5               	iorwf	(??___altoft+1)& (0+255),w,b
  3766  002B6C  0100               	movlb	0	; () banked
  3767  002B6E  11B6               	iorwf	(??___altoft+2)& (0+255),w,b
  3768  002B70  0100               	movlb	0	; () banked
  3769  002B72  11B7               	iorwf	(??___altoft+3)& (0+255),w,b
  3770  002B74  A4D8               	btfss	status,2,c
  3771  002B76  D7D9               	goto	l3594
  3772                           
  3773                           ; BSR set to: 0
  3774                           
  3775                           ; BSR set to: 0
  3776  002B78  C0B0  F060         	movff	___altoft@c,___ftpack@arg
  3777  002B7C  C0B1  F061         	movff	___altoft@c+1,___ftpack@arg+1
  3778  002B80  C0B2  F062         	movff	___altoft@c+2,___ftpack@arg+2
  3779  002B84  C0B8  F063         	movff	___altoft@exp,___ftpack@exp
  3780  002B88  C0B9  F064         	movff	___altoft@sign,___ftpack@sign
  3781  002B8C  ECE0  F011         	call	___ftpack	;wreg free
  3782  002B90  C060  F0B0         	movff	?___ftpack,?___altoft
  3783  002B94  C061  F0B1         	movff	?___ftpack+1,?___altoft+1
  3784  002B98  C062  F0B2         	movff	?___ftpack+2,?___altoft+2
  3785  002B9C  D000               	goto	l636
  3786  002B9E                     l636:
  3787  002B9E  0012               	return		;funcret
  3788  002BA0                     __end_of___altoft:
  3789                           	opt stack 0
  3790                           tblptru	equ	0xFF8
  3791                           tblptrh	equ	0xFF7
  3792                           tblptrl	equ	0xFF6
  3793                           tablat	equ	0xFF5
  3794                           postinc0	equ	0xFEE
  3795                           plusw0	equ	0xFEB
  3796                           wreg	equ	0xFE8
  3797                           postinc1	equ	0xFE6
  3798                           postdec1	equ	0xFE5
  3799                           plusw1	equ	0xFE3
  3800                           fsr1h	equ	0xFE2
  3801                           fsr1l	equ	0xFE1
  3802                           postinc2	equ	0xFDE
  3803                           postdec2	equ	0xFDD
  3804                           fsr2h	equ	0xFDA
  3805                           fsr2l	equ	0xFD9
  3806                           status	equ	0xFD8
  3807                           
  3808 ;; *************** function _eval_poly *****************
  3809 ;; Defined at:
  3810 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\evalpoly.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;  x               3   38[BANK0 ] float 
  3813 ;;  d               2   41[BANK0 ] PTR const 
  3814 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), 
  3815 ;;  n               2   43[BANK0 ] int 
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  res             3   47[BANK0 ] int 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  3   38[BANK0 ] int 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3827 ;;      Params:         0       7       0       0
  3828 ;;      Locals:         0       3       0       0
  3829 ;;      Temps:          0       2       0       0
  3830 ;;      Totals:         0      12       0       0
  3831 ;;Total ram usage:       12 bytes
  3832 ;; Hardware stack levels used:    1
  3833 ;; Hardware stack levels required when called:    8
  3834 ;; This function calls:
  3835 ;;		___ftadd
  3836 ;;		___ftmul
  3837 ;;		___wmul
  3838 ;; This function is called by:
  3839 ;;		_sin
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text10
  3844  0026D8                     __ptext10:
  3845                           	opt stack 0
  3846  0026D8                     _eval_poly:
  3847                           	opt stack 18
  3848                           
  3849                           ;incstack = 0
  3850  0026D8  C08B  F060         	movff	eval_poly@n,___wmul@multiplier
  3851  0026DC  C08C  F061         	movff	eval_poly@n+1,___wmul@multiplier+1
  3852  0026E0  0E00               	movlw	0
  3853  0026E2  0100               	movlb	0	; () banked
  3854  0026E4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3855  0026E6  0E03               	movlw	3
  3856  0026E8  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3857  0026EA  EC34  F01A         	call	___wmul	;wreg free
  3858  0026EE  C089  F08D         	movff	eval_poly@d,??_eval_poly
  3859  0026F2  C08A  F08E         	movff	eval_poly@d+1,??_eval_poly+1
  3860  0026F6  0100               	movlb	0	; () banked
  3861  0026F8  5160               	movf	?___wmul& (0+255),w,b
  3862  0026FA  0100               	movlb	0	; () banked
  3863  0026FC  278D               	addwf	??_eval_poly& (0+255),f,b
  3864  0026FE  0100               	movlb	0	; () banked
  3865  002700  5161               	movf	(?___wmul+1)& (0+255),w,b
  3866  002702  0100               	movlb	0	; () banked
  3867  002704  238E               	addwfc	(??_eval_poly+1)& (0+255),f,b
  3868  002706  C08D  FFF6         	movff	??_eval_poly,tblptrl
  3869  00270A  C08E  FFF7         	movff	??_eval_poly+1,tblptrh
  3870  00270E                     	if	0	;tblptru may be non-zero
  3871  00270E                     	endif
  3872  00270E                     	if	0	;tblptru may be non-zero
  3873  00270E                     	endif
  3874  00270E  0009               	tblrd		*+
  3875  002710  CFF5 F08F          	movff	tablat,eval_poly@res
  3876  002714  0009               	tblrd		*+
  3877  002716  CFF5 F090          	movff	tablat,eval_poly@res+1
  3878  00271A  000A               	tblrd		*-
  3879  00271C  CFF5 F091          	movff	tablat,eval_poly@res+2
  3880  002720  D045               	goto	l3840
  3881  002722                     l3838:
  3882                           
  3883                           ; BSR set to: 0
  3884  002722  C08F  F06B         	movff	eval_poly@res,___ftmul@f2
  3885  002726  C090  F06C         	movff	eval_poly@res+1,___ftmul@f2+1
  3886  00272A  C091  F06D         	movff	eval_poly@res+2,___ftmul@f2+2
  3887  00272E  C086  F068         	movff	eval_poly@x,___ftmul@f1
  3888  002732  C087  F069         	movff	eval_poly@x+1,___ftmul@f1+1
  3889  002736  C088  F06A         	movff	eval_poly@x+2,___ftmul@f1+2
  3890  00273A  ECF8  F00F         	call	___ftmul	;wreg free
  3891  00273E  C068  F07A         	movff	?___ftmul,___ftadd@f1
  3892  002742  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  3893  002746  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  3894  00274A  0E00               	movlw	0
  3895  00274C  0100               	movlb	0	; () banked
  3896  00274E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3897  002750  0E03               	movlw	3
  3898  002752  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3899  002754  0100               	movlb	0	; () banked
  3900  002756  078B               	decf	eval_poly@n& (0+255),f,b
  3901  002758  A0D8               	btfss	status,0,c
  3902  00275A  078C               	decf	(eval_poly@n+1)& (0+255),f,b
  3903  00275C  C08B  F060         	movff	eval_poly@n,___wmul@multiplier
  3904  002760  C08C  F061         	movff	eval_poly@n+1,___wmul@multiplier+1
  3905  002764  EC34  F01A         	call	___wmul	;wreg free
  3906  002768  C089  F08D         	movff	eval_poly@d,??_eval_poly
  3907  00276C  C08A  F08E         	movff	eval_poly@d+1,??_eval_poly+1
  3908  002770  0100               	movlb	0	; () banked
  3909  002772  5160               	movf	?___wmul& (0+255),w,b
  3910  002774  0100               	movlb	0	; () banked
  3911  002776  278D               	addwf	??_eval_poly& (0+255),f,b
  3912  002778  0100               	movlb	0	; () banked
  3913  00277A  5161               	movf	(?___wmul+1)& (0+255),w,b
  3914  00277C  0100               	movlb	0	; () banked
  3915  00277E  238E               	addwfc	(??_eval_poly+1)& (0+255),f,b
  3916  002780  C08D  FFF6         	movff	??_eval_poly,tblptrl
  3917  002784  C08E  FFF7         	movff	??_eval_poly+1,tblptrh
  3918  002788                     	if	0	;tblptru may be non-zero
  3919  002788                     	endif
  3920  002788                     	if	0	;tblptru may be non-zero
  3921  002788                     	endif
  3922  002788  0009               	tblrd		*+
  3923  00278A  CFF5 F07D          	movff	tablat,___ftadd@f2
  3924  00278E  0009               	tblrd		*+
  3925  002790  CFF5 F07E          	movff	tablat,___ftadd@f2+1
  3926  002794  000A               	tblrd		*-
  3927  002796  CFF5 F07F          	movff	tablat,___ftadd@f2+2
  3928  00279A  ECD7  F00D         	call	___ftadd	;wreg free
  3929  00279E  C07A  F08F         	movff	?___ftadd,eval_poly@res
  3930  0027A2  C07B  F090         	movff	?___ftadd+1,eval_poly@res+1
  3931  0027A6  C07C  F091         	movff	?___ftadd+2,eval_poly@res+2
  3932  0027AA  D000               	goto	l3840
  3933  0027AC                     l3840:
  3934  0027AC  0100               	movlb	0	; () banked
  3935  0027AE  518B               	movf	eval_poly@n& (0+255),w,b
  3936  0027B0  0100               	movlb	0	; () banked
  3937  0027B2  118C               	iorwf	(eval_poly@n+1)& (0+255),w,b
  3938  0027B4  A4D8               	btfss	status,2,c
  3939  0027B6  D7B5               	goto	l3838
  3940                           
  3941                           ; BSR set to: 0
  3942  0027B8  C08F  F086         	movff	eval_poly@res,?_eval_poly
  3943  0027BC  C090  F087         	movff	eval_poly@res+1,?_eval_poly+1
  3944  0027C0  C091  F088         	movff	eval_poly@res+2,?_eval_poly+2
  3945                           
  3946                           ; BSR set to: 0
  3947  0027C4  0012               	return		;funcret
  3948  0027C6                     __end_of_eval_poly:
  3949                           	opt stack 0
  3950                           tblptru	equ	0xFF8
  3951                           tblptrh	equ	0xFF7
  3952                           tblptrl	equ	0xFF6
  3953                           tablat	equ	0xFF5
  3954                           postinc0	equ	0xFEE
  3955                           plusw0	equ	0xFEB
  3956                           wreg	equ	0xFE8
  3957                           postinc1	equ	0xFE6
  3958                           postdec1	equ	0xFE5
  3959                           plusw1	equ	0xFE3
  3960                           fsr1h	equ	0xFE2
  3961                           fsr1l	equ	0xFE1
  3962                           postinc2	equ	0xFDE
  3963                           postdec2	equ	0xFDD
  3964                           fsr2h	equ	0xFDA
  3965                           fsr2l	equ	0xFD9
  3966                           status	equ	0xFD8
  3967                           
  3968 ;; *************** function _conversion_degre_radian *****************
  3969 ;; Defined at:
  3970 ;;		line 76 in file "triangulation.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;  angle           3   65[BANK0 ] int 
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;		None
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  3   65[BANK0 ] int 
  3977 ;; Registers used:
  3978 ;;		wreg, status,2, status,0, cstack
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3984 ;;      Params:         0       3       0       0
  3985 ;;      Locals:         0       0       0       0
  3986 ;;      Temps:          0       0       0       0
  3987 ;;      Totals:         0       3       0       0
  3988 ;;Total ram usage:        3 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; Hardware stack levels required when called:    8
  3991 ;; This function calls:
  3992 ;;		___ftdiv
  3993 ;;		___ftmul
  3994 ;; This function is called by:
  3995 ;;		_cotangeante
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text11
  4000  00316C                     __ptext11:
  4001                           	opt stack 0
  4002  00316C                     _conversion_degre_radian:
  4003                           	opt stack 20
  4004                           
  4005                           ;triangulation.c: 78: return ((angle / 180.) * 3.14159265);
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;incstack = 0
  4009  00316C  0E00               	movlw	0
  4010  00316E  0100               	movlb	0	; () banked
  4011  003170  6F95               	movwf	___ftdiv@f2& (0+255),b
  4012  003172  0E34               	movlw	52
  4013  003174  0100               	movlb	0	; () banked
  4014  003176  6F96               	movwf	(___ftdiv@f2+1)& (0+255),b
  4015  003178  0E43               	movlw	67
  4016  00317A  0100               	movlb	0	; () banked
  4017  00317C  6F97               	movwf	(___ftdiv@f2+2)& (0+255),b
  4018  00317E  C0A1  F092         	movff	conversion_degre_radian@angle,___ftdiv@f1
  4019  003182  C0A2  F093         	movff	conversion_degre_radian@angle+1,___ftdiv@f1+1
  4020  003186  C0A3  F094         	movff	conversion_degre_radian@angle+2,___ftdiv@f1+2
  4021  00318A  ECA6  F010         	call	___ftdiv	;wreg free
  4022  00318E  C092  F068         	movff	?___ftdiv,___ftmul@f1
  4023  003192  C093  F069         	movff	?___ftdiv+1,___ftmul@f1+1
  4024  003196  C094  F06A         	movff	?___ftdiv+2,___ftmul@f1+2
  4025  00319A  0E10               	movlw	16
  4026  00319C  0100               	movlb	0	; () banked
  4027  00319E  6F6B               	movwf	___ftmul@f2& (0+255),b
  4028  0031A0  0E49               	movlw	73
  4029  0031A2  0100               	movlb	0	; () banked
  4030  0031A4  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  4031  0031A6  0E40               	movlw	64
  4032  0031A8  0100               	movlb	0	; () banked
  4033  0031AA  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  4034  0031AC  ECF8  F00F         	call	___ftmul	;wreg free
  4035  0031B0  C068  F0A1         	movff	?___ftmul,?_conversion_degre_radian
  4036  0031B4  C069  F0A2         	movff	?___ftmul+1,?_conversion_degre_radian+1
  4037  0031B8  C06A  F0A3         	movff	?___ftmul+2,?_conversion_degre_radian+2
  4038  0031BC  D000               	goto	l516
  4039  0031BE                     l516:
  4040  0031BE  0012               	return		;funcret
  4041  0031C0                     __end_of_conversion_degre_radian:
  4042                           	opt stack 0
  4043                           tblptru	equ	0xFF8
  4044                           tblptrh	equ	0xFF7
  4045                           tblptrl	equ	0xFF6
  4046                           tablat	equ	0xFF5
  4047                           postinc0	equ	0xFEE
  4048                           plusw0	equ	0xFEB
  4049                           wreg	equ	0xFE8
  4050                           postinc1	equ	0xFE6
  4051                           postdec1	equ	0xFE5
  4052                           plusw1	equ	0xFE3
  4053                           fsr1h	equ	0xFE2
  4054                           fsr1l	equ	0xFE1
  4055                           postinc2	equ	0xFDE
  4056                           postdec2	equ	0xFDD
  4057                           fsr2h	equ	0xFDA
  4058                           fsr2l	equ	0xFD9
  4059                           status	equ	0xFD8
  4060                           
  4061 ;; *************** function _obtention_angle *****************
  4062 ;; Defined at:
  4063 ;;		line 141 in file "moteur.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  position        2   65[BANK0 ] unsigned int 
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;  angle           3   68[BANK0 ] unsigned int 
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  3   65[BANK0 ] unsigned int 
  4070 ;; Registers used:
  4071 ;;		wreg, status,2, status,0, cstack
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4077 ;;      Params:         0       3       0       0
  4078 ;;      Locals:         0       3       0       0
  4079 ;;      Temps:          0       0       0       0
  4080 ;;      Totals:         0       6       0       0
  4081 ;;Total ram usage:        6 bytes
  4082 ;; Hardware stack levels used:    1
  4083 ;; Hardware stack levels required when called:    8
  4084 ;; This function calls:
  4085 ;;		___ftdiv
  4086 ;;		___ftmul
  4087 ;;		___lwtoft
  4088 ;; This function is called by:
  4089 ;;		_main
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           	psect	text12
  4094  002EDE                     __ptext12:
  4095                           	opt stack 0
  4096  002EDE                     _obtention_angle:
  4097                           	opt stack 22
  4098                           
  4099                           ;moteur.c: 143: double angle;
  4100                           ;moteur.c: 144: angle = (double) ((position) / 7999.);
  4101                           
  4102                           ;incstack = 0
  4103  002EDE  C0A1  F068         	movff	obtention_angle@position,___lwtoft@c
  4104  002EE2  C0A2  F069         	movff	obtention_angle@position+1,___lwtoft@c+1
  4105  002EE6  EC68  F01A         	call	___lwtoft	;wreg free
  4106  002EEA  C068  F092         	movff	?___lwtoft,___ftdiv@f1
  4107  002EEE  C069  F093         	movff	?___lwtoft+1,___ftdiv@f1+1
  4108  002EF2  C06A  F094         	movff	?___lwtoft+2,___ftdiv@f1+2
  4109  002EF6  0EF8               	movlw	248
  4110  002EF8  0100               	movlb	0	; () banked
  4111  002EFA  6F95               	movwf	___ftdiv@f2& (0+255),b
  4112  002EFC  0EF9               	movlw	249
  4113  002EFE  0100               	movlb	0	; () banked
  4114  002F00  6F96               	movwf	(___ftdiv@f2+1)& (0+255),b
  4115  002F02  0E45               	movlw	69
  4116  002F04  0100               	movlb	0	; () banked
  4117  002F06  6F97               	movwf	(___ftdiv@f2+2)& (0+255),b
  4118  002F08  ECA6  F010         	call	___ftdiv	;wreg free
  4119  002F0C  C092  F0A4         	movff	?___ftdiv,obtention_angle@angle
  4120  002F10  C093  F0A5         	movff	?___ftdiv+1,obtention_angle@angle+1
  4121  002F14  C094  F0A6         	movff	?___ftdiv+2,obtention_angle@angle+2
  4122                           
  4123                           ;moteur.c: 145: angle *= 360;
  4124  002F18  C0A4  F068         	movff	obtention_angle@angle,___ftmul@f1
  4125  002F1C  C0A5  F069         	movff	obtention_angle@angle+1,___ftmul@f1+1
  4126  002F20  C0A6  F06A         	movff	obtention_angle@angle+2,___ftmul@f1+2
  4127  002F24  0E00               	movlw	0
  4128  002F26  0100               	movlb	0	; () banked
  4129  002F28  6F6B               	movwf	___ftmul@f2& (0+255),b
  4130  002F2A  0EB4               	movlw	180
  4131  002F2C  0100               	movlb	0	; () banked
  4132  002F2E  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  4133  002F30  0E43               	movlw	67
  4134  002F32  0100               	movlb	0	; () banked
  4135  002F34  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  4136  002F36  ECF8  F00F         	call	___ftmul	;wreg free
  4137  002F3A  C068  F0A4         	movff	?___ftmul,obtention_angle@angle
  4138  002F3E  C069  F0A5         	movff	?___ftmul+1,obtention_angle@angle+1
  4139  002F42  C06A  F0A6         	movff	?___ftmul+2,obtention_angle@angle+2
  4140                           
  4141                           ;moteur.c: 146: return angle;
  4142  002F46  C0A4  F0A1         	movff	obtention_angle@angle,?_obtention_angle
  4143  002F4A  C0A5  F0A2         	movff	obtention_angle@angle+1,?_obtention_angle+1
  4144  002F4E  C0A6  F0A3         	movff	obtention_angle@angle+2,?_obtention_angle+2
  4145  002F52  D000               	goto	l482
  4146  002F54                     l482:
  4147  002F54  0012               	return		;funcret
  4148  002F56                     __end_of_obtention_angle:
  4149                           	opt stack 0
  4150                           tblptru	equ	0xFF8
  4151                           tblptrh	equ	0xFF7
  4152                           tblptrl	equ	0xFF6
  4153                           tablat	equ	0xFF5
  4154                           postinc0	equ	0xFEE
  4155                           plusw0	equ	0xFEB
  4156                           wreg	equ	0xFE8
  4157                           postinc1	equ	0xFE6
  4158                           postdec1	equ	0xFE5
  4159                           plusw1	equ	0xFE3
  4160                           fsr1h	equ	0xFE2
  4161                           fsr1l	equ	0xFE1
  4162                           postinc2	equ	0xFDE
  4163                           postdec2	equ	0xFDD
  4164                           fsr2h	equ	0xFDA
  4165                           fsr2l	equ	0xFD9
  4166                           status	equ	0xFD8
  4167                           
  4168 ;; *************** function ___lwtoft *****************
  4169 ;; Defined at:
  4170 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;  c               2    8[BANK0 ] unsigned int 
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;		None
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  3    8[BANK0 ] float 
  4177 ;; Registers used:
  4178 ;;		wreg, status,2, status,0, cstack
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4184 ;;      Params:         0       3       0       0
  4185 ;;      Locals:         0       0       0       0
  4186 ;;      Temps:          0       0       0       0
  4187 ;;      Totals:         0       3       0       0
  4188 ;;Total ram usage:        3 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    7
  4191 ;; This function calls:
  4192 ;;		___ftpack
  4193 ;; This function is called by:
  4194 ;;		_obtention_angle
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text13
  4199  0034D0                     __ptext13:
  4200                           	opt stack 0
  4201  0034D0                     ___lwtoft:
  4202                           	opt stack 22
  4203                           
  4204                           ;incstack = 0
  4205  0034D0  C068  F060         	movff	___lwtoft@c,___ftpack@arg
  4206  0034D4  C069  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
  4207  0034D8  0100               	movlb	0	; () banked
  4208  0034DA  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  4209  0034DC  0E8E               	movlw	142
  4210  0034DE  0100               	movlb	0	; () banked
  4211  0034E0  6F63               	movwf	___ftpack@exp& (0+255),b
  4212  0034E2  0E00               	movlw	0
  4213  0034E4  0100               	movlb	0	; () banked
  4214  0034E6  6F64               	movwf	___ftpack@sign& (0+255),b
  4215  0034E8  ECE0  F011         	call	___ftpack	;wreg free
  4216  0034EC  C060  F068         	movff	?___ftpack,?___lwtoft
  4217  0034F0  C061  F069         	movff	?___ftpack+1,?___lwtoft+1
  4218  0034F4  C062  F06A         	movff	?___ftpack+2,?___lwtoft+2
  4219  0034F8  D000               	goto	l1084
  4220  0034FA                     l1084:
  4221  0034FA  0012               	return		;funcret
  4222  0034FC                     __end_of___lwtoft:
  4223                           	opt stack 0
  4224                           tblptru	equ	0xFF8
  4225                           tblptrh	equ	0xFF7
  4226                           tblptrl	equ	0xFF6
  4227                           tablat	equ	0xFF5
  4228                           postinc0	equ	0xFEE
  4229                           plusw0	equ	0xFEB
  4230                           wreg	equ	0xFE8
  4231                           postinc1	equ	0xFE6
  4232                           postdec1	equ	0xFE5
  4233                           plusw1	equ	0xFE3
  4234                           fsr1h	equ	0xFE2
  4235                           fsr1l	equ	0xFE1
  4236                           postinc2	equ	0xFDE
  4237                           postdec2	equ	0xFDD
  4238                           fsr2h	equ	0xFDA
  4239                           fsr2l	equ	0xFD9
  4240                           status	equ	0xFD8
  4241                           
  4242 ;; *************** function _init_system *****************
  4243 ;; Defined at:
  4244 ;;		line 22 in file "system.c"
  4245 ;; Parameters:    Size  Location     Type
  4246 ;;		None
  4247 ;; Auto vars:     Size  Location     Type
  4248 ;;		None
  4249 ;; Return value:  Size  Location     Type
  4250 ;;		None               void
  4251 ;; Registers used:
  4252 ;;		wreg, status,2, cstack
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4258 ;;      Params:         0       0       0       0
  4259 ;;      Locals:         0       0       0       0
  4260 ;;      Temps:          0       0       0       0
  4261 ;;      Totals:         0       0       0       0
  4262 ;;Total ram usage:        0 bytes
  4263 ;; Hardware stack levels used:    1
  4264 ;; Hardware stack levels required when called:    8
  4265 ;; This function calls:
  4266 ;;		_ConfigInterrupt
  4267 ;;		_ConfigPorts
  4268 ;;		_config_QEI
  4269 ;;		_config_pwm
  4270 ;;		_config_uart
  4271 ;;		_init_capteur
  4272 ;;		_init_timer_0
  4273 ;;		_init_uart_logiciel
  4274 ;;		_init_uart_reception
  4275 ;; This function is called by:
  4276 ;;		_main
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text14
  4281  0034FC                     __ptext14:
  4282                           	opt stack 0
  4283  0034FC                     _init_system:
  4284                           	opt stack 22
  4285                           
  4286                           ;system.c: 25: ConfigPorts();
  4287                           
  4288                           ;incstack = 0
  4289  0034FC  EC60  F016         	call	_ConfigPorts	;wreg free
  4290                           
  4291                           ;system.c: 26: ConfigInterrupt();
  4292  003500  ECA7  F016         	call	_ConfigInterrupt	;wreg free
  4293                           
  4294                           ;system.c: 27: init_timer_0();
  4295  003504  ECD4  F01A         	call	_init_timer_0	;wreg free
  4296                           
  4297                           ;system.c: 28: init_uart_logiciel();
  4298  003508  ECF7  F01A         	call	_init_uart_logiciel	;wreg free
  4299                           
  4300                           ;system.c: 29: init_uart_reception();
  4301  00350C  ECED  F01A         	call	_init_uart_reception	;wreg free
  4302                           
  4303                           ;system.c: 30: config_uart ();
  4304  003510  ECC6  F01A         	call	_config_uart	;wreg free
  4305                           
  4306                           ;system.c: 31: config_pwm();
  4307  003514  EC52  F019         	call	_config_pwm	;wreg free
  4308                           
  4309                           ;system.c: 32: config_QEI();
  4310  003518  EC18  F01A         	call	_config_QEI	;wreg free
  4311                           
  4312                           ;system.c: 35: init_capteur();
  4313  00351C  ECAB  F017         	call	_init_capteur	;wreg free
  4314  003520  0012               	return		;funcret
  4315  003522                     __end_of_init_system:
  4316                           	opt stack 0
  4317                           tblptru	equ	0xFF8
  4318                           tblptrh	equ	0xFF7
  4319                           tblptrl	equ	0xFF6
  4320                           tablat	equ	0xFF5
  4321                           postinc0	equ	0xFEE
  4322                           plusw0	equ	0xFEB
  4323                           wreg	equ	0xFE8
  4324                           postinc1	equ	0xFE6
  4325                           postdec1	equ	0xFE5
  4326                           plusw1	equ	0xFE3
  4327                           fsr1h	equ	0xFE2
  4328                           fsr1l	equ	0xFE1
  4329                           postinc2	equ	0xFDE
  4330                           postdec2	equ	0xFDD
  4331                           fsr2h	equ	0xFDA
  4332                           fsr2l	equ	0xFD9
  4333                           status	equ	0xFD8
  4334                           
  4335 ;; *************** function _init_uart_reception *****************
  4336 ;; Defined at:
  4337 ;;		line 72 in file "uart.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;		None
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;		None
  4342 ;; Return value:  Size  Location     Type
  4343 ;;		None               void
  4344 ;; Registers used:
  4345 ;;		wreg, status,2
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4351 ;;      Params:         0       0       0       0
  4352 ;;      Locals:         0       0       0       0
  4353 ;;      Temps:          0       0       0       0
  4354 ;;      Totals:         0       0       0       0
  4355 ;;Total ram usage:        0 bytes
  4356 ;; Hardware stack levels used:    1
  4357 ;; Hardware stack levels required when called:    6
  4358 ;; This function calls:
  4359 ;;		Nothing
  4360 ;; This function is called by:
  4361 ;;		_init_system
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           	psect	text15
  4366  0035DA                     __ptext15:
  4367                           	opt stack 0
  4368  0035DA                     _init_uart_reception:
  4369                           	opt stack 23
  4370                           
  4371                           ;uart.c: 74: uart_reception.buffer_plein = 0;
  4372                           
  4373                           ;incstack = 0
  4374  0035DA  0E00               	movlw	0
  4375  0035DC  0101               	movlb	1	; () banked
  4376  0035DE  6F65               	movwf	(_uart_reception+101)& (0+255),b
  4377                           
  4378                           ;uart.c: 75: uart_reception.buffer_vide = 1;
  4379  0035E0  0E01               	movlw	1
  4380  0035E2  0101               	movlb	1	; () banked
  4381  0035E4  6F66               	movwf	(_uart_reception+102)& (0+255),b
  4382                           
  4383                           ;uart.c: 76: uart_reception.indice = 0;
  4384  0035E6  0E00               	movlw	0
  4385  0035E8  0101               	movlb	1	; () banked
  4386  0035EA  6F64               	movwf	(_uart_reception+100)& (0+255),b
  4387                           
  4388                           ; BSR set to: 1
  4389  0035EC  0012               	return		;funcret
  4390  0035EE                     __end_of_init_uart_reception:
  4391                           	opt stack 0
  4392                           tblptru	equ	0xFF8
  4393                           tblptrh	equ	0xFF7
  4394                           tblptrl	equ	0xFF6
  4395                           tablat	equ	0xFF5
  4396                           postinc0	equ	0xFEE
  4397                           plusw0	equ	0xFEB
  4398                           wreg	equ	0xFE8
  4399                           postinc1	equ	0xFE6
  4400                           postdec1	equ	0xFE5
  4401                           plusw1	equ	0xFE3
  4402                           fsr1h	equ	0xFE2
  4403                           fsr1l	equ	0xFE1
  4404                           postinc2	equ	0xFDE
  4405                           postdec2	equ	0xFDD
  4406                           fsr2h	equ	0xFDA
  4407                           fsr2l	equ	0xFD9
  4408                           status	equ	0xFD8
  4409                           
  4410 ;; *************** function _init_uart_logiciel *****************
  4411 ;; Defined at:
  4412 ;;		line 65 in file "uart.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;		None
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;		None
  4417 ;; Return value:  Size  Location     Type
  4418 ;;		None               void
  4419 ;; Registers used:
  4420 ;;		wreg, status,2, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4426 ;;      Params:         0       0       0       0
  4427 ;;      Locals:         0       0       0       0
  4428 ;;      Temps:          0       0       0       0
  4429 ;;      Totals:         0       0       0       0
  4430 ;;Total ram usage:        0 bytes
  4431 ;; Hardware stack levels used:    1
  4432 ;; Hardware stack levels required when called:    7
  4433 ;; This function calls:
  4434 ;;		_init_timer_1
  4435 ;; This function is called by:
  4436 ;;		_init_system
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           	psect	text16
  4441  0035EE                     __ptext16:
  4442                           	opt stack 0
  4443  0035EE                     _init_uart_logiciel:
  4444                           	opt stack 22
  4445                           
  4446                           ;uart.c: 67: uart_logiciel.transmission_en_cours = 0;
  4447                           
  4448                           ; BSR set to: 1
  4449                           ;incstack = 0
  4450  0035EE  0E00               	movlw	0
  4451  0035F0  6E33               	movwf	_uart_logiciel+11,c
  4452                           
  4453                           ;uart.c: 68: uart_logiciel.indice = 0;
  4454  0035F2  0E00               	movlw	0
  4455  0035F4  6E34               	movwf	_uart_logiciel+12,c
  4456                           
  4457                           ;uart.c: 69: init_timer_1();
  4458  0035F6  ECE1  F01A         	call	_init_timer_1	;wreg free
  4459  0035FA  0012               	return		;funcret
  4460  0035FC                     __end_of_init_uart_logiciel:
  4461                           	opt stack 0
  4462                           tblptru	equ	0xFF8
  4463                           tblptrh	equ	0xFF7
  4464                           tblptrl	equ	0xFF6
  4465                           tablat	equ	0xFF5
  4466                           postinc0	equ	0xFEE
  4467                           plusw0	equ	0xFEB
  4468                           wreg	equ	0xFE8
  4469                           postinc1	equ	0xFE6
  4470                           postdec1	equ	0xFE5
  4471                           plusw1	equ	0xFE3
  4472                           fsr1h	equ	0xFE2
  4473                           fsr1l	equ	0xFE1
  4474                           postinc2	equ	0xFDE
  4475                           postdec2	equ	0xFDD
  4476                           fsr2h	equ	0xFDA
  4477                           fsr2l	equ	0xFD9
  4478                           status	equ	0xFD8
  4479                           
  4480 ;; *************** function _init_timer_1 *****************
  4481 ;; Defined at:
  4482 ;;		line 58 in file "system.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;		None
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;		None
  4487 ;; Return value:  Size  Location     Type
  4488 ;;		None               void
  4489 ;; Registers used:
  4490 ;;		wreg, status,2
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4496 ;;      Params:         0       0       0       0
  4497 ;;      Locals:         0       0       0       0
  4498 ;;      Temps:          0       0       0       0
  4499 ;;      Totals:         0       0       0       0
  4500 ;;Total ram usage:        0 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:    6
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_init_uart_logiciel
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text17
  4511  0035C2                     __ptext17:
  4512                           	opt stack 0
  4513  0035C2                     _init_timer_1:
  4514                           	opt stack 22
  4515                           
  4516                           ;system.c: 60: T1CONbits.RD16 = 1;
  4517                           
  4518                           ;incstack = 0
  4519  0035C2  8ECD               	bsf	4045,7,c	;volatile
  4520                           
  4521                           ;system.c: 61: T1CONbits.T1RUN = 0;
  4522  0035C4  9CCD               	bcf	4045,6,c	;volatile
  4523                           
  4524                           ;system.c: 62: T1CONbits.TMR1CS = 0;
  4525  0035C6  92CD               	bcf	4045,1,c	;volatile
  4526                           
  4527                           ;system.c: 63: T1CONbits.T1OSCEN = 1;
  4528  0035C8  86CD               	bsf	4045,3,c	;volatile
  4529                           
  4530                           ;system.c: 64: T1CONbits.T1CKPS0 = 0;
  4531  0035CA  98CD               	bcf	4045,4,c	;volatile
  4532                           
  4533                           ;system.c: 65: T1CONbits.T1CKPS1 = 0;
  4534  0035CC  9ACD               	bcf	4045,5,c	;volatile
  4535                           
  4536                           ;system.c: 67: TMR1 = 65519;
  4537  0035CE  0EFF               	movlw	255
  4538  0035D0  6ECF               	movwf	4047,c	;volatile
  4539  0035D2  0EEF               	movlw	239
  4540  0035D4  6ECE               	movwf	4046,c	;volatile
  4541                           
  4542                           ;system.c: 70: TMR1ON = 1;
  4543  0035D6  80CD               	bsf	4045,0,c	;volatile
  4544  0035D8  0012               	return		;funcret
  4545  0035DA                     __end_of_init_timer_1:
  4546                           	opt stack 0
  4547                           tblptru	equ	0xFF8
  4548                           tblptrh	equ	0xFF7
  4549                           tblptrl	equ	0xFF6
  4550                           tablat	equ	0xFF5
  4551                           postinc0	equ	0xFEE
  4552                           plusw0	equ	0xFEB
  4553                           wreg	equ	0xFE8
  4554                           postinc1	equ	0xFE6
  4555                           postdec1	equ	0xFE5
  4556                           plusw1	equ	0xFE3
  4557                           fsr1h	equ	0xFE2
  4558                           fsr1l	equ	0xFE1
  4559                           postinc2	equ	0xFDE
  4560                           postdec2	equ	0xFDD
  4561                           fsr2h	equ	0xFDA
  4562                           fsr2l	equ	0xFD9
  4563                           status	equ	0xFD8
  4564                           
  4565 ;; *************** function _init_timer_0 *****************
  4566 ;; Defined at:
  4567 ;;		line 45 in file "system.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;		None
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;		None
  4572 ;; Return value:  Size  Location     Type
  4573 ;;		None               void
  4574 ;; Registers used:
  4575 ;;		wreg, status,2
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4581 ;;      Params:         0       0       0       0
  4582 ;;      Locals:         0       0       0       0
  4583 ;;      Temps:          0       0       0       0
  4584 ;;      Totals:         0       0       0       0
  4585 ;;Total ram usage:        0 bytes
  4586 ;; Hardware stack levels used:    1
  4587 ;; Hardware stack levels required when called:    6
  4588 ;; This function calls:
  4589 ;;		Nothing
  4590 ;; This function is called by:
  4591 ;;		_init_system
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text18
  4596  0035A8                     __ptext18:
  4597                           	opt stack 0
  4598  0035A8                     _init_timer_0:
  4599                           	opt stack 23
  4600                           
  4601                           ;system.c: 47: T0CONbits.T016BIT = 1;
  4602                           
  4603                           ;incstack = 0
  4604  0035A8  8CD5               	bsf	4053,6,c	;volatile
  4605                           
  4606                           ;system.c: 48: T0CONbits.T0PS = 0b100;
  4607  0035AA  50D5               	movf	4053,w,c	;volatile
  4608  0035AC  0BF8               	andlw	-8
  4609  0035AE  0904               	iorlw	4
  4610  0035B0  6ED5               	movwf	4053,c	;volatile
  4611                           
  4612                           ;system.c: 49: T0CONbits.T0CS = 0;
  4613  0035B2  9AD5               	bcf	4053,5,c	;volatile
  4614                           
  4615                           ;system.c: 50: T0CONbits.PSA = 0;
  4616  0035B4  96D5               	bcf	4053,3,c	;volatile
  4617                           
  4618                           ;system.c: 53: TMR0 = 32750;
  4619  0035B6  0E7F               	movlw	127
  4620  0035B8  6ED7               	movwf	4055,c	;volatile
  4621  0035BA  0EEE               	movlw	238
  4622  0035BC  6ED6               	movwf	4054,c	;volatile
  4623                           
  4624                           ;system.c: 55: TMR0ON = 1;
  4625  0035BE  8ED5               	bsf	4053,7,c	;volatile
  4626  0035C0  0012               	return		;funcret
  4627  0035C2                     __end_of_init_timer_0:
  4628                           	opt stack 0
  4629                           tblptru	equ	0xFF8
  4630                           tblptrh	equ	0xFF7
  4631                           tblptrl	equ	0xFF6
  4632                           tablat	equ	0xFF5
  4633                           postinc0	equ	0xFEE
  4634                           plusw0	equ	0xFEB
  4635                           wreg	equ	0xFE8
  4636                           postinc1	equ	0xFE6
  4637                           postdec1	equ	0xFE5
  4638                           plusw1	equ	0xFE3
  4639                           fsr1h	equ	0xFE2
  4640                           fsr1l	equ	0xFE1
  4641                           postinc2	equ	0xFDE
  4642                           postdec2	equ	0xFDD
  4643                           fsr2h	equ	0xFDA
  4644                           fsr2l	equ	0xFD9
  4645                           status	equ	0xFD8
  4646                           
  4647 ;; *************** function _init_capteur *****************
  4648 ;; Defined at:
  4649 ;;		line 149 in file "moteur.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;		None
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;		None
  4654 ;; Return value:  Size  Location     Type
  4655 ;;		None               void
  4656 ;; Registers used:
  4657 ;;		wreg, status,2
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4663 ;;      Params:         0       0       0       0
  4664 ;;      Locals:         0       0       0       0
  4665 ;;      Temps:          0       0       0       0
  4666 ;;      Totals:         0       0       0       0
  4667 ;;Total ram usage:        0 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; Hardware stack levels required when called:    6
  4670 ;; This function calls:
  4671 ;;		Nothing
  4672 ;; This function is called by:
  4673 ;;		_init_system
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text19
  4678  002F56                     __ptext19:
  4679                           	opt stack 0
  4680  002F56                     _init_capteur:
  4681                           	opt stack 23
  4682                           
  4683                           ;moteur.c: 151: capteur.angle[0] = 0.;
  4684                           
  4685                           ;incstack = 0
  4686  002F56  0E00               	movlw	0
  4687  002F58  0101               	movlb	1	; () banked
  4688  002F5A  6F6A               	movwf	(_capteur+3)& (0+255),b
  4689  002F5C  0E00               	movlw	0
  4690  002F5E  0101               	movlb	1	; () banked
  4691  002F60  6F6B               	movwf	(_capteur+4)& (0+255),b
  4692  002F62  0E00               	movlw	0
  4693  002F64  0101               	movlb	1	; () banked
  4694  002F66  6F6C               	movwf	(_capteur+5)& (0+255),b
  4695                           
  4696                           ;moteur.c: 152: capteur.angle[1] = 0.;
  4697  002F68  0E00               	movlw	0
  4698  002F6A  0101               	movlb	1	; () banked
  4699  002F6C  6F6D               	movwf	(_capteur+6)& (0+255),b
  4700  002F6E  0E00               	movlw	0
  4701  002F70  0101               	movlb	1	; () banked
  4702  002F72  6F6E               	movwf	(_capteur+7)& (0+255),b
  4703  002F74  0E00               	movlw	0
  4704  002F76  0101               	movlb	1	; () banked
  4705  002F78  6F6F               	movwf	(_capteur+8)& (0+255),b
  4706                           
  4707                           ;moteur.c: 153: capteur.angle[2] = 0.;
  4708  002F7A  0E00               	movlw	0
  4709  002F7C  0101               	movlb	1	; () banked
  4710  002F7E  6F70               	movwf	(_capteur+9)& (0+255),b
  4711  002F80  0E00               	movlw	0
  4712  002F82  0101               	movlb	1	; () banked
  4713  002F84  6F71               	movwf	(_capteur+10)& (0+255),b
  4714  002F86  0E00               	movlw	0
  4715  002F88  0101               	movlb	1	; () banked
  4716  002F8A  6F72               	movwf	(_capteur+11)& (0+255),b
  4717                           
  4718                           ;moteur.c: 154: capteur.flag_capteur = 0;
  4719  002F8C  0E00               	movlw	0
  4720  002F8E  0101               	movlb	1	; () banked
  4721  002F90  6F69               	movwf	(_capteur+2)& (0+255),b
  4722                           
  4723                           ;moteur.c: 155: capteur.indice = 0;
  4724  002F92  0E00               	movlw	0
  4725  002F94  0101               	movlb	1	; () banked
  4726  002F96  6F79               	movwf	(_capteur+18)& (0+255),b
  4727                           
  4728                           ;moteur.c: 156: capteur.position[0] = 0;
  4729  002F98  0E00               	movlw	0
  4730  002F9A  0101               	movlb	1	; () banked
  4731  002F9C  6F74               	movwf	(_capteur+13)& (0+255),b
  4732  002F9E  0E00               	movlw	0
  4733  002FA0  6F73               	movwf	(_capteur+12)& (0+255),b
  4734                           
  4735                           ;moteur.c: 157: capteur.position[1] = 0;
  4736  002FA2  0E00               	movlw	0
  4737  002FA4  0101               	movlb	1	; () banked
  4738  002FA6  6F76               	movwf	(_capteur+15)& (0+255),b
  4739  002FA8  0E00               	movlw	0
  4740  002FAA  6F75               	movwf	(_capteur+14)& (0+255),b
  4741                           
  4742                           ;moteur.c: 158: capteur.position[2] = 0;
  4743  002FAC  0E00               	movlw	0
  4744  002FAE  0101               	movlb	1	; () banked
  4745  002FB0  6F78               	movwf	(_capteur+17)& (0+255),b
  4746  002FB2  0E00               	movlw	0
  4747  002FB4  6F77               	movwf	(_capteur+16)& (0+255),b
  4748                           
  4749                           ;moteur.c: 159: capteur.synchro_debut_tour = 0;
  4750  002FB6  0E00               	movlw	0
  4751  002FB8  0101               	movlb	1	; () banked
  4752  002FBA  6F68               	movwf	(_capteur+1)& (0+255),b
  4753                           
  4754                           ;moteur.c: 160: capteur.tour_en_cours = 0;
  4755  002FBC  0E00               	movlw	0
  4756  002FBE  0101               	movlb	1	; () banked
  4757  002FC0  6F67               	movwf	_capteur& (0+255),b
  4758                           
  4759                           ; BSR set to: 1
  4760  002FC2  0012               	return		;funcret
  4761  002FC4                     __end_of_init_capteur:
  4762                           	opt stack 0
  4763                           tblptru	equ	0xFF8
  4764                           tblptrh	equ	0xFF7
  4765                           tblptrl	equ	0xFF6
  4766                           tablat	equ	0xFF5
  4767                           postinc0	equ	0xFEE
  4768                           plusw0	equ	0xFEB
  4769                           wreg	equ	0xFE8
  4770                           postinc1	equ	0xFE6
  4771                           postdec1	equ	0xFE5
  4772                           plusw1	equ	0xFE3
  4773                           fsr1h	equ	0xFE2
  4774                           fsr1l	equ	0xFE1
  4775                           postinc2	equ	0xFDE
  4776                           postdec2	equ	0xFDD
  4777                           fsr2h	equ	0xFDA
  4778                           fsr2l	equ	0xFD9
  4779                           status	equ	0xFD8
  4780                           
  4781 ;; *************** function _config_uart *****************
  4782 ;; Defined at:
  4783 ;;		line 31 in file "uart.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;		None
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;		None               void
  4790 ;; Registers used:
  4791 ;;		wreg, status,2
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4797 ;;      Params:         0       0       0       0
  4798 ;;      Locals:         0       0       0       0
  4799 ;;      Temps:          0       0       0       0
  4800 ;;      Totals:         0       0       0       0
  4801 ;;Total ram usage:        0 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:    6
  4804 ;; This function calls:
  4805 ;;		Nothing
  4806 ;; This function is called by:
  4807 ;;		_init_system
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           	psect	text20
  4812  00358C                     __ptext20:
  4813                           	opt stack 0
  4814  00358C                     _config_uart:
  4815                           	opt stack 23
  4816                           
  4817                           ;uart.c: 39: TXSTAbits.TXEN = 1;
  4818                           
  4819                           ; BSR set to: 1
  4820                           ;incstack = 0
  4821  00358C  8AAC               	bsf	4012,5,c	;volatile
  4822                           
  4823                           ;uart.c: 40: TXSTAbits.TX9 = 0;
  4824  00358E  9CAC               	bcf	4012,6,c	;volatile
  4825                           
  4826                           ;uart.c: 41: TXSTAbits.SYNC = 0;
  4827  003590  98AC               	bcf	4012,4,c	;volatile
  4828                           
  4829                           ;uart.c: 42: TXSTAbits.SENDB = 0;
  4830  003592  96AC               	bcf	4012,3,c	;volatile
  4831                           
  4832                           ;uart.c: 43: TXSTAbits.BRGH = 1;
  4833  003594  84AC               	bsf	4012,2,c	;volatile
  4834                           
  4835                           ;uart.c: 44: TXSTAbits.TX9 = 0;
  4836  003596  9CAC               	bcf	4012,6,c	;volatile
  4837                           
  4838                           ;uart.c: 47: BAUDCONbits.BRG16 = 1;
  4839  003598  86AA               	bsf	4010,3,c	;volatile
  4840                           
  4841                           ;uart.c: 49: BAUDCONbits.ABDEN = 0;
  4842  00359A  90AA               	bcf	4010,0,c	;volatile
  4843                           
  4844                           ;uart.c: 52: SPBRG = 86;
  4845  00359C  0E56               	movlw	86
  4846  00359E  6EAF               	movwf	4015,c	;volatile
  4847                           
  4848                           ;uart.c: 59: RCSTAbits.SPEN = 1;
  4849  0035A0  8EAB               	bsf	4011,7,c	;volatile
  4850                           
  4851                           ;uart.c: 60: RCSTAbits.RX9 = 0;
  4852  0035A2  9CAB               	bcf	4011,6,c	;volatile
  4853                           
  4854                           ;uart.c: 61: RCSTAbits.CREN = 1;
  4855  0035A4  88AB               	bsf	4011,4,c	;volatile
  4856  0035A6  0012               	return		;funcret
  4857  0035A8                     __end_of_config_uart:
  4858                           	opt stack 0
  4859                           tblptru	equ	0xFF8
  4860                           tblptrh	equ	0xFF7
  4861                           tblptrl	equ	0xFF6
  4862                           tablat	equ	0xFF5
  4863                           postinc0	equ	0xFEE
  4864                           plusw0	equ	0xFEB
  4865                           wreg	equ	0xFE8
  4866                           postinc1	equ	0xFE6
  4867                           postdec1	equ	0xFE5
  4868                           plusw1	equ	0xFE3
  4869                           fsr1h	equ	0xFE2
  4870                           fsr1l	equ	0xFE1
  4871                           postinc2	equ	0xFDE
  4872                           postdec2	equ	0xFDD
  4873                           fsr2h	equ	0xFDA
  4874                           fsr2l	equ	0xFD9
  4875                           status	equ	0xFD8
  4876                           
  4877 ;; *************** function _config_pwm *****************
  4878 ;; Defined at:
  4879 ;;		line 28 in file "moteur.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;		None
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;		None
  4884 ;; Return value:  Size  Location     Type
  4885 ;;		None               void
  4886 ;; Registers used:
  4887 ;;		wreg, status,2
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4893 ;;      Params:         0       0       0       0
  4894 ;;      Locals:         0       0       0       0
  4895 ;;      Temps:          0       0       0       0
  4896 ;;      Totals:         0       0       0       0
  4897 ;;Total ram usage:        0 bytes
  4898 ;; Hardware stack levels used:    1
  4899 ;; Hardware stack levels required when called:    6
  4900 ;; This function calls:
  4901 ;;		Nothing
  4902 ;; This function is called by:
  4903 ;;		_init_system
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           	psect	text21
  4908  0032A4                     __ptext21:
  4909                           	opt stack 0
  4910  0032A4                     _config_pwm:
  4911                           	opt stack 23
  4912                           
  4913                           ;moteur.c: 30: PTCON0bits.PTOPS = 0;
  4914                           
  4915                           ;incstack = 0
  4916  0032A4  987F               	bcf	3967,4,c	;volatile
  4917  0032A6  9A7F               	bcf	3967,5,c	;volatile
  4918  0032A8  9C7F               	bcf	3967,6,c	;volatile
  4919  0032AA  9E7F               	bcf	3967,7,c	;volatile
  4920                           
  4921                           ;moteur.c: 31: PTCON0bits.PTCKPS = 0;
  4922  0032AC  0EF3               	movlw	-13
  4923  0032AE  167F               	andwf	3967,f,c	;volatile
  4924                           
  4925                           ;moteur.c: 32: PTCON0bits.PTMOD = 0;
  4926  0032B0  0EFC               	movlw	-4
  4927  0032B2  167F               	andwf	3967,f,c	;volatile
  4928                           
  4929                           ;moteur.c: 34: PTCON1bits.PTEN = 1;
  4930  0032B4  8E7E               	bsf	3966,7,c	;volatile
  4931                           
  4932                           ;moteur.c: 36: PWMCON0bits.PMOD0 = 1;
  4933  0032B6  806F               	bsf	3951,0,c	;volatile
  4934                           
  4935                           ;moteur.c: 37: PWMCON0bits.PWMEN = 0b001;
  4936  0032B8  506F               	movf	3951,w,c	;volatile
  4937  0032BA  0B8F               	andlw	-113
  4938  0032BC  0910               	iorlw	16
  4939  0032BE  6E6F               	movwf	3951,c	;volatile
  4940                           
  4941                           ;moteur.c: 39: PWMCON1bits.UDIS = 0;
  4942  0032C0  926E               	bcf	3950,1,c	;volatile
  4943                           
  4944                           ;moteur.c: 41: PTPERL = 166;
  4945  0032C2  0EA6               	movlw	166
  4946  0032C4  6E7B               	movwf	3963,c	;volatile
  4947                           
  4948                           ;moteur.c: 42: PTPERH = 0;
  4949  0032C6  0E00               	movlw	0
  4950  0032C8  6E7A               	movwf	3962,c	;volatile
  4951                           
  4952                           ;moteur.c: 45: PDC0L = 0;
  4953  0032CA  0E00               	movlw	0
  4954  0032CC  6E79               	movwf	3961,c	;volatile
  4955                           
  4956                           ;moteur.c: 46: PDC0H = 0;
  4957  0032CE  0E00               	movlw	0
  4958  0032D0  6E78               	movwf	3960,c	;volatile
  4959                           
  4960                           ;moteur.c: 47: PDC1L = 0;
  4961  0032D2  0E00               	movlw	0
  4962  0032D4  6E77               	movwf	3959,c	;volatile
  4963                           
  4964                           ;moteur.c: 48: PDC1H = 0;
  4965  0032D6  0E00               	movlw	0
  4966  0032D8  6E76               	movwf	3958,c	;volatile
  4967                           
  4968                           ;moteur.c: 49: PDC2L = 0;
  4969  0032DA  0E00               	movlw	0
  4970  0032DC  6E75               	movwf	3957,c	;volatile
  4971                           
  4972                           ;moteur.c: 50: PDC2H = 0;
  4973  0032DE  0E00               	movlw	0
  4974  0032E0  6E74               	movwf	3956,c	;volatile
  4975                           
  4976                           ;moteur.c: 51: PDC3L = 0;
  4977  0032E2  0E00               	movlw	0
  4978  0032E4  6E73               	movwf	3955,c	;volatile
  4979                           
  4980                           ;moteur.c: 52: PDC3H = 0;
  4981  0032E6  0E00               	movlw	0
  4982  0032E8  6E72               	movwf	3954,c	;volatile
  4983  0032EA  0012               	return		;funcret
  4984  0032EC                     __end_of_config_pwm:
  4985                           	opt stack 0
  4986                           tblptru	equ	0xFF8
  4987                           tblptrh	equ	0xFF7
  4988                           tblptrl	equ	0xFF6
  4989                           tablat	equ	0xFF5
  4990                           postinc0	equ	0xFEE
  4991                           plusw0	equ	0xFEB
  4992                           wreg	equ	0xFE8
  4993                           postinc1	equ	0xFE6
  4994                           postdec1	equ	0xFE5
  4995                           plusw1	equ	0xFE3
  4996                           fsr1h	equ	0xFE2
  4997                           fsr1l	equ	0xFE1
  4998                           postinc2	equ	0xFDE
  4999                           postdec2	equ	0xFDD
  5000                           fsr2h	equ	0xFDA
  5001                           fsr2l	equ	0xFD9
  5002                           status	equ	0xFD8
  5003                           
  5004 ;; *************** function _config_QEI *****************
  5005 ;; Defined at:
  5006 ;;		line 83 in file "moteur.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;		None
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;		None
  5011 ;; Return value:  Size  Location     Type
  5012 ;;		None               void
  5013 ;; Registers used:
  5014 ;;		wreg, status,2
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5020 ;;      Params:         0       0       0       0
  5021 ;;      Locals:         0       0       0       0
  5022 ;;      Temps:          0       0       0       0
  5023 ;;      Totals:         0       0       0       0
  5024 ;;Total ram usage:        0 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    6
  5027 ;; This function calls:
  5028 ;;		Nothing
  5029 ;; This function is called by:
  5030 ;;		_init_system
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           	psect	text22
  5035  003430                     __ptext22:
  5036                           	opt stack 0
  5037  003430                     _config_QEI:
  5038                           	opt stack 23
  5039                           
  5040                           ;moteur.c: 85: CAP1CONbits.CAP1REN = 1;
  5041                           
  5042                           ;incstack = 0
  5043  003430  8C63               	bsf	3939,6,c	;volatile
  5044                           
  5045                           ;moteur.c: 86: ANSEL0 = 0;
  5046  003432  0E00               	movlw	0
  5047  003434  6EB8               	movwf	4024,c	;volatile
  5048                           
  5049                           ;moteur.c: 89: QEICONbits.VELM = 1;
  5050  003436  8EB6               	bsf	4022,7,c	;volatile
  5051                           
  5052                           ;moteur.c: 90: QEICONbits.QERR = 0;
  5053  003438  9CB6               	bcf	4022,6,c	;volatile
  5054                           
  5055                           ;moteur.c: 91: QEICONbits.QEIM = 0b110;
  5056  00343A  50B6               	movf	4022,w,c	;volatile
  5057  00343C  0BE3               	andlw	-29
  5058  00343E  0918               	iorlw	24
  5059  003440  6EB6               	movwf	4022,c	;volatile
  5060                           
  5061                           ;moteur.c: 92: QEICONbits.PDEC = 0b01;
  5062  003442  50B6               	movf	4022,w,c	;volatile
  5063  003444  0BFC               	andlw	-4
  5064  003446  0901               	iorlw	1
  5065  003448  6EB6               	movwf	4022,c	;volatile
  5066                           
  5067                           ;moteur.c: 97: DFLTCONbits.FLT3EN = 1;
  5068  00344A  8A60               	bsf	3936,5,c	;volatile
  5069                           
  5070                           ;moteur.c: 98: DFLTCONbits.FLT2EN = 1;
  5071  00344C  8860               	bsf	3936,4,c	;volatile
  5072                           
  5073                           ;moteur.c: 99: DFLTCONbits.FLTCK = 0b010;
  5074  00344E  5060               	movf	3936,w,c	;volatile
  5075  003450  0BF8               	andlw	-8
  5076  003452  0902               	iorlw	2
  5077  003454  6E60               	movwf	3936,c	;volatile
  5078                           
  5079                           ;moteur.c: 101: POSCNTH = 0;
  5080  003456  0E00               	movlw	0
  5081  003458  6E67               	movwf	3943,c	;volatile
  5082                           
  5083                           ;moteur.c: 102: POSCNTL = 0;
  5084  00345A  0E00               	movlw	0
  5085  00345C  6E66               	movwf	3942,c	;volatile
  5086                           
  5087                           ;moteur.c: 104: MAXCNTH = (uint8_t) (((4 * 2000) - 1) / 256);
  5088  00345E  0E1F               	movlw	31
  5089  003460  6E65               	movwf	3941,c	;volatile
  5090                           
  5091                           ;moteur.c: 105: MAXCNTL = (uint8_t) (((4 * 2000) - 1) % 256);
  5092  003462  0E3F               	movlw	63
  5093  003464  6E64               	movwf	3940,c	;volatile
  5094  003466  0012               	return		;funcret
  5095  003468                     __end_of_config_QEI:
  5096                           	opt stack 0
  5097                           tblptru	equ	0xFF8
  5098                           tblptrh	equ	0xFF7
  5099                           tblptrl	equ	0xFF6
  5100                           tablat	equ	0xFF5
  5101                           postinc0	equ	0xFEE
  5102                           plusw0	equ	0xFEB
  5103                           wreg	equ	0xFE8
  5104                           postinc1	equ	0xFE6
  5105                           postdec1	equ	0xFE5
  5106                           plusw1	equ	0xFE3
  5107                           fsr1h	equ	0xFE2
  5108                           fsr1l	equ	0xFE1
  5109                           postinc2	equ	0xFDE
  5110                           postdec2	equ	0xFDD
  5111                           fsr2h	equ	0xFDA
  5112                           fsr2l	equ	0xFD9
  5113                           status	equ	0xFD8
  5114                           
  5115 ;; *************** function _ConfigPorts *****************
  5116 ;; Defined at:
  5117 ;;		line 92 in file "system.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;		None
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;		None
  5122 ;; Return value:  Size  Location     Type
  5123 ;;		None               void
  5124 ;; Registers used:
  5125 ;;		None
  5126 ;; Tracked objects:
  5127 ;;		On entry : 0/0
  5128 ;;		On exit  : 0/0
  5129 ;;		Unchanged: 0/0
  5130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5131 ;;      Params:         0       0       0       0
  5132 ;;      Locals:         0       0       0       0
  5133 ;;      Temps:          0       0       0       0
  5134 ;;      Totals:         0       0       0       0
  5135 ;;Total ram usage:        0 bytes
  5136 ;; Hardware stack levels used:    1
  5137 ;; Hardware stack levels required when called:    6
  5138 ;; This function calls:
  5139 ;;		Nothing
  5140 ;; This function is called by:
  5141 ;;		_init_system
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           	psect	text23
  5146  002CC0                     __ptext23:
  5147                           	opt stack 0
  5148  002CC0                     _ConfigPorts:
  5149                           	opt stack 23
  5150                           
  5151                           ;system.c: 95: TRISAbits.RA0 = 0;
  5152                           
  5153                           ;incstack = 0
  5154  002CC0  9092               	bcf	3986,0,c	;volatile
  5155                           
  5156                           ;system.c: 96: TRISAbits.RA1 = 0;
  5157  002CC2  9292               	bcf	3986,1,c	;volatile
  5158                           
  5159                           ;system.c: 97: TRISAbits.RA2 = 0;
  5160  002CC4  9492               	bcf	3986,2,c	;volatile
  5161                           
  5162                           ;system.c: 98: TRISAbits.RA3 = 1;
  5163  002CC6  8692               	bsf	3986,3,c	;volatile
  5164                           
  5165                           ;system.c: 99: TRISAbits.RA4 = 1;
  5166  002CC8  8892               	bsf	3986,4,c	;volatile
  5167                           
  5168                           ;system.c: 100: TRISAbits.RA5 = 0;
  5169  002CCA  9A92               	bcf	3986,5,c	;volatile
  5170                           
  5171                           ;system.c: 101: TRISAbits.RA6 = 1;
  5172  002CCC  8C92               	bsf	3986,6,c	;volatile
  5173                           
  5174                           ;system.c: 102: TRISAbits.RA7 = 1;
  5175  002CCE  8E92               	bsf	3986,7,c	;volatile
  5176                           
  5177                           ;system.c: 105: TRISBbits.RB0 = 0;
  5178  002CD0  9093               	bcf	3987,0,c	;volatile
  5179                           
  5180                           ;system.c: 106: TRISBbits.RB1 = 0;
  5181  002CD2  9293               	bcf	3987,1,c	;volatile
  5182                           
  5183                           ;system.c: 107: TRISBbits.RB2 = 0;
  5184  002CD4  9493               	bcf	3987,2,c	;volatile
  5185                           
  5186                           ;system.c: 108: TRISBbits.RB3 = 0;
  5187  002CD6  9693               	bcf	3987,3,c	;volatile
  5188                           
  5189                           ;system.c: 109: TRISBbits.RB4 = 0;
  5190  002CD8  9893               	bcf	3987,4,c	;volatile
  5191                           
  5192                           ;system.c: 110: TRISBbits.RB5 = 0;
  5193  002CDA  9A93               	bcf	3987,5,c	;volatile
  5194                           
  5195                           ;system.c: 111: TRISBbits.RB6 = 0;
  5196  002CDC  9C93               	bcf	3987,6,c	;volatile
  5197                           
  5198                           ;system.c: 112: TRISBbits.RB7 = 0;
  5199  002CDE  9E93               	bcf	3987,7,c	;volatile
  5200                           
  5201                           ;system.c: 115: TRISCbits.RC0 = 0;
  5202  002CE0  9094               	bcf	3988,0,c	;volatile
  5203                           
  5204                           ;system.c: 116: TRISCbits.RC1 = 0;
  5205  002CE2  9294               	bcf	3988,1,c	;volatile
  5206                           
  5207                           ;system.c: 117: TRISCbits.RC2 = 0;
  5208  002CE4  9494               	bcf	3988,2,c	;volatile
  5209                           
  5210                           ;system.c: 118: TRISCbits.RC3 = 1;
  5211  002CE6  8694               	bsf	3988,3,c	;volatile
  5212                           
  5213                           ;system.c: 119: TRISCbits.RC4 = 0;
  5214  002CE8  9894               	bcf	3988,4,c	;volatile
  5215                           
  5216                           ;system.c: 120: TRISCbits.RC5 = 0;
  5217  002CEA  9A94               	bcf	3988,5,c	;volatile
  5218                           
  5219                           ;system.c: 121: TRISCbits.RC6 = 1;
  5220  002CEC  8C94               	bsf	3988,6,c	;volatile
  5221                           
  5222                           ;system.c: 122: TRISCbits.RC7 = 1;
  5223  002CEE  8E94               	bsf	3988,7,c	;volatile
  5224                           
  5225                           ;system.c: 125: TRISDbits.RD0 = 0;
  5226  002CF0  9095               	bcf	3989,0,c	;volatile
  5227                           
  5228                           ;system.c: 126: TRISDbits.RD1 = 0;
  5229  002CF2  9295               	bcf	3989,1,c	;volatile
  5230                           
  5231                           ;system.c: 127: TRISDbits.RD2 = 1;
  5232  002CF4  8495               	bsf	3989,2,c	;volatile
  5233                           
  5234                           ;system.c: 128: TRISDbits.RD3 = 0;
  5235  002CF6  9695               	bcf	3989,3,c	;volatile
  5236                           
  5237                           ;system.c: 129: TRISDbits.RD4 = 0;
  5238  002CF8  9895               	bcf	3989,4,c	;volatile
  5239                           
  5240                           ;system.c: 130: TRISDbits.RD5 = 0;
  5241  002CFA  9A95               	bcf	3989,5,c	;volatile
  5242                           
  5243                           ;system.c: 131: TRISDbits.RD6 = 0;
  5244  002CFC  9C95               	bcf	3989,6,c	;volatile
  5245                           
  5246                           ;system.c: 132: TRISDbits.RD7 = 0;
  5247  002CFE  9E95               	bcf	3989,7,c	;volatile
  5248                           
  5249                           ;system.c: 135: TRISEbits.RE0 = 0;
  5250  002D00  9096               	bcf	3990,0,c	;volatile
  5251                           
  5252                           ;system.c: 136: TRISEbits.RE1 = 0;
  5253  002D02  9296               	bcf	3990,1,c	;volatile
  5254                           
  5255                           ;system.c: 137: TRISEbits.RE2 = 0;
  5256  002D04  9496               	bcf	3990,2,c	;volatile
  5257                           
  5258                           ;system.c: 145: LATA0 = 0;
  5259  002D06  9089               	bcf	3977,0,c	;volatile
  5260                           
  5261                           ;system.c: 146: LATA1 = 0;
  5262  002D08  9289               	bcf	3977,1,c	;volatile
  5263                           
  5264                           ;system.c: 147: LATA2 = 0;
  5265  002D0A  9489               	bcf	3977,2,c	;volatile
  5266                           
  5267                           ;system.c: 148: LATA3 = 0;
  5268  002D0C  9689               	bcf	3977,3,c	;volatile
  5269                           
  5270                           ;system.c: 149: LATA4 = 0;
  5271  002D0E  9889               	bcf	3977,4,c	;volatile
  5272                           
  5273                           ;system.c: 150: LATA5 = 0;
  5274  002D10  9A89               	bcf	3977,5,c	;volatile
  5275                           
  5276                           ;system.c: 151: LATA6 = 0;
  5277  002D12  9C89               	bcf	3977,6,c	;volatile
  5278                           
  5279                           ;system.c: 152: LATA7 = 0;
  5280  002D14  9E89               	bcf	3977,7,c	;volatile
  5281                           
  5282                           ;system.c: 155: LATB0 = 0;
  5283  002D16  908A               	bcf	3978,0,c	;volatile
  5284                           
  5285                           ;system.c: 156: LATB1 = 0;
  5286  002D18  928A               	bcf	3978,1,c	;volatile
  5287                           
  5288                           ;system.c: 157: LATB2 = 0;
  5289  002D1A  948A               	bcf	3978,2,c	;volatile
  5290                           
  5291                           ;system.c: 158: LATB3 = 0;
  5292  002D1C  968A               	bcf	3978,3,c	;volatile
  5293                           
  5294                           ;system.c: 159: LATB4 = 0;
  5295  002D1E  988A               	bcf	3978,4,c	;volatile
  5296                           
  5297                           ;system.c: 160: LATB5 = 0;
  5298  002D20  9A8A               	bcf	3978,5,c	;volatile
  5299                           
  5300                           ;system.c: 161: LATB6 = 0;
  5301  002D22  9C8A               	bcf	3978,6,c	;volatile
  5302                           
  5303                           ;system.c: 162: LATB7 = 0;
  5304  002D24  9E8A               	bcf	3978,7,c	;volatile
  5305                           
  5306                           ;system.c: 165: LATC0 = 0;
  5307  002D26  908B               	bcf	3979,0,c	;volatile
  5308                           
  5309                           ;system.c: 166: LATC1 = 0;
  5310  002D28  928B               	bcf	3979,1,c	;volatile
  5311                           
  5312                           ;system.c: 167: LATC2 = 0;
  5313  002D2A  948B               	bcf	3979,2,c	;volatile
  5314                           
  5315                           ;system.c: 168: LATC3 = 0;
  5316  002D2C  968B               	bcf	3979,3,c	;volatile
  5317                           
  5318                           ;system.c: 169: LATC4 = 0;
  5319  002D2E  988B               	bcf	3979,4,c	;volatile
  5320                           
  5321                           ;system.c: 170: LATC5 = 0;
  5322  002D30  9A8B               	bcf	3979,5,c	;volatile
  5323                           
  5324                           ;system.c: 171: LATC6 = 0;
  5325  002D32  9C8B               	bcf	3979,6,c	;volatile
  5326                           
  5327                           ;system.c: 172: LATC7 = 0;
  5328  002D34  9E8B               	bcf	3979,7,c	;volatile
  5329                           
  5330                           ;system.c: 175: LATD0 = 0;
  5331  002D36  908C               	bcf	3980,0,c	;volatile
  5332                           
  5333                           ;system.c: 176: LATD1 = 0;
  5334  002D38  928C               	bcf	3980,1,c	;volatile
  5335                           
  5336                           ;system.c: 177: LATD2 = 0;
  5337  002D3A  948C               	bcf	3980,2,c	;volatile
  5338                           
  5339                           ;system.c: 178: LATD3 = 0;
  5340  002D3C  968C               	bcf	3980,3,c	;volatile
  5341                           
  5342                           ;system.c: 179: LATD4 = 0;
  5343  002D3E  988C               	bcf	3980,4,c	;volatile
  5344                           
  5345                           ;system.c: 180: LATD5 = 0;
  5346  002D40  9A8C               	bcf	3980,5,c	;volatile
  5347                           
  5348                           ;system.c: 181: LATD6 = 0;
  5349  002D42  9C8C               	bcf	3980,6,c	;volatile
  5350                           
  5351                           ;system.c: 182: LATD7 = 0;
  5352  002D44  9E8C               	bcf	3980,7,c	;volatile
  5353                           
  5354                           ;system.c: 185: LATE0 = 0;
  5355  002D46  908D               	bcf	3981,0,c	;volatile
  5356                           
  5357                           ;system.c: 186: LATE1 = 0;
  5358  002D48  928D               	bcf	3981,1,c	;volatile
  5359                           
  5360                           ;system.c: 187: LATE2 = 0;
  5361  002D4A  948D               	bcf	3981,2,c	;volatile
  5362  002D4C  0012               	return		;funcret
  5363  002D4E                     __end_of_ConfigPorts:
  5364                           	opt stack 0
  5365                           tblptru	equ	0xFF8
  5366                           tblptrh	equ	0xFF7
  5367                           tblptrl	equ	0xFF6
  5368                           tablat	equ	0xFF5
  5369                           postinc0	equ	0xFEE
  5370                           plusw0	equ	0xFEB
  5371                           wreg	equ	0xFE8
  5372                           postinc1	equ	0xFE6
  5373                           postdec1	equ	0xFE5
  5374                           plusw1	equ	0xFE3
  5375                           fsr1h	equ	0xFE2
  5376                           fsr1l	equ	0xFE1
  5377                           postinc2	equ	0xFDE
  5378                           postdec2	equ	0xFDD
  5379                           fsr2h	equ	0xFDA
  5380                           fsr2l	equ	0xFD9
  5381                           status	equ	0xFD8
  5382                           
  5383 ;; *************** function _ConfigInterrupt *****************
  5384 ;; Defined at:
  5385 ;;		line 195 in file "system.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;		None
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;		None
  5390 ;; Return value:  Size  Location     Type
  5391 ;;		None               void
  5392 ;; Registers used:
  5393 ;;		None
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5399 ;;      Params:         0       0       0       0
  5400 ;;      Locals:         0       0       0       0
  5401 ;;      Temps:          0       0       0       0
  5402 ;;      Totals:         0       0       0       0
  5403 ;;Total ram usage:        0 bytes
  5404 ;; Hardware stack levels used:    1
  5405 ;; Hardware stack levels required when called:    6
  5406 ;; This function calls:
  5407 ;;		Nothing
  5408 ;; This function is called by:
  5409 ;;		_init_system
  5410 ;; This function uses a non-reentrant model
  5411 ;;
  5412                           
  5413                           	psect	text24
  5414  002D4E                     __ptext24:
  5415                           	opt stack 0
  5416  002D4E                     _ConfigInterrupt:
  5417                           	opt stack 23
  5418                           
  5419                           ;system.c: 198: INTCONbits.GIEH = 1;
  5420                           
  5421                           ;incstack = 0
  5422  002D4E  8EF2               	bsf	intcon,7,c	;volatile
  5423                           
  5424                           ;system.c: 199: INTCONbits.GIEL = 1;
  5425  002D50  8CF2               	bsf	intcon,6,c	;volatile
  5426                           
  5427                           ;system.c: 200: INTCONbits.TMR0IE = 0b1;
  5428  002D52  8AF2               	bsf	intcon,5,c	;volatile
  5429                           
  5430                           ;system.c: 201: INTCONbits.INT0IE = 0b1;
  5431  002D54  88F2               	bsf	intcon,4,c	;volatile
  5432                           
  5433                           ;system.c: 202: INTCONbits.RBIE = 0;
  5434  002D56  96F2               	bcf	intcon,3,c	;volatile
  5435                           
  5436                           ;system.c: 203: INTCONbits.TMR0IF = 0;
  5437  002D58  94F2               	bcf	intcon,2,c	;volatile
  5438                           
  5439                           ;system.c: 204: INTCONbits.INT0IF = 0;
  5440  002D5A  92F2               	bcf	intcon,1,c	;volatile
  5441                           
  5442                           ;system.c: 205: INTCONbits.RBIF = 0;
  5443  002D5C  90F2               	bcf	intcon,0,c	;volatile
  5444                           
  5445                           ;system.c: 209: INTCON2bits.INTEDG0 = 1;
  5446  002D5E  8CF1               	bsf	intcon2,6,c	;volatile
  5447                           
  5448                           ;system.c: 210: INTCON2bits.INTEDG1 = 1;
  5449  002D60  8AF1               	bsf	intcon2,5,c	;volatile
  5450                           
  5451                           ;system.c: 211: INTCON2bits.INTEDG2 = 1;
  5452  002D62  88F1               	bsf	intcon2,4,c	;volatile
  5453                           
  5454                           ;system.c: 212: INTCON2bits.TMR0IP = 0b0;
  5455  002D64  94F1               	bcf	intcon2,2,c	;volatile
  5456                           
  5457                           ;system.c: 215: INTCON3bits.INT2IP = 0b0 ;
  5458  002D66  9EF0               	bcf	intcon3,7,c	;volatile
  5459                           
  5460                           ;system.c: 216: INTCON3bits.INT1IP = 0b0;
  5461  002D68  9CF0               	bcf	intcon3,6,c	;volatile
  5462                           
  5463                           ;system.c: 217: INTCON3bits.INT2IE = 0b0;
  5464  002D6A  98F0               	bcf	intcon3,4,c	;volatile
  5465                           
  5466                           ;system.c: 218: INTCON3bits.INT2IP = 0b0;
  5467  002D6C  9EF0               	bcf	intcon3,7,c	;volatile
  5468                           
  5469                           ;system.c: 219: INTCON3bits.INT2IF = 0;
  5470  002D6E  92F0               	bcf	intcon3,1,c	;volatile
  5471                           
  5472                           ;system.c: 220: INTCON3bits.INT1IF = 0;
  5473  002D70  90F0               	bcf	intcon3,0,c	;volatile
  5474                           
  5475                           ;system.c: 227: PIR1bits.ADIF = 0;
  5476  002D72  9C9E               	bcf	3998,6,c	;volatile
  5477                           
  5478                           ;system.c: 228: PIR1bits.RCIF = 0;
  5479  002D74  9A9E               	bcf	3998,5,c	;volatile
  5480                           
  5481                           ;system.c: 229: PIR1bits.TXIF = 0;
  5482  002D76  989E               	bcf	3998,4,c	;volatile
  5483                           
  5484                           ;system.c: 230: PIR1bits.SSPIF = 0;
  5485  002D78  969E               	bcf	3998,3,c	;volatile
  5486                           
  5487                           ;system.c: 231: PIR1bits.CCP1IF = 0;
  5488  002D7A  949E               	bcf	3998,2,c	;volatile
  5489                           
  5490                           ;system.c: 232: PIR1bits.TMR2IF = 0;
  5491  002D7C  929E               	bcf	3998,1,c	;volatile
  5492                           
  5493                           ;system.c: 233: PIR1bits.TMR1IF = 0;
  5494  002D7E  909E               	bcf	3998,0,c	;volatile
  5495                           
  5496                           ;system.c: 236: PIR2bits.OSFIF = 0;
  5497  002D80  9EA1               	bcf	4001,7,c	;volatile
  5498                           
  5499                           ;system.c: 237: PIR2bits.EEIF = 0;
  5500  002D82  98A1               	bcf	4001,4,c	;volatile
  5501                           
  5502                           ;system.c: 238: PIR2bits.LVDIF = 0;
  5503  002D84  94A1               	bcf	4001,2,c	;volatile
  5504                           
  5505                           ;system.c: 239: PIR2bits.CCP2IF = 0;
  5506  002D86  90A1               	bcf	4001,0,c	;volatile
  5507                           
  5508                           ;system.c: 242: PIR3bits.PTIF = 0;
  5509  002D88  98A4               	bcf	4004,4,c	;volatile
  5510                           
  5511                           ;system.c: 243: PIR3bits.IC3DRIF = 0;
  5512  002D8A  96A4               	bcf	4004,3,c	;volatile
  5513                           
  5514                           ;system.c: 244: PIR3bits.IC2QEIF = 0;
  5515  002D8C  94A4               	bcf	4004,2,c	;volatile
  5516                           
  5517                           ;system.c: 245: PIR3bits.IC1IF = 0;
  5518  002D8E  92A4               	bcf	4004,1,c	;volatile
  5519                           
  5520                           ;system.c: 246: PIR3bits.TMR5IF = 0;
  5521  002D90  90A4               	bcf	4004,0,c	;volatile
  5522                           
  5523                           ;system.c: 253: RCONbits.IPEN = 1;
  5524  002D92  8ED0               	bsf	4048,7,c	;volatile
  5525                           
  5526                           ;system.c: 256: IPR1bits.ADIP = 0b0;
  5527  002D94  9C9F               	bcf	3999,6,c	;volatile
  5528                           
  5529                           ;system.c: 257: IPR1bits.RC1IP = 0b1;
  5530  002D96  8A9F               	bsf	3999,5,c	;volatile
  5531                           
  5532                           ;system.c: 258: IPR1bits.TX1IP = 0b0;
  5533  002D98  989F               	bcf	3999,4,c	;volatile
  5534                           
  5535                           ;system.c: 259: IPR1bits.SSPIP = 0;
  5536  002D9A  969F               	bcf	3999,3,c	;volatile
  5537                           
  5538                           ;system.c: 260: IPR1bits.CCP1IP = 0;
  5539  002D9C  949F               	bcf	3999,2,c	;volatile
  5540                           
  5541                           ;system.c: 261: IPR1bits.TMR2IP = 0b0;
  5542  002D9E  929F               	bcf	3999,1,c	;volatile
  5543                           
  5544                           ;system.c: 262: IPR1bits.TMR1IP = 0b1;
  5545  002DA0  809F               	bsf	3999,0,c	;volatile
  5546                           
  5547                           ;system.c: 265: IPR2bits.OSFIP = 0;
  5548  002DA2  9EA2               	bcf	4002,7,c	;volatile
  5549                           
  5550                           ;system.c: 266: IPR2bits.EEIP = 1;
  5551  002DA4  88A2               	bsf	4002,4,c	;volatile
  5552                           
  5553                           ;system.c: 267: IPR2bits.LVDIP = 0;
  5554  002DA6  94A2               	bcf	4002,2,c	;volatile
  5555                           
  5556                           ;system.c: 268: IPR2bits.CCP2IP = 0;
  5557  002DA8  90A2               	bcf	4002,0,c	;volatile
  5558                           
  5559                           ;system.c: 271: IPR3bits.PTIP = 0;
  5560  002DAA  98A5               	bcf	4005,4,c	;volatile
  5561                           
  5562                           ;system.c: 272: IPR3bits.IC3DRIP = 0b1;
  5563  002DAC  86A5               	bsf	4005,3,c	;volatile
  5564                           
  5565                           ;system.c: 273: IPR3bits.IC2QEIP = 0b1;
  5566  002DAE  84A5               	bsf	4005,2,c	;volatile
  5567                           
  5568                           ;system.c: 274: IPR3bits.IC1IP = 0;
  5569  002DB0  92A5               	bcf	4005,1,c	;volatile
  5570                           
  5571                           ;system.c: 275: IPR3bits.TMR5IP = 0b0;
  5572  002DB2  90A5               	bcf	4005,0,c	;volatile
  5573                           
  5574                           ;system.c: 282: PIE1bits.ADIE = 0b0;
  5575  002DB4  9C9D               	bcf	3997,6,c	;volatile
  5576                           
  5577                           ;system.c: 283: PIE1bits.RC1IE = 0b1;
  5578  002DB6  8A9D               	bsf	3997,5,c	;volatile
  5579                           
  5580                           ;system.c: 284: PIE1bits.TXIE = 0b0;
  5581  002DB8  989D               	bcf	3997,4,c	;volatile
  5582                           
  5583                           ;system.c: 285: PIE1bits.SSPIE = 0;
  5584  002DBA  969D               	bcf	3997,3,c	;volatile
  5585                           
  5586                           ;system.c: 286: PIE1bits.CCP1IE = 0;
  5587  002DBC  949D               	bcf	3997,2,c	;volatile
  5588                           
  5589                           ;system.c: 287: PIE1bits.TMR2IE = 0b0;
  5590  002DBE  929D               	bcf	3997,1,c	;volatile
  5591                           
  5592                           ;system.c: 288: PIE1bits.TMR1IE = 0b1;
  5593  002DC0  809D               	bsf	3997,0,c	;volatile
  5594                           
  5595                           ;system.c: 291: PIE2bits.OSFIE = 0;
  5596  002DC2  9EA0               	bcf	4000,7,c	;volatile
  5597                           
  5598                           ;system.c: 292: PIE2bits.EEIE = 1;
  5599  002DC4  88A0               	bsf	4000,4,c	;volatile
  5600                           
  5601                           ;system.c: 293: PIE2bits.LVDIE = 0;
  5602  002DC6  94A0               	bcf	4000,2,c	;volatile
  5603                           
  5604                           ;system.c: 294: PIE2bits.CCP2IE = 0;
  5605  002DC8  90A0               	bcf	4000,0,c	;volatile
  5606                           
  5607                           ;system.c: 297: PIE3bits.PTIE = 0;
  5608  002DCA  98A3               	bcf	4003,4,c	;volatile
  5609                           
  5610                           ;system.c: 298: PIE3bits.IC3DRIE = 0b0;
  5611  002DCC  96A3               	bcf	4003,3,c	;volatile
  5612                           
  5613                           ;system.c: 299: PIE3bits.IC2QEIE = 0b1;
  5614  002DCE  84A3               	bsf	4003,2,c	;volatile
  5615                           
  5616                           ;system.c: 300: PIE3bits.IC1IE = 0;
  5617  002DD0  92A3               	bcf	4003,1,c	;volatile
  5618                           
  5619                           ;system.c: 301: PIE3bits.TMR5IE = 0b0;
  5620  002DD2  90A3               	bcf	4003,0,c	;volatile
  5621  002DD4  0012               	return		;funcret
  5622  002DD6                     __end_of_ConfigInterrupt:
  5623                           	opt stack 0
  5624                           tblptru	equ	0xFF8
  5625                           tblptrh	equ	0xFF7
  5626                           tblptrl	equ	0xFF6
  5627                           tablat	equ	0xFF5
  5628                           intcon	equ	0xFF2
  5629                           intcon2	equ	0xFF1
  5630                           intcon3	equ	0xFF0
  5631                           postinc0	equ	0xFEE
  5632                           plusw0	equ	0xFEB
  5633                           wreg	equ	0xFE8
  5634                           postinc1	equ	0xFE6
  5635                           postdec1	equ	0xFE5
  5636                           plusw1	equ	0xFE3
  5637                           fsr1h	equ	0xFE2
  5638                           fsr1l	equ	0xFE1
  5639                           postinc2	equ	0xFDE
  5640                           postdec2	equ	0xFDD
  5641                           fsr2h	equ	0xFDA
  5642                           fsr2l	equ	0xFD9
  5643                           status	equ	0xFD8
  5644                           
  5645 ;; *************** function _get_distance *****************
  5646 ;; Defined at:
  5647 ;;		line 82 in file "triangulation.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;  ancien          6  123[BANK0 ] struct .
  5650 ;;  actu            6  129[BANK0 ] struct .
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;  delta_y         3    9[BANK1 ] struct .
  5653 ;;  delta_x         3    6[BANK1 ] struct .
  5654 ;;  distance        3    0[BANK1 ] struct .
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  3  123[BANK0 ] struct .
  5657 ;; Registers used:
  5658 ;;		wreg, status,2, status,0, cstack
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5664 ;;      Params:         0      12       0       0
  5665 ;;      Locals:         0       0      12       0
  5666 ;;      Temps:          0       0       0       0
  5667 ;;      Totals:         0      12      12       0
  5668 ;;Total ram usage:       24 bytes
  5669 ;; Hardware stack levels used:    1
  5670 ;; Hardware stack levels required when called:   10
  5671 ;; This function calls:
  5672 ;;		___ftadd
  5673 ;;		___ftmul
  5674 ;;		___ftneg
  5675 ;;		_sqrt
  5676 ;; This function is called by:
  5677 ;;		_main
  5678 ;; This function uses a non-reentrant model
  5679 ;;
  5680                           
  5681                           	psect	text25
  5682  0025DC                     __ptext25:
  5683                           	opt stack 0
  5684  0025DC                     _get_distance:
  5685                           	opt stack 20
  5686                           
  5687                           ;triangulation.c: 84: double delta_x, delta_y, distance;
  5688                           ;triangulation.c: 86: delta_x = ancien.x - actu.x;
  5689                           
  5690                           ;incstack = 0
  5691  0025DC  C0E1  F077         	movff	get_distance@actu,___ftneg@f1
  5692  0025E0  C0E2  F078         	movff	get_distance@actu+1,___ftneg@f1+1
  5693  0025E4  C0E3  F079         	movff	get_distance@actu+2,___ftneg@f1+2
  5694  0025E8  EC50  F01A         	call	___ftneg	;wreg free
  5695  0025EC  C077  F07A         	movff	?___ftneg,___ftadd@f1
  5696  0025F0  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  5697  0025F4  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  5698  0025F8  C0DB  F07D         	movff	get_distance@ancien,___ftadd@f2
  5699  0025FC  C0DC  F07E         	movff	get_distance@ancien+1,___ftadd@f2+1
  5700  002600  C0DD  F07F         	movff	get_distance@ancien+2,___ftadd@f2+2
  5701  002604  ECD7  F00D         	call	___ftadd	;wreg free
  5702  002608  C07A  F198         	movff	?___ftadd,get_distance@delta_x
  5703  00260C  C07B  F199         	movff	?___ftadd+1,get_distance@delta_x+1
  5704  002610  C07C  F19A         	movff	?___ftadd+2,get_distance@delta_x+2
  5705                           
  5706                           ;triangulation.c: 87: delta_y = ancien.y - actu.y;
  5707  002614  C0E4  F077         	movff	get_distance@actu+3,___ftneg@f1
  5708  002618  C0E5  F078         	movff	get_distance@actu+4,___ftneg@f1+1
  5709  00261C  C0E6  F079         	movff	get_distance@actu+5,___ftneg@f1+2
  5710  002620  EC50  F01A         	call	___ftneg	;wreg free
  5711  002624  C077  F07A         	movff	?___ftneg,___ftadd@f1
  5712  002628  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  5713  00262C  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  5714  002630  C0DE  F07D         	movff	get_distance@ancien+3,___ftadd@f2
  5715  002634  C0DF  F07E         	movff	get_distance@ancien+4,___ftadd@f2+1
  5716  002638  C0E0  F07F         	movff	get_distance@ancien+5,___ftadd@f2+2
  5717  00263C  ECD7  F00D         	call	___ftadd	;wreg free
  5718  002640  C07A  F19B         	movff	?___ftadd,get_distance@delta_y
  5719  002644  C07B  F19C         	movff	?___ftadd+1,get_distance@delta_y+1
  5720  002648  C07C  F19D         	movff	?___ftadd+2,get_distance@delta_y+2
  5721                           
  5722                           ;triangulation.c: 88: distance = sqrt (delta_x * delta_x + delta_y * delta_y);
  5723  00264C  C198  F06B         	movff	get_distance@delta_x,___ftmul@f2
  5724  002650  C199  F06C         	movff	get_distance@delta_x+1,___ftmul@f2+1
  5725  002654  C19A  F06D         	movff	get_distance@delta_x+2,___ftmul@f2+2
  5726  002658  C198  F068         	movff	get_distance@delta_x,___ftmul@f1
  5727  00265C  C199  F069         	movff	get_distance@delta_x+1,___ftmul@f1+1
  5728  002660  C19A  F06A         	movff	get_distance@delta_x+2,___ftmul@f1+2
  5729  002664  ECF8  F00F         	call	___ftmul	;wreg free
  5730  002668  C068  F07A         	movff	?___ftmul,___ftadd@f1
  5731  00266C  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  5732  002670  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  5733  002674  C19B  F06B         	movff	get_distance@delta_y,___ftmul@f2
  5734  002678  C19C  F06C         	movff	get_distance@delta_y+1,___ftmul@f2+1
  5735  00267C  C19D  F06D         	movff	get_distance@delta_y+2,___ftmul@f2+2
  5736  002680  C19B  F068         	movff	get_distance@delta_y,___ftmul@f1
  5737  002684  C19C  F069         	movff	get_distance@delta_y+1,___ftmul@f1+1
  5738  002688  C19D  F06A         	movff	get_distance@delta_y+2,___ftmul@f1+2
  5739  00268C  ECF8  F00F         	call	___ftmul	;wreg free
  5740  002690  C068  F07D         	movff	?___ftmul,___ftadd@f2
  5741  002694  C069  F07E         	movff	?___ftmul+1,___ftadd@f2+1
  5742  002698  C06A  F07F         	movff	?___ftmul+2,___ftadd@f2+2
  5743  00269C  ECD7  F00D         	call	___ftadd	;wreg free
  5744  0026A0  C07A  F195         	movff	?___ftadd,_get_distance$3140
  5745  0026A4  C07B  F196         	movff	?___ftadd+1,_get_distance$3140+1
  5746  0026A8  C07C  F197         	movff	?___ftadd+2,_get_distance$3140+2
  5747                           
  5748                           ;triangulation.c: 88: distance = sqrt (delta_x * delta_x + delta_y * delta_y);
  5749  0026AC  C195  F0C8         	movff	_get_distance$3140,sqrt@y
  5750  0026B0  C196  F0C9         	movff	_get_distance$3140+1,sqrt@y+1
  5751  0026B4  C197  F0CA         	movff	_get_distance$3140+2,sqrt@y+2
  5752  0026B8  EC16  F00F         	call	_sqrt	;wreg free
  5753  0026BC  C0C8  F192         	movff	?_sqrt,get_distance@distance
  5754  0026C0  C0C9  F193         	movff	?_sqrt+1,get_distance@distance+1
  5755  0026C4  C0CA  F194         	movff	?_sqrt+2,get_distance@distance+2
  5756                           
  5757                           ;triangulation.c: 90: return distance;
  5758  0026C8  C192  F0DB         	movff	get_distance@distance,?_get_distance
  5759  0026CC  C193  F0DC         	movff	get_distance@distance+1,?_get_distance+1
  5760  0026D0  C194  F0DD         	movff	get_distance@distance+2,?_get_distance+2
  5761  0026D4  D000               	goto	l519
  5762  0026D6                     l519:
  5763  0026D6  0012               	return		;funcret
  5764  0026D8                     __end_of_get_distance:
  5765                           	opt stack 0
  5766                           tblptru	equ	0xFF8
  5767                           tblptrh	equ	0xFF7
  5768                           tblptrl	equ	0xFF6
  5769                           tablat	equ	0xFF5
  5770                           intcon	equ	0xFF2
  5771                           intcon2	equ	0xFF1
  5772                           intcon3	equ	0xFF0
  5773                           postinc0	equ	0xFEE
  5774                           plusw0	equ	0xFEB
  5775                           wreg	equ	0xFE8
  5776                           postinc1	equ	0xFE6
  5777                           postdec1	equ	0xFE5
  5778                           plusw1	equ	0xFE3
  5779                           fsr1h	equ	0xFE2
  5780                           fsr1l	equ	0xFE1
  5781                           postinc2	equ	0xFDE
  5782                           postdec2	equ	0xFDD
  5783                           fsr2h	equ	0xFDA
  5784                           fsr2l	equ	0xFD9
  5785                           status	equ	0xFD8
  5786                           
  5787 ;; *************** function _sqrt *****************
  5788 ;; Defined at:
  5789 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\sqrt.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;  y               3  104[BANK0 ] struct .
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;  x               3  120[BANK0 ] struct .
  5794 ;;  q               3  117[BANK0 ] struct .
  5795 ;;  z               3  113[BANK0 ] struct .
  5796 ;;  og              3  110[BANK0 ] struct .
  5797 ;;  i               1  116[BANK0 ] unsigned char 
  5798 ;; Return value:  Size  Location     Type
  5799 ;;                  3  104[BANK0 ] unsigned char 
  5800 ;; Registers used:
  5801 ;;		wreg, status,2, status,0, cstack
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5807 ;;      Params:         0       3       0       0
  5808 ;;      Locals:         0      13       0       0
  5809 ;;      Temps:          0       3       0       0
  5810 ;;      Totals:         0      19       0       0
  5811 ;;Total ram usage:       19 bytes
  5812 ;; Hardware stack levels used:    1
  5813 ;; Hardware stack levels required when called:    9
  5814 ;; This function calls:
  5815 ;;		___ftge
  5816 ;;		___ftmul
  5817 ;;		___ftsub
  5818 ;; This function is called by:
  5819 ;;		_get_distance
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823                           	psect	text26
  5824  001E2C                     __ptext26:
  5825                           	opt stack 0
  5826  001E2C                     _sqrt:
  5827                           	opt stack 20
  5828                           
  5829                           ;incstack = 0
  5830  001E2C  0E00               	movlw	0
  5831  001E2E  0100               	movlb	0	; () banked
  5832  001E30  6F7A               	movwf	___ftge@ff1& (0+255),b
  5833  001E32  0E00               	movlw	0
  5834  001E34  0100               	movlb	0	; () banked
  5835  001E36  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  5836  001E38  0E00               	movlw	0
  5837  001E3A  0100               	movlb	0	; () banked
  5838  001E3C  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  5839  001E3E  C0C8  F07D         	movff	sqrt@y,___ftge@ff2
  5840  001E42  C0C9  F07E         	movff	sqrt@y+1,___ftge@ff2+1
  5841  001E46  C0CA  F07F         	movff	sqrt@y+2,___ftge@ff2+2
  5842  001E4A  ECBC  F014         	call	___ftge	;wreg free
  5843  001E4E  0100               	movlb	0	; () banked
  5844  001E50  A0D8               	btfss	status,0,c
  5845  001E52  D012               	goto	l1089
  5846                           
  5847                           ; BSR set to: 0
  5848  001E54  0100               	movlb	0	; () banked
  5849  001E56  AFCA               	btfss	(sqrt@y+2)& (0+255),7,b
  5850  001E58  D005               	goto	l1090
  5851                           
  5852                           ; BSR set to: 0
  5853  001E5A  0E00               	movlw	0
  5854  001E5C  0100               	movlb	0	; () banked
  5855  001E5E  6FFC               	movwf	(_errno+1)& (0+255),b
  5856  001E60  0E21               	movlw	33
  5857  001E62  6FFB               	movwf	_errno& (0+255),b
  5858  001E64                     l1090:
  5859                           
  5860                           ; BSR set to: 0
  5861  001E64  0E00               	movlw	0
  5862  001E66  0100               	movlb	0	; () banked
  5863  001E68  6FC8               	movwf	?_sqrt& (0+255),b
  5864  001E6A  0E00               	movlw	0
  5865  001E6C  0100               	movlb	0	; () banked
  5866  001E6E  6FC9               	movwf	(?_sqrt+1)& (0+255),b
  5867  001E70  0E00               	movlw	0
  5868  001E72  0100               	movlb	0	; () banked
  5869  001E74  6FCA               	movwf	(?_sqrt+2)& (0+255),b
  5870                           
  5871                           ; BSR set to: 0
  5872  001E76  D0BB               	goto	l1091
  5873  001E78                     l1089:
  5874                           
  5875                           ; BSR set to: 0
  5876  001E78  C0C8  F0D1         	movff	sqrt@y,sqrt@z
  5877  001E7C  C0C9  F0D2         	movff	sqrt@y+1,sqrt@z+1
  5878  001E80  C0CA  F0D3         	movff	sqrt@y+2,sqrt@z+2
  5879                           
  5880                           ; BSR set to: 0
  5881  001E84  C0C8  F0CB         	movff	sqrt@y,??_sqrt
  5882  001E88  C0C9  F0CC         	movff	sqrt@y+1,??_sqrt+1
  5883  001E8C  C0CA  F0CD         	movff	sqrt@y+2,??_sqrt+2
  5884  001E90  0100               	movlb	0	; () banked
  5885  001E92  1FCB               	comf	??_sqrt& (0+255),f,b
  5886  001E94  1FCC               	comf	(??_sqrt+1)& (0+255),f,b
  5887  001E96  1FCD               	comf	(??_sqrt+2)& (0+255),f,b
  5888  001E98  2BCB               	incf	??_sqrt& (0+255),f,b
  5889  001E9A  0E00               	movlw	0
  5890  001E9C  23CC               	addwfc	(??_sqrt+1)& (0+255),f,b
  5891  001E9E  23CD               	addwfc	(??_sqrt+2)& (0+255),f,b
  5892  001EA0  0EC8               	movlw	200
  5893  001EA2  0100               	movlb	0	; () banked
  5894  001EA4  25CB               	addwf	??_sqrt& (0+255),w,b
  5895  001EA6  0100               	movlb	0	; () banked
  5896  001EA8  6FD8               	movwf	sqrt@x& (0+255),b
  5897  001EAA  0E6E               	movlw	110
  5898  001EAC  0100               	movlb	0	; () banked
  5899  001EAE  21CC               	addwfc	(??_sqrt+1)& (0+255),w,b
  5900  001EB0  0100               	movlb	0	; () banked
  5901  001EB2  6FD9               	movwf	(sqrt@x+1)& (0+255),b
  5902  001EB4  0EBE               	movlw	190
  5903  001EB6  0100               	movlb	0	; () banked
  5904  001EB8  21CD               	addwfc	(??_sqrt+2)& (0+255),w,b
  5905  001EBA  0100               	movlb	0	; () banked
  5906  001EBC  6FDA               	movwf	(sqrt@x+2)& (0+255),b
  5907                           
  5908                           ; BSR set to: 0
  5909  001EBE  0100               	movlb	0	; () banked
  5910  001EC0  90D8               	bcf	status,0,c
  5911  001EC2  33DA               	rrcf	(sqrt@x+2)& (0+255),f,b
  5912  001EC4  33D9               	rrcf	(sqrt@x+1)& (0+255),f,b
  5913  001EC6  33D8               	rrcf	sqrt@x& (0+255),f,b
  5914                           
  5915                           ; BSR set to: 0
  5916  001EC8  0E00               	movlw	0
  5917  001ECA  0100               	movlb	0	; () banked
  5918  001ECC  5FD1               	subwf	sqrt@z& (0+255),f,b
  5919  001ECE  0E80               	movlw	128
  5920  001ED0  0100               	movlb	0	; () banked
  5921  001ED2  5BD2               	subwfb	(sqrt@z+1)& (0+255),f,b
  5922  001ED4  0E00               	movlw	0
  5923  001ED6  0100               	movlb	0	; () banked
  5924  001ED8  5BD3               	subwfb	(sqrt@z+2)& (0+255),f,b
  5925                           
  5926                           ; BSR set to: 0
  5927  001EDA  0E04               	movlw	4
  5928  001EDC  0100               	movlb	0	; () banked
  5929  001EDE  6FD4               	movwf	sqrt@i& (0+255),b
  5930  001EE0  D000               	goto	l4122
  5931  001EE2                     l4122:
  5932                           
  5933                           ; BSR set to: 0
  5934  001EE2  C0D8  F0CE         	movff	sqrt@x,sqrt@og
  5935  001EE6  C0D9  F0CF         	movff	sqrt@x+1,sqrt@og+1
  5936  001EEA  C0DA  F0D0         	movff	sqrt@x+2,sqrt@og+2
  5937                           
  5938                           ; BSR set to: 0
  5939  001EEE  C0D8  F068         	movff	sqrt@x,___ftmul@f1
  5940  001EF2  C0D9  F069         	movff	sqrt@x+1,___ftmul@f1+1
  5941  001EF6  C0DA  F06A         	movff	sqrt@x+2,___ftmul@f1+2
  5942  001EFA  C0D1  F06B         	movff	sqrt@z,___ftmul@f2
  5943  001EFE  C0D2  F06C         	movff	sqrt@z+1,___ftmul@f2+1
  5944  001F02  C0D3  F06D         	movff	sqrt@z+2,___ftmul@f2+2
  5945  001F06  ECF8  F00F         	call	___ftmul	;wreg free
  5946  001F0A  C068  F0D5         	movff	?___ftmul,sqrt@q
  5947  001F0E  C069  F0D6         	movff	?___ftmul+1,sqrt@q+1
  5948  001F12  C06A  F0D7         	movff	?___ftmul+2,sqrt@q+2
  5949  001F16  C0D5  F068         	movff	sqrt@q,___ftmul@f1
  5950  001F1A  C0D6  F069         	movff	sqrt@q+1,___ftmul@f1+1
  5951  001F1E  C0D7  F06A         	movff	sqrt@q+2,___ftmul@f1+2
  5952  001F22  C0D8  F06B         	movff	sqrt@x,___ftmul@f2
  5953  001F26  C0D9  F06C         	movff	sqrt@x+1,___ftmul@f2+1
  5954  001F2A  C0DA  F06D         	movff	sqrt@x+2,___ftmul@f2+2
  5955  001F2E  ECF8  F00F         	call	___ftmul	;wreg free
  5956  001F32  C068  F0D5         	movff	?___ftmul,sqrt@q
  5957  001F36  C069  F0D6         	movff	?___ftmul+1,sqrt@q+1
  5958  001F3A  C06A  F0D7         	movff	?___ftmul+2,sqrt@q+2
  5959  001F3E  C0D5  F068         	movff	sqrt@q,___ftmul@f1
  5960  001F42  C0D6  F069         	movff	sqrt@q+1,___ftmul@f1+1
  5961  001F46  C0D7  F06A         	movff	sqrt@q+2,___ftmul@f1+2
  5962  001F4A  C0D8  F06B         	movff	sqrt@x,___ftmul@f2
  5963  001F4E  C0D9  F06C         	movff	sqrt@x+1,___ftmul@f2+1
  5964  001F52  C0DA  F06D         	movff	sqrt@x+2,___ftmul@f2+2
  5965  001F56  ECF8  F00F         	call	___ftmul	;wreg free
  5966  001F5A  C068  F0D5         	movff	?___ftmul,sqrt@q
  5967  001F5E  C069  F0D6         	movff	?___ftmul+1,sqrt@q+1
  5968  001F62  C06A  F0D7         	movff	?___ftmul+2,sqrt@q+2
  5969  001F66  C0D8  F068         	movff	sqrt@x,___ftmul@f1
  5970  001F6A  C0D9  F069         	movff	sqrt@x+1,___ftmul@f1+1
  5971  001F6E  C0DA  F06A         	movff	sqrt@x+2,___ftmul@f1+2
  5972  001F72  0E00               	movlw	0
  5973  001F74  0100               	movlb	0	; () banked
  5974  001F76  6F6B               	movwf	___ftmul@f2& (0+255),b
  5975  001F78  0EC0               	movlw	192
  5976  001F7A  0100               	movlb	0	; () banked
  5977  001F7C  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  5978  001F7E  0E3F               	movlw	63
  5979  001F80  0100               	movlb	0	; () banked
  5980  001F82  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  5981  001F84  ECF8  F00F         	call	___ftmul	;wreg free
  5982  001F88  C068  F0D8         	movff	?___ftmul,sqrt@x
  5983  001F8C  C069  F0D9         	movff	?___ftmul+1,sqrt@x+1
  5984  001F90  C06A  F0DA         	movff	?___ftmul+2,sqrt@x+2
  5985  001F94  C0D8  F0C2         	movff	sqrt@x,___ftsub@f1
  5986  001F98  C0D9  F0C3         	movff	sqrt@x+1,___ftsub@f1+1
  5987  001F9C  C0DA  F0C4         	movff	sqrt@x+2,___ftsub@f1+2
  5988  001FA0  C0D5  F0C5         	movff	sqrt@q,___ftsub@f2
  5989  001FA4  C0D6  F0C6         	movff	sqrt@q+1,___ftsub@f2+1
  5990  001FA8  C0D7  F0C7         	movff	sqrt@q+2,___ftsub@f2+2
  5991  001FAC  ECE0  F018         	call	___ftsub	;wreg free
  5992  001FB0  C0C2  F0D8         	movff	?___ftsub,sqrt@x
  5993  001FB4  C0C3  F0D9         	movff	?___ftsub+1,sqrt@x+1
  5994  001FB8  C0C4  F0DA         	movff	?___ftsub+2,sqrt@x+2
  5995  001FBC  0100               	movlb	0	; () banked
  5996  001FBE  2FD4               	decfsz	sqrt@i& (0+255),f,b
  5997  001FC0  D790               	goto	l4122
  5998  001FC2  D000               	goto	l4136
  5999  001FC4                     l4136:
  6000                           
  6001                           ; BSR set to: 0
  6002  001FC4  C0D8  F068         	movff	sqrt@x,___ftmul@f1
  6003  001FC8  C0D9  F069         	movff	sqrt@x+1,___ftmul@f1+1
  6004  001FCC  C0DA  F06A         	movff	sqrt@x+2,___ftmul@f1+2
  6005  001FD0  C0C8  F06B         	movff	sqrt@y,___ftmul@f2
  6006  001FD4  C0C9  F06C         	movff	sqrt@y+1,___ftmul@f2+1
  6007  001FD8  C0CA  F06D         	movff	sqrt@y+2,___ftmul@f2+2
  6008  001FDC  ECF8  F00F         	call	___ftmul	;wreg free
  6009  001FE0  C068  F0C8         	movff	?___ftmul,?_sqrt
  6010  001FE4  C069  F0C9         	movff	?___ftmul+1,?_sqrt+1
  6011  001FE8  C06A  F0CA         	movff	?___ftmul+2,?_sqrt+2
  6012  001FEC  D000               	goto	l1091
  6013  001FEE                     l1091:
  6014  001FEE  0012               	return		;funcret
  6015  001FF0                     __end_of_sqrt:
  6016                           	opt stack 0
  6017                           tblptru	equ	0xFF8
  6018                           tblptrh	equ	0xFF7
  6019                           tblptrl	equ	0xFF6
  6020                           tablat	equ	0xFF5
  6021                           intcon	equ	0xFF2
  6022                           intcon2	equ	0xFF1
  6023                           intcon3	equ	0xFF0
  6024                           postinc0	equ	0xFEE
  6025                           plusw0	equ	0xFEB
  6026                           wreg	equ	0xFE8
  6027                           postinc1	equ	0xFE6
  6028                           postdec1	equ	0xFE5
  6029                           plusw1	equ	0xFE3
  6030                           fsr1h	equ	0xFE2
  6031                           fsr1l	equ	0xFE1
  6032                           postinc2	equ	0xFDE
  6033                           postdec2	equ	0xFDD
  6034                           fsr2h	equ	0xFDA
  6035                           fsr2l	equ	0xFD9
  6036                           status	equ	0xFD8
  6037                           
  6038 ;; *************** function ___ftsub *****************
  6039 ;; Defined at:
  6040 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;  f1              3   98[BANK0 ] float 
  6043 ;;  f2              3  101[BANK0 ] float 
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;		None
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  3   98[BANK0 ] float 
  6048 ;; Registers used:
  6049 ;;		wreg, status,2, status,0, cstack
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6055 ;;      Params:         0       6       0       0
  6056 ;;      Locals:         0       0       0       0
  6057 ;;      Temps:          0       0       0       0
  6058 ;;      Totals:         0       6       0       0
  6059 ;;Total ram usage:        6 bytes
  6060 ;; Hardware stack levels used:    1
  6061 ;; Hardware stack levels required when called:    8
  6062 ;; This function calls:
  6063 ;;		___ftadd
  6064 ;; This function is called by:
  6065 ;;		_sqrt
  6066 ;;		_sin
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text27
  6071  0031C0                     __ptext27:
  6072                           	opt stack 0
  6073  0031C0                     ___ftsub:
  6074                           	opt stack 18
  6075                           
  6076                           ;incstack = 0
  6077  0031C0  0100               	movlb	0	; () banked
  6078  0031C2  51C5               	movf	___ftsub@f2& (0+255),w,b
  6079  0031C4  0100               	movlb	0	; () banked
  6080  0031C6  11C6               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  6081  0031C8  0100               	movlb	0	; () banked
  6082  0031CA  11C7               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  6083  0031CC  B4D8               	btfsc	status,2,c
  6084  0031CE  D00A               	goto	l3804
  6085                           
  6086                           ; BSR set to: 0
  6087  0031D0  0E00               	movlw	0
  6088  0031D2  0100               	movlb	0	; () banked
  6089  0031D4  1BC5               	xorwf	___ftsub@f2& (0+255),f,b
  6090  0031D6  0E00               	movlw	0
  6091  0031D8  0100               	movlb	0	; () banked
  6092  0031DA  1BC6               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  6093  0031DC  0E80               	movlw	128
  6094  0031DE  0100               	movlb	0	; () banked
  6095  0031E0  1BC7               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  6096  0031E2  D000               	goto	l3804
  6097  0031E4                     l3804:
  6098                           
  6099                           ; BSR set to: 0
  6100  0031E4  C0C2  F07A         	movff	___ftsub@f1,___ftadd@f1
  6101  0031E8  C0C3  F07B         	movff	___ftsub@f1+1,___ftadd@f1+1
  6102  0031EC  C0C4  F07C         	movff	___ftsub@f1+2,___ftadd@f1+2
  6103  0031F0  C0C5  F07D         	movff	___ftsub@f2,___ftadd@f2
  6104  0031F4  C0C6  F07E         	movff	___ftsub@f2+1,___ftadd@f2+1
  6105  0031F8  C0C7  F07F         	movff	___ftsub@f2+2,___ftadd@f2+2
  6106  0031FC  ECD7  F00D         	call	___ftadd	;wreg free
  6107  003200  C07A  F0C2         	movff	?___ftadd,?___ftsub
  6108  003204  C07B  F0C3         	movff	?___ftadd+1,?___ftsub+1
  6109  003208  C07C  F0C4         	movff	?___ftadd+2,?___ftsub+2
  6110  00320C  D000               	goto	l951
  6111  00320E                     l951:
  6112  00320E  0012               	return		;funcret
  6113  003210                     __end_of___ftsub:
  6114                           	opt stack 0
  6115                           tblptru	equ	0xFF8
  6116                           tblptrh	equ	0xFF7
  6117                           tblptrl	equ	0xFF6
  6118                           tablat	equ	0xFF5
  6119                           intcon	equ	0xFF2
  6120                           intcon2	equ	0xFF1
  6121                           intcon3	equ	0xFF0
  6122                           postinc0	equ	0xFEE
  6123                           plusw0	equ	0xFEB
  6124                           wreg	equ	0xFE8
  6125                           postinc1	equ	0xFE6
  6126                           postdec1	equ	0xFE5
  6127                           plusw1	equ	0xFE3
  6128                           fsr1h	equ	0xFE2
  6129                           fsr1l	equ	0xFE1
  6130                           postinc2	equ	0xFDE
  6131                           postdec2	equ	0xFDD
  6132                           fsr2h	equ	0xFDA
  6133                           fsr2l	equ	0xFD9
  6134                           status	equ	0xFD8
  6135                           
  6136 ;; *************** function ___ftadd *****************
  6137 ;; Defined at:
  6138 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;  f1              3   26[BANK0 ] float 
  6141 ;;  f2              3   29[BANK0 ] float 
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;  exp1            1   37[BANK0 ] unsigned char 
  6144 ;;  exp2            1   36[BANK0 ] unsigned char 
  6145 ;;  sign            1   35[BANK0 ] unsigned char 
  6146 ;; Return value:  Size  Location     Type
  6147 ;;                  3   26[BANK0 ] float 
  6148 ;; Registers used:
  6149 ;;		wreg, status,2, status,0, cstack
  6150 ;; Tracked objects:
  6151 ;;		On entry : 0/0
  6152 ;;		On exit  : 0/0
  6153 ;;		Unchanged: 0/0
  6154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6155 ;;      Params:         0       6       0       0
  6156 ;;      Locals:         0       3       0       0
  6157 ;;      Temps:          0       3       0       0
  6158 ;;      Totals:         0      12       0       0
  6159 ;;Total ram usage:       12 bytes
  6160 ;; Hardware stack levels used:    1
  6161 ;; Hardware stack levels required when called:    7
  6162 ;; This function calls:
  6163 ;;		___ftpack
  6164 ;; This function is called by:
  6165 ;;		_triangulation
  6166 ;;		_get_distance
  6167 ;;		___ftsub
  6168 ;;		_cos
  6169 ;;		_sin
  6170 ;;		_eval_poly
  6171 ;;		_floor
  6172 ;; This function uses a non-reentrant model
  6173 ;;
  6174                           
  6175                           	psect	text28
  6176  001BAE                     __ptext28:
  6177                           	opt stack 0
  6178  001BAE                     ___ftadd:
  6179                           	opt stack 18
  6180                           
  6181                           ;incstack = 0
  6182  001BAE  C07C  F080         	movff	___ftadd@f1+2,??___ftadd
  6183  001BB2  0100               	movlb	0	; () banked
  6184  001BB4  6B81               	clrf	(??___ftadd+1)& (0+255),b
  6185  001BB6  6B82               	clrf	(??___ftadd+2)& (0+255),b
  6186  001BB8  0100               	movlb	0	; () banked
  6187  001BBA  357B               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  6188  001BBC  0100               	movlb	0	; () banked
  6189  001BBE  3780               	rlcf	??___ftadd& (0+255),f,b
  6190  001BC0  E301               	bnc	u3211
  6191  001BC2  8181               	bsf	(??___ftadd+1)& (0+255),0,b
  6192  001BC4                     u3211:
  6193  001BC4  0100               	movlb	0	; () banked
  6194  001BC6  5180               	movf	??___ftadd& (0+255),w,b
  6195  001BC8  0100               	movlb	0	; () banked
  6196  001BCA  6F85               	movwf	___ftadd@exp1& (0+255),b
  6197  001BCC  C07F  F080         	movff	___ftadd@f2+2,??___ftadd
  6198  001BD0  0100               	movlb	0	; () banked
  6199  001BD2  6B81               	clrf	(??___ftadd+1)& (0+255),b
  6200  001BD4  6B82               	clrf	(??___ftadd+2)& (0+255),b
  6201  001BD6  0100               	movlb	0	; () banked
  6202  001BD8  357E               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  6203  001BDA  0100               	movlb	0	; () banked
  6204  001BDC  3780               	rlcf	??___ftadd& (0+255),f,b
  6205  001BDE  E301               	bnc	u3221
  6206  001BE0  8181               	bsf	(??___ftadd+1)& (0+255),0,b
  6207  001BE2                     u3221:
  6208  001BE2  0100               	movlb	0	; () banked
  6209  001BE4  5180               	movf	??___ftadd& (0+255),w,b
  6210  001BE6  0100               	movlb	0	; () banked
  6211  001BE8  6F84               	movwf	___ftadd@exp2& (0+255),b
  6212                           
  6213                           ; BSR set to: 0
  6214  001BEA  0100               	movlb	0	; () banked
  6215  001BEC  5185               	movf	___ftadd@exp1& (0+255),w,b
  6216  001BEE  0100               	movlb	0	; () banked
  6217  001BF0  B4D8               	btfsc	status,2,c
  6218  001BF2  D011               	goto	l887
  6219                           
  6220                           ; BSR set to: 0
  6221  001BF4  0100               	movlb	0	; () banked
  6222  001BF6  5184               	movf	___ftadd@exp2& (0+255),w,b
  6223  001BF8  0100               	movlb	0	; () banked
  6224  001BFA  5D85               	subwf	___ftadd@exp1& (0+255),w,b
  6225  001BFC  B0D8               	btfsc	status,0,c
  6226  001BFE  D012               	goto	l3610
  6227                           
  6228                           ; BSR set to: 0
  6229  001C00  0100               	movlb	0	; () banked
  6230  001C02  5185               	movf	___ftadd@exp1& (0+255),w,b
  6231  001C04  0800               	sublw	0
  6232  001C06  0100               	movlb	0	; () banked
  6233  001C08  2584               	addwf	___ftadd@exp2& (0+255),w,b
  6234  001C0A  0100               	movlb	0	; () banked
  6235  001C0C  6F80               	movwf	??___ftadd& (0+255),b
  6236  001C0E  0E18               	movlw	24
  6237  001C10  0100               	movlb	0	; () banked
  6238  001C12  6580               	cpfsgt	??___ftadd& (0+255),b
  6239  001C14  D007               	goto	l3610
  6240  001C16                     l887:
  6241                           
  6242                           ; BSR set to: 0
  6243  001C16  C07D  F07A         	movff	___ftadd@f2,?___ftadd
  6244  001C1A  C07E  F07B         	movff	___ftadd@f2+1,?___ftadd+1
  6245  001C1E  C07F  F07C         	movff	___ftadd@f2+2,?___ftadd+2
  6246  001C22  D103               	goto	l888
  6247  001C24                     l3610:
  6248                           
  6249                           ; BSR set to: 0
  6250  001C24  0100               	movlb	0	; () banked
  6251  001C26  5184               	movf	___ftadd@exp2& (0+255),w,b
  6252  001C28  0100               	movlb	0	; () banked
  6253  001C2A  B4D8               	btfsc	status,2,c
  6254  001C2C  D011               	goto	l891
  6255                           
  6256                           ; BSR set to: 0
  6257  001C2E  0100               	movlb	0	; () banked
  6258  001C30  5185               	movf	___ftadd@exp1& (0+255),w,b
  6259  001C32  0100               	movlb	0	; () banked
  6260  001C34  5D84               	subwf	___ftadd@exp2& (0+255),w,b
  6261  001C36  B0D8               	btfsc	status,0,c
  6262  001C38  D012               	goto	l3616
  6263                           
  6264                           ; BSR set to: 0
  6265  001C3A  0100               	movlb	0	; () banked
  6266  001C3C  5184               	movf	___ftadd@exp2& (0+255),w,b
  6267  001C3E  0800               	sublw	0
  6268  001C40  0100               	movlb	0	; () banked
  6269  001C42  2585               	addwf	___ftadd@exp1& (0+255),w,b
  6270  001C44  0100               	movlb	0	; () banked
  6271  001C46  6F80               	movwf	??___ftadd& (0+255),b
  6272  001C48  0E18               	movlw	24
  6273  001C4A  0100               	movlb	0	; () banked
  6274  001C4C  6580               	cpfsgt	??___ftadd& (0+255),b
  6275  001C4E  D007               	goto	l3616
  6276  001C50                     l891:
  6277                           
  6278                           ; BSR set to: 0
  6279  001C50  C07A  F07A         	movff	___ftadd@f1,?___ftadd
  6280  001C54  C07B  F07B         	movff	___ftadd@f1+1,?___ftadd+1
  6281  001C58  C07C  F07C         	movff	___ftadd@f1+2,?___ftadd+2
  6282  001C5C  D0E6               	goto	l888
  6283  001C5E                     l3616:
  6284                           
  6285                           ; BSR set to: 0
  6286  001C5E  0E06               	movlw	6
  6287  001C60  0100               	movlb	0	; () banked
  6288  001C62  6F83               	movwf	___ftadd@sign& (0+255),b
  6289                           
  6290                           ; BSR set to: 0
  6291  001C64  0100               	movlb	0	; () banked
  6292  001C66  AF7C               	btfss	(___ftadd@f1+2)& (0+255),7,b
  6293  001C68  D003               	goto	l3622
  6294                           
  6295                           ; BSR set to: 0
  6296  001C6A  0100               	movlb	0	; () banked
  6297  001C6C  8F83               	bsf	___ftadd@sign& (0+255),7,b
  6298  001C6E  D000               	goto	l3622
  6299  001C70                     l3622:
  6300                           
  6301                           ; BSR set to: 0
  6302  001C70  0100               	movlb	0	; () banked
  6303  001C72  AF7F               	btfss	(___ftadd@f2+2)& (0+255),7,b
  6304  001C74  D002               	goto	l893
  6305                           
  6306                           ; BSR set to: 0
  6307  001C76  0100               	movlb	0	; () banked
  6308  001C78  8D83               	bsf	___ftadd@sign& (0+255),6,b
  6309  001C7A                     l893:
  6310                           
  6311                           ; BSR set to: 0
  6312  001C7A  0100               	movlb	0	; () banked
  6313  001C7C  8F7B               	bsf	(___ftadd@f1+1)& (0+255),7,b
  6314                           
  6315                           ; BSR set to: 0
  6316  001C7E  0EFF               	movlw	255
  6317  001C80  0100               	movlb	0	; () banked
  6318  001C82  177A               	andwf	___ftadd@f1& (0+255),f,b
  6319  001C84  0EFF               	movlw	255
  6320  001C86  0100               	movlb	0	; () banked
  6321  001C88  177B               	andwf	(___ftadd@f1+1)& (0+255),f,b
  6322  001C8A  0E00               	movlw	0
  6323  001C8C  0100               	movlb	0	; () banked
  6324  001C8E  177C               	andwf	(___ftadd@f1+2)& (0+255),f,b
  6325  001C90  0100               	movlb	0	; () banked
  6326  001C92  8F7E               	bsf	(___ftadd@f2+1)& (0+255),7,b
  6327                           
  6328                           ; BSR set to: 0
  6329  001C94  0EFF               	movlw	255
  6330  001C96  0100               	movlb	0	; () banked
  6331  001C98  177D               	andwf	___ftadd@f2& (0+255),f,b
  6332  001C9A  0EFF               	movlw	255
  6333  001C9C  0100               	movlb	0	; () banked
  6334  001C9E  177E               	andwf	(___ftadd@f2+1)& (0+255),f,b
  6335  001CA0  0E00               	movlw	0
  6336  001CA2  0100               	movlb	0	; () banked
  6337  001CA4  177F               	andwf	(___ftadd@f2+2)& (0+255),f,b
  6338                           
  6339                           ; BSR set to: 0
  6340  001CA6  0100               	movlb	0	; () banked
  6341  001CA8  5184               	movf	___ftadd@exp2& (0+255),w,b
  6342  001CAA  0100               	movlb	0	; () banked
  6343  001CAC  5D85               	subwf	___ftadd@exp1& (0+255),w,b
  6344  001CAE  B0D8               	btfsc	status,0,c
  6345  001CB0  D028               	goto	l3642
  6346  001CB2                     l3632:
  6347                           
  6348                           ; BSR set to: 0
  6349  001CB2  0100               	movlb	0	; () banked
  6350  001CB4  90D8               	bcf	status,0,c
  6351  001CB6  377D               	rlcf	___ftadd@f2& (0+255),f,b
  6352  001CB8  377E               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  6353  001CBA  377F               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  6354  001CBC  0100               	movlb	0	; () banked
  6355  001CBE  0784               	decf	___ftadd@exp2& (0+255),f,b
  6356                           
  6357                           ; BSR set to: 0
  6358  001CC0  0100               	movlb	0	; () banked
  6359  001CC2  5185               	movf	___ftadd@exp1& (0+255),w,b
  6360  001CC4  0100               	movlb	0	; () banked
  6361  001CC6  1984               	xorwf	___ftadd@exp2& (0+255),w,b
  6362  001CC8  B4D8               	btfsc	status,2,c
  6363  001CCA  D013               	goto	l3640
  6364                           
  6365                           ; BSR set to: 0
  6366  001CCC  0100               	movlb	0	; () banked
  6367  001CCE  0783               	decf	___ftadd@sign& (0+255),f,b
  6368  001CD0  C083  F080         	movff	___ftadd@sign,??___ftadd
  6369  001CD4  0E07               	movlw	7
  6370  001CD6  0100               	movlb	0	; () banked
  6371  001CD8  1780               	andwf	??___ftadd& (0+255),f,b
  6372  001CDA  B4D8               	btfsc	status,2,c
  6373  001CDC  D00A               	goto	l3640
  6374  001CDE  D7E9               	goto	l3632
  6375                           
  6376                           ; BSR set to: 0
  6377                           
  6378                           ; BSR set to: 0
  6379  001CE0  D008               	goto	l3640
  6380  001CE2                     l3638:
  6381                           
  6382                           ; BSR set to: 0
  6383  001CE2  0100               	movlb	0	; () banked
  6384  001CE4  90D8               	bcf	status,0,c
  6385  001CE6  337C               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  6386  001CE8  337B               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  6387  001CEA  337A               	rrcf	___ftadd@f1& (0+255),f,b
  6388  001CEC  0100               	movlb	0	; () banked
  6389  001CEE  2B85               	incf	___ftadd@exp1& (0+255),f,b
  6390  001CF0  D000               	goto	l3640
  6391  001CF2                     l3640:
  6392                           
  6393                           ; BSR set to: 0
  6394  001CF2  0100               	movlb	0	; () banked
  6395  001CF4  5184               	movf	___ftadd@exp2& (0+255),w,b
  6396  001CF6  0100               	movlb	0	; () banked
  6397  001CF8  1985               	xorwf	___ftadd@exp1& (0+255),w,b
  6398  001CFA  B4D8               	btfsc	status,2,c
  6399  001CFC  D030               	goto	l902
  6400  001CFE  D7F1               	goto	l3638
  6401                           
  6402                           ; BSR set to: 0
  6403  001D00  D02E               	goto	l902
  6404  001D02                     l3642:
  6405                           
  6406                           ; BSR set to: 0
  6407  001D02  0100               	movlb	0	; () banked
  6408  001D04  5185               	movf	___ftadd@exp1& (0+255),w,b
  6409  001D06  0100               	movlb	0	; () banked
  6410  001D08  5D84               	subwf	___ftadd@exp2& (0+255),w,b
  6411  001D0A  B0D8               	btfsc	status,0,c
  6412  001D0C  D028               	goto	l902
  6413  001D0E                     l3644:
  6414                           
  6415                           ; BSR set to: 0
  6416  001D0E  0100               	movlb	0	; () banked
  6417  001D10  90D8               	bcf	status,0,c
  6418  001D12  377A               	rlcf	___ftadd@f1& (0+255),f,b
  6419  001D14  377B               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  6420  001D16  377C               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  6421  001D18  0100               	movlb	0	; () banked
  6422  001D1A  0785               	decf	___ftadd@exp1& (0+255),f,b
  6423                           
  6424                           ; BSR set to: 0
  6425  001D1C  0100               	movlb	0	; () banked
  6426  001D1E  5185               	movf	___ftadd@exp1& (0+255),w,b
  6427  001D20  0100               	movlb	0	; () banked
  6428  001D22  1984               	xorwf	___ftadd@exp2& (0+255),w,b
  6429  001D24  B4D8               	btfsc	status,2,c
  6430  001D26  D013               	goto	l3652
  6431                           
  6432                           ; BSR set to: 0
  6433  001D28  0100               	movlb	0	; () banked
  6434  001D2A  0783               	decf	___ftadd@sign& (0+255),f,b
  6435  001D2C  C083  F080         	movff	___ftadd@sign,??___ftadd
  6436  001D30  0E07               	movlw	7
  6437  001D32  0100               	movlb	0	; () banked
  6438  001D34  1780               	andwf	??___ftadd& (0+255),f,b
  6439  001D36  B4D8               	btfsc	status,2,c
  6440  001D38  D00A               	goto	l3652
  6441  001D3A  D7E9               	goto	l3644
  6442                           
  6443                           ; BSR set to: 0
  6444                           
  6445                           ; BSR set to: 0
  6446  001D3C  D008               	goto	l3652
  6447  001D3E                     l3650:
  6448                           
  6449                           ; BSR set to: 0
  6450  001D3E  0100               	movlb	0	; () banked
  6451  001D40  90D8               	bcf	status,0,c
  6452  001D42  337F               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  6453  001D44  337E               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  6454  001D46  337D               	rrcf	___ftadd@f2& (0+255),f,b
  6455  001D48  0100               	movlb	0	; () banked
  6456  001D4A  2B84               	incf	___ftadd@exp2& (0+255),f,b
  6457  001D4C  D000               	goto	l3652
  6458  001D4E                     l3652:
  6459                           
  6460                           ; BSR set to: 0
  6461  001D4E  0100               	movlb	0	; () banked
  6462  001D50  5184               	movf	___ftadd@exp2& (0+255),w,b
  6463  001D52  0100               	movlb	0	; () banked
  6464  001D54  1985               	xorwf	___ftadd@exp1& (0+255),w,b
  6465  001D56  B4D8               	btfsc	status,2,c
  6466  001D58  D002               	goto	l902
  6467  001D5A  D7F1               	goto	l3650
  6468                           
  6469                           ; BSR set to: 0
  6470  001D5C  D000               	goto	l902
  6471  001D5E                     l902:
  6472                           
  6473                           ; BSR set to: 0
  6474  001D5E  0100               	movlb	0	; () banked
  6475  001D60  AF83               	btfss	___ftadd@sign& (0+255),7,b
  6476  001D62  D012               	goto	l911
  6477                           
  6478                           ; BSR set to: 0
  6479  001D64  0EFF               	movlw	255
  6480  001D66  0100               	movlb	0	; () banked
  6481  001D68  1B7A               	xorwf	___ftadd@f1& (0+255),f,b
  6482  001D6A  0EFF               	movlw	255
  6483  001D6C  0100               	movlb	0	; () banked
  6484  001D6E  1B7B               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  6485  001D70  0EFF               	movlw	255
  6486  001D72  0100               	movlb	0	; () banked
  6487  001D74  1B7C               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  6488  001D76  0E01               	movlw	1
  6489  001D78  0100               	movlb	0	; () banked
  6490  001D7A  277A               	addwf	___ftadd@f1& (0+255),f,b
  6491  001D7C  0E00               	movlw	0
  6492  001D7E  0100               	movlb	0	; () banked
  6493  001D80  237B               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  6494  001D82  0E00               	movlw	0
  6495  001D84  0100               	movlb	0	; () banked
  6496  001D86  237C               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  6497  001D88                     l911:
  6498                           
  6499                           ; BSR set to: 0
  6500  001D88  0100               	movlb	0	; () banked
  6501  001D8A  AD83               	btfss	___ftadd@sign& (0+255),6,b
  6502  001D8C  D013               	goto	l3658
  6503                           
  6504                           ; BSR set to: 0
  6505  001D8E  0EFF               	movlw	255
  6506  001D90  0100               	movlb	0	; () banked
  6507  001D92  1B7D               	xorwf	___ftadd@f2& (0+255),f,b
  6508  001D94  0EFF               	movlw	255
  6509  001D96  0100               	movlb	0	; () banked
  6510  001D98  1B7E               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  6511  001D9A  0EFF               	movlw	255
  6512  001D9C  0100               	movlb	0	; () banked
  6513  001D9E  1B7F               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  6514  001DA0  0E01               	movlw	1
  6515  001DA2  0100               	movlb	0	; () banked
  6516  001DA4  277D               	addwf	___ftadd@f2& (0+255),f,b
  6517  001DA6  0E00               	movlw	0
  6518  001DA8  0100               	movlb	0	; () banked
  6519  001DAA  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6520  001DAC  0E00               	movlw	0
  6521  001DAE  0100               	movlb	0	; () banked
  6522  001DB0  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6523  001DB2  D000               	goto	l3658
  6524  001DB4                     l3658:
  6525                           
  6526                           ; BSR set to: 0
  6527  001DB4  0E00               	movlw	0
  6528  001DB6  0100               	movlb	0	; () banked
  6529  001DB8  6F83               	movwf	___ftadd@sign& (0+255),b
  6530                           
  6531                           ; BSR set to: 0
  6532  001DBA  0100               	movlb	0	; () banked
  6533  001DBC  517A               	movf	___ftadd@f1& (0+255),w,b
  6534  001DBE  0100               	movlb	0	; () banked
  6535  001DC0  277D               	addwf	___ftadd@f2& (0+255),f,b
  6536  001DC2  0100               	movlb	0	; () banked
  6537  001DC4  517B               	movf	(___ftadd@f1+1)& (0+255),w,b
  6538  001DC6  0100               	movlb	0	; () banked
  6539  001DC8  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6540  001DCA  0100               	movlb	0	; () banked
  6541  001DCC  517C               	movf	(___ftadd@f1+2)& (0+255),w,b
  6542  001DCE  0100               	movlb	0	; () banked
  6543  001DD0  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6544                           
  6545                           ; BSR set to: 0
  6546  001DD2  0100               	movlb	0	; () banked
  6547  001DD4  AF7F               	btfss	(___ftadd@f2+2)& (0+255),7,b
  6548  001DD6  D016               	goto	l3668
  6549                           
  6550                           ; BSR set to: 0
  6551  001DD8  0EFF               	movlw	255
  6552  001DDA  0100               	movlb	0	; () banked
  6553  001DDC  1B7D               	xorwf	___ftadd@f2& (0+255),f,b
  6554  001DDE  0EFF               	movlw	255
  6555  001DE0  0100               	movlb	0	; () banked
  6556  001DE2  1B7E               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  6557  001DE4  0EFF               	movlw	255
  6558  001DE6  0100               	movlb	0	; () banked
  6559  001DE8  1B7F               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  6560  001DEA  0E01               	movlw	1
  6561  001DEC  0100               	movlb	0	; () banked
  6562  001DEE  277D               	addwf	___ftadd@f2& (0+255),f,b
  6563  001DF0  0E00               	movlw	0
  6564  001DF2  0100               	movlb	0	; () banked
  6565  001DF4  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6566  001DF6  0E00               	movlw	0
  6567  001DF8  0100               	movlb	0	; () banked
  6568  001DFA  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6569                           
  6570                           ; BSR set to: 0
  6571  001DFC  0E01               	movlw	1
  6572  001DFE  0100               	movlb	0	; () banked
  6573  001E00  6F83               	movwf	___ftadd@sign& (0+255),b
  6574  001E02  D000               	goto	l3668
  6575  001E04                     l3668:
  6576                           
  6577                           ; BSR set to: 0
  6578  001E04  C07D  F060         	movff	___ftadd@f2,___ftpack@arg
  6579  001E08  C07E  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
  6580  001E0C  C07F  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
  6581  001E10  C085  F063         	movff	___ftadd@exp1,___ftpack@exp
  6582  001E14  C083  F064         	movff	___ftadd@sign,___ftpack@sign
  6583  001E18  ECE0  F011         	call	___ftpack	;wreg free
  6584  001E1C  C060  F07A         	movff	?___ftpack,?___ftadd
  6585  001E20  C061  F07B         	movff	?___ftpack+1,?___ftadd+1
  6586  001E24  C062  F07C         	movff	?___ftpack+2,?___ftadd+2
  6587  001E28  D000               	goto	l888
  6588  001E2A                     l888:
  6589  001E2A  0012               	return		;funcret
  6590  001E2C                     __end_of___ftadd:
  6591                           	opt stack 0
  6592                           tblptru	equ	0xFF8
  6593                           tblptrh	equ	0xFF7
  6594                           tblptrl	equ	0xFF6
  6595                           tablat	equ	0xFF5
  6596                           intcon	equ	0xFF2
  6597                           intcon2	equ	0xFF1
  6598                           intcon3	equ	0xFF0
  6599                           postinc0	equ	0xFEE
  6600                           plusw0	equ	0xFEB
  6601                           wreg	equ	0xFE8
  6602                           postinc1	equ	0xFE6
  6603                           postdec1	equ	0xFE5
  6604                           plusw1	equ	0xFE3
  6605                           fsr1h	equ	0xFE2
  6606                           fsr1l	equ	0xFE1
  6607                           postinc2	equ	0xFDE
  6608                           postdec2	equ	0xFDD
  6609                           fsr2h	equ	0xFDA
  6610                           fsr2l	equ	0xFD9
  6611                           status	equ	0xFD8
  6612                           
  6613 ;; *************** function _envoit_pwm *****************
  6614 ;; Defined at:
  6615 ;;		line 55 in file "moteur.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;  valeur          3   80[BANK0 ] float 
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;  abs_valeur      3   83[BANK0 ] float 
  6620 ;; Return value:  Size  Location     Type
  6621 ;;		None               void
  6622 ;; Registers used:
  6623 ;;		wreg, status,2, status,0, cstack
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6629 ;;      Params:         0       3       0       0
  6630 ;;      Locals:         0       3       0       0
  6631 ;;      Temps:          0       0       0       0
  6632 ;;      Totals:         0       6       0       0
  6633 ;;Total ram usage:        6 bytes
  6634 ;; Hardware stack levels used:    1
  6635 ;; Hardware stack levels required when called:    8
  6636 ;; This function calls:
  6637 ;;		___ftge
  6638 ;;		___ftmul
  6639 ;;		___ftneg
  6640 ;;		___fttol
  6641 ;; This function is called by:
  6642 ;;		_main
  6643 ;; This function uses a non-reentrant model
  6644 ;;
  6645                           
  6646                           	psect	text29
  6647  0027C6                     __ptext29:
  6648                           	opt stack 0
  6649  0027C6                     _envoit_pwm:
  6650                           	opt stack 22
  6651                           
  6652                           ;moteur.c: 57: double abs_valeur;
  6653                           ;moteur.c: 59: if (valeur < 0)
  6654                           
  6655                           ;incstack = 0
  6656  0027C6  0100               	movlb	0	; () banked
  6657  0027C8  AFB2               	btfss	(envoit_pwm@valeur+2)& (0+255),7,b
  6658  0027CA  D00F               	goto	l471
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;moteur.c: 60: abs_valeur = (double) (-valeur);
  6662  0027CC  C0B0  F077         	movff	envoit_pwm@valeur,___ftneg@f1
  6663  0027D0  C0B1  F078         	movff	envoit_pwm@valeur+1,___ftneg@f1+1
  6664  0027D4  C0B2  F079         	movff	envoit_pwm@valeur+2,___ftneg@f1+2
  6665  0027D8  EC50  F01A         	call	___ftneg	;wreg free
  6666  0027DC  C077  F0B3         	movff	?___ftneg,envoit_pwm@abs_valeur
  6667  0027E0  C078  F0B4         	movff	?___ftneg+1,envoit_pwm@abs_valeur+1
  6668  0027E4  C079  F0B5         	movff	?___ftneg+2,envoit_pwm@abs_valeur+2
  6669  0027E8  D007               	goto	l4164
  6670  0027EA                     l471:
  6671                           
  6672                           ; BSR set to: 0
  6673                           ;moteur.c: 61: else
  6674                           ;moteur.c: 62: abs_valeur = (double) valeur;
  6675  0027EA  C0B0  F0B3         	movff	envoit_pwm@valeur,envoit_pwm@abs_valeur
  6676  0027EE  C0B1  F0B4         	movff	envoit_pwm@valeur+1,envoit_pwm@abs_valeur+1
  6677  0027F2  C0B2  F0B5         	movff	envoit_pwm@valeur+2,envoit_pwm@abs_valeur+2
  6678  0027F6  D000               	goto	l4164
  6679  0027F8                     l4164:
  6680                           
  6681                           ;moteur.c: 64: abs_valeur *= (double) 669 / 100;
  6682  0027F8  C0B3  F068         	movff	envoit_pwm@abs_valeur,___ftmul@f1
  6683  0027FC  C0B4  F069         	movff	envoit_pwm@abs_valeur+1,___ftmul@f1+1
  6684  002800  C0B5  F06A         	movff	envoit_pwm@abs_valeur+2,___ftmul@f1+2
  6685  002804  0E14               	movlw	20
  6686  002806  0100               	movlb	0	; () banked
  6687  002808  6F6B               	movwf	___ftmul@f2& (0+255),b
  6688  00280A  0ED6               	movlw	214
  6689  00280C  0100               	movlb	0	; () banked
  6690  00280E  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  6691  002810  0E40               	movlw	64
  6692  002812  0100               	movlb	0	; () banked
  6693  002814  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  6694  002816  ECF8  F00F         	call	___ftmul	;wreg free
  6695  00281A  C068  F0B3         	movff	?___ftmul,envoit_pwm@abs_valeur
  6696  00281E  C069  F0B4         	movff	?___ftmul+1,envoit_pwm@abs_valeur+1
  6697  002822  C06A  F0B5         	movff	?___ftmul+2,envoit_pwm@abs_valeur+2
  6698                           
  6699                           ;moteur.c: 66: if (abs_valeur > 669)
  6700  002826  0E40               	movlw	64
  6701  002828  0100               	movlb	0	; () banked
  6702  00282A  6F7A               	movwf	___ftge@ff1& (0+255),b
  6703  00282C  0E27               	movlw	39
  6704  00282E  0100               	movlb	0	; () banked
  6705  002830  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  6706  002832  0E44               	movlw	68
  6707  002834  0100               	movlb	0	; () banked
  6708  002836  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  6709  002838  C0B3  F07D         	movff	envoit_pwm@abs_valeur,___ftge@ff2
  6710  00283C  C0B4  F07E         	movff	envoit_pwm@abs_valeur+1,___ftge@ff2+1
  6711  002840  C0B5  F07F         	movff	envoit_pwm@abs_valeur+2,___ftge@ff2+2
  6712  002844  ECBC  F014         	call	___ftge	;wreg free
  6713  002848  0100               	movlb	0	; () banked
  6714  00284A  B0D8               	btfsc	status,0,c
  6715  00284C  D00A               	goto	l4168
  6716                           
  6717                           ; BSR set to: 0
  6718                           ;moteur.c: 67: abs_valeur = 669;
  6719  00284E  0E40               	movlw	64
  6720  002850  0100               	movlb	0	; () banked
  6721  002852  6FB3               	movwf	envoit_pwm@abs_valeur& (0+255),b
  6722  002854  0E27               	movlw	39
  6723  002856  0100               	movlb	0	; () banked
  6724  002858  6FB4               	movwf	(envoit_pwm@abs_valeur+1)& (0+255),b
  6725  00285A  0E44               	movlw	68
  6726  00285C  0100               	movlb	0	; () banked
  6727  00285E  6FB5               	movwf	(envoit_pwm@abs_valeur+2)& (0+255),b
  6728  002860  D000               	goto	l4168
  6729  002862                     l4168:
  6730                           
  6731                           ; BSR set to: 0
  6732                           ;moteur.c: 69: if (valeur < (double) 0.)
  6733  002862  0100               	movlb	0	; () banked
  6734  002864  AFB2               	btfss	(envoit_pwm@valeur+2)& (0+255),7,b
  6735  002866  D002               	goto	l474
  6736                           
  6737                           ; BSR set to: 0
  6738                           ;moteur.c: 70: {
  6739                           ;moteur.c: 71: PORTDbits.RD4 = 1;
  6740  002868  8883               	bsf	3971,4,c	;volatile
  6741                           
  6742                           ;moteur.c: 72: }
  6743  00286A  D002               	goto	l4172
  6744  00286C                     l474:
  6745                           
  6746                           ; BSR set to: 0
  6747                           ;moteur.c: 73: else
  6748                           ;moteur.c: 74: {
  6749                           ;moteur.c: 75: PORTDbits.RD4 = 0;
  6750  00286C  9883               	bcf	3971,4,c	;volatile
  6751  00286E  D000               	goto	l4172
  6752  002870                     l4172:
  6753                           
  6754                           ; BSR set to: 0
  6755                           ;moteur.c: 76: }
  6756                           ;moteur.c: 78: PDC0L = (uint8_t) ((uint16_t) abs_valeur % 256);
  6757  002870  C0B3  F0A1         	movff	envoit_pwm@abs_valeur,___fttol@f1
  6758  002874  C0B4  F0A2         	movff	envoit_pwm@abs_valeur+1,___fttol@f1+1
  6759  002878  C0B5  F0A3         	movff	envoit_pwm@abs_valeur+2,___fttol@f1+2
  6760  00287C  EC47  F011         	call	___fttol	;wreg free
  6761  002880  0100               	movlb	0	; () banked
  6762  002882  51A1               	movf	?___fttol& (0+255),w,b
  6763  002884  6E79               	movwf	3961,c	;volatile
  6764                           
  6765                           ;moteur.c: 79: PDC0H = (uint8_t) ((uint16_t) abs_valeur / 256);
  6766  002886  C0B3  F0A1         	movff	envoit_pwm@abs_valeur,___fttol@f1
  6767  00288A  C0B4  F0A2         	movff	envoit_pwm@abs_valeur+1,___fttol@f1+1
  6768  00288E  C0B5  F0A3         	movff	envoit_pwm@abs_valeur+2,___fttol@f1+2
  6769  002892  EC47  F011         	call	___fttol	;wreg free
  6770  002896  0100               	movlb	0	; () banked
  6771  002898  C0A2  F0A1         	movff	?___fttol+1,?___fttol
  6772  00289C  0100               	movlb	0	; () banked
  6773  00289E  6BA2               	clrf	(?___fttol+1)& (0+255),b
  6774  0028A0  0100               	movlb	0	; () banked
  6775  0028A2  51A1               	movf	?___fttol& (0+255),w,b
  6776  0028A4  6E78               	movwf	3960,c	;volatile
  6777                           
  6778                           ; BSR set to: 0
  6779  0028A6  0012               	return		;funcret
  6780  0028A8                     __end_of_envoit_pwm:
  6781                           	opt stack 0
  6782                           tblptru	equ	0xFF8
  6783                           tblptrh	equ	0xFF7
  6784                           tblptrl	equ	0xFF6
  6785                           tablat	equ	0xFF5
  6786                           intcon	equ	0xFF2
  6787                           intcon2	equ	0xFF1
  6788                           intcon3	equ	0xFF0
  6789                           postinc0	equ	0xFEE
  6790                           plusw0	equ	0xFEB
  6791                           wreg	equ	0xFE8
  6792                           postinc1	equ	0xFE6
  6793                           postdec1	equ	0xFE5
  6794                           plusw1	equ	0xFE3
  6795                           fsr1h	equ	0xFE2
  6796                           fsr1l	equ	0xFE1
  6797                           postinc2	equ	0xFDE
  6798                           postdec2	equ	0xFDD
  6799                           fsr2h	equ	0xFDA
  6800                           fsr2l	equ	0xFD9
  6801                           status	equ	0xFD8
  6802                           
  6803 ;; *************** function ___ftneg *****************
  6804 ;; Defined at:
  6805 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;  f1              3   23[BANK0 ] float 
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;		None
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  3   23[BANK0 ] float 
  6812 ;; Registers used:
  6813 ;;		wreg, status,2, status,0
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6819 ;;      Params:         0       3       0       0
  6820 ;;      Locals:         0       0       0       0
  6821 ;;      Temps:          0       0       0       0
  6822 ;;      Totals:         0       3       0       0
  6823 ;;Total ram usage:        3 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; Hardware stack levels required when called:    6
  6826 ;; This function calls:
  6827 ;;		Nothing
  6828 ;; This function is called by:
  6829 ;;		_envoit_pwm
  6830 ;;		_triangulation
  6831 ;;		_saturation
  6832 ;;		_get_distance
  6833 ;;		_sin
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           	psect	text30
  6838  0034A0                     __ptext30:
  6839                           	opt stack 0
  6840  0034A0                     ___ftneg:
  6841                           	opt stack 22
  6842                           
  6843                           ; BSR set to: 0
  6844                           ;incstack = 0
  6845  0034A0  0100               	movlb	0	; () banked
  6846  0034A2  5177               	movf	___ftneg@f1& (0+255),w,b
  6847  0034A4  0100               	movlb	0	; () banked
  6848  0034A6  1178               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  6849  0034A8  0100               	movlb	0	; () banked
  6850  0034AA  1179               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  6851  0034AC  B4D8               	btfsc	status,2,c
  6852  0034AE  D009               	goto	l944
  6853                           
  6854                           ; BSR set to: 0
  6855  0034B0  0E00               	movlw	0
  6856  0034B2  0100               	movlb	0	; () banked
  6857  0034B4  1B77               	xorwf	___ftneg@f1& (0+255),f,b
  6858  0034B6  0E00               	movlw	0
  6859  0034B8  0100               	movlb	0	; () banked
  6860  0034BA  1B78               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  6861  0034BC  0E80               	movlw	128
  6862  0034BE  0100               	movlb	0	; () banked
  6863  0034C0  1B79               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  6864  0034C2                     l944:
  6865                           
  6866                           ; BSR set to: 0
  6867  0034C2  C077  F077         	movff	___ftneg@f1,?___ftneg
  6868  0034C6  C078  F078         	movff	___ftneg@f1+1,?___ftneg+1
  6869  0034CA  C079  F079         	movff	___ftneg@f1+2,?___ftneg+2
  6870                           
  6871                           ; BSR set to: 0
  6872  0034CE  0012               	return		;funcret
  6873  0034D0                     __end_of___ftneg:
  6874                           	opt stack 0
  6875                           tblptru	equ	0xFF8
  6876                           tblptrh	equ	0xFF7
  6877                           tblptrl	equ	0xFF6
  6878                           tablat	equ	0xFF5
  6879                           intcon	equ	0xFF2
  6880                           intcon2	equ	0xFF1
  6881                           intcon3	equ	0xFF0
  6882                           postinc0	equ	0xFEE
  6883                           plusw0	equ	0xFEB
  6884                           wreg	equ	0xFE8
  6885                           postinc1	equ	0xFE6
  6886                           postdec1	equ	0xFE5
  6887                           plusw1	equ	0xFE3
  6888                           fsr1h	equ	0xFE2
  6889                           fsr1l	equ	0xFE1
  6890                           postinc2	equ	0xFDE
  6891                           postdec2	equ	0xFDD
  6892                           fsr2h	equ	0xFDA
  6893                           fsr2l	equ	0xFD9
  6894                           status	equ	0xFD8
  6895                           
  6896 ;; *************** function ___ftmul *****************
  6897 ;; Defined at:
  6898 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;  f1              3    8[BANK0 ] float 
  6901 ;;  f2              3   11[BANK0 ] float 
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
  6904 ;;  sign            1   22[BANK0 ] unsigned char 
  6905 ;;  cntr            1   21[BANK0 ] unsigned char 
  6906 ;;  exp             1   17[BANK0 ] unsigned char 
  6907 ;; Return value:  Size  Location     Type
  6908 ;;                  3    8[BANK0 ] float 
  6909 ;; Registers used:
  6910 ;;		wreg, status,2, status,0, cstack
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6916 ;;      Params:         0       6       0       0
  6917 ;;      Locals:         0       6       0       0
  6918 ;;      Temps:          0       3       0       0
  6919 ;;      Totals:         0      15       0       0
  6920 ;;Total ram usage:       15 bytes
  6921 ;; Hardware stack levels used:    1
  6922 ;; Hardware stack levels required when called:    7
  6923 ;; This function calls:
  6924 ;;		___ftpack
  6925 ;; This function is called by:
  6926 ;;		_envoit_pwm
  6927 ;;		_obtention_angle
  6928 ;;		_triangulation
  6929 ;;		_conversion_degre_radian
  6930 ;;		_get_distance
  6931 ;;		_sqrt
  6932 ;;		_sin
  6933 ;;		_eval_poly
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           	psect	text31
  6938  001FF0                     __ptext31:
  6939                           	opt stack 0
  6940  001FF0                     ___ftmul:
  6941                           	opt stack 18
  6942                           
  6943                           ; BSR set to: 0
  6944                           ;incstack = 0
  6945  001FF0  C06A  F06E         	movff	___ftmul@f1+2,??___ftmul
  6946  001FF4  0100               	movlb	0	; () banked
  6947  001FF6  6B6F               	clrf	(??___ftmul+1)& (0+255),b
  6948  001FF8  6B70               	clrf	(??___ftmul+2)& (0+255),b
  6949  001FFA  0100               	movlb	0	; () banked
  6950  001FFC  3569               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  6951  001FFE  0100               	movlb	0	; () banked
  6952  002000  376E               	rlcf	??___ftmul& (0+255),f,b
  6953  002002  E301               	bnc	u3421
  6954  002004  816F               	bsf	(??___ftmul+1)& (0+255),0,b
  6955  002006                     u3421:
  6956  002006  0100               	movlb	0	; () banked
  6957  002008  516E               	movf	??___ftmul& (0+255),w,b
  6958  00200A  0100               	movlb	0	; () banked
  6959  00200C  6F71               	movwf	___ftmul@exp& (0+255),b
  6960  00200E  0100               	movlb	0	; () banked
  6961  002010  5171               	movf	___ftmul@exp& (0+255),w,b
  6962  002012  A4D8               	btfss	status,2,c
  6963  002014  D002               	goto	l3678
  6964  002016  D014               	goto	l3680
  6965                           
  6966                           ; BSR set to: 0
  6967                           
  6968                           ; BSR set to: 0
  6969  002018  D098               	goto	l934
  6970  00201A                     l3678:
  6971                           
  6972                           ; BSR set to: 0
  6973  00201A  C06D  F06E         	movff	___ftmul@f2+2,??___ftmul
  6974  00201E  0100               	movlb	0	; () banked
  6975  002020  6B6F               	clrf	(??___ftmul+1)& (0+255),b
  6976  002022  6B70               	clrf	(??___ftmul+2)& (0+255),b
  6977  002024  0100               	movlb	0	; () banked
  6978  002026  356C               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  6979  002028  0100               	movlb	0	; () banked
  6980  00202A  376E               	rlcf	??___ftmul& (0+255),f,b
  6981  00202C  E301               	bnc	u3441
  6982  00202E  816F               	bsf	(??___ftmul+1)& (0+255),0,b
  6983  002030                     u3441:
  6984  002030  0100               	movlb	0	; () banked
  6985  002032  516E               	movf	??___ftmul& (0+255),w,b
  6986  002034  0100               	movlb	0	; () banked
  6987  002036  6F76               	movwf	___ftmul@sign& (0+255),b
  6988  002038  0100               	movlb	0	; () banked
  6989  00203A  5176               	movf	___ftmul@sign& (0+255),w,b
  6990  00203C  A4D8               	btfss	status,2,c
  6991  00203E  D00A               	goto	l3684
  6992  002040                     l3680:
  6993                           
  6994                           ; BSR set to: 0
  6995  002040  0E00               	movlw	0
  6996  002042  0100               	movlb	0	; () banked
  6997  002044  6F68               	movwf	?___ftmul& (0+255),b
  6998  002046  0E00               	movlw	0
  6999  002048  0100               	movlb	0	; () banked
  7000  00204A  6F69               	movwf	(?___ftmul+1)& (0+255),b
  7001  00204C  0E00               	movlw	0
  7002  00204E  0100               	movlb	0	; () banked
  7003  002050  6F6A               	movwf	(?___ftmul+2)& (0+255),b
  7004                           
  7005                           ; BSR set to: 0
  7006  002052  D07B               	goto	l934
  7007  002054                     l3684:
  7008                           
  7009                           ; BSR set to: 0
  7010  002054  0100               	movlb	0	; () banked
  7011  002056  5176               	movf	___ftmul@sign& (0+255),w,b
  7012  002058  0F7B               	addlw	123
  7013  00205A  0100               	movlb	0	; () banked
  7014  00205C  2771               	addwf	___ftmul@exp& (0+255),f,b
  7015                           
  7016                           ; BSR set to: 0
  7017  00205E  C06A  F076         	movff	___ftmul@f1+2,___ftmul@sign
  7018  002062  0100               	movlb	0	; () banked
  7019  002064  516D               	movf	(___ftmul@f2+2)& (0+255),w,b
  7020  002066  0100               	movlb	0	; () banked
  7021  002068  1B76               	xorwf	___ftmul@sign& (0+255),f,b
  7022  00206A  0E80               	movlw	128
  7023  00206C  0100               	movlb	0	; () banked
  7024  00206E  1776               	andwf	___ftmul@sign& (0+255),f,b
  7025                           
  7026                           ; BSR set to: 0
  7027  002070  0100               	movlb	0	; () banked
  7028  002072  8F69               	bsf	(___ftmul@f1+1)& (0+255),7,b
  7029                           
  7030                           ; BSR set to: 0
  7031  002074  0100               	movlb	0	; () banked
  7032  002076  8F6C               	bsf	(___ftmul@f2+1)& (0+255),7,b
  7033                           
  7034                           ; BSR set to: 0
  7035  002078  0EFF               	movlw	255
  7036  00207A  0100               	movlb	0	; () banked
  7037  00207C  176B               	andwf	___ftmul@f2& (0+255),f,b
  7038  00207E  0EFF               	movlw	255
  7039  002080  0100               	movlb	0	; () banked
  7040  002082  176C               	andwf	(___ftmul@f2+1)& (0+255),f,b
  7041  002084  0E00               	movlw	0
  7042  002086  0100               	movlb	0	; () banked
  7043  002088  176D               	andwf	(___ftmul@f2+2)& (0+255),f,b
  7044                           
  7045                           ; BSR set to: 0
  7046  00208A  0E00               	movlw	0
  7047  00208C  0100               	movlb	0	; () banked
  7048  00208E  6F72               	movwf	___ftmul@f3_as_product& (0+255),b
  7049  002090  0E00               	movlw	0
  7050  002092  0100               	movlb	0	; () banked
  7051  002094  6F73               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7052  002096  0E00               	movlw	0
  7053  002098  0100               	movlb	0	; () banked
  7054  00209A  6F74               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7055                           
  7056                           ; BSR set to: 0
  7057  00209C  0E07               	movlw	7
  7058  00209E  0100               	movlb	0	; () banked
  7059  0020A0  6F75               	movwf	___ftmul@cntr& (0+255),b
  7060  0020A2  D000               	goto	l3698
  7061  0020A4                     l3698:
  7062                           
  7063                           ; BSR set to: 0
  7064  0020A4  0100               	movlb	0	; () banked
  7065  0020A6  A168               	btfss	___ftmul@f1& (0+255),0,b
  7066  0020A8  D00D               	goto	l3702
  7067                           
  7068                           ; BSR set to: 0
  7069  0020AA  0100               	movlb	0	; () banked
  7070  0020AC  516B               	movf	___ftmul@f2& (0+255),w,b
  7071  0020AE  0100               	movlb	0	; () banked
  7072  0020B0  2772               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7073  0020B2  0100               	movlb	0	; () banked
  7074  0020B4  516C               	movf	(___ftmul@f2+1)& (0+255),w,b
  7075  0020B6  0100               	movlb	0	; () banked
  7076  0020B8  2373               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7077  0020BA  0100               	movlb	0	; () banked
  7078  0020BC  516D               	movf	(___ftmul@f2+2)& (0+255),w,b
  7079  0020BE  0100               	movlb	0	; () banked
  7080  0020C0  2374               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7081  0020C2  D000               	goto	l3702
  7082  0020C4                     l3702:
  7083                           
  7084                           ; BSR set to: 0
  7085  0020C4  0100               	movlb	0	; () banked
  7086  0020C6  90D8               	bcf	status,0,c
  7087  0020C8  336A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7088  0020CA  3369               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7089  0020CC  3368               	rrcf	___ftmul@f1& (0+255),f,b
  7090  0020CE  0100               	movlb	0	; () banked
  7091  0020D0  90D8               	bcf	status,0,c
  7092  0020D2  376B               	rlcf	___ftmul@f2& (0+255),f,b
  7093  0020D4  376C               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  7094  0020D6  376D               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  7095                           
  7096                           ; BSR set to: 0
  7097  0020D8  0100               	movlb	0	; () banked
  7098  0020DA  2F75               	decfsz	___ftmul@cntr& (0+255),f,b
  7099  0020DC  D7E3               	goto	l3698
  7100  0020DE  D000               	goto	l3706
  7101  0020E0                     l3706:
  7102                           
  7103                           ; BSR set to: 0
  7104  0020E0  0E09               	movlw	9
  7105  0020E2  0100               	movlb	0	; () banked
  7106  0020E4  6F75               	movwf	___ftmul@cntr& (0+255),b
  7107  0020E6  D000               	goto	l3708
  7108  0020E8                     l3708:
  7109                           
  7110                           ; BSR set to: 0
  7111  0020E8  0100               	movlb	0	; () banked
  7112  0020EA  A168               	btfss	___ftmul@f1& (0+255),0,b
  7113  0020EC  D00D               	goto	l3712
  7114                           
  7115                           ; BSR set to: 0
  7116  0020EE  0100               	movlb	0	; () banked
  7117  0020F0  516B               	movf	___ftmul@f2& (0+255),w,b
  7118  0020F2  0100               	movlb	0	; () banked
  7119  0020F4  2772               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7120  0020F6  0100               	movlb	0	; () banked
  7121  0020F8  516C               	movf	(___ftmul@f2+1)& (0+255),w,b
  7122  0020FA  0100               	movlb	0	; () banked
  7123  0020FC  2373               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7124  0020FE  0100               	movlb	0	; () banked
  7125  002100  516D               	movf	(___ftmul@f2+2)& (0+255),w,b
  7126  002102  0100               	movlb	0	; () banked
  7127  002104  2374               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7128  002106  D000               	goto	l3712
  7129  002108                     l3712:
  7130                           
  7131                           ; BSR set to: 0
  7132  002108  0100               	movlb	0	; () banked
  7133  00210A  90D8               	bcf	status,0,c
  7134  00210C  336A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7135  00210E  3369               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7136  002110  3368               	rrcf	___ftmul@f1& (0+255),f,b
  7137  002112  0100               	movlb	0	; () banked
  7138  002114  90D8               	bcf	status,0,c
  7139  002116  3374               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7140  002118  3373               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7141  00211A  3372               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7142                           
  7143                           ; BSR set to: 0
  7144  00211C  0100               	movlb	0	; () banked
  7145  00211E  2F75               	decfsz	___ftmul@cntr& (0+255),f,b
  7146  002120  D7E3               	goto	l3708
  7147  002122  D000               	goto	l3716
  7148  002124                     l3716:
  7149                           
  7150                           ; BSR set to: 0
  7151  002124  C072  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  7152  002128  C073  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7153  00212C  C074  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7154  002130  C071  F063         	movff	___ftmul@exp,___ftpack@exp
  7155  002134  C076  F064         	movff	___ftmul@sign,___ftpack@sign
  7156  002138  ECE0  F011         	call	___ftpack	;wreg free
  7157  00213C  C060  F068         	movff	?___ftpack,?___ftmul
  7158  002140  C061  F069         	movff	?___ftpack+1,?___ftmul+1
  7159  002144  C062  F06A         	movff	?___ftpack+2,?___ftmul+2
  7160  002148  D000               	goto	l934
  7161  00214A                     l934:
  7162  00214A  0012               	return		;funcret
  7163  00214C                     __end_of___ftmul:
  7164                           	opt stack 0
  7165                           tblptru	equ	0xFF8
  7166                           tblptrh	equ	0xFF7
  7167                           tblptrl	equ	0xFF6
  7168                           tablat	equ	0xFF5
  7169                           intcon	equ	0xFF2
  7170                           intcon2	equ	0xFF1
  7171                           intcon3	equ	0xFF0
  7172                           postinc0	equ	0xFEE
  7173                           plusw0	equ	0xFEB
  7174                           wreg	equ	0xFE8
  7175                           postinc1	equ	0xFE6
  7176                           postdec1	equ	0xFE5
  7177                           plusw1	equ	0xFE3
  7178                           fsr1h	equ	0xFE2
  7179                           fsr1l	equ	0xFE1
  7180                           postinc2	equ	0xFDE
  7181                           postdec2	equ	0xFDD
  7182                           fsr2h	equ	0xFDA
  7183                           fsr2l	equ	0xFD9
  7184                           status	equ	0xFD8
  7185                           
  7186 ;; *************** function ___ftge *****************
  7187 ;; Defined at:
  7188 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  7189 ;; Parameters:    Size  Location     Type
  7190 ;;  ff1             3   26[BANK0 ] float 
  7191 ;;  ff2             3   29[BANK0 ] float 
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;		None
  7194 ;; Return value:  Size  Location     Type
  7195 ;;		None               void
  7196 ;; Registers used:
  7197 ;;		wreg, status,2, status,0
  7198 ;; Tracked objects:
  7199 ;;		On entry : 0/0
  7200 ;;		On exit  : 0/0
  7201 ;;		Unchanged: 0/0
  7202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7203 ;;      Params:         0       6       0       0
  7204 ;;      Locals:         0       0       0       0
  7205 ;;      Temps:          0       3       0       0
  7206 ;;      Totals:         0       9       0       0
  7207 ;;Total ram usage:        9 bytes
  7208 ;; Hardware stack levels used:    1
  7209 ;; Hardware stack levels required when called:    6
  7210 ;; This function calls:
  7211 ;;		Nothing
  7212 ;; This function is called by:
  7213 ;;		_main
  7214 ;;		_envoit_pwm
  7215 ;;		_saturation
  7216 ;;		_sqrt
  7217 ;;		_cos
  7218 ;;		_sin
  7219 ;;		_floor
  7220 ;; This function uses a non-reentrant model
  7221 ;;
  7222                           
  7223                           	psect	text32
  7224  002978                     __ptext32:
  7225                           	opt stack 0
  7226  002978                     ___ftge:
  7227                           	opt stack 22
  7228                           
  7229                           ;incstack = 0
  7230  002978  0100               	movlb	0	; () banked
  7231  00297A  AF7C               	btfss	(___ftge@ff1+2)& (0+255),7,b
  7232  00297C  D01E               	goto	l3724
  7233                           
  7234                           ; BSR set to: 0
  7235  00297E  C07A  F080         	movff	___ftge@ff1,??___ftge
  7236  002982  C07B  F081         	movff	___ftge@ff1+1,??___ftge+1
  7237  002986  C07C  F082         	movff	___ftge@ff1+2,??___ftge+2
  7238  00298A  0100               	movlb	0	; () banked
  7239  00298C  1F80               	comf	??___ftge& (0+255),f,b
  7240  00298E  1F81               	comf	(??___ftge+1)& (0+255),f,b
  7241  002990  1F82               	comf	(??___ftge+2)& (0+255),f,b
  7242  002992  2B80               	incf	??___ftge& (0+255),f,b
  7243  002994  0E00               	movlw	0
  7244  002996  2381               	addwfc	(??___ftge+1)& (0+255),f,b
  7245  002998  2382               	addwfc	(??___ftge+2)& (0+255),f,b
  7246  00299A  0E00               	movlw	0
  7247  00299C  0100               	movlb	0	; () banked
  7248  00299E  2580               	addwf	??___ftge& (0+255),w,b
  7249  0029A0  0100               	movlb	0	; () banked
  7250  0029A2  6F7A               	movwf	___ftge@ff1& (0+255),b
  7251  0029A4  0E00               	movlw	0
  7252  0029A6  0100               	movlb	0	; () banked
  7253  0029A8  2181               	addwfc	(??___ftge+1)& (0+255),w,b
  7254  0029AA  0100               	movlb	0	; () banked
  7255  0029AC  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  7256  0029AE  0E80               	movlw	128
  7257  0029B0  0100               	movlb	0	; () banked
  7258  0029B2  2182               	addwfc	(??___ftge+2)& (0+255),w,b
  7259  0029B4  0100               	movlb	0	; () banked
  7260  0029B6  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  7261  0029B8  D000               	goto	l3724
  7262  0029BA                     l3724:
  7263                           
  7264                           ; BSR set to: 0
  7265  0029BA  0100               	movlb	0	; () banked
  7266  0029BC  AF7F               	btfss	(___ftge@ff2+2)& (0+255),7,b
  7267  0029BE  D01E               	goto	l3728
  7268                           
  7269                           ; BSR set to: 0
  7270  0029C0  C07D  F080         	movff	___ftge@ff2,??___ftge
  7271  0029C4  C07E  F081         	movff	___ftge@ff2+1,??___ftge+1
  7272  0029C8  C07F  F082         	movff	___ftge@ff2+2,??___ftge+2
  7273  0029CC  0100               	movlb	0	; () banked
  7274  0029CE  1F80               	comf	??___ftge& (0+255),f,b
  7275  0029D0  1F81               	comf	(??___ftge+1)& (0+255),f,b
  7276  0029D2  1F82               	comf	(??___ftge+2)& (0+255),f,b
  7277  0029D4  2B80               	incf	??___ftge& (0+255),f,b
  7278  0029D6  0E00               	movlw	0
  7279  0029D8  2381               	addwfc	(??___ftge+1)& (0+255),f,b
  7280  0029DA  2382               	addwfc	(??___ftge+2)& (0+255),f,b
  7281  0029DC  0E00               	movlw	0
  7282  0029DE  0100               	movlb	0	; () banked
  7283  0029E0  2580               	addwf	??___ftge& (0+255),w,b
  7284  0029E2  0100               	movlb	0	; () banked
  7285  0029E4  6F7D               	movwf	___ftge@ff2& (0+255),b
  7286  0029E6  0E00               	movlw	0
  7287  0029E8  0100               	movlb	0	; () banked
  7288  0029EA  2181               	addwfc	(??___ftge+1)& (0+255),w,b
  7289  0029EC  0100               	movlb	0	; () banked
  7290  0029EE  6F7E               	movwf	(___ftge@ff2+1)& (0+255),b
  7291  0029F0  0E80               	movlw	128
  7292  0029F2  0100               	movlb	0	; () banked
  7293  0029F4  2182               	addwfc	(??___ftge+2)& (0+255),w,b
  7294  0029F6  0100               	movlb	0	; () banked
  7295  0029F8  6F7F               	movwf	(___ftge@ff2+2)& (0+255),b
  7296  0029FA  D000               	goto	l3728
  7297  0029FC                     l3728:
  7298                           
  7299                           ; BSR set to: 0
  7300  0029FC  0E00               	movlw	0
  7301  0029FE  0100               	movlb	0	; () banked
  7302  002A00  1B7A               	xorwf	___ftge@ff1& (0+255),f,b
  7303  002A02  0E00               	movlw	0
  7304  002A04  0100               	movlb	0	; () banked
  7305  002A06  1B7B               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  7306  002A08  0E80               	movlw	128
  7307  002A0A  0100               	movlb	0	; () banked
  7308  002A0C  1B7C               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  7309                           
  7310                           ; BSR set to: 0
  7311  002A0E  0E00               	movlw	0
  7312  002A10  0100               	movlb	0	; () banked
  7313  002A12  1B7D               	xorwf	___ftge@ff2& (0+255),f,b
  7314  002A14  0E00               	movlw	0
  7315  002A16  0100               	movlb	0	; () banked
  7316  002A18  1B7E               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  7317  002A1A  0E80               	movlw	128
  7318  002A1C  0100               	movlb	0	; () banked
  7319  002A1E  1B7F               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  7320  002A20  0100               	movlb	0	; () banked
  7321  002A22  517D               	movf	___ftge@ff2& (0+255),w,b
  7322  002A24  0100               	movlb	0	; () banked
  7323  002A26  5D7A               	subwf	___ftge@ff1& (0+255),w,b
  7324  002A28  0100               	movlb	0	; () banked
  7325  002A2A  517E               	movf	(___ftge@ff2+1)& (0+255),w,b
  7326  002A2C  0100               	movlb	0	; () banked
  7327  002A2E  597B               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  7328  002A30  0100               	movlb	0	; () banked
  7329  002A32  517F               	movf	(___ftge@ff2+2)& (0+255),w,b
  7330  002A34  0100               	movlb	0	; () banked
  7331  002A36  597C               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  7332  002A38  B0D8               	btfsc	status,0,c
  7333  002A3A  D002               	goto	l3734
  7334                           
  7335                           ; BSR set to: 0
  7336  002A3C  90D8               	bcf	status,0,c
  7337  002A3E  D002               	goto	l928
  7338  002A40                     l3734:
  7339                           
  7340                           ; BSR set to: 0
  7341  002A40  80D8               	bsf	status,0,c
  7342                           
  7343                           ; BSR set to: 0
  7344  002A42  D000               	goto	l928
  7345  002A44                     l928:
  7346                           
  7347                           ; BSR set to: 0
  7348  002A44  0012               	return		;funcret
  7349  002A46                     __end_of___ftge:
  7350                           	opt stack 0
  7351                           tblptru	equ	0xFF8
  7352                           tblptrh	equ	0xFF7
  7353                           tblptrl	equ	0xFF6
  7354                           tablat	equ	0xFF5
  7355                           intcon	equ	0xFF2
  7356                           intcon2	equ	0xFF1
  7357                           intcon3	equ	0xFF0
  7358                           postinc0	equ	0xFEE
  7359                           plusw0	equ	0xFEB
  7360                           wreg	equ	0xFE8
  7361                           postinc1	equ	0xFE6
  7362                           postdec1	equ	0xFE5
  7363                           plusw1	equ	0xFE3
  7364                           fsr1h	equ	0xFE2
  7365                           fsr1l	equ	0xFE1
  7366                           postinc2	equ	0xFDE
  7367                           postdec2	equ	0xFDD
  7368                           fsr2h	equ	0xFDA
  7369                           fsr2l	equ	0xFD9
  7370                           status	equ	0xFD8
  7371                           
  7372 ;; *************** function _affichage_position *****************
  7373 ;; Defined at:
  7374 ;;		line 94 in file "triangulation.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;		None
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;  _y              2   85[BANK0 ] int 
  7379 ;;  _x              2   83[BANK0 ] int 
  7380 ;;  i               2   89[BANK0 ] int 
  7381 ;;  j               2   87[BANK0 ] int 
  7382 ;; Return value:  Size  Location     Type
  7383 ;;		None               void
  7384 ;; Registers used:
  7385 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7386 ;; Tracked objects:
  7387 ;;		On entry : 0/0
  7388 ;;		On exit  : 0/0
  7389 ;;		Unchanged: 0/0
  7390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7391 ;;      Params:         0       0       0       0
  7392 ;;      Locals:         0       8       0       0
  7393 ;;      Temps:          0       0       0       0
  7394 ;;      Totals:         0       8       0       0
  7395 ;;Total ram usage:        8 bytes
  7396 ;; Hardware stack levels used:    1
  7397 ;; Hardware stack levels required when called:   10
  7398 ;; This function calls:
  7399 ;;		_PutIntUART
  7400 ;;		_PutsUART
  7401 ;;		___ftdiv
  7402 ;;		___fttol
  7403 ;; This function is called by:
  7404 ;;		_main
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408                           	psect	text33
  7409  00164E                     __ptext33:
  7410                           	opt stack 0
  7411  00164E                     _affichage_position:
  7412                           	opt stack 20
  7413                           
  7414                           ;triangulation.c: 97: int i, j;
  7415                           ;triangulation.c: 98: static int compteur = 0;
  7416                           ;triangulation.c: 100: if (compteur == 2)
  7417                           
  7418                           ; BSR set to: 0
  7419                           ;incstack = 0
  7420  00164E  0E02               	movlw	2
  7421  001650  0100               	movlb	0	; () banked
  7422  001652  19FD               	xorwf	affichage_position@compteur& (0+255),w,b
  7423  001654  0100               	movlb	0	; () banked
  7424  001656  11FE               	iorwf	(affichage_position@compteur+1)& (0+255),w,b
  7425  001658  A4D8               	btfss	status,2,c
  7426  00165A  D157               	goto	l4312
  7427                           
  7428                           ; BSR set to: 0
  7429                           ;triangulation.c: 101: {
  7430                           ;triangulation.c: 102: int _x = (int)(capteur.c.x / 100.);
  7431  00165C  0E00               	movlw	0
  7432  00165E  0100               	movlb	0	; () banked
  7433  001660  6F95               	movwf	___ftdiv@f2& (0+255),b
  7434  001662  0EC8               	movlw	200
  7435  001664  0100               	movlb	0	; () banked
  7436  001666  6F96               	movwf	(___ftdiv@f2+1)& (0+255),b
  7437  001668  0E42               	movlw	66
  7438  00166A  0100               	movlb	0	; () banked
  7439  00166C  6F97               	movwf	(___ftdiv@f2+2)& (0+255),b
  7440  00166E  C17A  F092         	movff	_capteur+19,___ftdiv@f1
  7441  001672  C17B  F093         	movff	_capteur+20,___ftdiv@f1+1
  7442  001676  C17C  F094         	movff	_capteur+21,___ftdiv@f1+2
  7443  00167A  ECA6  F010         	call	___ftdiv	;wreg free
  7444  00167E  C092  F0A1         	movff	?___ftdiv,___fttol@f1
  7445  001682  C093  F0A2         	movff	?___ftdiv+1,___fttol@f1+1
  7446  001686  C094  F0A3         	movff	?___ftdiv+2,___fttol@f1+2
  7447  00168A  EC47  F011         	call	___fttol	;wreg free
  7448  00168E  C0A1  F0B3         	movff	?___fttol,affichage_position@_x
  7449  001692  C0A2  F0B4         	movff	?___fttol+1,affichage_position@_x+1
  7450                           
  7451                           ;triangulation.c: 103: int _y = (int)(capteur.c.y / 100.);
  7452  001696  0E00               	movlw	0
  7453  001698  0100               	movlb	0	; () banked
  7454  00169A  6F95               	movwf	___ftdiv@f2& (0+255),b
  7455  00169C  0EC8               	movlw	200
  7456  00169E  0100               	movlb	0	; () banked
  7457  0016A0  6F96               	movwf	(___ftdiv@f2+1)& (0+255),b
  7458  0016A2  0E42               	movlw	66
  7459  0016A4  0100               	movlb	0	; () banked
  7460  0016A6  6F97               	movwf	(___ftdiv@f2+2)& (0+255),b
  7461  0016A8  C17D  F092         	movff	_capteur+22,___ftdiv@f1
  7462  0016AC  C17E  F093         	movff	_capteur+23,___ftdiv@f1+1
  7463  0016B0  C17F  F094         	movff	_capteur+24,___ftdiv@f1+2
  7464  0016B4  ECA6  F010         	call	___ftdiv	;wreg free
  7465  0016B8  C092  F0A1         	movff	?___ftdiv,___fttol@f1
  7466  0016BC  C093  F0A2         	movff	?___ftdiv+1,___fttol@f1+1
  7467  0016C0  C094  F0A3         	movff	?___ftdiv+2,___fttol@f1+2
  7468  0016C4  EC47  F011         	call	___fttol	;wreg free
  7469  0016C8  C0A1  F0B5         	movff	?___fttol,affichage_position@_y
  7470  0016CC  C0A2  F0B6         	movff	?___fttol+1,affichage_position@_y+1
  7471                           
  7472                           ;triangulation.c: 105: PutsUART(0, "X ");
  7473  0016D0  0E99               	movlw	low STR_6
  7474  0016D2  0100               	movlb	0	; () banked
  7475  0016D4  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7476  0016D6  0E03               	movlw	high STR_6
  7477  0016D8  0100               	movlb	0	; () banked
  7478  0016DA  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7479  0016DC  0E00               	movlw	0
  7480  0016DE  ECE2  F017         	call	_PutsUART
  7481                           
  7482                           ;triangulation.c: 106: for (i = 0; i < 60; i++)
  7483  0016E2  0E00               	movlw	0
  7484  0016E4  0100               	movlb	0	; () banked
  7485  0016E6  6FBA               	movwf	(affichage_position@i+1)& (0+255),b
  7486  0016E8  0E00               	movlw	0
  7487  0016EA  6FB9               	movwf	affichage_position@i& (0+255),b
  7488  0016EC                     l4240:
  7489                           
  7490                           ; BSR set to: 0
  7491  0016EC  0100               	movlb	0	; () banked
  7492  0016EE  BFBA               	btfsc	(affichage_position@i+1)& (0+255),7,b
  7493  0016F0  D00A               	goto	l4244
  7494  0016F2  0100               	movlb	0	; () banked
  7495  0016F4  51BA               	movf	(affichage_position@i+1)& (0+255),w,b
  7496  0016F6  E115               	bnz	l4250
  7497  0016F8  0E3C               	movlw	60
  7498  0016FA  0100               	movlb	0	; () banked
  7499  0016FC  5DB9               	subwf	affichage_position@i& (0+255),w,b
  7500  0016FE  B0D8               	btfsc	status,0,c
  7501  001700  D010               	goto	l4250
  7502  001702  D001               	goto	l4244
  7503                           
  7504                           ; BSR set to: 0
  7505  001704  D00E               	goto	l4250
  7506  001706                     l4244:
  7507                           
  7508                           ; BSR set to: 0
  7509                           ;triangulation.c: 107: PutsUART(0, "~");
  7510  001706  0EA1               	movlw	low STR_7
  7511  001708  0100               	movlb	0	; () banked
  7512  00170A  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7513  00170C  0E03               	movlw	high STR_7
  7514  00170E  0100               	movlb	0	; () banked
  7515  001710  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7516  001712  0E00               	movlw	0
  7517  001714  ECE2  F017         	call	_PutsUART
  7518  001718  0100               	movlb	0	; () banked
  7519  00171A  4BB9               	infsnz	affichage_position@i& (0+255),f,b
  7520  00171C  2BBA               	incf	(affichage_position@i+1)& (0+255),f,b
  7521  00171E  D7E6               	goto	l4240
  7522                           
  7523                           ; BSR set to: 0
  7524  001720  D000               	goto	l4250
  7525  001722                     l4250:
  7526                           
  7527                           ; BSR set to: 0
  7528                           ;triangulation.c: 108: PutsUART(0, "\n\r");
  7529  001722  0E5C               	movlw	low (STR_3+21)
  7530  001724  0100               	movlb	0	; () banked
  7531  001726  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7532  001728  0E03               	movlw	high (STR_3+21)
  7533  00172A  0100               	movlb	0	; () banked
  7534  00172C  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7535  00172E  0E00               	movlw	0
  7536  001730  ECE2  F017         	call	_PutsUART
  7537                           
  7538                           ;triangulation.c: 110: for (i = 0; i < 20; i++)
  7539  001734  0E00               	movlw	0
  7540  001736  0100               	movlb	0	; () banked
  7541  001738  6FBA               	movwf	(affichage_position@i+1)& (0+255),b
  7542  00173A  0E00               	movlw	0
  7543  00173C  6FB9               	movwf	affichage_position@i& (0+255),b
  7544  00173E                     l4254:
  7545                           
  7546                           ; BSR set to: 0
  7547  00173E  0100               	movlb	0	; () banked
  7548  001740  BFBA               	btfsc	(affichage_position@i+1)& (0+255),7,b
  7549  001742  D00A               	goto	l4258
  7550  001744  0100               	movlb	0	; () banked
  7551  001746  51BA               	movf	(affichage_position@i+1)& (0+255),w,b
  7552  001748  E178               	bnz	l4288
  7553  00174A  0E14               	movlw	20
  7554  00174C  0100               	movlb	0	; () banked
  7555  00174E  5DB9               	subwf	affichage_position@i& (0+255),w,b
  7556  001750  B0D8               	btfsc	status,0,c
  7557  001752  D073               	goto	l4288
  7558  001754  D001               	goto	l4258
  7559                           
  7560                           ; BSR set to: 0
  7561  001756  D071               	goto	l4288
  7562  001758                     l4258:
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;triangulation.c: 111: {
  7566                           ;triangulation.c: 112: PutsUART(0, " |");
  7567  001758  0E9C               	movlw	low STR_9
  7568  00175A  0100               	movlb	0	; () banked
  7569  00175C  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7570  00175E  0E03               	movlw	high STR_9
  7571  001760  0100               	movlb	0	; () banked
  7572  001762  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7573  001764  0E00               	movlw	0
  7574  001766  ECE2  F017         	call	_PutsUART
  7575                           
  7576                           ;triangulation.c: 113: for (j = 0; j < 30; j++)
  7577  00176A  0E00               	movlw	0
  7578  00176C  0100               	movlb	0	; () banked
  7579  00176E  6FB8               	movwf	(affichage_position@j+1)& (0+255),b
  7580  001770  0E00               	movlw	0
  7581  001772  6FB7               	movwf	affichage_position@j& (0+255),b
  7582  001774                     l4262:
  7583                           
  7584                           ; BSR set to: 0
  7585  001774  0100               	movlb	0	; () banked
  7586  001776  BFB8               	btfsc	(affichage_position@j+1)& (0+255),7,b
  7587  001778  D00A               	goto	l4266
  7588  00177A  0100               	movlb	0	; () banked
  7589  00177C  51B8               	movf	(affichage_position@j+1)& (0+255),w,b
  7590  00177E  E136               	bnz	l4278
  7591  001780  0E1E               	movlw	30
  7592  001782  0100               	movlb	0	; () banked
  7593  001784  5DB7               	subwf	affichage_position@j& (0+255),w,b
  7594  001786  B0D8               	btfsc	status,0,c
  7595  001788  D031               	goto	l4278
  7596  00178A  D001               	goto	l4266
  7597                           
  7598                           ; BSR set to: 0
  7599  00178C  D02F               	goto	l4278
  7600  00178E                     l4266:
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;triangulation.c: 114: {
  7604                           ;triangulation.c: 115: if (_x == i && _y == j)
  7605  00178E  0100               	movlb	0	; () banked
  7606  001790  51B9               	movf	affichage_position@i& (0+255),w,b
  7607  001792  0100               	movlb	0	; () banked
  7608  001794  19B3               	xorwf	affichage_position@_x& (0+255),w,b
  7609  001796  E11B               	bnz	l4272
  7610  001798  0100               	movlb	0	; () banked
  7611  00179A  51BA               	movf	(affichage_position@i+1)& (0+255),w,b
  7612  00179C  0100               	movlb	0	; () banked
  7613  00179E  19B4               	xorwf	(affichage_position@_x+1)& (0+255),w,b
  7614  0017A0  A4D8               	btfss	status,2,c
  7615  0017A2  D015               	goto	l4272
  7616                           
  7617                           ; BSR set to: 0
  7618  0017A4  0100               	movlb	0	; () banked
  7619  0017A6  51B7               	movf	affichage_position@j& (0+255),w,b
  7620  0017A8  0100               	movlb	0	; () banked
  7621  0017AA  19B5               	xorwf	affichage_position@_y& (0+255),w,b
  7622  0017AC  E110               	bnz	l4272
  7623  0017AE  0100               	movlb	0	; () banked
  7624  0017B0  51B8               	movf	(affichage_position@j+1)& (0+255),w,b
  7625  0017B2  0100               	movlb	0	; () banked
  7626  0017B4  19B6               	xorwf	(affichage_position@_y+1)& (0+255),w,b
  7627  0017B6  A4D8               	btfss	status,2,c
  7628  0017B8  D00A               	goto	l4272
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;triangulation.c: 116: PutsUART(0, "O ");
  7632  0017BA  0E96               	movlw	low STR_10
  7633  0017BC  0100               	movlb	0	; () banked
  7634  0017BE  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7635  0017C0  0E03               	movlw	high STR_10
  7636  0017C2  0100               	movlb	0	; () banked
  7637  0017C4  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7638  0017C6  0E00               	movlw	0
  7639  0017C8  ECE2  F017         	call	_PutsUART
  7640  0017CC  D00A               	goto	l4274
  7641  0017CE                     l4272:
  7642                           
  7643                           ;triangulation.c: 117: else
  7644                           ;triangulation.c: 118: PutsUART(0, "- ");
  7645  0017CE  0E93               	movlw	low STR_11
  7646  0017D0  0100               	movlb	0	; () banked
  7647  0017D2  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7648  0017D4  0E03               	movlw	high STR_11
  7649  0017D6  0100               	movlb	0	; () banked
  7650  0017D8  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7651  0017DA  0E00               	movlw	0
  7652  0017DC  ECE2  F017         	call	_PutsUART
  7653  0017E0  D000               	goto	l4274
  7654  0017E2                     l4274:
  7655  0017E2  0100               	movlb	0	; () banked
  7656  0017E4  4BB7               	infsnz	affichage_position@j& (0+255),f,b
  7657  0017E6  2BB8               	incf	(affichage_position@j+1)& (0+255),f,b
  7658  0017E8  D7C5               	goto	l4262
  7659                           
  7660                           ; BSR set to: 0
  7661  0017EA  D000               	goto	l4278
  7662  0017EC                     l4278:
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;triangulation.c: 119: }
  7666                           ;triangulation.c: 120: PutsUART(0, "|");
  7667  0017EC  0E9D               	movlw	low (STR_9+1)
  7668  0017EE  0100               	movlb	0	; () banked
  7669  0017F0  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7670  0017F2  0E03               	movlw	high (STR_9+1)
  7671  0017F4  0100               	movlb	0	; () banked
  7672  0017F6  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7673  0017F8  0E00               	movlw	0
  7674  0017FA  ECE2  F017         	call	_PutsUART
  7675                           
  7676                           ;triangulation.c: 121: if (i == 10)
  7677  0017FE  0E0A               	movlw	10
  7678  001800  0100               	movlb	0	; () banked
  7679  001802  19B9               	xorwf	affichage_position@i& (0+255),w,b
  7680  001804  0100               	movlb	0	; () banked
  7681  001806  11BA               	iorwf	(affichage_position@i+1)& (0+255),w,b
  7682  001808  A4D8               	btfss	status,2,c
  7683  00180A  D009               	goto	l533
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;triangulation.c: 122: PutsUART(0, "X");
  7687  00180C  0E9F               	movlw	low STR_13
  7688  00180E  0100               	movlb	0	; () banked
  7689  001810  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7690  001812  0E03               	movlw	high STR_13
  7691  001814  0100               	movlb	0	; () banked
  7692  001816  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7693  001818  0E00               	movlw	0
  7694  00181A  ECE2  F017         	call	_PutsUART
  7695  00181E                     l533:
  7696                           
  7697                           ;triangulation.c: 123: PutsUART(0, "\n\r");
  7698  00181E  0E5C               	movlw	low (STR_3+21)
  7699  001820  0100               	movlb	0	; () banked
  7700  001822  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7701  001824  0E03               	movlw	high (STR_3+21)
  7702  001826  0100               	movlb	0	; () banked
  7703  001828  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7704  00182A  0E00               	movlw	0
  7705  00182C  ECE2  F017         	call	_PutsUART
  7706  001830  0100               	movlb	0	; () banked
  7707  001832  4BB9               	infsnz	affichage_position@i& (0+255),f,b
  7708  001834  2BBA               	incf	(affichage_position@i+1)& (0+255),f,b
  7709  001836  D783               	goto	l4254
  7710                           
  7711                           ; BSR set to: 0
  7712  001838  D000               	goto	l4288
  7713  00183A                     l4288:
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;triangulation.c: 124: }
  7717                           ;triangulation.c: 126: PutsUART(0, "X ");
  7718  00183A  0E99               	movlw	low STR_6
  7719  00183C  0100               	movlb	0	; () banked
  7720  00183E  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7721  001840  0E03               	movlw	high STR_6
  7722  001842  0100               	movlb	0	; () banked
  7723  001844  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7724  001846  0E00               	movlw	0
  7725  001848  ECE2  F017         	call	_PutsUART
  7726                           
  7727                           ;triangulation.c: 127: for (i = 0; i < 60; i++)
  7728  00184C  0E00               	movlw	0
  7729  00184E  0100               	movlb	0	; () banked
  7730  001850  6FBA               	movwf	(affichage_position@i+1)& (0+255),b
  7731  001852  0E00               	movlw	0
  7732  001854  6FB9               	movwf	affichage_position@i& (0+255),b
  7733  001856                     l4292:
  7734                           
  7735                           ; BSR set to: 0
  7736  001856  0100               	movlb	0	; () banked
  7737  001858  BFBA               	btfsc	(affichage_position@i+1)& (0+255),7,b
  7738  00185A  D00A               	goto	l4296
  7739  00185C  0100               	movlb	0	; () banked
  7740  00185E  51BA               	movf	(affichage_position@i+1)& (0+255),w,b
  7741  001860  E115               	bnz	l4302
  7742  001862  0E3C               	movlw	60
  7743  001864  0100               	movlb	0	; () banked
  7744  001866  5DB9               	subwf	affichage_position@i& (0+255),w,b
  7745  001868  B0D8               	btfsc	status,0,c
  7746  00186A  D010               	goto	l4302
  7747  00186C  D001               	goto	l4296
  7748                           
  7749                           ; BSR set to: 0
  7750  00186E  D00E               	goto	l4302
  7751  001870                     l4296:
  7752                           
  7753                           ; BSR set to: 0
  7754                           ;triangulation.c: 128: PutsUART(0, "~");
  7755  001870  0EA1               	movlw	low STR_7
  7756  001872  0100               	movlb	0	; () banked
  7757  001874  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7758  001876  0E03               	movlw	high STR_7
  7759  001878  0100               	movlb	0	; () banked
  7760  00187A  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7761  00187C  0E00               	movlw	0
  7762  00187E  ECE2  F017         	call	_PutsUART
  7763  001882  0100               	movlb	0	; () banked
  7764  001884  4BB9               	infsnz	affichage_position@i& (0+255),f,b
  7765  001886  2BBA               	incf	(affichage_position@i+1)& (0+255),f,b
  7766  001888  D7E6               	goto	l4292
  7767                           
  7768                           ; BSR set to: 0
  7769  00188A  D000               	goto	l4302
  7770  00188C                     l4302:
  7771                           
  7772                           ; BSR set to: 0
  7773                           ;triangulation.c: 129: PutsUART(0, "\n\r");
  7774  00188C  0E5C               	movlw	low (STR_3+21)
  7775  00188E  0100               	movlb	0	; () banked
  7776  001890  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7777  001892  0E03               	movlw	high (STR_3+21)
  7778  001894  0100               	movlb	0	; () banked
  7779  001896  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7780  001898  0E00               	movlw	0
  7781  00189A  ECE2  F017         	call	_PutsUART
  7782                           
  7783                           ;triangulation.c: 132: PutIntUART(0, (int16_t) capteur.c.x);
  7784  00189E  C17A  F0A1         	movff	_capteur+19,___fttol@f1
  7785  0018A2  C17B  F0A2         	movff	_capteur+20,___fttol@f1+1
  7786  0018A6  C17C  F0A3         	movff	_capteur+21,___fttol@f1+2
  7787  0018AA  EC47  F011         	call	___fttol	;wreg free
  7788  0018AE  C0A1  F0B0         	movff	?___fttol,PutIntUART@nb
  7789  0018B2  C0A2  F0B1         	movff	?___fttol+1,PutIntUART@nb+1
  7790  0018B6  0E00               	movlw	0
  7791  0018B8  ECB5  F01A         	call	_PutIntUART
  7792                           
  7793                           ;triangulation.c: 133: PutsUART(0, "\n\r");
  7794  0018BC  0E5C               	movlw	low (STR_3+21)
  7795  0018BE  0100               	movlb	0	; () banked
  7796  0018C0  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7797  0018C2  0E03               	movlw	high (STR_3+21)
  7798  0018C4  0100               	movlb	0	; () banked
  7799  0018C6  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7800  0018C8  0E00               	movlw	0
  7801  0018CA  ECE2  F017         	call	_PutsUART
  7802                           
  7803                           ;triangulation.c: 134: PutIntUART(0, (int16_t) capteur.c.y);
  7804  0018CE  C17D  F0A1         	movff	_capteur+22,___fttol@f1
  7805  0018D2  C17E  F0A2         	movff	_capteur+23,___fttol@f1+1
  7806  0018D6  C17F  F0A3         	movff	_capteur+24,___fttol@f1+2
  7807  0018DA  EC47  F011         	call	___fttol	;wreg free
  7808  0018DE  C0A1  F0B0         	movff	?___fttol,PutIntUART@nb
  7809  0018E2  C0A2  F0B1         	movff	?___fttol+1,PutIntUART@nb+1
  7810  0018E6  0E00               	movlw	0
  7811  0018E8  ECB5  F01A         	call	_PutIntUART
  7812                           
  7813                           ;triangulation.c: 135: PutsUART(0, "\n\r");
  7814  0018EC  0E5C               	movlw	low (STR_3+21)
  7815  0018EE  0100               	movlb	0	; () banked
  7816  0018F0  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7817  0018F2  0E03               	movlw	high (STR_3+21)
  7818  0018F4  0100               	movlb	0	; () banked
  7819  0018F6  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7820  0018F8  0E00               	movlw	0
  7821  0018FA  ECE2  F017         	call	_PutsUART
  7822                           
  7823                           ;triangulation.c: 137: compteur = 0;
  7824  0018FE  0E00               	movlw	0
  7825  001900  0100               	movlb	0	; () banked
  7826  001902  6FFE               	movwf	(affichage_position@compteur+1)& (0+255),b
  7827  001904  0E00               	movlw	0
  7828  001906  6FFD               	movwf	affichage_position@compteur& (0+255),b
  7829  001908  D000               	goto	l4312
  7830  00190A                     l4312:
  7831                           
  7832                           ; BSR set to: 0
  7833                           ;triangulation.c: 138: }
  7834                           ;triangulation.c: 140: compteur++;
  7835  00190A  0100               	movlb	0	; () banked
  7836  00190C  4BFD               	infsnz	affichage_position@compteur& (0+255),f,b
  7837  00190E  2BFE               	incf	(affichage_position@compteur+1)& (0+255),f,b
  7838                           
  7839                           ; BSR set to: 0
  7840  001910  0012               	return		;funcret
  7841  001912                     __end_of_affichage_position:
  7842                           	opt stack 0
  7843                           tblptru	equ	0xFF8
  7844                           tblptrh	equ	0xFF7
  7845                           tblptrl	equ	0xFF6
  7846                           tablat	equ	0xFF5
  7847                           intcon	equ	0xFF2
  7848                           intcon2	equ	0xFF1
  7849                           intcon3	equ	0xFF0
  7850                           postinc0	equ	0xFEE
  7851                           plusw0	equ	0xFEB
  7852                           wreg	equ	0xFE8
  7853                           postinc1	equ	0xFE6
  7854                           postdec1	equ	0xFE5
  7855                           plusw1	equ	0xFE3
  7856                           fsr1h	equ	0xFE2
  7857                           fsr1l	equ	0xFE1
  7858                           postinc2	equ	0xFDE
  7859                           postdec2	equ	0xFDD
  7860                           fsr2h	equ	0xFDA
  7861                           fsr2l	equ	0xFD9
  7862                           status	equ	0xFD8
  7863                           
  7864 ;; *************** function ___fttol *****************
  7865 ;; Defined at:
  7866 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  7867 ;; Parameters:    Size  Location     Type
  7868 ;;  f1              3   65[BANK0 ] float 
  7869 ;; Auto vars:     Size  Location     Type
  7870 ;;  lval            4   75[BANK0 ] unsigned long 
  7871 ;;  exp1            1   79[BANK0 ] unsigned char 
  7872 ;;  sign1           1   74[BANK0 ] unsigned char 
  7873 ;; Return value:  Size  Location     Type
  7874 ;;                  4   65[BANK0 ] long 
  7875 ;; Registers used:
  7876 ;;		wreg, status,2, status,0
  7877 ;; Tracked objects:
  7878 ;;		On entry : 0/0
  7879 ;;		On exit  : 0/0
  7880 ;;		Unchanged: 0/0
  7881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7882 ;;      Params:         0       4       0       0
  7883 ;;      Locals:         0       6       0       0
  7884 ;;      Temps:          0       5       0       0
  7885 ;;      Totals:         0      15       0       0
  7886 ;;Total ram usage:       15 bytes
  7887 ;; Hardware stack levels used:    1
  7888 ;; Hardware stack levels required when called:    6
  7889 ;; This function calls:
  7890 ;;		Nothing
  7891 ;; This function is called by:
  7892 ;;		_envoit_pwm
  7893 ;;		_affichage_position
  7894 ;;		_floor
  7895 ;; This function uses a non-reentrant model
  7896 ;;
  7897                           
  7898                           	psect	text34
  7899  00228E                     __ptext34:
  7900                           	opt stack 0
  7901  00228E                     ___fttol:
  7902                           	opt stack 19
  7903                           
  7904                           ; BSR set to: 0
  7905                           ;incstack = 0
  7906  00228E  C0A3  F0A5         	movff	___fttol@f1+2,??___fttol
  7907  002292  0100               	movlb	0	; () banked
  7908  002294  6BA6               	clrf	(??___fttol+1)& (0+255),b
  7909  002296  6BA7               	clrf	(??___fttol+2)& (0+255),b
  7910  002298  0100               	movlb	0	; () banked
  7911  00229A  35A2               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7912  00229C  0100               	movlb	0	; () banked
  7913  00229E  37A5               	rlcf	??___fttol& (0+255),f,b
  7914  0022A0  E301               	bnc	u1971
  7915  0022A2  81A6               	bsf	(??___fttol+1)& (0+255),0,b
  7916  0022A4                     u1971:
  7917  0022A4  0100               	movlb	0	; () banked
  7918  0022A6  51A5               	movf	??___fttol& (0+255),w,b
  7919  0022A8  0100               	movlb	0	; () banked
  7920  0022AA  6FAF               	movwf	___fttol@exp1& (0+255),b
  7921  0022AC  0100               	movlb	0	; () banked
  7922  0022AE  51AF               	movf	___fttol@exp1& (0+255),w,b
  7923  0022B0  A4D8               	btfss	status,2,c
  7924  0022B2  D002               	goto	l2592
  7925  0022B4  D051               	goto	l2616
  7926                           
  7927                           ; BSR set to: 0
  7928                           
  7929                           ; BSR set to: 0
  7930  0022B6  D083               	goto	l955
  7931  0022B8                     l2592:
  7932                           
  7933                           ; BSR set to: 0
  7934  0022B8  0E17               	movlw	23
  7935  0022BA  0100               	movlb	0	; () banked
  7936  0022BC  6FA5               	movwf	??___fttol& (0+255),b
  7937  0022BE  C0A1  F0A6         	movff	___fttol@f1,??___fttol+1
  7938  0022C2  C0A2  F0A7         	movff	___fttol@f1+1,??___fttol+2
  7939  0022C6  C0A3  F0A8         	movff	___fttol@f1+2,??___fttol+3
  7940  0022CA  0100               	movlb	0	; () banked
  7941  0022CC  29A5               	incf	??___fttol& (0+255),w,b
  7942  0022CE  0100               	movlb	0	; () banked
  7943  0022D0  6FA9               	movwf	(??___fttol+4)& (0+255),b
  7944  0022D2  D005               	goto	u1990
  7945  0022D4                     u1995:
  7946  0022D4  0100               	movlb	0	; () banked
  7947  0022D6  90D8               	bcf	status,0,c
  7948  0022D8  33A8               	rrcf	(??___fttol+3)& (0+255),f,b
  7949  0022DA  33A7               	rrcf	(??___fttol+2)& (0+255),f,b
  7950  0022DC  33A6               	rrcf	(??___fttol+1)& (0+255),f,b
  7951  0022DE                     u1990:
  7952  0022DE  0100               	movlb	0	; () banked
  7953  0022E0  2FA9               	decfsz	(??___fttol+4)& (0+255),f,b
  7954  0022E2  D7F8               	goto	u1995
  7955  0022E4  0100               	movlb	0	; () banked
  7956  0022E6  51A6               	movf	(??___fttol+1)& (0+255),w,b
  7957  0022E8  0100               	movlb	0	; () banked
  7958  0022EA  6FAA               	movwf	___fttol@sign1& (0+255),b
  7959                           
  7960                           ; BSR set to: 0
  7961  0022EC  0100               	movlb	0	; () banked
  7962  0022EE  8FA2               	bsf	(___fttol@f1+1)& (0+255),7,b
  7963                           
  7964                           ; BSR set to: 0
  7965  0022F0  0EFF               	movlw	255
  7966  0022F2  0100               	movlb	0	; () banked
  7967  0022F4  17A1               	andwf	___fttol@f1& (0+255),f,b
  7968  0022F6  0EFF               	movlw	255
  7969  0022F8  0100               	movlb	0	; () banked
  7970  0022FA  17A2               	andwf	(___fttol@f1+1)& (0+255),f,b
  7971  0022FC  0E00               	movlw	0
  7972  0022FE  0100               	movlb	0	; () banked
  7973  002300  17A3               	andwf	(___fttol@f1+2)& (0+255),f,b
  7974                           
  7975                           ; BSR set to: 0
  7976  002302  0100               	movlb	0	; () banked
  7977  002304  51A1               	movf	___fttol@f1& (0+255),w,b
  7978  002306  0100               	movlb	0	; () banked
  7979  002308  6FAB               	movwf	___fttol@lval& (0+255),b
  7980  00230A  0100               	movlb	0	; () banked
  7981  00230C  51A2               	movf	(___fttol@f1+1)& (0+255),w,b
  7982  00230E  0100               	movlb	0	; () banked
  7983  002310  6FAC               	movwf	(___fttol@lval+1)& (0+255),b
  7984  002312  0100               	movlb	0	; () banked
  7985  002314  51A3               	movf	(___fttol@f1+2)& (0+255),w,b
  7986  002316  0100               	movlb	0	; () banked
  7987  002318  6FAD               	movwf	(___fttol@lval+2)& (0+255),b
  7988  00231A  0100               	movlb	0	; () banked
  7989  00231C  6BAE               	clrf	(___fttol@lval+3)& (0+255),b
  7990                           
  7991                           ; BSR set to: 0
  7992  00231E  0E8E               	movlw	142
  7993  002320  0100               	movlb	0	; () banked
  7994  002322  5FAF               	subwf	___fttol@exp1& (0+255),f,b
  7995                           
  7996                           ; BSR set to: 0
  7997  002324  0100               	movlb	0	; () banked
  7998  002326  AFAF               	btfss	___fttol@exp1& (0+255),7,b
  7999  002328  D013               	goto	l2614
  8000                           
  8001                           ; BSR set to: 0
  8002  00232A  0100               	movlb	0	; () banked
  8003  00232C  51AF               	movf	___fttol@exp1& (0+255),w,b
  8004  00232E  0A80               	xorlw	128
  8005  002330  0F8F               	addlw	143
  8006  002332  B0D8               	btfsc	status,0,c
  8007  002334  D003               	goto	l2610
  8008  002336  D010               	goto	l2616
  8009                           
  8010                           ; BSR set to: 0
  8011                           
  8012                           ; BSR set to: 0
  8013  002338  D042               	goto	l955
  8014                           
  8015                           ; BSR set to: 0
  8016  00233A  D000               	goto	l2610
  8017  00233C                     l2610:
  8018                           
  8019                           ; BSR set to: 0
  8020  00233C  0100               	movlb	0	; () banked
  8021  00233E  90D8               	bcf	status,0,c
  8022  002340  33AE               	rrcf	(___fttol@lval+3)& (0+255),f,b
  8023  002342  33AD               	rrcf	(___fttol@lval+2)& (0+255),f,b
  8024  002344  33AC               	rrcf	(___fttol@lval+1)& (0+255),f,b
  8025  002346  33AB               	rrcf	___fttol@lval& (0+255),f,b
  8026                           
  8027                           ; BSR set to: 0
  8028  002348  0100               	movlb	0	; () banked
  8029  00234A  3FAF               	incfsz	___fttol@exp1& (0+255),f,b
  8030  00234C  D7F7               	goto	l2610
  8031                           
  8032                           ; BSR set to: 0
  8033  00234E  D01F               	goto	l2624
  8034  002350                     l2614:
  8035                           
  8036                           ; BSR set to: 0
  8037  002350  0E17               	movlw	23
  8038  002352  0100               	movlb	0	; () banked
  8039  002354  65AF               	cpfsgt	___fttol@exp1& (0+255),b
  8040  002356  D014               	goto	l2622
  8041  002358                     l2616:
  8042                           
  8043                           ; BSR set to: 0
  8044  002358  0E00               	movlw	0
  8045  00235A  0100               	movlb	0	; () banked
  8046  00235C  6FA1               	movwf	?___fttol& (0+255),b
  8047  00235E  0E00               	movlw	0
  8048  002360  6FA2               	movwf	(?___fttol+1)& (0+255),b
  8049  002362  0E00               	movlw	0
  8050  002364  6FA3               	movwf	(?___fttol+2)& (0+255),b
  8051  002366  0E00               	movlw	0
  8052  002368  6FA4               	movwf	(?___fttol+3)& (0+255),b
  8053                           
  8054                           ; BSR set to: 0
  8055  00236A  D029               	goto	l955
  8056                           
  8057                           ; BSR set to: 0
  8058  00236C  D009               	goto	l2622
  8059  00236E                     l2620:
  8060                           
  8061                           ; BSR set to: 0
  8062  00236E  0100               	movlb	0	; () banked
  8063  002370  90D8               	bcf	status,0,c
  8064  002372  37AB               	rlcf	___fttol@lval& (0+255),f,b
  8065  002374  37AC               	rlcf	(___fttol@lval+1)& (0+255),f,b
  8066  002376  37AD               	rlcf	(___fttol@lval+2)& (0+255),f,b
  8067  002378  37AE               	rlcf	(___fttol@lval+3)& (0+255),f,b
  8068  00237A  0100               	movlb	0	; () banked
  8069  00237C  07AF               	decf	___fttol@exp1& (0+255),f,b
  8070  00237E  D000               	goto	l2622
  8071  002380                     l2622:
  8072                           
  8073                           ; BSR set to: 0
  8074  002380  0100               	movlb	0	; () banked
  8075  002382  51AF               	movf	___fttol@exp1& (0+255),w,b
  8076  002384  0100               	movlb	0	; () banked
  8077  002386  B4D8               	btfsc	status,2,c
  8078  002388  D002               	goto	l2624
  8079  00238A  D7F1               	goto	l2620
  8080                           
  8081                           ; BSR set to: 0
  8082  00238C  D000               	goto	l2624
  8083  00238E                     l2624:
  8084                           
  8085                           ; BSR set to: 0
  8086  00238E  0100               	movlb	0	; () banked
  8087  002390  51AA               	movf	___fttol@sign1& (0+255),w,b
  8088  002392  0100               	movlb	0	; () banked
  8089  002394  B4D8               	btfsc	status,2,c
  8090  002396  D00A               	goto	l2628
  8091                           
  8092                           ; BSR set to: 0
  8093  002398  0100               	movlb	0	; () banked
  8094  00239A  1FAE               	comf	(___fttol@lval+3)& (0+255),f,b
  8095  00239C  1FAD               	comf	(___fttol@lval+2)& (0+255),f,b
  8096  00239E  1FAC               	comf	(___fttol@lval+1)& (0+255),f,b
  8097  0023A0  6DAB               	negf	___fttol@lval& (0+255),b
  8098  0023A2  0E00               	movlw	0
  8099  0023A4  23AC               	addwfc	(___fttol@lval+1)& (0+255),f,b
  8100  0023A6  23AD               	addwfc	(___fttol@lval+2)& (0+255),f,b
  8101  0023A8  23AE               	addwfc	(___fttol@lval+3)& (0+255),f,b
  8102  0023AA  D000               	goto	l2628
  8103  0023AC                     l2628:
  8104                           
  8105                           ; BSR set to: 0
  8106  0023AC  C0AB  F0A1         	movff	___fttol@lval,?___fttol
  8107  0023B0  C0AC  F0A2         	movff	___fttol@lval+1,?___fttol+1
  8108  0023B4  C0AD  F0A3         	movff	___fttol@lval+2,?___fttol+2
  8109  0023B8  C0AE  F0A4         	movff	___fttol@lval+3,?___fttol+3
  8110  0023BC  D000               	goto	l955
  8111  0023BE                     l955:
  8112                           
  8113                           ; BSR set to: 0
  8114  0023BE  0012               	return		;funcret
  8115  0023C0                     __end_of___fttol:
  8116                           	opt stack 0
  8117                           tblptru	equ	0xFF8
  8118                           tblptrh	equ	0xFF7
  8119                           tblptrl	equ	0xFF6
  8120                           tablat	equ	0xFF5
  8121                           intcon	equ	0xFF2
  8122                           intcon2	equ	0xFF1
  8123                           intcon3	equ	0xFF0
  8124                           postinc0	equ	0xFEE
  8125                           plusw0	equ	0xFEB
  8126                           wreg	equ	0xFE8
  8127                           postinc1	equ	0xFE6
  8128                           postdec1	equ	0xFE5
  8129                           plusw1	equ	0xFE3
  8130                           fsr1h	equ	0xFE2
  8131                           fsr1l	equ	0xFE1
  8132                           postinc2	equ	0xFDE
  8133                           postdec2	equ	0xFDD
  8134                           fsr2h	equ	0xFDA
  8135                           fsr2l	equ	0xFD9
  8136                           status	equ	0xFD8
  8137                           
  8138 ;; *************** function ___ftdiv *****************
  8139 ;; Defined at:
  8140 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  8141 ;; Parameters:    Size  Location     Type
  8142 ;;  f1              3   50[BANK0 ] float 
  8143 ;;  f2              3   53[BANK0 ] float 
  8144 ;; Auto vars:     Size  Location     Type
  8145 ;;  f3              3   60[BANK0 ] float 
  8146 ;;  sign            1   64[BANK0 ] unsigned char 
  8147 ;;  exp             1   63[BANK0 ] unsigned char 
  8148 ;;  cntr            1   59[BANK0 ] unsigned char 
  8149 ;; Return value:  Size  Location     Type
  8150 ;;                  3   50[BANK0 ] float 
  8151 ;; Registers used:
  8152 ;;		wreg, status,2, status,0, cstack
  8153 ;; Tracked objects:
  8154 ;;		On entry : 0/0
  8155 ;;		On exit  : 0/0
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8158 ;;      Params:         0       6       0       0
  8159 ;;      Locals:         0       6       0       0
  8160 ;;      Temps:          0       3       0       0
  8161 ;;      Totals:         0      15       0       0
  8162 ;;Total ram usage:       15 bytes
  8163 ;; Hardware stack levels used:    1
  8164 ;; Hardware stack levels required when called:    7
  8165 ;; This function calls:
  8166 ;;		___ftpack
  8167 ;; This function is called by:
  8168 ;;		_obtention_angle
  8169 ;;		_triangulation
  8170 ;;		_cotangeante
  8171 ;;		_conversion_degre_radian
  8172 ;;		_affichage_position
  8173 ;;		_tan
  8174 ;;		_sin
  8175 ;; This function uses a non-reentrant model
  8176 ;;
  8177                           
  8178                           	psect	text35
  8179  00214C                     __ptext35:
  8180                           	opt stack 0
  8181  00214C                     ___ftdiv:
  8182                           	opt stack 19
  8183                           
  8184                           ; BSR set to: 0
  8185                           ;incstack = 0
  8186  00214C  C094  F098         	movff	___ftdiv@f1+2,??___ftdiv
  8187  002150  0100               	movlb	0	; () banked
  8188  002152  6B99               	clrf	(??___ftdiv+1)& (0+255),b
  8189  002154  6B9A               	clrf	(??___ftdiv+2)& (0+255),b
  8190  002156  0100               	movlb	0	; () banked
  8191  002158  3593               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  8192  00215A  0100               	movlb	0	; () banked
  8193  00215C  3798               	rlcf	??___ftdiv& (0+255),f,b
  8194  00215E  E301               	bnc	u3531
  8195  002160  8199               	bsf	(??___ftdiv+1)& (0+255),0,b
  8196  002162                     u3531:
  8197  002162  0100               	movlb	0	; () banked
  8198  002164  5198               	movf	??___ftdiv& (0+255),w,b
  8199  002166  0100               	movlb	0	; () banked
  8200  002168  6F9F               	movwf	___ftdiv@exp& (0+255),b
  8201  00216A  0100               	movlb	0	; () banked
  8202  00216C  519F               	movf	___ftdiv@exp& (0+255),w,b
  8203  00216E  A4D8               	btfss	status,2,c
  8204  002170  D002               	goto	l3760
  8205  002172  D014               	goto	l3762
  8206                           
  8207                           ; BSR set to: 0
  8208                           
  8209                           ; BSR set to: 0
  8210  002174  D08B               	goto	l919
  8211  002176                     l3760:
  8212                           
  8213                           ; BSR set to: 0
  8214  002176  C097  F098         	movff	___ftdiv@f2+2,??___ftdiv
  8215  00217A  0100               	movlb	0	; () banked
  8216  00217C  6B99               	clrf	(??___ftdiv+1)& (0+255),b
  8217  00217E  6B9A               	clrf	(??___ftdiv+2)& (0+255),b
  8218  002180  0100               	movlb	0	; () banked
  8219  002182  3596               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  8220  002184  0100               	movlb	0	; () banked
  8221  002186  3798               	rlcf	??___ftdiv& (0+255),f,b
  8222  002188  E301               	bnc	u3551
  8223  00218A  8199               	bsf	(??___ftdiv+1)& (0+255),0,b
  8224  00218C                     u3551:
  8225  00218C  0100               	movlb	0	; () banked
  8226  00218E  5198               	movf	??___ftdiv& (0+255),w,b
  8227  002190  0100               	movlb	0	; () banked
  8228  002192  6FA0               	movwf	___ftdiv@sign& (0+255),b
  8229  002194  0100               	movlb	0	; () banked
  8230  002196  51A0               	movf	___ftdiv@sign& (0+255),w,b
  8231  002198  A4D8               	btfss	status,2,c
  8232  00219A  D00A               	goto	l3766
  8233  00219C                     l3762:
  8234                           
  8235                           ; BSR set to: 0
  8236  00219C  0E00               	movlw	0
  8237  00219E  0100               	movlb	0	; () banked
  8238  0021A0  6F92               	movwf	?___ftdiv& (0+255),b
  8239  0021A2  0E00               	movlw	0
  8240  0021A4  0100               	movlb	0	; () banked
  8241  0021A6  6F93               	movwf	(?___ftdiv+1)& (0+255),b
  8242  0021A8  0E00               	movlw	0
  8243  0021AA  0100               	movlb	0	; () banked
  8244  0021AC  6F94               	movwf	(?___ftdiv+2)& (0+255),b
  8245                           
  8246                           ; BSR set to: 0
  8247  0021AE  D06E               	goto	l919
  8248  0021B0                     l3766:
  8249                           
  8250                           ; BSR set to: 0
  8251  0021B0  0E00               	movlw	0
  8252  0021B2  0100               	movlb	0	; () banked
  8253  0021B4  6F9C               	movwf	___ftdiv@f3& (0+255),b
  8254  0021B6  0E00               	movlw	0
  8255  0021B8  0100               	movlb	0	; () banked
  8256  0021BA  6F9D               	movwf	(___ftdiv@f3+1)& (0+255),b
  8257  0021BC  0E00               	movlw	0
  8258  0021BE  0100               	movlb	0	; () banked
  8259  0021C0  6F9E               	movwf	(___ftdiv@f3+2)& (0+255),b
  8260                           
  8261                           ; BSR set to: 0
  8262  0021C2  0100               	movlb	0	; () banked
  8263  0021C4  51A0               	movf	___ftdiv@sign& (0+255),w,b
  8264  0021C6  0F89               	addlw	137
  8265  0021C8  0100               	movlb	0	; () banked
  8266  0021CA  5F9F               	subwf	___ftdiv@exp& (0+255),f,b
  8267                           
  8268                           ; BSR set to: 0
  8269  0021CC  C094  F0A0         	movff	___ftdiv@f1+2,___ftdiv@sign
  8270                           
  8271                           ; BSR set to: 0
  8272  0021D0  0100               	movlb	0	; () banked
  8273  0021D2  5197               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8274  0021D4  0100               	movlb	0	; () banked
  8275  0021D6  1BA0               	xorwf	___ftdiv@sign& (0+255),f,b
  8276                           
  8277                           ; BSR set to: 0
  8278  0021D8  0E80               	movlw	128
  8279  0021DA  0100               	movlb	0	; () banked
  8280  0021DC  17A0               	andwf	___ftdiv@sign& (0+255),f,b
  8281                           
  8282                           ; BSR set to: 0
  8283  0021DE  0100               	movlb	0	; () banked
  8284  0021E0  8F93               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  8285                           
  8286                           ; BSR set to: 0
  8287  0021E2  0EFF               	movlw	255
  8288  0021E4  0100               	movlb	0	; () banked
  8289  0021E6  1792               	andwf	___ftdiv@f1& (0+255),f,b
  8290  0021E8  0EFF               	movlw	255
  8291  0021EA  0100               	movlb	0	; () banked
  8292  0021EC  1793               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  8293  0021EE  0E00               	movlw	0
  8294  0021F0  0100               	movlb	0	; () banked
  8295  0021F2  1794               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  8296                           
  8297                           ; BSR set to: 0
  8298  0021F4  0100               	movlb	0	; () banked
  8299  0021F6  8F96               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  8300                           
  8301                           ; BSR set to: 0
  8302  0021F8  0EFF               	movlw	255
  8303  0021FA  0100               	movlb	0	; () banked
  8304  0021FC  1795               	andwf	___ftdiv@f2& (0+255),f,b
  8305  0021FE  0EFF               	movlw	255
  8306  002200  0100               	movlb	0	; () banked
  8307  002202  1796               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  8308  002204  0E00               	movlw	0
  8309  002206  0100               	movlb	0	; () banked
  8310  002208  1797               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  8311                           
  8312                           ; BSR set to: 0
  8313  00220A  0E18               	movlw	24
  8314  00220C  0100               	movlb	0	; () banked
  8315  00220E  6F9B               	movwf	___ftdiv@cntr& (0+255),b
  8316  002210  D000               	goto	l3786
  8317  002212                     l3786:
  8318                           
  8319                           ; BSR set to: 0
  8320  002212  0100               	movlb	0	; () banked
  8321  002214  90D8               	bcf	status,0,c
  8322  002216  379C               	rlcf	___ftdiv@f3& (0+255),f,b
  8323  002218  379D               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  8324  00221A  379E               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  8325                           
  8326                           ; BSR set to: 0
  8327  00221C  0100               	movlb	0	; () banked
  8328  00221E  5195               	movf	___ftdiv@f2& (0+255),w,b
  8329  002220  0100               	movlb	0	; () banked
  8330  002222  5D92               	subwf	___ftdiv@f1& (0+255),w,b
  8331  002224  0100               	movlb	0	; () banked
  8332  002226  5196               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8333  002228  0100               	movlb	0	; () banked
  8334  00222A  5993               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  8335  00222C  0100               	movlb	0	; () banked
  8336  00222E  5197               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8337  002230  0100               	movlb	0	; () banked
  8338  002232  5994               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  8339  002234  A0D8               	btfss	status,0,c
  8340  002236  D00E               	goto	l922
  8341                           
  8342                           ; BSR set to: 0
  8343  002238  0100               	movlb	0	; () banked
  8344  00223A  5195               	movf	___ftdiv@f2& (0+255),w,b
  8345  00223C  0100               	movlb	0	; () banked
  8346  00223E  5F92               	subwf	___ftdiv@f1& (0+255),f,b
  8347  002240  0100               	movlb	0	; () banked
  8348  002242  5196               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8349  002244  0100               	movlb	0	; () banked
  8350  002246  5B93               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  8351  002248  0100               	movlb	0	; () banked
  8352  00224A  5197               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8353  00224C  0100               	movlb	0	; () banked
  8354  00224E  5B94               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  8355                           
  8356                           ; BSR set to: 0
  8357  002250  0100               	movlb	0	; () banked
  8358  002252  819C               	bsf	___ftdiv@f3& (0+255),0,b
  8359  002254                     l922:
  8360                           
  8361                           ; BSR set to: 0
  8362  002254  0100               	movlb	0	; () banked
  8363  002256  90D8               	bcf	status,0,c
  8364  002258  3792               	rlcf	___ftdiv@f1& (0+255),f,b
  8365  00225A  3793               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  8366  00225C  3794               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  8367                           
  8368                           ; BSR set to: 0
  8369  00225E  0100               	movlb	0	; () banked
  8370  002260  2F9B               	decfsz	___ftdiv@cntr& (0+255),f,b
  8371  002262  D7D7               	goto	l3786
  8372  002264  D000               	goto	l3796
  8373  002266                     l3796:
  8374                           
  8375                           ; BSR set to: 0
  8376  002266  C09C  F060         	movff	___ftdiv@f3,___ftpack@arg
  8377  00226A  C09D  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8378  00226E  C09E  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8379  002272  C09F  F063         	movff	___ftdiv@exp,___ftpack@exp
  8380  002276  C0A0  F064         	movff	___ftdiv@sign,___ftpack@sign
  8381  00227A  ECE0  F011         	call	___ftpack	;wreg free
  8382  00227E  C060  F092         	movff	?___ftpack,?___ftdiv
  8383  002282  C061  F093         	movff	?___ftpack+1,?___ftdiv+1
  8384  002286  C062  F094         	movff	?___ftpack+2,?___ftdiv+2
  8385  00228A  D000               	goto	l919
  8386  00228C                     l919:
  8387  00228C  0012               	return		;funcret
  8388  00228E                     __end_of___ftdiv:
  8389                           	opt stack 0
  8390                           tblptru	equ	0xFF8
  8391                           tblptrh	equ	0xFF7
  8392                           tblptrl	equ	0xFF6
  8393                           tablat	equ	0xFF5
  8394                           intcon	equ	0xFF2
  8395                           intcon2	equ	0xFF1
  8396                           intcon3	equ	0xFF0
  8397                           postinc0	equ	0xFEE
  8398                           plusw0	equ	0xFEB
  8399                           wreg	equ	0xFE8
  8400                           postinc1	equ	0xFE6
  8401                           postdec1	equ	0xFE5
  8402                           plusw1	equ	0xFE3
  8403                           fsr1h	equ	0xFE2
  8404                           fsr1l	equ	0xFE1
  8405                           postinc2	equ	0xFDE
  8406                           postdec2	equ	0xFDD
  8407                           fsr2h	equ	0xFDA
  8408                           fsr2l	equ	0xFD9
  8409                           status	equ	0xFD8
  8410                           
  8411 ;; *************** function ___ftpack *****************
  8412 ;; Defined at:
  8413 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;  arg             3    0[BANK0 ] unsigned um
  8416 ;;  exp             1    3[BANK0 ] unsigned char 
  8417 ;;  sign            1    4[BANK0 ] unsigned char 
  8418 ;; Auto vars:     Size  Location     Type
  8419 ;;		None
  8420 ;; Return value:  Size  Location     Type
  8421 ;;                  3    0[BANK0 ] float 
  8422 ;; Registers used:
  8423 ;;		wreg, status,2, status,0
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8429 ;;      Params:         0       5       0       0
  8430 ;;      Locals:         0       0       0       0
  8431 ;;      Temps:          0       3       0       0
  8432 ;;      Totals:         0       8       0       0
  8433 ;;Total ram usage:        8 bytes
  8434 ;; Hardware stack levels used:    1
  8435 ;; Hardware stack levels required when called:    6
  8436 ;; This function calls:
  8437 ;;		Nothing
  8438 ;; This function is called by:
  8439 ;;		___altoft
  8440 ;;		___ftadd
  8441 ;;		___ftdiv
  8442 ;;		___ftmul
  8443 ;;		___lwtoft
  8444 ;; This function uses a non-reentrant model
  8445 ;;
  8446                           
  8447                           	psect	text36
  8448  0023C0                     __ptext36:
  8449                           	opt stack 0
  8450  0023C0                     ___ftpack:
  8451                           	opt stack 18
  8452                           
  8453                           ;incstack = 0
  8454  0023C0  0100               	movlb	0	; () banked
  8455  0023C2  5163               	movf	___ftpack@exp& (0+255),w,b
  8456  0023C4  0100               	movlb	0	; () banked
  8457  0023C6  B4D8               	btfsc	status,2,c
  8458  0023C8  D008               	goto	l3548
  8459                           
  8460                           ; BSR set to: 0
  8461  0023CA  0100               	movlb	0	; () banked
  8462  0023CC  5160               	movf	___ftpack@arg& (0+255),w,b
  8463  0023CE  0100               	movlb	0	; () banked
  8464  0023D0  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  8465  0023D2  0100               	movlb	0	; () banked
  8466  0023D4  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  8467  0023D6  A4D8               	btfss	status,2,c
  8468  0023D8  D013               	goto	l3554
  8469  0023DA                     l3548:
  8470                           
  8471                           ; BSR set to: 0
  8472  0023DA  0E00               	movlw	0
  8473  0023DC  0100               	movlb	0	; () banked
  8474  0023DE  6F60               	movwf	?___ftpack& (0+255),b
  8475  0023E0  0E00               	movlw	0
  8476  0023E2  0100               	movlb	0	; () banked
  8477  0023E4  6F61               	movwf	(?___ftpack+1)& (0+255),b
  8478  0023E6  0E00               	movlw	0
  8479  0023E8  0100               	movlb	0	; () banked
  8480  0023EA  6F62               	movwf	(?___ftpack+2)& (0+255),b
  8481                           
  8482                           ; BSR set to: 0
  8483  0023EC  D078               	goto	l847
  8484                           
  8485                           ; BSR set to: 0
  8486  0023EE  D008               	goto	l3554
  8487  0023F0                     l3552:
  8488                           
  8489                           ; BSR set to: 0
  8490  0023F0  0100               	movlb	0	; () banked
  8491  0023F2  2B63               	incf	___ftpack@exp& (0+255),f,b
  8492  0023F4  0100               	movlb	0	; () banked
  8493  0023F6  90D8               	bcf	status,0,c
  8494  0023F8  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8495  0023FA  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8496  0023FC  3360               	rrcf	___ftpack@arg& (0+255),f,b
  8497  0023FE  D000               	goto	l3554
  8498  002400                     l3554:
  8499                           
  8500                           ; BSR set to: 0
  8501  002400  0E00               	movlw	0
  8502  002402  0100               	movlb	0	; () banked
  8503  002404  1560               	andwf	___ftpack@arg& (0+255),w,b
  8504  002406  0100               	movlb	0	; () banked
  8505  002408  6F65               	movwf	??___ftpack& (0+255),b
  8506  00240A  0E00               	movlw	0
  8507  00240C  0100               	movlb	0	; () banked
  8508  00240E  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8509  002410  0100               	movlb	0	; () banked
  8510  002412  6F66               	movwf	(??___ftpack+1)& (0+255),b
  8511  002414  0EFE               	movlw	254
  8512  002416  0100               	movlb	0	; () banked
  8513  002418  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8514  00241A  0100               	movlb	0	; () banked
  8515  00241C  6F67               	movwf	(??___ftpack+2)& (0+255),b
  8516  00241E  0100               	movlb	0	; () banked
  8517  002420  5165               	movf	??___ftpack& (0+255),w,b
  8518  002422  0100               	movlb	0	; () banked
  8519  002424  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  8520  002426  0100               	movlb	0	; () banked
  8521  002428  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  8522  00242A  B4D8               	btfsc	status,2,c
  8523  00242C  D013               	goto	l3560
  8524  00242E  D7E0               	goto	l3552
  8525                           
  8526                           ; BSR set to: 0
  8527  002430  D011               	goto	l3560
  8528  002432                     l3556:
  8529                           
  8530                           ; BSR set to: 0
  8531  002432  0100               	movlb	0	; () banked
  8532  002434  2B63               	incf	___ftpack@exp& (0+255),f,b
  8533                           
  8534                           ; BSR set to: 0
  8535  002436  0E01               	movlw	1
  8536  002438  0100               	movlb	0	; () banked
  8537  00243A  2760               	addwf	___ftpack@arg& (0+255),f,b
  8538  00243C  0E00               	movlw	0
  8539  00243E  0100               	movlb	0	; () banked
  8540  002440  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  8541  002442  0E00               	movlw	0
  8542  002444  0100               	movlb	0	; () banked
  8543  002446  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  8544  002448  0100               	movlb	0	; () banked
  8545  00244A  90D8               	bcf	status,0,c
  8546  00244C  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8547  00244E  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8548  002450  3360               	rrcf	___ftpack@arg& (0+255),f,b
  8549  002452  D000               	goto	l3560
  8550  002454                     l3560:
  8551                           
  8552                           ; BSR set to: 0
  8553  002454  0E00               	movlw	0
  8554  002456  0100               	movlb	0	; () banked
  8555  002458  1560               	andwf	___ftpack@arg& (0+255),w,b
  8556  00245A  0100               	movlb	0	; () banked
  8557  00245C  6F65               	movwf	??___ftpack& (0+255),b
  8558  00245E  0E00               	movlw	0
  8559  002460  0100               	movlb	0	; () banked
  8560  002462  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8561  002464  0100               	movlb	0	; () banked
  8562  002466  6F66               	movwf	(??___ftpack+1)& (0+255),b
  8563  002468  0EFF               	movlw	255
  8564  00246A  0100               	movlb	0	; () banked
  8565  00246C  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8566  00246E  0100               	movlb	0	; () banked
  8567  002470  6F67               	movwf	(??___ftpack+2)& (0+255),b
  8568  002472  0100               	movlb	0	; () banked
  8569  002474  5165               	movf	??___ftpack& (0+255),w,b
  8570  002476  0100               	movlb	0	; () banked
  8571  002478  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  8572  00247A  0100               	movlb	0	; () banked
  8573  00247C  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  8574  00247E  B4D8               	btfsc	status,2,c
  8575  002480  D00A               	goto	l3564
  8576  002482  D7D7               	goto	l3556
  8577                           
  8578                           ; BSR set to: 0
  8579  002484  D008               	goto	l3564
  8580  002486                     l3562:
  8581                           
  8582                           ; BSR set to: 0
  8583  002486  0100               	movlb	0	; () banked
  8584  002488  0763               	decf	___ftpack@exp& (0+255),f,b
  8585  00248A  0100               	movlb	0	; () banked
  8586  00248C  90D8               	bcf	status,0,c
  8587  00248E  3760               	rlcf	___ftpack@arg& (0+255),f,b
  8588  002490  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  8589  002492  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  8590  002494  D000               	goto	l3564
  8591  002496                     l3564:
  8592                           
  8593                           ; BSR set to: 0
  8594  002496  0100               	movlb	0	; () banked
  8595  002498  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  8596  00249A  D005               	goto	l858
  8597                           
  8598                           ; BSR set to: 0
  8599  00249C  0E02               	movlw	2
  8600  00249E  0100               	movlb	0	; () banked
  8601  0024A0  6163               	cpfslt	___ftpack@exp& (0+255),b
  8602  0024A2  D7F1               	goto	l3562
  8603  0024A4  D000               	goto	l858
  8604  0024A6                     l858:
  8605                           
  8606                           ; BSR set to: 0
  8607  0024A6  0100               	movlb	0	; () banked
  8608  0024A8  B163               	btfsc	___ftpack@exp& (0+255),0,b
  8609  0024AA  D003               	goto	l3570
  8610                           
  8611                           ; BSR set to: 0
  8612  0024AC  0100               	movlb	0	; () banked
  8613  0024AE  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
  8614  0024B0  D000               	goto	l3570
  8615  0024B2                     l3570:
  8616                           
  8617                           ; BSR set to: 0
  8618  0024B2  0100               	movlb	0	; () banked
  8619  0024B4  90D8               	bcf	status,0,c
  8620  0024B6  3363               	rrcf	___ftpack@exp& (0+255),f,b
  8621  0024B8  0100               	movlb	0	; () banked
  8622  0024BA  5163               	movf	___ftpack@exp& (0+255),w,b
  8623  0024BC  0100               	movlb	0	; () banked
  8624  0024BE  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  8625                           
  8626                           ; BSR set to: 0
  8627  0024C0  0100               	movlb	0	; () banked
  8628  0024C2  5164               	movf	___ftpack@sign& (0+255),w,b
  8629  0024C4  0100               	movlb	0	; () banked
  8630  0024C6  B4D8               	btfsc	status,2,c
  8631  0024C8  D003               	goto	l3576
  8632                           
  8633                           ; BSR set to: 0
  8634  0024CA  0100               	movlb	0	; () banked
  8635  0024CC  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
  8636  0024CE  D000               	goto	l3576
  8637  0024D0                     l3576:
  8638                           
  8639                           ; BSR set to: 0
  8640  0024D0  C060  F060         	movff	___ftpack@arg,?___ftpack
  8641  0024D4  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
  8642  0024D8  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
  8643  0024DC  D000               	goto	l847
  8644  0024DE                     l847:
  8645                           
  8646                           ; BSR set to: 0
  8647  0024DE  0012               	return		;funcret
  8648  0024E0                     __end_of___ftpack:
  8649                           	opt stack 0
  8650                           tblptru	equ	0xFF8
  8651                           tblptrh	equ	0xFF7
  8652                           tblptrl	equ	0xFF6
  8653                           tablat	equ	0xFF5
  8654                           intcon	equ	0xFF2
  8655                           intcon2	equ	0xFF1
  8656                           intcon3	equ	0xFF0
  8657                           postinc0	equ	0xFEE
  8658                           plusw0	equ	0xFEB
  8659                           wreg	equ	0xFE8
  8660                           postinc1	equ	0xFE6
  8661                           postdec1	equ	0xFE5
  8662                           plusw1	equ	0xFE3
  8663                           fsr1h	equ	0xFE2
  8664                           fsr1l	equ	0xFE1
  8665                           postinc2	equ	0xFDE
  8666                           postdec2	equ	0xFDD
  8667                           fsr2h	equ	0xFDA
  8668                           fsr2l	equ	0xFD9
  8669                           status	equ	0xFD8
  8670                           
  8671 ;; *************** function _PutIntUART *****************
  8672 ;; Defined at:
  8673 ;;		line 248 in file "uart.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;  type_uart       1    wreg     unsigned char 
  8676 ;;  nb              2   80[BANK0 ] int 
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;  type_uart       1   82[BANK0 ] unsigned char 
  8679 ;; Return value:  Size  Location     Type
  8680 ;;		None               void
  8681 ;; Registers used:
  8682 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8683 ;; Tracked objects:
  8684 ;;		On entry : 0/0
  8685 ;;		On exit  : 0/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8688 ;;      Params:         0       2       0       0
  8689 ;;      Locals:         0       1       0       0
  8690 ;;      Temps:          0       0       0       0
  8691 ;;      Totals:         0       3       0       0
  8692 ;;Total ram usage:        3 bytes
  8693 ;; Hardware stack levels used:    1
  8694 ;; Hardware stack levels required when called:    9
  8695 ;; This function calls:
  8696 ;;		_IntToC
  8697 ;;		_PutsUART
  8698 ;; This function is called by:
  8699 ;;		_main
  8700 ;;		_affichage_position
  8701 ;;		_traitement_reception
  8702 ;; This function uses a non-reentrant model
  8703 ;;
  8704                           
  8705                           	psect	text37
  8706  00356A                     __ptext37:
  8707                           	opt stack 0
  8708  00356A                     _PutIntUART:
  8709                           	opt stack 20
  8710                           
  8711                           ; BSR set to: 0
  8712                           ;incstack = 0
  8713                           ;PutIntUART@type_uart stored from wreg
  8714  00356A  0100               	movlb	0	; () banked
  8715  00356C  6FB2               	movwf	PutIntUART@type_uart& (0+255),b
  8716                           
  8717                           ; BSR set to: 0
  8718                           ;uart.c: 250: PutsUART (type_uart, IntToC (nb));
  8719  00356E  C0B0  F06E         	movff	PutIntUART@nb,IntToC@nb
  8720  003572  C0B1  F06F         	movff	PutIntUART@nb+1,IntToC@nb+1
  8721  003576  EC83  F009         	call	_IntToC	;wreg free
  8722  00357A  C06E  F07E         	movff	?_IntToC,PutsUART@chaine
  8723  00357E  C06F  F07F         	movff	?_IntToC+1,PutsUART@chaine+1
  8724  003582  0100               	movlb	0	; () banked
  8725  003584  51B2               	movf	PutIntUART@type_uart& (0+255),w,b
  8726  003586  ECE2  F017         	call	_PutsUART
  8727  00358A  0012               	return		;funcret
  8728  00358C                     __end_of_PutIntUART:
  8729                           	opt stack 0
  8730                           tblptru	equ	0xFF8
  8731                           tblptrh	equ	0xFF7
  8732                           tblptrl	equ	0xFF6
  8733                           tablat	equ	0xFF5
  8734                           intcon	equ	0xFF2
  8735                           intcon2	equ	0xFF1
  8736                           intcon3	equ	0xFF0
  8737                           postinc0	equ	0xFEE
  8738                           plusw0	equ	0xFEB
  8739                           wreg	equ	0xFE8
  8740                           postinc1	equ	0xFE6
  8741                           postdec1	equ	0xFE5
  8742                           plusw1	equ	0xFE3
  8743                           fsr1h	equ	0xFE2
  8744                           fsr1l	equ	0xFE1
  8745                           postinc2	equ	0xFDE
  8746                           postdec2	equ	0xFDD
  8747                           fsr2h	equ	0xFDA
  8748                           fsr2l	equ	0xFD9
  8749                           status	equ	0xFD8
  8750                           
  8751 ;; *************** function _PutsUART *****************
  8752 ;; Defined at:
  8753 ;;		line 148 in file "uart.c"
  8754 ;; Parameters:    Size  Location     Type
  8755 ;;  type_uart       1    wreg     unsigned char 
  8756 ;;  chaine          2   30[BANK0 ] PTR const unsigned char 
  8757 ;;		 -> STR_19(3), STR_18(3), STR_17(3), STR_16(2), 
  8758 ;;		 -> STR_15(3), STR_14(3), STR_13(2), STR_12(2), 
  8759 ;;		 -> STR_11(3), STR_10(3), STR_9(3), STR_8(3), 
  8760 ;;		 -> STR_7(2), STR_6(3), IntToC@out(8), STR_5(20), 
  8761 ;;		 -> STR_4(8), STR_3(24), STR_2(43), STR_1(24), 
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;  type_uart       1   34[BANK0 ] unsigned char 
  8764 ;; Return value:  Size  Location     Type
  8765 ;;		None               void
  8766 ;; Registers used:
  8767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8768 ;; Tracked objects:
  8769 ;;		On entry : 0/0
  8770 ;;		On exit  : 0/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8773 ;;      Params:         0       2       0       0
  8774 ;;      Locals:         0       1       0       0
  8775 ;;      Temps:          0       2       0       0
  8776 ;;      Totals:         0       5       0       0
  8777 ;;Total ram usage:        5 bytes
  8778 ;; Hardware stack levels used:    1
  8779 ;; Hardware stack levels required when called:    8
  8780 ;; This function calls:
  8781 ;;		_PutcUART
  8782 ;; This function is called by:
  8783 ;;		_main
  8784 ;;		_PutIntUART
  8785 ;;		_affichage_position
  8786 ;;		_traitement_reception
  8787 ;; This function uses a non-reentrant model
  8788 ;;
  8789                           
  8790                           	psect	text38
  8791  002FC4                     __ptext38:
  8792                           	opt stack 0
  8793  002FC4                     _PutsUART:
  8794                           	opt stack 21
  8795                           
  8796                           ;incstack = 0
  8797                           ;PutsUART@type_uart stored from wreg
  8798  002FC4  0100               	movlb	0	; () banked
  8799  002FC6  6F82               	movwf	PutsUART@type_uart& (0+255),b
  8800  002FC8                     
  8801                           ;uart.c: 151: {
  8802                           ;uart.c: 152: PutcUART (type_uart, *chaine);
  8803  002FC8  C07E  FFF6         	movff	PutsUART@chaine,tblptrl
  8804  002FCC  C07F  FFF7         	movff	PutsUART@chaine+1,tblptrh
  8805  002FD0  6AF8               	clrf	tblptru,c
  8806  002FD2  0E02               	movlw	(high __ramtop+-1)
  8807  002FD4  64F7               	cpfsgt	tblptrh,c
  8808  002FD6  D003               	bra	u3817
  8809  002FD8  0008               	tblrd		*
  8810  002FDA  50F5               	movf	tablat,w,c
  8811  002FDC  D005               	bra	u3810
  8812  002FDE                     u3817:
  8813  002FDE  CFF6 FFE9          	movff	tblptrl,fsr0l
  8814  002FE2  CFF7 FFEA          	movff	tblptrh,fsr0h
  8815  002FE6  50EF               	movf	indf0,w,c
  8816  002FE8                     u3810:
  8817  002FE8  0100               	movlb	0	; () banked
  8818  002FEA  6F6E               	movwf	PutcUART@octet& (0+255),b
  8819  002FEC  0100               	movlb	0	; () banked
  8820  002FEE  5182               	movf	PutsUART@type_uart& (0+255),w,b
  8821  002FF0  ECC4  F007         	call	_PutcUART
  8822                           
  8823                           ;uart.c: 153: }
  8824                           ;uart.c: 154: while (*chaine++);
  8825  002FF4  0100               	movlb	0	; () banked
  8826  002FF6  517E               	movf	PutsUART@chaine& (0+255),w,b
  8827  002FF8  0100               	movlb	0	; () banked
  8828  002FFA  6F80               	movwf	??_PutsUART& (0+255),b
  8829  002FFC  0100               	movlb	0	; () banked
  8830  002FFE  517F               	movf	(PutsUART@chaine+1)& (0+255),w,b
  8831  003000  0100               	movlb	0	; () banked
  8832  003002  6F81               	movwf	(??_PutsUART+1)& (0+255),b
  8833  003004  0100               	movlb	0	; () banked
  8834  003006  4B7E               	infsnz	PutsUART@chaine& (0+255),f,b
  8835  003008  2B7F               	incf	(PutsUART@chaine+1)& (0+255),f,b
  8836  00300A  C080  FFF6         	movff	??_PutsUART,tblptrl
  8837  00300E  C081  FFF7         	movff	??_PutsUART+1,tblptrh
  8838  003012  6AF8               	clrf	tblptru,c
  8839  003014  0E02               	movlw	(high __ramtop+-1)
  8840  003016  64F7               	cpfsgt	tblptrh,c
  8841  003018  D003               	bra	u3827
  8842  00301A  0008               	tblrd		*
  8843  00301C  50F5               	movf	tablat,w,c
  8844  00301E  D005               	bra	u3820
  8845  003020                     u3827:
  8846  003020  CFF6 FFE9          	movff	tblptrl,fsr0l
  8847  003024  CFF7 FFEA          	movff	tblptrh,fsr0h
  8848  003028  50EF               	movf	indf0,w,c
  8849  00302A                     u3820:
  8850  00302A  0900               	iorlw	0
  8851  00302C  A4D8               	btfss	status,2,c
  8852  00302E  D7CC               	goto	l3962
  8853  003030  0012               	return		;funcret
  8854  003032                     __end_of_PutsUART:
  8855                           	opt stack 0
  8856                           tblptru	equ	0xFF8
  8857                           tblptrh	equ	0xFF7
  8858                           tblptrl	equ	0xFF6
  8859                           tablat	equ	0xFF5
  8860                           intcon	equ	0xFF2
  8861                           intcon2	equ	0xFF1
  8862                           intcon3	equ	0xFF0
  8863                           indf0	equ	0xFEF
  8864                           postinc0	equ	0xFEE
  8865                           plusw0	equ	0xFEB
  8866                           fsr0h	equ	0xFEA
  8867                           fsr0l	equ	0xFE9
  8868                           wreg	equ	0xFE8
  8869                           postinc1	equ	0xFE6
  8870                           postdec1	equ	0xFE5
  8871                           plusw1	equ	0xFE3
  8872                           fsr1h	equ	0xFE2
  8873                           fsr1l	equ	0xFE1
  8874                           postinc2	equ	0xFDE
  8875                           postdec2	equ	0xFDD
  8876                           fsr2h	equ	0xFDA
  8877                           fsr2l	equ	0xFD9
  8878                           status	equ	0xFD8
  8879                           
  8880 ;; *************** function _PutcUART *****************
  8881 ;; Defined at:
  8882 ;;		line 122 in file "uart.c"
  8883 ;; Parameters:    Size  Location     Type
  8884 ;;  type_uart       1    wreg     unsigned char 
  8885 ;;  octet           1   14[BANK0 ] unsigned char 
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;  type_uart       1   21[BANK0 ] unsigned char 
  8888 ;; Return value:  Size  Location     Type
  8889 ;;		None               void
  8890 ;; Registers used:
  8891 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8892 ;; Tracked objects:
  8893 ;;		On entry : 0/0
  8894 ;;		On exit  : 0/0
  8895 ;;		Unchanged: 0/0
  8896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8897 ;;      Params:         0       1       0       0
  8898 ;;      Locals:         0       1       0       0
  8899 ;;      Temps:          0       6       0       0
  8900 ;;      Totals:         0       8       0       0
  8901 ;;Total ram usage:        8 bytes
  8902 ;; Hardware stack levels used:    1
  8903 ;; Hardware stack levels required when called:    7
  8904 ;; This function calls:
  8905 ;;		___awdiv
  8906 ;; This function is called by:
  8907 ;;		_PutsUART
  8908 ;;		_traitement_reception
  8909 ;;		_Puts2UART
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           	psect	text39
  8914  000F88                     __ptext39:
  8915                           	opt stack 0
  8916  000F88                     _PutcUART:
  8917                           	opt stack 21
  8918                           
  8919                           ;incstack = 0
  8920                           ;PutcUART@type_uart stored from wreg
  8921  000F88  0100               	movlb	0	; () banked
  8922  000F8A  6F75               	movwf	PutcUART@type_uart& (0+255),b
  8923                           
  8924                           ; BSR set to: 0
  8925                           ;uart.c: 124: if (type_uart == 0)
  8926  000F8C  0100               	movlb	0	; () banked
  8927  000F8E  5175               	movf	PutcUART@type_uart& (0+255),w,b
  8928  000F90  0100               	movlb	0	; () banked
  8929  000F92  B4D8               	btfsc	status,2,c
  8930  000F94  D002               	goto	l268
  8931  000F96  D007               	goto	l3924
  8932                           
  8933                           ; BSR set to: 0
  8934                           ;uart.c: 125: {
  8935                           ;uart.c: 126: while (PIR1bits.TXIF == 0);
  8936  000F98  D000               	goto	l268
  8937  000F9A                     l268:
  8938                           
  8939                           ; BSR set to: 0
  8940  000F9A  A89E               	btfss	3998,4,c	;volatile
  8941  000F9C  D7FE               	goto	l268
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;uart.c: 127: TXREG = octet;
  8945  000F9E  C06E  FFAD         	movff	PutcUART@octet,4013	;volatile
  8946                           
  8947                           ;uart.c: 128: }
  8948  000FA2  D1B0               	goto	l275
  8949                           
  8950                           ; BSR set to: 0
  8951                           
  8952                           ; BSR set to: 0
  8953                           ;uart.c: 129: else
  8954                           ;uart.c: 130: {
  8955                           ;uart.c: 131: while(uart_logiciel.transmission_en_cours == 1);
  8956  000FA4  D000               	goto	l3924
  8957  000FA6                     l3924:
  8958                           
  8959                           ; BSR set to: 0
  8960  000FA6  0433               	decf	_uart_logiciel+11,w,c
  8961  000FA8  B4D8               	btfsc	status,2,c
  8962  000FAA  D7FD               	goto	l3924
  8963                           
  8964                           ; BSR set to: 0
  8965                           ;uart.c: 132: uart_logiciel.indice = 0;
  8966                           
  8967                           ; BSR set to: 0
  8968  000FAC  0E00               	movlw	0
  8969  000FAE  6E34               	movwf	_uart_logiciel+12,c
  8970                           
  8971                           ;uart.c: 133: uart_logiciel.buffer_uart[10] = 1;
  8972  000FB0  0E01               	movlw	1
  8973  000FB2  6E32               	movwf	_uart_logiciel+10,c
  8974                           
  8975                           ;uart.c: 134: uart_logiciel.buffer_uart[9] = 1;
  8976  000FB4  0E01               	movlw	1
  8977  000FB6  6E31               	movwf	_uart_logiciel+9,c
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;uart.c: 135: uart_logiciel.buffer_uart[8] = octet / 128;
  8981  000FB8  C06E  F066         	movff	PutcUART@octet,___awdiv@dividend
  8982  000FBC  0100               	movlb	0	; () banked
  8983  000FBE  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  8984  000FC0  0E00               	movlw	0
  8985  000FC2  0100               	movlb	0	; () banked
  8986  000FC4  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  8987  000FC6  0E80               	movlw	128
  8988  000FC8  6F68               	movwf	___awdiv@divisor& (0+255),b
  8989  000FCA  EC54  F014         	call	___awdiv	;wreg free
  8990  000FCE  0100               	movlb	0	; () banked
  8991  000FD0  5166               	movf	?___awdiv& (0+255),w,b
  8992  000FD2  6E30               	movwf	_uart_logiciel+8,c
  8993                           
  8994                           ; BSR set to: 0
  8995                           ;uart.c: 136: uart_logiciel.buffer_uart[7] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                          ) / 64;
  8996  000FD4  5030               	movf	_uart_logiciel+8,w,c
  8997  000FD6  0D80               	mullw	128
  8998  000FD8  1EF3               	comf	prodl,f,c
  8999  000FDA  1EF4               	comf	prodh,f,c
  9000  000FDC  4AF3               	infsnz	prodl,f,c
  9001  000FDE  2AF4               	incf	prodh,f,c
  9002  000FE0  0100               	movlb	0	; () banked
  9003  000FE2  516E               	movf	PutcUART@octet& (0+255),w,b
  9004  000FE4  24F3               	addwf	prodl,w,c
  9005  000FE6  0100               	movlb	0	; () banked
  9006  000FE8  6F66               	movwf	___awdiv@dividend& (0+255),b
  9007  000FEA  0E00               	movlw	0
  9008  000FEC  20F4               	addwfc	prodh,w,c
  9009  000FEE  0100               	movlb	0	; () banked
  9010  000FF0  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9011  000FF2  0E00               	movlw	0
  9012  000FF4  0100               	movlb	0	; () banked
  9013  000FF6  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9014  000FF8  0E40               	movlw	64
  9015  000FFA  6F68               	movwf	___awdiv@divisor& (0+255),b
  9016  000FFC  EC54  F014         	call	___awdiv	;wreg free
  9017  001000  0100               	movlb	0	; () banked
  9018  001002  5166               	movf	?___awdiv& (0+255),w,b
  9019  001004  6E2F               	movwf	_uart_logiciel+7,c
  9020                           
  9021                           ; BSR set to: 0
  9022                           ;uart.c: 137: uart_logiciel.buffer_uart[6] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64) / 32;
  9023  001006  5030               	movf	_uart_logiciel+8,w,c
  9024  001008  0D80               	mullw	128
  9025  00100A  1EF3               	comf	prodl,f,c
  9026  00100C  1EF4               	comf	prodh,f,c
  9027  00100E  4AF3               	infsnz	prodl,f,c
  9028  001010  2AF4               	incf	prodh,f,c
  9029  001012  0100               	movlb	0	; () banked
  9030  001014  516E               	movf	PutcUART@octet& (0+255),w,b
  9031  001016  0100               	movlb	0	; () banked
  9032  001018  6F6F               	movwf	??_PutcUART& (0+255),b
  9033  00101A  6B70               	clrf	(??_PutcUART+1)& (0+255),b
  9034  00101C  50F3               	movf	prodl,w,c
  9035  00101E  0100               	movlb	0	; () banked
  9036  001020  276F               	addwf	??_PutcUART& (0+255),f,b
  9037  001022  50F4               	movf	prodh,w,c
  9038  001024  0100               	movlb	0	; () banked
  9039  001026  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9040  001028  502F               	movf	_uart_logiciel+7,w,c
  9041  00102A  0D40               	mullw	64
  9042  00102C  1EF3               	comf	prodl,f,c
  9043  00102E  1EF4               	comf	prodh,f,c
  9044  001030  4AF3               	infsnz	prodl,f,c
  9045  001032  2AF4               	incf	prodh,f,c
  9046  001034  50F3               	movf	prodl,w,c
  9047  001036  0100               	movlb	0	; () banked
  9048  001038  256F               	addwf	??_PutcUART& (0+255),w,b
  9049  00103A  0100               	movlb	0	; () banked
  9050  00103C  6F66               	movwf	___awdiv@dividend& (0+255),b
  9051  00103E  50F4               	movf	prodh,w,c
  9052  001040  0100               	movlb	0	; () banked
  9053  001042  2170               	addwfc	(??_PutcUART+1)& (0+255),w,b
  9054  001044  0100               	movlb	0	; () banked
  9055  001046  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9056  001048  0E00               	movlw	0
  9057  00104A  0100               	movlb	0	; () banked
  9058  00104C  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9059  00104E  0E20               	movlw	32
  9060  001050  6F68               	movwf	___awdiv@divisor& (0+255),b
  9061  001052  EC54  F014         	call	___awdiv	;wreg free
  9062  001056  0100               	movlb	0	; () banked
  9063  001058  5166               	movf	?___awdiv& (0+255),w,b
  9064  00105A  6E2E               	movwf	_uart_logiciel+6,c
  9065                           
  9066                           ; BSR set to: 0
  9067                           ;uart.c: 138: uart_logiciel.buffer_uart[5] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64 - uart_logiciel.buffer_uart[6] * 32) / 16;
  9068  00105C  5030               	movf	_uart_logiciel+8,w,c
  9069  00105E  0D80               	mullw	128
  9070  001060  1EF3               	comf	prodl,f,c
  9071  001062  1EF4               	comf	prodh,f,c
  9072  001064  4AF3               	infsnz	prodl,f,c
  9073  001066  2AF4               	incf	prodh,f,c
  9074  001068  0100               	movlb	0	; () banked
  9075  00106A  516E               	movf	PutcUART@octet& (0+255),w,b
  9076  00106C  0100               	movlb	0	; () banked
  9077  00106E  6F6F               	movwf	??_PutcUART& (0+255),b
  9078  001070  6B70               	clrf	(??_PutcUART+1)& (0+255),b
  9079  001072  50F3               	movf	prodl,w,c
  9080  001074  0100               	movlb	0	; () banked
  9081  001076  276F               	addwf	??_PutcUART& (0+255),f,b
  9082  001078  50F4               	movf	prodh,w,c
  9083  00107A  0100               	movlb	0	; () banked
  9084  00107C  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9085  00107E  502F               	movf	_uart_logiciel+7,w,c
  9086  001080  0D40               	mullw	64
  9087  001082  1EF3               	comf	prodl,f,c
  9088  001084  1EF4               	comf	prodh,f,c
  9089  001086  4AF3               	infsnz	prodl,f,c
  9090  001088  2AF4               	incf	prodh,f,c
  9091  00108A  50F3               	movf	prodl,w,c
  9092  00108C  0100               	movlb	0	; () banked
  9093  00108E  276F               	addwf	??_PutcUART& (0+255),f,b
  9094  001090  50F4               	movf	prodh,w,c
  9095  001092  0100               	movlb	0	; () banked
  9096  001094  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9097  001096  502E               	movf	_uart_logiciel+6,w,c
  9098  001098  0D20               	mullw	32
  9099  00109A  1EF3               	comf	prodl,f,c
  9100  00109C  1EF4               	comf	prodh,f,c
  9101  00109E  4AF3               	infsnz	prodl,f,c
  9102  0010A0  2AF4               	incf	prodh,f,c
  9103  0010A2  50F3               	movf	prodl,w,c
  9104  0010A4  0100               	movlb	0	; () banked
  9105  0010A6  256F               	addwf	??_PutcUART& (0+255),w,b
  9106  0010A8  0100               	movlb	0	; () banked
  9107  0010AA  6F66               	movwf	___awdiv@dividend& (0+255),b
  9108  0010AC  50F4               	movf	prodh,w,c
  9109  0010AE  0100               	movlb	0	; () banked
  9110  0010B0  2170               	addwfc	(??_PutcUART+1)& (0+255),w,b
  9111  0010B2  0100               	movlb	0	; () banked
  9112  0010B4  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9113  0010B6  0E00               	movlw	0
  9114  0010B8  0100               	movlb	0	; () banked
  9115  0010BA  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9116  0010BC  0E10               	movlw	16
  9117  0010BE  6F68               	movwf	___awdiv@divisor& (0+255),b
  9118  0010C0  EC54  F014         	call	___awdiv	;wreg free
  9119  0010C4  0100               	movlb	0	; () banked
  9120  0010C6  5166               	movf	?___awdiv& (0+255),w,b
  9121  0010C8  6E2D               	movwf	_uart_logiciel+5,c
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;uart.c: 139: uart_logiciel.buffer_uart[4] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64 - uart_logiciel.buffer_uart[6] * 32 - uart_logiciel
      +                          .buffer_uart[5] * 16) / 8;
  9125  0010CA  5030               	movf	_uart_logiciel+8,w,c
  9126  0010CC  0D80               	mullw	128
  9127  0010CE  1EF3               	comf	prodl,f,c
  9128  0010D0  1EF4               	comf	prodh,f,c
  9129  0010D2  4AF3               	infsnz	prodl,f,c
  9130  0010D4  2AF4               	incf	prodh,f,c
  9131  0010D6  0100               	movlb	0	; () banked
  9132  0010D8  516E               	movf	PutcUART@octet& (0+255),w,b
  9133  0010DA  0100               	movlb	0	; () banked
  9134  0010DC  6F6F               	movwf	??_PutcUART& (0+255),b
  9135  0010DE  6B70               	clrf	(??_PutcUART+1)& (0+255),b
  9136  0010E0  50F3               	movf	prodl,w,c
  9137  0010E2  0100               	movlb	0	; () banked
  9138  0010E4  276F               	addwf	??_PutcUART& (0+255),f,b
  9139  0010E6  50F4               	movf	prodh,w,c
  9140  0010E8  0100               	movlb	0	; () banked
  9141  0010EA  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9142  0010EC  502F               	movf	_uart_logiciel+7,w,c
  9143  0010EE  0D40               	mullw	64
  9144  0010F0  1EF3               	comf	prodl,f,c
  9145  0010F2  1EF4               	comf	prodh,f,c
  9146  0010F4  4AF3               	infsnz	prodl,f,c
  9147  0010F6  2AF4               	incf	prodh,f,c
  9148  0010F8  50F3               	movf	prodl,w,c
  9149  0010FA  0100               	movlb	0	; () banked
  9150  0010FC  276F               	addwf	??_PutcUART& (0+255),f,b
  9151  0010FE  50F4               	movf	prodh,w,c
  9152  001100  0100               	movlb	0	; () banked
  9153  001102  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9154  001104  502E               	movf	_uart_logiciel+6,w,c
  9155  001106  0D20               	mullw	32
  9156  001108  1EF3               	comf	prodl,f,c
  9157  00110A  1EF4               	comf	prodh,f,c
  9158  00110C  4AF3               	infsnz	prodl,f,c
  9159  00110E  2AF4               	incf	prodh,f,c
  9160  001110  50F3               	movf	prodl,w,c
  9161  001112  0100               	movlb	0	; () banked
  9162  001114  276F               	addwf	??_PutcUART& (0+255),f,b
  9163  001116  50F4               	movf	prodh,w,c
  9164  001118  0100               	movlb	0	; () banked
  9165  00111A  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9166  00111C  502D               	movf	_uart_logiciel+5,w,c
  9167  00111E  0D10               	mullw	16
  9168  001120  1EF3               	comf	prodl,f,c
  9169  001122  1EF4               	comf	prodh,f,c
  9170  001124  4AF3               	infsnz	prodl,f,c
  9171  001126  2AF4               	incf	prodh,f,c
  9172  001128  50F3               	movf	prodl,w,c
  9173  00112A  0100               	movlb	0	; () banked
  9174  00112C  256F               	addwf	??_PutcUART& (0+255),w,b
  9175  00112E  0100               	movlb	0	; () banked
  9176  001130  6F66               	movwf	___awdiv@dividend& (0+255),b
  9177  001132  50F4               	movf	prodh,w,c
  9178  001134  0100               	movlb	0	; () banked
  9179  001136  2170               	addwfc	(??_PutcUART+1)& (0+255),w,b
  9180  001138  0100               	movlb	0	; () banked
  9181  00113A  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9182  00113C  0E00               	movlw	0
  9183  00113E  0100               	movlb	0	; () banked
  9184  001140  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9185  001142  0E08               	movlw	8
  9186  001144  6F68               	movwf	___awdiv@divisor& (0+255),b
  9187  001146  EC54  F014         	call	___awdiv	;wreg free
  9188  00114A  0100               	movlb	0	; () banked
  9189  00114C  5166               	movf	?___awdiv& (0+255),w,b
  9190  00114E  6E2C               	movwf	_uart_logiciel+4,c
  9191                           
  9192                           ; BSR set to: 0
  9193                           ;uart.c: 140: uart_logiciel.buffer_uart[3] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64 - uart_logiciel.buffer_uart[6] * 32 - uart_logiciel
      +                          .buffer_uart[5] * 16 - uart_logiciel.buffer_uart[4] * 8) / 4;
  9194  001150  5030               	movf	_uart_logiciel+8,w,c
  9195  001152  0D80               	mullw	128
  9196  001154  1EF3               	comf	prodl,f,c
  9197  001156  1EF4               	comf	prodh,f,c
  9198  001158  4AF3               	infsnz	prodl,f,c
  9199  00115A  2AF4               	incf	prodh,f,c
  9200  00115C  0100               	movlb	0	; () banked
  9201  00115E  516E               	movf	PutcUART@octet& (0+255),w,b
  9202  001160  0100               	movlb	0	; () banked
  9203  001162  6F6F               	movwf	??_PutcUART& (0+255),b
  9204  001164  6B70               	clrf	(??_PutcUART+1)& (0+255),b
  9205  001166  50F3               	movf	prodl,w,c
  9206  001168  0100               	movlb	0	; () banked
  9207  00116A  276F               	addwf	??_PutcUART& (0+255),f,b
  9208  00116C  50F4               	movf	prodh,w,c
  9209  00116E  0100               	movlb	0	; () banked
  9210  001170  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9211  001172  502F               	movf	_uart_logiciel+7,w,c
  9212  001174  0D40               	mullw	64
  9213  001176  1EF3               	comf	prodl,f,c
  9214  001178  1EF4               	comf	prodh,f,c
  9215  00117A  4AF3               	infsnz	prodl,f,c
  9216  00117C  2AF4               	incf	prodh,f,c
  9217  00117E  50F3               	movf	prodl,w,c
  9218  001180  0100               	movlb	0	; () banked
  9219  001182  276F               	addwf	??_PutcUART& (0+255),f,b
  9220  001184  50F4               	movf	prodh,w,c
  9221  001186  0100               	movlb	0	; () banked
  9222  001188  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9223  00118A  502E               	movf	_uart_logiciel+6,w,c
  9224  00118C  0D20               	mullw	32
  9225  00118E  1EF3               	comf	prodl,f,c
  9226  001190  1EF4               	comf	prodh,f,c
  9227  001192  4AF3               	infsnz	prodl,f,c
  9228  001194  2AF4               	incf	prodh,f,c
  9229  001196  50F3               	movf	prodl,w,c
  9230  001198  0100               	movlb	0	; () banked
  9231  00119A  276F               	addwf	??_PutcUART& (0+255),f,b
  9232  00119C  50F4               	movf	prodh,w,c
  9233  00119E  0100               	movlb	0	; () banked
  9234  0011A0  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9235  0011A2  502D               	movf	_uart_logiciel+5,w,c
  9236  0011A4  0D10               	mullw	16
  9237  0011A6  1EF3               	comf	prodl,f,c
  9238  0011A8  1EF4               	comf	prodh,f,c
  9239  0011AA  4AF3               	infsnz	prodl,f,c
  9240  0011AC  2AF4               	incf	prodh,f,c
  9241  0011AE  50F3               	movf	prodl,w,c
  9242  0011B0  0100               	movlb	0	; () banked
  9243  0011B2  276F               	addwf	??_PutcUART& (0+255),f,b
  9244  0011B4  50F4               	movf	prodh,w,c
  9245  0011B6  0100               	movlb	0	; () banked
  9246  0011B8  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9247  0011BA  502C               	movf	_uart_logiciel+4,w,c
  9248  0011BC  0D08               	mullw	8
  9249  0011BE  1EF3               	comf	prodl,f,c
  9250  0011C0  1EF4               	comf	prodh,f,c
  9251  0011C2  4AF3               	infsnz	prodl,f,c
  9252  0011C4  2AF4               	incf	prodh,f,c
  9253  0011C6  50F3               	movf	prodl,w,c
  9254  0011C8  0100               	movlb	0	; () banked
  9255  0011CA  256F               	addwf	??_PutcUART& (0+255),w,b
  9256  0011CC  0100               	movlb	0	; () banked
  9257  0011CE  6F66               	movwf	___awdiv@dividend& (0+255),b
  9258  0011D0  50F4               	movf	prodh,w,c
  9259  0011D2  0100               	movlb	0	; () banked
  9260  0011D4  2170               	addwfc	(??_PutcUART+1)& (0+255),w,b
  9261  0011D6  0100               	movlb	0	; () banked
  9262  0011D8  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9263  0011DA  0E00               	movlw	0
  9264  0011DC  0100               	movlb	0	; () banked
  9265  0011DE  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9266  0011E0  0E04               	movlw	4
  9267  0011E2  6F68               	movwf	___awdiv@divisor& (0+255),b
  9268  0011E4  EC54  F014         	call	___awdiv	;wreg free
  9269  0011E8  0100               	movlb	0	; () banked
  9270  0011EA  5166               	movf	?___awdiv& (0+255),w,b
  9271  0011EC  6E2B               	movwf	_uart_logiciel+3,c
  9272                           
  9273                           ; BSR set to: 0
  9274                           ;uart.c: 141: uart_logiciel.buffer_uart[2] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64 - uart_logiciel.buffer_uart[6] * 32 - uart_logiciel
      +                          .buffer_uart[5] * 16 - uart_logiciel.buffer_uart[4] * 8 - uart_logiciel.buffer_uart[3] *
  9275  0011EE  5030               	movf	_uart_logiciel+8,w,c
  9276  0011F0  0D80               	mullw	128
  9277  0011F2  1EF3               	comf	prodl,f,c
  9278  0011F4  1EF4               	comf	prodh,f,c
  9279  0011F6  4AF3               	infsnz	prodl,f,c
  9280  0011F8  2AF4               	incf	prodh,f,c
  9281  0011FA  0100               	movlb	0	; () banked
  9282  0011FC  516E               	movf	PutcUART@octet& (0+255),w,b
  9283  0011FE  0100               	movlb	0	; () banked
  9284  001200  6F6F               	movwf	??_PutcUART& (0+255),b
  9285  001202  6B70               	clrf	(??_PutcUART+1)& (0+255),b
  9286  001204  50F3               	movf	prodl,w,c
  9287  001206  0100               	movlb	0	; () banked
  9288  001208  276F               	addwf	??_PutcUART& (0+255),f,b
  9289  00120A  50F4               	movf	prodh,w,c
  9290  00120C  0100               	movlb	0	; () banked
  9291  00120E  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9292  001210  502F               	movf	_uart_logiciel+7,w,c
  9293  001212  0D40               	mullw	64
  9294  001214  1EF3               	comf	prodl,f,c
  9295  001216  1EF4               	comf	prodh,f,c
  9296  001218  4AF3               	infsnz	prodl,f,c
  9297  00121A  2AF4               	incf	prodh,f,c
  9298  00121C  50F3               	movf	prodl,w,c
  9299  00121E  0100               	movlb	0	; () banked
  9300  001220  276F               	addwf	??_PutcUART& (0+255),f,b
  9301  001222  50F4               	movf	prodh,w,c
  9302  001224  0100               	movlb	0	; () banked
  9303  001226  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9304  001228  502E               	movf	_uart_logiciel+6,w,c
  9305  00122A  0D20               	mullw	32
  9306  00122C  1EF3               	comf	prodl,f,c
  9307  00122E  1EF4               	comf	prodh,f,c
  9308  001230  4AF3               	infsnz	prodl,f,c
  9309  001232  2AF4               	incf	prodh,f,c
  9310  001234  50F3               	movf	prodl,w,c
  9311  001236  0100               	movlb	0	; () banked
  9312  001238  276F               	addwf	??_PutcUART& (0+255),f,b
  9313  00123A  50F4               	movf	prodh,w,c
  9314  00123C  0100               	movlb	0	; () banked
  9315  00123E  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9316  001240  502D               	movf	_uart_logiciel+5,w,c
  9317  001242  0D10               	mullw	16
  9318  001244  1EF3               	comf	prodl,f,c
  9319  001246  1EF4               	comf	prodh,f,c
  9320  001248  4AF3               	infsnz	prodl,f,c
  9321  00124A  2AF4               	incf	prodh,f,c
  9322  00124C  50F3               	movf	prodl,w,c
  9323  00124E  0100               	movlb	0	; () banked
  9324  001250  276F               	addwf	??_PutcUART& (0+255),f,b
  9325  001252  50F4               	movf	prodh,w,c
  9326  001254  0100               	movlb	0	; () banked
  9327  001256  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9328  001258  502C               	movf	_uart_logiciel+4,w,c
  9329  00125A  0D08               	mullw	8
  9330  00125C  1EF3               	comf	prodl,f,c
  9331  00125E  1EF4               	comf	prodh,f,c
  9332  001260  4AF3               	infsnz	prodl,f,c
  9333  001262  2AF4               	incf	prodh,f,c
  9334  001264  50F3               	movf	prodl,w,c
  9335  001266  0100               	movlb	0	; () banked
  9336  001268  276F               	addwf	??_PutcUART& (0+255),f,b
  9337  00126A  50F4               	movf	prodh,w,c
  9338  00126C  0100               	movlb	0	; () banked
  9339  00126E  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9340  001270  502B               	movf	_uart_logiciel+3,w,c
  9341  001272  0D04               	mullw	4
  9342  001274  1EF3               	comf	prodl,f,c
  9343  001276  1EF4               	comf	prodh,f,c
  9344  001278  4AF3               	infsnz	prodl,f,c
  9345  00127A  2AF4               	incf	prodh,f,c
  9346  00127C  50F3               	movf	prodl,w,c
  9347  00127E  0100               	movlb	0	; () banked
  9348  001280  256F               	addwf	??_PutcUART& (0+255),w,b
  9349  001282  0100               	movlb	0	; () banked
  9350  001284  6F66               	movwf	___awdiv@dividend& (0+255),b
  9351  001286  50F4               	movf	prodh,w,c
  9352  001288  0100               	movlb	0	; () banked
  9353  00128A  2170               	addwfc	(??_PutcUART+1)& (0+255),w,b
  9354  00128C  0100               	movlb	0	; () banked
  9355  00128E  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9356  001290  0E00               	movlw	0
  9357  001292  0100               	movlb	0	; () banked
  9358  001294  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9359  001296  0E02               	movlw	2
  9360  001298  6F68               	movwf	___awdiv@divisor& (0+255),b
  9361  00129A  EC54  F014         	call	___awdiv	;wreg free
  9362  00129E  0100               	movlb	0	; () banked
  9363  0012A0  5166               	movf	?___awdiv& (0+255),w,b
  9364  0012A2  6E2A               	movwf	_uart_logiciel+2,c
  9365                           
  9366                           ; BSR set to: 0
  9367                           ;uart.c: 142: uart_logiciel.buffer_uart[1] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64 - uart_logiciel.buffer_uart[6] * 32 - uart_logiciel
      +                          .buffer_uart[5] * 16 - uart_logiciel.buffer_uart[4] * 8 - uart_logiciel.buffer_uart[3] *
  9368  0012A4  502A               	movf	_uart_logiciel+2,w,c
  9369  0012A6  0D02               	mullw	2
  9370  0012A8  CFF3 F06F          	movff	prodl,??_PutcUART
  9371  0012AC  502B               	movf	_uart_logiciel+3,w,c
  9372  0012AE  0D04               	mullw	4
  9373  0012B0  CFF3 F070          	movff	prodl,??_PutcUART+1
  9374  0012B4  502C               	movf	_uart_logiciel+4,w,c
  9375  0012B6  0D08               	mullw	8
  9376  0012B8  CFF3 F071          	movff	prodl,??_PutcUART+2
  9377  0012BC  502D               	movf	_uart_logiciel+5,w,c
  9378  0012BE  0D10               	mullw	16
  9379  0012C0  CFF3 F072          	movff	prodl,??_PutcUART+3
  9380  0012C4  502E               	movf	_uart_logiciel+6,w,c
  9381  0012C6  0D20               	mullw	32
  9382  0012C8  CFF3 F073          	movff	prodl,??_PutcUART+4
  9383  0012CC  502F               	movf	_uart_logiciel+7,w,c
  9384  0012CE  0D40               	mullw	64
  9385  0012D0  CFF3 F074          	movff	prodl,??_PutcUART+5
  9386  0012D4  5030               	movf	_uart_logiciel+8,w,c
  9387  0012D6  0D80               	mullw	128
  9388  0012D8  50F3               	movf	prodl,w,c
  9389  0012DA  0100               	movlb	0	; () banked
  9390  0012DC  2574               	addwf	(??_PutcUART+5)& (0+255),w,b
  9391  0012DE  0100               	movlb	0	; () banked
  9392  0012E0  2573               	addwf	(??_PutcUART+4)& (0+255),w,b
  9393  0012E2  0100               	movlb	0	; () banked
  9394  0012E4  2572               	addwf	(??_PutcUART+3)& (0+255),w,b
  9395  0012E6  0100               	movlb	0	; () banked
  9396  0012E8  2571               	addwf	(??_PutcUART+2)& (0+255),w,b
  9397  0012EA  0100               	movlb	0	; () banked
  9398  0012EC  2570               	addwf	(??_PutcUART+1)& (0+255),w,b
  9399  0012EE  0100               	movlb	0	; () banked
  9400  0012F0  256F               	addwf	??_PutcUART& (0+255),w,b
  9401  0012F2  0800               	sublw	0
  9402  0012F4  0100               	movlb	0	; () banked
  9403  0012F6  256E               	addwf	PutcUART@octet& (0+255),w,b
  9404  0012F8  6E29               	movwf	_uart_logiciel+1,c
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;uart.c: 143: uart_logiciel.buffer_uart[0] = 0;
  9408  0012FA  0E00               	movlw	0
  9409  0012FC  6E28               	movwf	_uart_logiciel,c
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;uart.c: 144: uart_logiciel.transmission_en_cours = 1;
  9413  0012FE  0E01               	movlw	1
  9414  001300  6E33               	movwf	_uart_logiciel+11,c
  9415  001302  D000               	goto	l275
  9416  001304                     l275:
  9417                           
  9418                           ; BSR set to: 0
  9419  001304  0012               	return		;funcret
  9420  001306                     __end_of_PutcUART:
  9421                           	opt stack 0
  9422                           tblptru	equ	0xFF8
  9423                           tblptrh	equ	0xFF7
  9424                           tblptrl	equ	0xFF6
  9425                           tablat	equ	0xFF5
  9426                           prodh	equ	0xFF4
  9427                           prodl	equ	0xFF3
  9428                           intcon	equ	0xFF2
  9429                           intcon2	equ	0xFF1
  9430                           intcon3	equ	0xFF0
  9431                           indf0	equ	0xFEF
  9432                           postinc0	equ	0xFEE
  9433                           plusw0	equ	0xFEB
  9434                           fsr0h	equ	0xFEA
  9435                           fsr0l	equ	0xFE9
  9436                           wreg	equ	0xFE8
  9437                           postinc1	equ	0xFE6
  9438                           postdec1	equ	0xFE5
  9439                           plusw1	equ	0xFE3
  9440                           fsr1h	equ	0xFE2
  9441                           fsr1l	equ	0xFE1
  9442                           postinc2	equ	0xFDE
  9443                           postdec2	equ	0xFDD
  9444                           fsr2h	equ	0xFDA
  9445                           fsr2l	equ	0xFD9
  9446                           status	equ	0xFD8
  9447                           
  9448 ;; *************** function _IntToC *****************
  9449 ;; Defined at:
  9450 ;;		line 167 in file "uart.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;  nb              2   14[BANK0 ] int 
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;  i              10   18[BANK0 ] int [5]
  9455 ;;  j               2   28[BANK0 ] int 
  9456 ;; Return value:  Size  Location     Type
  9457 ;;                  2   14[BANK0 ] PTR unsigned char 
  9458 ;; Registers used:
  9459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9460 ;; Tracked objects:
  9461 ;;		On entry : 0/0
  9462 ;;		On exit  : 0/0
  9463 ;;		Unchanged: 0/0
  9464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9465 ;;      Params:         0       2       0       0
  9466 ;;      Locals:         0      12       0       0
  9467 ;;      Temps:          0       2       0       0
  9468 ;;      Totals:         0      16       0       0
  9469 ;;Total ram usage:       16 bytes
  9470 ;; Hardware stack levels used:    1
  9471 ;; Hardware stack levels required when called:    7
  9472 ;; This function calls:
  9473 ;;		___awdiv
  9474 ;;		___wmul
  9475 ;; This function is called by:
  9476 ;;		_PutIntUART
  9477 ;; This function uses a non-reentrant model
  9478 ;;
  9479                           
  9480                           	psect	text40
  9481  001306                     __ptext40:
  9482                           	opt stack 0
  9483  001306                     _IntToC:
  9484                           	opt stack 21
  9485                           
  9486                           ;uart.c: 170: int16_t i[5];
  9487                           ;uart.c: 171: int j = 0;
  9488                           
  9489                           ; BSR set to: 0
  9490                           ;incstack = 0
  9491  001306  0E00               	movlw	0
  9492  001308  0100               	movlb	0	; () banked
  9493  00130A  6F7D               	movwf	(IntToC@j+1)& (0+255),b
  9494  00130C  0E00               	movlw	0
  9495  00130E  6F7C               	movwf	IntToC@j& (0+255),b
  9496                           
  9497                           ; BSR set to: 0
  9498                           ;uart.c: 172: static char out[8];
  9499                           ;uart.c: 175: if (nb < 0)
  9500  001310  0100               	movlb	0	; () banked
  9501  001312  AF6F               	btfss	(IntToC@nb+1)& (0+255),7,b
  9502  001314  D01C               	goto	l3982
  9503                           
  9504                           ; BSR set to: 0
  9505                           ;uart.c: 176: {
  9506                           ;uart.c: 177: nb *= (-1);
  9507  001316  C06E  F060         	movff	IntToC@nb,___wmul@multiplier
  9508  00131A  C06F  F061         	movff	IntToC@nb+1,___wmul@multiplier+1
  9509  00131E  0EFF               	movlw	255
  9510  001320  0100               	movlb	0	; () banked
  9511  001322  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9512  001324  6962               	setf	___wmul@multiplicand& (0+255),b
  9513  001326  EC34  F01A         	call	___wmul	;wreg free
  9514  00132A  C060  F06E         	movff	?___wmul,IntToC@nb
  9515  00132E  C061  F06F         	movff	?___wmul+1,IntToC@nb+1
  9516                           
  9517                           ;uart.c: 178: out[j++] = '-';
  9518  001332  0E35               	movlw	low IntToC@out
  9519  001334  0100               	movlb	0	; () banked
  9520  001336  257C               	addwf	IntToC@j& (0+255),w,b
  9521  001338  6ED9               	movwf	fsr2l,c
  9522  00133A  0E00               	movlw	high IntToC@out
  9523  00133C  0100               	movlb	0	; () banked
  9524  00133E  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
  9525  001340  6EDA               	movwf	fsr2h,c
  9526  001342  0E2D               	movlw	45
  9527  001344  6EDF               	movwf	indf2,c
  9528                           
  9529                           ; BSR set to: 0
  9530  001346  0100               	movlb	0	; () banked
  9531  001348  4B7C               	infsnz	IntToC@j& (0+255),f,b
  9532  00134A  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
  9533  00134C  D000               	goto	l3982
  9534  00134E                     l3982:
  9535                           
  9536                           ; BSR set to: 0
  9537                           ;uart.c: 179: }
  9538                           ;uart.c: 183: i[0] = (nb / 10000);
  9539  00134E  C06E  F066         	movff	IntToC@nb,___awdiv@dividend
  9540  001352  C06F  F067         	movff	IntToC@nb+1,___awdiv@dividend+1
  9541  001356  0E27               	movlw	39
  9542  001358  0100               	movlb	0	; () banked
  9543  00135A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9544  00135C  0E10               	movlw	16
  9545  00135E  6F68               	movwf	___awdiv@divisor& (0+255),b
  9546  001360  EC54  F014         	call	___awdiv	;wreg free
  9547  001364  C066  F072         	movff	?___awdiv,IntToC@i
  9548  001368  C067  F073         	movff	?___awdiv+1,IntToC@i+1
  9549                           
  9550                           ;uart.c: 184: i[1] = (nb - i[0] * 10000) / 1000;
  9551  00136C  C072  F060         	movff	IntToC@i,___wmul@multiplier
  9552  001370  C073  F061         	movff	IntToC@i+1,___wmul@multiplier+1
  9553  001374  0E27               	movlw	39
  9554  001376  0100               	movlb	0	; () banked
  9555  001378  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9556  00137A  0E10               	movlw	16
  9557  00137C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9558  00137E  EC34  F01A         	call	___wmul	;wreg free
  9559  001382  0100               	movlb	0	; () banked
  9560  001384  1F60               	comf	?___wmul& (0+255),f,b
  9561  001386  0100               	movlb	0	; () banked
  9562  001388  1F61               	comf	(?___wmul+1)& (0+255),f,b
  9563  00138A  0100               	movlb	0	; () banked
  9564  00138C  4B60               	infsnz	?___wmul& (0+255),f,b
  9565  00138E  2B61               	incf	(?___wmul+1)& (0+255),f,b
  9566  001390  0100               	movlb	0	; () banked
  9567  001392  516E               	movf	IntToC@nb& (0+255),w,b
  9568  001394  0100               	movlb	0	; () banked
  9569  001396  2560               	addwf	?___wmul& (0+255),w,b
  9570  001398  0100               	movlb	0	; () banked
  9571  00139A  6F66               	movwf	___awdiv@dividend& (0+255),b
  9572  00139C  0100               	movlb	0	; () banked
  9573  00139E  516F               	movf	(IntToC@nb+1)& (0+255),w,b
  9574  0013A0  0100               	movlb	0	; () banked
  9575  0013A2  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  9576  0013A4  0100               	movlb	0	; () banked
  9577  0013A6  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9578  0013A8  0E03               	movlw	3
  9579  0013AA  0100               	movlb	0	; () banked
  9580  0013AC  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9581  0013AE  0EE8               	movlw	232
  9582  0013B0  6F68               	movwf	___awdiv@divisor& (0+255),b
  9583  0013B2  EC54  F014         	call	___awdiv	;wreg free
  9584  0013B6  C066  F074         	movff	?___awdiv,IntToC@i+2
  9585  0013BA  C067  F075         	movff	?___awdiv+1,IntToC@i+3
  9586                           
  9587                           ;uart.c: 185: i[2] = (nb - i[0] * 10000 - i[1] * 1000) / 100;
  9588  0013BE  C072  F060         	movff	IntToC@i,___wmul@multiplier
  9589  0013C2  C073  F061         	movff	IntToC@i+1,___wmul@multiplier+1
  9590  0013C6  0E27               	movlw	39
  9591  0013C8  0100               	movlb	0	; () banked
  9592  0013CA  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9593  0013CC  0E10               	movlw	16
  9594  0013CE  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9595  0013D0  EC34  F01A         	call	___wmul	;wreg free
  9596  0013D4  C060  F070         	movff	?___wmul,??_IntToC
  9597  0013D8  C061  F071         	movff	?___wmul+1,??_IntToC+1
  9598  0013DC  C074  F060         	movff	IntToC@i+2,___wmul@multiplier
  9599  0013E0  C075  F061         	movff	IntToC@i+3,___wmul@multiplier+1
  9600  0013E4  0E03               	movlw	3
  9601  0013E6  0100               	movlb	0	; () banked
  9602  0013E8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9603  0013EA  0EE8               	movlw	232
  9604  0013EC  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9605  0013EE  EC34  F01A         	call	___wmul	;wreg free
  9606  0013F2  0100               	movlb	0	; () banked
  9607  0013F4  5160               	movf	?___wmul& (0+255),w,b
  9608  0013F6  0100               	movlb	0	; () banked
  9609  0013F8  2770               	addwf	??_IntToC& (0+255),f,b
  9610  0013FA  0100               	movlb	0	; () banked
  9611  0013FC  5161               	movf	(?___wmul+1)& (0+255),w,b
  9612  0013FE  0100               	movlb	0	; () banked
  9613  001400  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
  9614  001402  0100               	movlb	0	; () banked
  9615  001404  1F70               	comf	??_IntToC& (0+255),f,b
  9616  001406  1F71               	comf	(??_IntToC+1)& (0+255),f,b
  9617  001408  4B70               	infsnz	??_IntToC& (0+255),f,b
  9618  00140A  2B71               	incf	(??_IntToC+1)& (0+255),f,b
  9619  00140C  0100               	movlb	0	; () banked
  9620  00140E  516E               	movf	IntToC@nb& (0+255),w,b
  9621  001410  0100               	movlb	0	; () banked
  9622  001412  2570               	addwf	??_IntToC& (0+255),w,b
  9623  001414  0100               	movlb	0	; () banked
  9624  001416  6F66               	movwf	___awdiv@dividend& (0+255),b
  9625  001418  0100               	movlb	0	; () banked
  9626  00141A  516F               	movf	(IntToC@nb+1)& (0+255),w,b
  9627  00141C  0100               	movlb	0	; () banked
  9628  00141E  2171               	addwfc	(??_IntToC+1)& (0+255),w,b
  9629  001420  0100               	movlb	0	; () banked
  9630  001422  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9631  001424  0E00               	movlw	0
  9632  001426  0100               	movlb	0	; () banked
  9633  001428  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9634  00142A  0E64               	movlw	100
  9635  00142C  6F68               	movwf	___awdiv@divisor& (0+255),b
  9636  00142E  EC54  F014         	call	___awdiv	;wreg free
  9637  001432  C066  F076         	movff	?___awdiv,IntToC@i+4
  9638  001436  C067  F077         	movff	?___awdiv+1,IntToC@i+5
  9639                           
  9640                           ;uart.c: 186: i[3] = (nb - i[0] * 10000 - i[1] * 1000 - i[2] * 100) / 10;
  9641  00143A  C072  F060         	movff	IntToC@i,___wmul@multiplier
  9642  00143E  C073  F061         	movff	IntToC@i+1,___wmul@multiplier+1
  9643  001442  0E27               	movlw	39
  9644  001444  0100               	movlb	0	; () banked
  9645  001446  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9646  001448  0E10               	movlw	16
  9647  00144A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9648  00144C  EC34  F01A         	call	___wmul	;wreg free
  9649  001450  C060  F070         	movff	?___wmul,??_IntToC
  9650  001454  C061  F071         	movff	?___wmul+1,??_IntToC+1
  9651  001458  C074  F060         	movff	IntToC@i+2,___wmul@multiplier
  9652  00145C  C075  F061         	movff	IntToC@i+3,___wmul@multiplier+1
  9653  001460  0E03               	movlw	3
  9654  001462  0100               	movlb	0	; () banked
  9655  001464  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9656  001466  0EE8               	movlw	232
  9657  001468  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9658  00146A  EC34  F01A         	call	___wmul	;wreg free
  9659  00146E  0100               	movlb	0	; () banked
  9660  001470  5160               	movf	?___wmul& (0+255),w,b
  9661  001472  0100               	movlb	0	; () banked
  9662  001474  2770               	addwf	??_IntToC& (0+255),f,b
  9663  001476  0100               	movlb	0	; () banked
  9664  001478  5161               	movf	(?___wmul+1)& (0+255),w,b
  9665  00147A  0100               	movlb	0	; () banked
  9666  00147C  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
  9667  00147E  C076  F060         	movff	IntToC@i+4,___wmul@multiplier
  9668  001482  C077  F061         	movff	IntToC@i+5,___wmul@multiplier+1
  9669  001486  0E00               	movlw	0
  9670  001488  0100               	movlb	0	; () banked
  9671  00148A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9672  00148C  0E64               	movlw	100
  9673  00148E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9674  001490  EC34  F01A         	call	___wmul	;wreg free
  9675  001494  0100               	movlb	0	; () banked
  9676  001496  5160               	movf	?___wmul& (0+255),w,b
  9677  001498  0100               	movlb	0	; () banked
  9678  00149A  2770               	addwf	??_IntToC& (0+255),f,b
  9679  00149C  0100               	movlb	0	; () banked
  9680  00149E  5161               	movf	(?___wmul+1)& (0+255),w,b
  9681  0014A0  0100               	movlb	0	; () banked
  9682  0014A2  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
  9683  0014A4  0100               	movlb	0	; () banked
  9684  0014A6  1F70               	comf	??_IntToC& (0+255),f,b
  9685  0014A8  1F71               	comf	(??_IntToC+1)& (0+255),f,b
  9686  0014AA  4B70               	infsnz	??_IntToC& (0+255),f,b
  9687  0014AC  2B71               	incf	(??_IntToC+1)& (0+255),f,b
  9688  0014AE  0100               	movlb	0	; () banked
  9689  0014B0  516E               	movf	IntToC@nb& (0+255),w,b
  9690  0014B2  0100               	movlb	0	; () banked
  9691  0014B4  2570               	addwf	??_IntToC& (0+255),w,b
  9692  0014B6  0100               	movlb	0	; () banked
  9693  0014B8  6F66               	movwf	___awdiv@dividend& (0+255),b
  9694  0014BA  0100               	movlb	0	; () banked
  9695  0014BC  516F               	movf	(IntToC@nb+1)& (0+255),w,b
  9696  0014BE  0100               	movlb	0	; () banked
  9697  0014C0  2171               	addwfc	(??_IntToC+1)& (0+255),w,b
  9698  0014C2  0100               	movlb	0	; () banked
  9699  0014C4  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9700  0014C6  0E00               	movlw	0
  9701  0014C8  0100               	movlb	0	; () banked
  9702  0014CA  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9703  0014CC  0E0A               	movlw	10
  9704  0014CE  6F68               	movwf	___awdiv@divisor& (0+255),b
  9705  0014D0  EC54  F014         	call	___awdiv	;wreg free
  9706  0014D4  C066  F078         	movff	?___awdiv,IntToC@i+6
  9707  0014D8  C067  F079         	movff	?___awdiv+1,IntToC@i+7
  9708                           
  9709                           ;uart.c: 187: i[4] = (nb - i[0] * 10000 - i[1] * 1000 - i[2] * 100 - i[3] * 10);
  9710  0014DC  C072  F060         	movff	IntToC@i,___wmul@multiplier
  9711  0014E0  C073  F061         	movff	IntToC@i+1,___wmul@multiplier+1
  9712  0014E4  0E27               	movlw	39
  9713  0014E6  0100               	movlb	0	; () banked
  9714  0014E8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9715  0014EA  0E10               	movlw	16
  9716  0014EC  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9717  0014EE  EC34  F01A         	call	___wmul	;wreg free
  9718  0014F2  C060  F070         	movff	?___wmul,??_IntToC
  9719  0014F6  C061  F071         	movff	?___wmul+1,??_IntToC+1
  9720  0014FA  C074  F060         	movff	IntToC@i+2,___wmul@multiplier
  9721  0014FE  C075  F061         	movff	IntToC@i+3,___wmul@multiplier+1
  9722  001502  0E03               	movlw	3
  9723  001504  0100               	movlb	0	; () banked
  9724  001506  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9725  001508  0EE8               	movlw	232
  9726  00150A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9727  00150C  EC34  F01A         	call	___wmul	;wreg free
  9728  001510  0100               	movlb	0	; () banked
  9729  001512  5160               	movf	?___wmul& (0+255),w,b
  9730  001514  0100               	movlb	0	; () banked
  9731  001516  2770               	addwf	??_IntToC& (0+255),f,b
  9732  001518  0100               	movlb	0	; () banked
  9733  00151A  5161               	movf	(?___wmul+1)& (0+255),w,b
  9734  00151C  0100               	movlb	0	; () banked
  9735  00151E  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
  9736  001520  C076  F060         	movff	IntToC@i+4,___wmul@multiplier
  9737  001524  C077  F061         	movff	IntToC@i+5,___wmul@multiplier+1
  9738  001528  0E00               	movlw	0
  9739  00152A  0100               	movlb	0	; () banked
  9740  00152C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9741  00152E  0E64               	movlw	100
  9742  001530  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9743  001532  EC34  F01A         	call	___wmul	;wreg free
  9744  001536  0100               	movlb	0	; () banked
  9745  001538  5160               	movf	?___wmul& (0+255),w,b
  9746  00153A  0100               	movlb	0	; () banked
  9747  00153C  2770               	addwf	??_IntToC& (0+255),f,b
  9748  00153E  0100               	movlb	0	; () banked
  9749  001540  5161               	movf	(?___wmul+1)& (0+255),w,b
  9750  001542  0100               	movlb	0	; () banked
  9751  001544  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
  9752  001546  C078  F060         	movff	IntToC@i+6,___wmul@multiplier
  9753  00154A  C079  F061         	movff	IntToC@i+7,___wmul@multiplier+1
  9754  00154E  0E00               	movlw	0
  9755  001550  0100               	movlb	0	; () banked
  9756  001552  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9757  001554  0E0A               	movlw	10
  9758  001556  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9759  001558  EC34  F01A         	call	___wmul	;wreg free
  9760  00155C  0100               	movlb	0	; () banked
  9761  00155E  5160               	movf	?___wmul& (0+255),w,b
  9762  001560  0100               	movlb	0	; () banked
  9763  001562  2770               	addwf	??_IntToC& (0+255),f,b
  9764  001564  0100               	movlb	0	; () banked
  9765  001566  5161               	movf	(?___wmul+1)& (0+255),w,b
  9766  001568  0100               	movlb	0	; () banked
  9767  00156A  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
  9768  00156C  0100               	movlb	0	; () banked
  9769  00156E  1F70               	comf	??_IntToC& (0+255),f,b
  9770  001570  1F71               	comf	(??_IntToC+1)& (0+255),f,b
  9771  001572  4B70               	infsnz	??_IntToC& (0+255),f,b
  9772  001574  2B71               	incf	(??_IntToC+1)& (0+255),f,b
  9773  001576  0100               	movlb	0	; () banked
  9774  001578  516E               	movf	IntToC@nb& (0+255),w,b
  9775  00157A  0100               	movlb	0	; () banked
  9776  00157C  2570               	addwf	??_IntToC& (0+255),w,b
  9777  00157E  0100               	movlb	0	; () banked
  9778  001580  6F7A               	movwf	(IntToC@i+8)& (0+255),b
  9779  001582  0100               	movlb	0	; () banked
  9780  001584  516F               	movf	(IntToC@nb+1)& (0+255),w,b
  9781  001586  0100               	movlb	0	; () banked
  9782  001588  2171               	addwfc	(??_IntToC+1)& (0+255),w,b
  9783  00158A  0100               	movlb	0	; () banked
  9784  00158C  6F7B               	movwf	(IntToC@i+9)& (0+255),b
  9785                           
  9786                           ; BSR set to: 0
  9787                           ;uart.c: 189: out[j++] = (unsigned char)(i[0] + 48);
  9788  00158E  0E35               	movlw	low IntToC@out
  9789  001590  0100               	movlb	0	; () banked
  9790  001592  257C               	addwf	IntToC@j& (0+255),w,b
  9791  001594  6ED9               	movwf	fsr2l,c
  9792  001596  0E00               	movlw	high IntToC@out
  9793  001598  0100               	movlb	0	; () banked
  9794  00159A  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
  9795  00159C  6EDA               	movwf	fsr2h,c
  9796  00159E  0100               	movlb	0	; () banked
  9797  0015A0  5172               	movf	IntToC@i& (0+255),w,b
  9798  0015A2  0F30               	addlw	48
  9799  0015A4  6EDF               	movwf	indf2,c
  9800                           
  9801                           ; BSR set to: 0
  9802  0015A6  0100               	movlb	0	; () banked
  9803  0015A8  4B7C               	infsnz	IntToC@j& (0+255),f,b
  9804  0015AA  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
  9805                           
  9806                           ; BSR set to: 0
  9807                           ;uart.c: 190: out[j++] = (unsigned char)(i[1] + 48);
  9808  0015AC  0E35               	movlw	low IntToC@out
  9809  0015AE  0100               	movlb	0	; () banked
  9810  0015B0  257C               	addwf	IntToC@j& (0+255),w,b
  9811  0015B2  6ED9               	movwf	fsr2l,c
  9812  0015B4  0E00               	movlw	high IntToC@out
  9813  0015B6  0100               	movlb	0	; () banked
  9814  0015B8  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
  9815  0015BA  6EDA               	movwf	fsr2h,c
  9816  0015BC  0100               	movlb	0	; () banked
  9817  0015BE  5174               	movf	(IntToC@i+2)& (0+255),w,b
  9818  0015C0  0F30               	addlw	48
  9819  0015C2  6EDF               	movwf	indf2,c
  9820                           
  9821                           ; BSR set to: 0
  9822  0015C4  0100               	movlb	0	; () banked
  9823  0015C6  4B7C               	infsnz	IntToC@j& (0+255),f,b
  9824  0015C8  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
  9825                           
  9826                           ; BSR set to: 0
  9827                           ;uart.c: 191: out[j++] = (unsigned char)(i[2] + 48);
  9828  0015CA  0E35               	movlw	low IntToC@out
  9829  0015CC  0100               	movlb	0	; () banked
  9830  0015CE  257C               	addwf	IntToC@j& (0+255),w,b
  9831  0015D0  6ED9               	movwf	fsr2l,c
  9832  0015D2  0E00               	movlw	high IntToC@out
  9833  0015D4  0100               	movlb	0	; () banked
  9834  0015D6  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
  9835  0015D8  6EDA               	movwf	fsr2h,c
  9836  0015DA  0100               	movlb	0	; () banked
  9837  0015DC  5176               	movf	(IntToC@i+4)& (0+255),w,b
  9838  0015DE  0F30               	addlw	48
  9839  0015E0  6EDF               	movwf	indf2,c
  9840                           
  9841                           ; BSR set to: 0
  9842  0015E2  0100               	movlb	0	; () banked
  9843  0015E4  4B7C               	infsnz	IntToC@j& (0+255),f,b
  9844  0015E6  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
  9845                           
  9846                           ; BSR set to: 0
  9847                           ;uart.c: 192: out[j++] = (unsigned char)(i[3] + 48);
  9848  0015E8  0E35               	movlw	low IntToC@out
  9849  0015EA  0100               	movlb	0	; () banked
  9850  0015EC  257C               	addwf	IntToC@j& (0+255),w,b
  9851  0015EE  6ED9               	movwf	fsr2l,c
  9852  0015F0  0E00               	movlw	high IntToC@out
  9853  0015F2  0100               	movlb	0	; () banked
  9854  0015F4  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
  9855  0015F6  6EDA               	movwf	fsr2h,c
  9856  0015F8  0100               	movlb	0	; () banked
  9857  0015FA  5178               	movf	(IntToC@i+6)& (0+255),w,b
  9858  0015FC  0F30               	addlw	48
  9859  0015FE  6EDF               	movwf	indf2,c
  9860                           
  9861                           ; BSR set to: 0
  9862  001600  0100               	movlb	0	; () banked
  9863  001602  4B7C               	infsnz	IntToC@j& (0+255),f,b
  9864  001604  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
  9865                           
  9866                           ; BSR set to: 0
  9867                           ;uart.c: 193: out[j++] = (unsigned char)(i[4] + 48);
  9868  001606  0E35               	movlw	low IntToC@out
  9869  001608  0100               	movlb	0	; () banked
  9870  00160A  257C               	addwf	IntToC@j& (0+255),w,b
  9871  00160C  6ED9               	movwf	fsr2l,c
  9872  00160E  0E00               	movlw	high IntToC@out
  9873  001610  0100               	movlb	0	; () banked
  9874  001612  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
  9875  001614  6EDA               	movwf	fsr2h,c
  9876  001616  0100               	movlb	0	; () banked
  9877  001618  517A               	movf	(IntToC@i+8)& (0+255),w,b
  9878  00161A  0F30               	addlw	48
  9879  00161C  6EDF               	movwf	indf2,c
  9880                           
  9881                           ; BSR set to: 0
  9882  00161E  0100               	movlb	0	; () banked
  9883  001620  4B7C               	infsnz	IntToC@j& (0+255),f,b
  9884  001622  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
  9885                           
  9886                           ; BSR set to: 0
  9887                           ;uart.c: 194: out[j++] = '\0';
  9888  001624  0E35               	movlw	low IntToC@out
  9889  001626  0100               	movlb	0	; () banked
  9890  001628  257C               	addwf	IntToC@j& (0+255),w,b
  9891  00162A  6ED9               	movwf	fsr2l,c
  9892  00162C  0E00               	movlw	high IntToC@out
  9893  00162E  0100               	movlb	0	; () banked
  9894  001630  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
  9895  001632  6EDA               	movwf	fsr2h,c
  9896  001634  0E00               	movlw	0
  9897  001636  6EDF               	movwf	indf2,c
  9898                           
  9899                           ; BSR set to: 0
  9900  001638  0100               	movlb	0	; () banked
  9901  00163A  4B7C               	infsnz	IntToC@j& (0+255),f,b
  9902  00163C  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
  9903                           
  9904                           ; BSR set to: 0
  9905                           ;uart.c: 196: return out;
  9906  00163E  0E35               	movlw	low IntToC@out
  9907  001640  0100               	movlb	0	; () banked
  9908  001642  6F6E               	movwf	?_IntToC& (0+255),b
  9909  001644  0E00               	movlw	high IntToC@out
  9910  001646  0100               	movlb	0	; () banked
  9911  001648  6F6F               	movwf	(?_IntToC+1)& (0+255),b
  9912  00164A  D000               	goto	l292
  9913  00164C                     l292:
  9914                           
  9915                           ; BSR set to: 0
  9916  00164C  0012               	return		;funcret
  9917  00164E                     __end_of_IntToC:
  9918                           	opt stack 0
  9919                           tblptru	equ	0xFF8
  9920                           tblptrh	equ	0xFF7
  9921                           tblptrl	equ	0xFF6
  9922                           tablat	equ	0xFF5
  9923                           prodh	equ	0xFF4
  9924                           prodl	equ	0xFF3
  9925                           intcon	equ	0xFF2
  9926                           intcon2	equ	0xFF1
  9927                           intcon3	equ	0xFF0
  9928                           indf0	equ	0xFEF
  9929                           postinc0	equ	0xFEE
  9930                           plusw0	equ	0xFEB
  9931                           fsr0h	equ	0xFEA
  9932                           fsr0l	equ	0xFE9
  9933                           wreg	equ	0xFE8
  9934                           postinc1	equ	0xFE6
  9935                           postdec1	equ	0xFE5
  9936                           plusw1	equ	0xFE3
  9937                           fsr1h	equ	0xFE2
  9938                           fsr1l	equ	0xFE1
  9939                           indf2	equ	0xFDF
  9940                           postinc2	equ	0xFDE
  9941                           postdec2	equ	0xFDD
  9942                           fsr2h	equ	0xFDA
  9943                           fsr2l	equ	0xFD9
  9944                           status	equ	0xFD8
  9945                           
  9946 ;; *************** function ___wmul *****************
  9947 ;; Defined at:
  9948 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  9949 ;; Parameters:    Size  Location     Type
  9950 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9951 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9952 ;; Auto vars:     Size  Location     Type
  9953 ;;  product         2    4[BANK0 ] unsigned int 
  9954 ;; Return value:  Size  Location     Type
  9955 ;;                  2    0[BANK0 ] unsigned int 
  9956 ;; Registers used:
  9957 ;;		wreg, status,2, status,0, prodl, prodh
  9958 ;; Tracked objects:
  9959 ;;		On entry : 0/0
  9960 ;;		On exit  : 0/0
  9961 ;;		Unchanged: 0/0
  9962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9963 ;;      Params:         0       4       0       0
  9964 ;;      Locals:         0       2       0       0
  9965 ;;      Temps:          0       0       0       0
  9966 ;;      Totals:         0       6       0       0
  9967 ;;Total ram usage:        6 bytes
  9968 ;; Hardware stack levels used:    1
  9969 ;; Hardware stack levels required when called:    6
  9970 ;; This function calls:
  9971 ;;		Nothing
  9972 ;; This function is called by:
  9973 ;;		_main
  9974 ;;		_IntToC
  9975 ;;		_eval_poly
  9976 ;; This function uses a non-reentrant model
  9977 ;;
  9978                           
  9979                           	psect	text41
  9980  003468                     __ptext41:
  9981                           	opt stack 0
  9982  003468                     ___wmul:
  9983                           	opt stack 19
  9984                           
  9985                           ; BSR set to: 0
  9986                           ;incstack = 0
  9987  003468  0100               	movlb	0	; () banked
  9988  00346A  5160               	movf	___wmul@multiplier& (0+255),w,b
  9989  00346C  0100               	movlb	0	; () banked
  9990  00346E  0362               	mulwf	___wmul@multiplicand& (0+255),b
  9991  003470  CFF3 F064          	movff	prodl,___wmul@product
  9992  003474  CFF4 F065          	movff	prodh,___wmul@product+1
  9993  003478  0100               	movlb	0	; () banked
  9994  00347A  5160               	movf	___wmul@multiplier& (0+255),w,b
  9995  00347C  0100               	movlb	0	; () banked
  9996  00347E  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9997  003480  50F3               	movf	prodl,w,c
  9998  003482  0100               	movlb	0	; () banked
  9999  003484  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10000  003486  0100               	movlb	0	; () banked
 10001  003488  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10002  00348A  0100               	movlb	0	; () banked
 10003  00348C  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10004  00348E  50F3               	movf	prodl,w,c
 10005  003490  0100               	movlb	0	; () banked
 10006  003492  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10007                           
 10008                           ; BSR set to: 0
 10009  003494  C064  F060         	movff	___wmul@product,?___wmul
 10010  003498  C065  F061         	movff	___wmul@product+1,?___wmul+1
 10011  00349C  D000               	goto	l539
 10012  00349E                     l539:
 10013                           
 10014                           ; BSR set to: 0
 10015  00349E  0012               	return		;funcret
 10016  0034A0                     __end_of___wmul:
 10017                           	opt stack 0
 10018                           tblptru	equ	0xFF8
 10019                           tblptrh	equ	0xFF7
 10020                           tblptrl	equ	0xFF6
 10021                           tablat	equ	0xFF5
 10022                           prodh	equ	0xFF4
 10023                           prodl	equ	0xFF3
 10024                           intcon	equ	0xFF2
 10025                           intcon2	equ	0xFF1
 10026                           intcon3	equ	0xFF0
 10027                           indf0	equ	0xFEF
 10028                           postinc0	equ	0xFEE
 10029                           plusw0	equ	0xFEB
 10030                           fsr0h	equ	0xFEA
 10031                           fsr0l	equ	0xFE9
 10032                           wreg	equ	0xFE8
 10033                           postinc1	equ	0xFE6
 10034                           postdec1	equ	0xFE5
 10035                           plusw1	equ	0xFE3
 10036                           fsr1h	equ	0xFE2
 10037                           fsr1l	equ	0xFE1
 10038                           indf2	equ	0xFDF
 10039                           postinc2	equ	0xFDE
 10040                           postdec2	equ	0xFDD
 10041                           fsr2h	equ	0xFDA
 10042                           fsr2l	equ	0xFD9
 10043                           status	equ	0xFD8
 10044                           
 10045 ;; *************** function ___awdiv *****************
 10046 ;; Defined at:
 10047 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 10048 ;; Parameters:    Size  Location     Type
 10049 ;;  dividend        2    6[BANK0 ] int 
 10050 ;;  divisor         2    8[BANK0 ] int 
 10051 ;; Auto vars:     Size  Location     Type
 10052 ;;  quotient        2   12[BANK0 ] int 
 10053 ;;  sign            1   11[BANK0 ] unsigned char 
 10054 ;;  counter         1   10[BANK0 ] unsigned char 
 10055 ;; Return value:  Size  Location     Type
 10056 ;;                  2    6[BANK0 ] int 
 10057 ;; Registers used:
 10058 ;;		wreg, status,2, status,0
 10059 ;; Tracked objects:
 10060 ;;		On entry : 0/0
 10061 ;;		On exit  : 0/0
 10062 ;;		Unchanged: 0/0
 10063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10064 ;;      Params:         0       4       0       0
 10065 ;;      Locals:         0       4       0       0
 10066 ;;      Temps:          0       0       0       0
 10067 ;;      Totals:         0       8       0       0
 10068 ;;Total ram usage:        8 bytes
 10069 ;; Hardware stack levels used:    1
 10070 ;; Hardware stack levels required when called:    6
 10071 ;; This function calls:
 10072 ;;		Nothing
 10073 ;; This function is called by:
 10074 ;;		_PutcUART
 10075 ;;		_IntToC
 10076 ;; This function uses a non-reentrant model
 10077 ;;
 10078                           
 10079                           	psect	text42
 10080  0028A8                     __ptext42:
 10081                           	opt stack 0
 10082  0028A8                     ___awdiv:
 10083                           	opt stack 21
 10084                           
 10085                           ; BSR set to: 0
 10086                           ;incstack = 0
 10087  0028A8  0E00               	movlw	0
 10088  0028AA  0100               	movlb	0	; () banked
 10089  0028AC  6F6B               	movwf	___awdiv@sign& (0+255),b
 10090                           
 10091                           ; BSR set to: 0
 10092  0028AE  0100               	movlb	0	; () banked
 10093  0028B0  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10094  0028B2  D009               	goto	l3850
 10095                           
 10096                           ; BSR set to: 0
 10097  0028B4  0100               	movlb	0	; () banked
 10098  0028B6  6D68               	negf	___awdiv@divisor& (0+255),b
 10099  0028B8  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10100  0028BA  B0D8               	btfsc	status,0,c
 10101  0028BC  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10102                           
 10103                           ; BSR set to: 0
 10104  0028BE  0E01               	movlw	1
 10105  0028C0  0100               	movlb	0	; () banked
 10106  0028C2  6F6B               	movwf	___awdiv@sign& (0+255),b
 10107  0028C4  D000               	goto	l3850
 10108  0028C6                     l3850:
 10109                           
 10110                           ; BSR set to: 0
 10111  0028C6  0100               	movlb	0	; () banked
 10112  0028C8  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10113  0028CA  D009               	goto	l3856
 10114                           
 10115                           ; BSR set to: 0
 10116  0028CC  0100               	movlb	0	; () banked
 10117  0028CE  6D66               	negf	___awdiv@dividend& (0+255),b
 10118  0028D0  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10119  0028D2  B0D8               	btfsc	status,0,c
 10120  0028D4  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10121                           
 10122                           ; BSR set to: 0
 10123  0028D6  0E01               	movlw	1
 10124  0028D8  0100               	movlb	0	; () banked
 10125  0028DA  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
 10126  0028DC  D000               	goto	l3856
 10127  0028DE                     l3856:
 10128                           
 10129                           ; BSR set to: 0
 10130  0028DE  0E00               	movlw	0
 10131  0028E0  0100               	movlb	0	; () banked
 10132  0028E2  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
 10133  0028E4  0E00               	movlw	0
 10134  0028E6  6F6C               	movwf	___awdiv@quotient& (0+255),b
 10135                           
 10136                           ; BSR set to: 0
 10137  0028E8  0100               	movlb	0	; () banked
 10138  0028EA  5168               	movf	___awdiv@divisor& (0+255),w,b
 10139  0028EC  0100               	movlb	0	; () banked
 10140  0028EE  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10141  0028F0  B4D8               	btfsc	status,2,c
 10142  0028F2  D031               	goto	l3878
 10143                           
 10144                           ; BSR set to: 0
 10145  0028F4  0E01               	movlw	1
 10146  0028F6  0100               	movlb	0	; () banked
 10147  0028F8  6F6A               	movwf	___awdiv@counter& (0+255),b
 10148  0028FA  D007               	goto	l3864
 10149  0028FC                     l3862:
 10150                           
 10151                           ; BSR set to: 0
 10152  0028FC  0100               	movlb	0	; () banked
 10153  0028FE  90D8               	bcf	status,0,c
 10154  002900  3768               	rlcf	___awdiv@divisor& (0+255),f,b
 10155  002902  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10156  002904  0100               	movlb	0	; () banked
 10157  002906  2B6A               	incf	___awdiv@counter& (0+255),f,b
 10158  002908  D000               	goto	l3864
 10159  00290A                     l3864:
 10160                           
 10161                           ; BSR set to: 0
 10162  00290A  0100               	movlb	0	; () banked
 10163  00290C  BF69               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 10164  00290E  D002               	goto	l3866
 10165  002910  D7F5               	goto	l3862
 10166                           
 10167                           ; BSR set to: 0
 10168  002912  D000               	goto	l3866
 10169  002914                     l3866:
 10170                           
 10171                           ; BSR set to: 0
 10172  002914  0100               	movlb	0	; () banked
 10173  002916  90D8               	bcf	status,0,c
 10174  002918  376C               	rlcf	___awdiv@quotient& (0+255),f,b
 10175  00291A  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10176                           
 10177                           ; BSR set to: 0
 10178  00291C  0100               	movlb	0	; () banked
 10179  00291E  5168               	movf	___awdiv@divisor& (0+255),w,b
 10180  002920  0100               	movlb	0	; () banked
 10181  002922  5D66               	subwf	___awdiv@dividend& (0+255),w,b
 10182  002924  0100               	movlb	0	; () banked
 10183  002926  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10184  002928  0100               	movlb	0	; () banked
 10185  00292A  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10186  00292C  A0D8               	btfss	status,0,c
 10187  00292E  D00B               	goto	l3874
 10188                           
 10189                           ; BSR set to: 0
 10190  002930  0100               	movlb	0	; () banked
 10191  002932  5168               	movf	___awdiv@divisor& (0+255),w,b
 10192  002934  0100               	movlb	0	; () banked
 10193  002936  5F66               	subwf	___awdiv@dividend& (0+255),f,b
 10194  002938  0100               	movlb	0	; () banked
 10195  00293A  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10196  00293C  0100               	movlb	0	; () banked
 10197  00293E  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10198                           
 10199                           ; BSR set to: 0
 10200  002940  0100               	movlb	0	; () banked
 10201  002942  816C               	bsf	___awdiv@quotient& (0+255),0,b
 10202  002944  D000               	goto	l3874
 10203  002946                     l3874:
 10204                           
 10205                           ; BSR set to: 0
 10206  002946  0100               	movlb	0	; () banked
 10207  002948  90D8               	bcf	status,0,c
 10208  00294A  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10209  00294C  3368               	rrcf	___awdiv@divisor& (0+255),f,b
 10210                           
 10211                           ; BSR set to: 0
 10212  00294E  0100               	movlb	0	; () banked
 10213  002950  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
 10214  002952  D7E0               	goto	l3866
 10215                           
 10216                           ; BSR set to: 0
 10217  002954  D000               	goto	l3878
 10218  002956                     l3878:
 10219                           
 10220                           ; BSR set to: 0
 10221  002956  0100               	movlb	0	; () banked
 10222  002958  516B               	movf	___awdiv@sign& (0+255),w,b
 10223  00295A  0100               	movlb	0	; () banked
 10224  00295C  B4D8               	btfsc	status,2,c
 10225  00295E  D006               	goto	l3882
 10226                           
 10227                           ; BSR set to: 0
 10228  002960  0100               	movlb	0	; () banked
 10229  002962  6D6C               	negf	___awdiv@quotient& (0+255),b
 10230  002964  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10231  002966  B0D8               	btfsc	status,0,c
 10232  002968  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10233  00296A  D000               	goto	l3882
 10234  00296C                     l3882:
 10235                           
 10236                           ; BSR set to: 0
 10237  00296C  C06C  F066         	movff	___awdiv@quotient,?___awdiv
 10238  002970  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
 10239  002974  D000               	goto	l732
 10240  002976                     l732:
 10241                           
 10242                           ; BSR set to: 0
 10243  002976  0012               	return		;funcret
 10244  002978                     __end_of___awdiv:
 10245                           	opt stack 0
 10246                           tblptru	equ	0xFF8
 10247                           tblptrh	equ	0xFF7
 10248                           tblptrl	equ	0xFF6
 10249                           tablat	equ	0xFF5
 10250                           prodh	equ	0xFF4
 10251                           prodl	equ	0xFF3
 10252                           intcon	equ	0xFF2
 10253                           intcon2	equ	0xFF1
 10254                           intcon3	equ	0xFF0
 10255                           indf0	equ	0xFEF
 10256                           postinc0	equ	0xFEE
 10257                           plusw0	equ	0xFEB
 10258                           fsr0h	equ	0xFEA
 10259                           fsr0l	equ	0xFE9
 10260                           wreg	equ	0xFE8
 10261                           postinc1	equ	0xFE6
 10262                           postdec1	equ	0xFE5
 10263                           plusw1	equ	0xFE3
 10264                           fsr1h	equ	0xFE2
 10265                           fsr1l	equ	0xFE1
 10266                           indf2	equ	0xFDF
 10267                           postinc2	equ	0xFDE
 10268                           postdec2	equ	0xFDD
 10269                           fsr2h	equ	0xFDA
 10270                           fsr2l	equ	0xFD9
 10271                           status	equ	0xFD8
 10272                           
 10273 ;; *************** function _low_isr *****************
 10274 ;; Defined at:
 10275 ;;		line 33 in file "interruptions.c"
 10276 ;; Parameters:    Size  Location     Type
 10277 ;;		None
 10278 ;; Auto vars:     Size  Location     Type
 10279 ;;		None
 10280 ;; Return value:  Size  Location     Type
 10281 ;;		None               void
 10282 ;; Registers used:
 10283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10284 ;; Tracked objects:
 10285 ;;		On entry : 0/0
 10286 ;;		On exit  : 0/0
 10287 ;;		Unchanged: 0/0
 10288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10289 ;;      Params:         0       0       0       0
 10290 ;;      Locals:         0       0       0       0
 10291 ;;      Temps:         17       0       0       0
 10292 ;;      Totals:        17       0       0       0
 10293 ;;Total ram usage:       17 bytes
 10294 ;; Hardware stack levels used:    1
 10295 ;; Hardware stack levels required when called:    5
 10296 ;; This function calls:
 10297 ;;		_subroutine_interruptions
 10298 ;; This function is called by:
 10299 ;;		Interrupt level 1
 10300 ;; This function uses a non-reentrant model
 10301 ;;
 10302                           
 10303                           	psect	intcodelo
 10304  000018                     __pintcodelo:
 10305                           	opt stack 0
 10306  000018                     _low_isr:
 10307                           	opt stack 17
 10308                           
 10309                           ; BSR set to: 0
 10310                           ;incstack = 0
 10311  000018  CFD8 F004          	movff	status,??_low_isr
 10312  00001C  CFE8 F005          	movff	wreg,??_low_isr+1
 10313  000020  CFE0 F006          	movff	bsr,??_low_isr+2
 10314  000024  CFFA F007          	movff	pclath,??_low_isr+3
 10315  000028  CFFB F008          	movff	pclatu,??_low_isr+4
 10316  00002C  CFE9 F009          	movff	fsr0l,??_low_isr+5
 10317  000030  CFEA F00A          	movff	fsr0h,??_low_isr+6
 10318  000034  CFE1 F00B          	movff	fsr1l,??_low_isr+7
 10319  000038  CFE2 F00C          	movff	fsr1h,??_low_isr+8
 10320  00003C  CFD9 F00D          	movff	fsr2l,??_low_isr+9
 10321  000040  CFDA F00E          	movff	fsr2h,??_low_isr+10
 10322  000044  CFF3 F00F          	movff	prodl,??_low_isr+11
 10323  000048  CFF4 F010          	movff	prodh,??_low_isr+12
 10324  00004C  CFF6 F011          	movff	tblptrl,??_low_isr+13
 10325  000050  CFF7 F012          	movff	tblptrh,??_low_isr+14
 10326  000054  CFF8 F013          	movff	tblptru,??_low_isr+15
 10327  000058  CFF5 F014          	movff	tablat,??_low_isr+16
 10328                           
 10329                           ;interruptions.c: 35: subroutine_interruptions(0b0);
 10330  00005C  0E00               	movlw	0
 10331  00005E  ECEB  F016         	call	_subroutine_interruptions
 10332  000062  C014  FFF5         	movff	??_low_isr+16,tablat
 10333  000066  C013  FFF8         	movff	??_low_isr+15,tblptru
 10334  00006A  C012  FFF7         	movff	??_low_isr+14,tblptrh
 10335  00006E  C011  FFF6         	movff	??_low_isr+13,tblptrl
 10336  000072  C010  FFF4         	movff	??_low_isr+12,prodh
 10337  000076  C00F  FFF3         	movff	??_low_isr+11,prodl
 10338  00007A  C00E  FFDA         	movff	??_low_isr+10,fsr2h
 10339  00007E  C00D  FFD9         	movff	??_low_isr+9,fsr2l
 10340  000082  C00C  FFE2         	movff	??_low_isr+8,fsr1h
 10341  000086  C00B  FFE1         	movff	??_low_isr+7,fsr1l
 10342  00008A  C00A  FFEA         	movff	??_low_isr+6,fsr0h
 10343  00008E  C009  FFE9         	movff	??_low_isr+5,fsr0l
 10344  000092  C008  FFFB         	movff	??_low_isr+4,pclatu
 10345  000096  C007  FFFA         	movff	??_low_isr+3,pclath
 10346  00009A  C006  FFE0         	movff	??_low_isr+2,bsr
 10347  00009E  C005  FFE8         	movff	??_low_isr+1,wreg
 10348  0000A2  C004  FFD8         	movff	??_low_isr,status
 10349  0000A6  0010               	retfie	
 10350  0000A8                     __end_of_low_isr:
 10351                           	opt stack 0
 10352                           pclatu	equ	0xFFB
 10353                           pclath	equ	0xFFA
 10354                           tblptru	equ	0xFF8
 10355                           tblptrh	equ	0xFF7
 10356                           tblptrl	equ	0xFF6
 10357                           tablat	equ	0xFF5
 10358                           prodh	equ	0xFF4
 10359                           prodl	equ	0xFF3
 10360                           intcon	equ	0xFF2
 10361                           intcon2	equ	0xFF1
 10362                           intcon3	equ	0xFF0
 10363                           indf0	equ	0xFEF
 10364                           postinc0	equ	0xFEE
 10365                           plusw0	equ	0xFEB
 10366                           fsr0h	equ	0xFEA
 10367                           fsr0l	equ	0xFE9
 10368                           wreg	equ	0xFE8
 10369                           postinc1	equ	0xFE6
 10370                           postdec1	equ	0xFE5
 10371                           plusw1	equ	0xFE3
 10372                           fsr1h	equ	0xFE2
 10373                           fsr1l	equ	0xFE1
 10374                           bsr	equ	0xFE0
 10375                           indf2	equ	0xFDF
 10376                           postinc2	equ	0xFDE
 10377                           postdec2	equ	0xFDD
 10378                           fsr2h	equ	0xFDA
 10379                           fsr2l	equ	0xFD9
 10380                           status	equ	0xFD8
 10381                           
 10382 ;; *************** function _subroutine_interruptions *****************
 10383 ;; Defined at:
 10384 ;;		line 43 in file "interruptions.c"
 10385 ;; Parameters:    Size  Location     Type
 10386 ;;  priorite        1    wreg     unsigned char 
 10387 ;; Auto vars:     Size  Location     Type
 10388 ;;  priorite        1    2[COMRAM] unsigned char 
 10389 ;; Return value:  Size  Location     Type
 10390 ;;		None               void
 10391 ;; Registers used:
 10392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10393 ;; Tracked objects:
 10394 ;;		On entry : 0/0
 10395 ;;		On exit  : 0/0
 10396 ;;		Unchanged: 0/0
 10397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10398 ;;      Params:         0       0       0       0
 10399 ;;      Locals:         1       0       0       0
 10400 ;;      Temps:          0       0       0       0
 10401 ;;      Totals:         1       0       0       0
 10402 ;;Total ram usage:        1 bytes
 10403 ;; Hardware stack levels used:    1
 10404 ;; Hardware stack levels required when called:    4
 10405 ;; This function calls:
 10406 ;;		_interrupt_RX
 10407 ;;		_interrupt_TX
 10408 ;;		_interruption_INT0
 10409 ;;		_interruption_QEI
 10410 ;;		_interruption_timer0
 10411 ;;		_interruption_timer1
 10412 ;;		_interruption_timer2
 10413 ;;		_interuption_QEI_sens
 10414 ;; This function is called by:
 10415 ;;		_low_isr
 10416 ;; This function uses a non-reentrant model
 10417 ;;
 10418                           
 10419                           	psect	text44
 10420  002DD6                     __ptext44:
 10421                           	opt stack 0
 10422  002DD6                     _subroutine_interruptions:
 10423                           	opt stack 17
 10424                           
 10425                           ;incstack = 0
 10426                           ;subroutine_interruptions@priorite stored from wreg
 10427  002DD6  6E03               	movwf	subroutine_interruptions@priorite,c
 10428                           
 10429                           ;interruptions.c: 45: if ( PIR3bits.IC2QEIF == 1 && 0b1 == 1 && priorite == 0b1)
 10430  002DD8  A4A4               	btfss	4004,2,c	;volatile
 10431  002DDA  D006               	goto	i1l354
 10432  002DDC  0403               	decf	subroutine_interruptions@priorite,w,c
 10433  002DDE  A4D8               	btfss	status,2,c
 10434  002DE0  D003               	goto	i1l354
 10435                           
 10436                           ;interruptions.c: 46: {
 10437                           ;interruptions.c: 47: interruption_QEI();
 10438  002DE2  EC91  F01A         	call	_interruption_QEI	;wreg free
 10439                           
 10440                           ;interruptions.c: 48: }
 10441  002DE6  D038               	goto	i1l369
 10442  002DE8                     i1l354:
 10443                           
 10444                           ;interruptions.c: 49: else if ( PIR3bits.IC3DRIF == 1 && 0b0 == 1 && priorite == 0b1)
 10445  002DE8  50A4               	movf	4004,w,c	;volatile
 10446  002DEA  D006               	goto	i1l356
 10447  002DEC  0403               	decf	subroutine_interruptions@priorite,w,c
 10448  002DEE  A4D8               	btfss	status,2,c
 10449  002DF0  D003               	goto	i1l356
 10450                           
 10451                           ;interruptions.c: 50: {
 10452                           ;interruptions.c: 51: interuption_QEI_sens();
 10453  002DF2  EC0A  F01B         	call	_interuption_QEI_sens	;wreg free
 10454                           
 10455                           ;interruptions.c: 52: }
 10456  002DF6  D030               	goto	i1l369
 10457  002DF8                     i1l356:
 10458                           
 10459                           ;interruptions.c: 53: else if ( INTCONbits.TMR0IF == 1 && 0b1 == 1 && priorite == 0b0)
 10460  002DF8  A4F2               	btfss	intcon,2,c	;volatile
 10461  002DFA  D006               	goto	i1l358
 10462  002DFC  5003               	movf	subroutine_interruptions@priorite,w,c
 10463  002DFE  A4D8               	btfss	status,2,c
 10464  002E00  D003               	goto	i1l358
 10465                           
 10466                           ;interruptions.c: 54: {
 10467                           ;interruptions.c: 55: interruption_timer0();
 10468  002E02  ECFE  F01A         	call	_interruption_timer0	;wreg free
 10469                           
 10470                           ;interruptions.c: 56: }
 10471  002E06  D028               	goto	i1l369
 10472  002E08                     i1l358:
 10473                           
 10474                           ;interruptions.c: 57: else if ( PIR1bits.TMR1IF == 1 && 0b1 == 1 && priorite == 0b1)
 10475  002E08  A09E               	btfss	3998,0,c	;volatile
 10476  002E0A  D006               	goto	i1l360
 10477  002E0C  0403               	decf	subroutine_interruptions@priorite,w,c
 10478  002E0E  A4D8               	btfss	status,2,c
 10479  002E10  D003               	goto	i1l360
 10480                           
 10481                           ;interruptions.c: 58: {
 10482                           ;interruptions.c: 59: interruption_timer1();
 10483  002E12  EC76  F019         	call	_interruption_timer1	;wreg free
 10484                           
 10485                           ;interruptions.c: 60: }
 10486  002E16  D020               	goto	i1l369
 10487  002E18                     i1l360:
 10488                           
 10489                           ;interruptions.c: 61: else if ( PIR1bits.TMR2IF == 1 && 0b0 == 1 && priorite == 0b0)
 10490  002E18  509E               	movf	3998,w,c	;volatile
 10491  002E1A  D006               	goto	i1l362
 10492  002E1C  5003               	movf	subroutine_interruptions@priorite,w,c
 10493  002E1E  A4D8               	btfss	status,2,c
 10494  002E20  D003               	goto	i1l362
 10495                           
 10496                           ;interruptions.c: 62: {
 10497                           ;interruptions.c: 63: interruption_timer2();
 10498  002E22  EC0C  F01B         	call	_interruption_timer2	;wreg free
 10499                           
 10500                           ;interruptions.c: 64: }
 10501  002E26  D018               	goto	i1l369
 10502  002E28                     i1l362:
 10503                           
 10504                           ;interruptions.c: 65: else if (INTCONbits.INT0IF == 1 && 0b1 == 1 && priorite == 0b1)
 10505  002E28  A2F2               	btfss	intcon,1,c	;volatile
 10506  002E2A  D006               	goto	i1l364
 10507  002E2C  0403               	decf	subroutine_interruptions@priorite,w,c
 10508  002E2E  A4D8               	btfss	status,2,c
 10509  002E30  D003               	goto	i1l364
 10510                           
 10511                           ;interruptions.c: 66: {
 10512                           ;interruptions.c: 67: interruption_INT0();
 10513  002E32  EC08  F019         	call	_interruption_INT0	;wreg free
 10514                           
 10515                           ;interruptions.c: 68: }
 10516  002E36  D010               	goto	i1l369
 10517  002E38                     i1l364:
 10518                           
 10519                           ;interruptions.c: 85: else if ( PIR1bits.RCIF == 1 && 0b1 == 1 && priorite == 0b1)
 10520  002E38  AA9E               	btfss	3998,5,c	;volatile
 10521  002E3A  D006               	goto	i1l366
 10522  002E3C  0403               	decf	subroutine_interruptions@priorite,w,c
 10523  002E3E  A4D8               	btfss	status,2,c
 10524  002E40  D003               	goto	i1l366
 10525                           
 10526                           ;interruptions.c: 86: {
 10527                           ;interruptions.c: 87: interrupt_RX();
 10528  002E42  ECDC  F019         	call	_interrupt_RX	;wreg free
 10529                           
 10530                           ;interruptions.c: 88: }
 10531  002E46  D008               	goto	i1l369
 10532  002E48                     i1l366:
 10533                           
 10534                           ;interruptions.c: 89: else if (PIR1bits.TXIF == 1 && 0b0 == 1 && priorite == 0b0)
 10535  002E48  509E               	movf	3998,w,c	;volatile
 10536  002E4A  D006               	goto	i1l369
 10537  002E4C  5003               	movf	subroutine_interruptions@priorite,w,c
 10538  002E4E  A4D8               	btfss	status,2,c
 10539  002E50  D003               	goto	i1l369
 10540                           
 10541                           ;interruptions.c: 90: {
 10542                           ;interruptions.c: 91: interrupt_TX();
 10543  002E52  EC0E  F01B         	call	_interrupt_TX	;wreg free
 10544  002E56  D000               	goto	i1l369
 10545  002E58                     i1l369:
 10546  002E58  0012               	return		;funcret
 10547  002E5A                     __end_of_subroutine_interruptions:
 10548                           	opt stack 0
 10549                           pclatu	equ	0xFFB
 10550                           pclath	equ	0xFFA
 10551                           tblptru	equ	0xFF8
 10552                           tblptrh	equ	0xFF7
 10553                           tblptrl	equ	0xFF6
 10554                           tablat	equ	0xFF5
 10555                           prodh	equ	0xFF4
 10556                           prodl	equ	0xFF3
 10557                           intcon	equ	0xFF2
 10558                           intcon2	equ	0xFF1
 10559                           intcon3	equ	0xFF0
 10560                           indf0	equ	0xFEF
 10561                           postinc0	equ	0xFEE
 10562                           plusw0	equ	0xFEB
 10563                           fsr0h	equ	0xFEA
 10564                           fsr0l	equ	0xFE9
 10565                           wreg	equ	0xFE8
 10566                           postinc1	equ	0xFE6
 10567                           postdec1	equ	0xFE5
 10568                           plusw1	equ	0xFE3
 10569                           fsr1h	equ	0xFE2
 10570                           fsr1l	equ	0xFE1
 10571                           bsr	equ	0xFE0
 10572                           indf2	equ	0xFDF
 10573                           postinc2	equ	0xFDE
 10574                           postdec2	equ	0xFDD
 10575                           fsr2h	equ	0xFDA
 10576                           fsr2l	equ	0xFD9
 10577                           status	equ	0xFD8
 10578                           
 10579 ;; *************** function _interuption_QEI_sens *****************
 10580 ;; Defined at:
 10581 ;;		line 196 in file "interruptions.c"
 10582 ;; Parameters:    Size  Location     Type
 10583 ;;		None
 10584 ;; Auto vars:     Size  Location     Type
 10585 ;;		None
 10586 ;; Return value:  Size  Location     Type
 10587 ;;		None               void
 10588 ;; Registers used:
 10589 ;;		None
 10590 ;; Tracked objects:
 10591 ;;		On entry : 0/0
 10592 ;;		On exit  : 0/0
 10593 ;;		Unchanged: 0/0
 10594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10595 ;;      Params:         0       0       0       0
 10596 ;;      Locals:         0       0       0       0
 10597 ;;      Temps:          0       0       0       0
 10598 ;;      Totals:         0       0       0       0
 10599 ;;Total ram usage:        0 bytes
 10600 ;; Hardware stack levels used:    1
 10601 ;; Hardware stack levels required when called:    3
 10602 ;; This function calls:
 10603 ;;		Nothing
 10604 ;; This function is called by:
 10605 ;;		_subroutine_interruptions
 10606 ;; This function uses a non-reentrant model
 10607 ;;
 10608                           
 10609                           	psect	text45
 10610  003614                     __ptext45:
 10611                           	opt stack 0
 10612  003614                     _interuption_QEI_sens:
 10613                           	opt stack 17
 10614                           
 10615                           ;interruptions.c: 198: PIR3bits.IC3DRIF = 0;
 10616                           
 10617                           ;incstack = 0
 10618  003614  96A4               	bcf	4004,3,c	;volatile
 10619  003616  0012               	return		;funcret
 10620  003618                     __end_of_interuption_QEI_sens:
 10621                           	opt stack 0
 10622                           pclatu	equ	0xFFB
 10623                           pclath	equ	0xFFA
 10624                           tblptru	equ	0xFF8
 10625                           tblptrh	equ	0xFF7
 10626                           tblptrl	equ	0xFF6
 10627                           tablat	equ	0xFF5
 10628                           prodh	equ	0xFF4
 10629                           prodl	equ	0xFF3
 10630                           intcon	equ	0xFF2
 10631                           intcon2	equ	0xFF1
 10632                           intcon3	equ	0xFF0
 10633                           indf0	equ	0xFEF
 10634                           postinc0	equ	0xFEE
 10635                           plusw0	equ	0xFEB
 10636                           fsr0h	equ	0xFEA
 10637                           fsr0l	equ	0xFE9
 10638                           wreg	equ	0xFE8
 10639                           postinc1	equ	0xFE6
 10640                           postdec1	equ	0xFE5
 10641                           plusw1	equ	0xFE3
 10642                           fsr1h	equ	0xFE2
 10643                           fsr1l	equ	0xFE1
 10644                           bsr	equ	0xFE0
 10645                           indf2	equ	0xFDF
 10646                           postinc2	equ	0xFDE
 10647                           postdec2	equ	0xFDD
 10648                           fsr2h	equ	0xFDA
 10649                           fsr2l	equ	0xFD9
 10650                           status	equ	0xFD8
 10651                           
 10652 ;; *************** function _interruption_timer2 *****************
 10653 ;; Defined at:
 10654 ;;		line 132 in file "interruptions.c"
 10655 ;; Parameters:    Size  Location     Type
 10656 ;;		None
 10657 ;; Auto vars:     Size  Location     Type
 10658 ;;		None
 10659 ;; Return value:  Size  Location     Type
 10660 ;;		None               void
 10661 ;; Registers used:
 10662 ;;		None
 10663 ;; Tracked objects:
 10664 ;;		On entry : 0/0
 10665 ;;		On exit  : 0/0
 10666 ;;		Unchanged: 0/0
 10667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10668 ;;      Params:         0       0       0       0
 10669 ;;      Locals:         0       0       0       0
 10670 ;;      Temps:          0       0       0       0
 10671 ;;      Totals:         0       0       0       0
 10672 ;;Total ram usage:        0 bytes
 10673 ;; Hardware stack levels used:    1
 10674 ;; Hardware stack levels required when called:    3
 10675 ;; This function calls:
 10676 ;;		Nothing
 10677 ;; This function is called by:
 10678 ;;		_subroutine_interruptions
 10679 ;; This function uses a non-reentrant model
 10680 ;;
 10681                           
 10682                           	psect	text46
 10683  003618                     __ptext46:
 10684                           	opt stack 0
 10685  003618                     _interruption_timer2:
 10686                           	opt stack 17
 10687                           
 10688                           ;interruptions.c: 134: PIR1bits.TMR2IF = 0;
 10689                           
 10690                           ;incstack = 0
 10691  003618  929E               	bcf	3998,1,c	;volatile
 10692  00361A  0012               	return		;funcret
 10693  00361C                     __end_of_interruption_timer2:
 10694                           	opt stack 0
 10695                           pclatu	equ	0xFFB
 10696                           pclath	equ	0xFFA
 10697                           tblptru	equ	0xFF8
 10698                           tblptrh	equ	0xFF7
 10699                           tblptrl	equ	0xFF6
 10700                           tablat	equ	0xFF5
 10701                           prodh	equ	0xFF4
 10702                           prodl	equ	0xFF3
 10703                           intcon	equ	0xFF2
 10704                           intcon2	equ	0xFF1
 10705                           intcon3	equ	0xFF0
 10706                           indf0	equ	0xFEF
 10707                           postinc0	equ	0xFEE
 10708                           plusw0	equ	0xFEB
 10709                           fsr0h	equ	0xFEA
 10710                           fsr0l	equ	0xFE9
 10711                           wreg	equ	0xFE8
 10712                           postinc1	equ	0xFE6
 10713                           postdec1	equ	0xFE5
 10714                           plusw1	equ	0xFE3
 10715                           fsr1h	equ	0xFE2
 10716                           fsr1l	equ	0xFE1
 10717                           bsr	equ	0xFE0
 10718                           indf2	equ	0xFDF
 10719                           postinc2	equ	0xFDE
 10720                           postdec2	equ	0xFDD
 10721                           fsr2h	equ	0xFDA
 10722                           fsr2l	equ	0xFD9
 10723                           status	equ	0xFD8
 10724                           
 10725 ;; *************** function _interruption_timer1 *****************
 10726 ;; Defined at:
 10727 ;;		line 115 in file "interruptions.c"
 10728 ;; Parameters:    Size  Location     Type
 10729 ;;		None
 10730 ;; Auto vars:     Size  Location     Type
 10731 ;;		None
 10732 ;; Return value:  Size  Location     Type
 10733 ;;		None               void
 10734 ;; Registers used:
 10735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10736 ;; Tracked objects:
 10737 ;;		On entry : 0/0
 10738 ;;		On exit  : 0/0
 10739 ;;		Unchanged: 0/0
 10740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10741 ;;      Params:         0       0       0       0
 10742 ;;      Locals:         0       0       0       0
 10743 ;;      Temps:          1       0       0       0
 10744 ;;      Totals:         1       0       0       0
 10745 ;;Total ram usage:        1 bytes
 10746 ;; Hardware stack levels used:    1
 10747 ;; Hardware stack levels required when called:    3
 10748 ;; This function calls:
 10749 ;;		Nothing
 10750 ;; This function is called by:
 10751 ;;		_subroutine_interruptions
 10752 ;; This function uses a non-reentrant model
 10753 ;;
 10754                           
 10755                           	psect	text47
 10756  0032EC                     __ptext47:
 10757                           	opt stack 0
 10758  0032EC                     _interruption_timer1:
 10759                           	opt stack 17
 10760                           
 10761                           ;interruptions.c: 117: PIR1bits.TMR1IF = 0;
 10762                           
 10763                           ;incstack = 0
 10764  0032EC  909E               	bcf	3998,0,c	;volatile
 10765                           
 10766                           ;interruptions.c: 118: TMR1 = 65535 - 810;
 10767  0032EE  0EFC               	movlw	252
 10768  0032F0  6ECF               	movwf	4047,c	;volatile
 10769  0032F2  0ED5               	movlw	213
 10770  0032F4  6ECE               	movwf	4046,c	;volatile
 10771                           
 10772                           ;interruptions.c: 120: if (uart_logiciel.transmission_en_cours == 1)
 10773  0032F6  0433               	decf	_uart_logiciel+11,w,c
 10774  0032F8  A4D8               	btfss	status,2,c
 10775  0032FA  D018               	goto	i1l375
 10776                           
 10777                           ;interruptions.c: 121: {
 10778                           ;interruptions.c: 122: PORTCbits.RC5 = uart_logiciel.buffer_uart[uart_logiciel.indice];
 10779  0032FC  5034               	movf	_uart_logiciel+12,w,c
 10780  0032FE  0D01               	mullw	1
 10781  003300  0E28               	movlw	low _uart_logiciel
 10782  003302  24F3               	addwf	prodl,w,c
 10783  003304  6ED9               	movwf	fsr2l,c
 10784  003306  0E00               	movlw	high _uart_logiciel
 10785  003308  20F4               	addwfc	prodh,w,c
 10786  00330A  6EDA               	movwf	fsr2h,c
 10787  00330C  50DF               	movf	indf2,w,c
 10788  00330E  6E01               	movwf	??_interruption_timer1& (0+255),c
 10789  003310  3A01               	swapf	??_interruption_timer1,f,c
 10790  003312  4601               	rlncf	??_interruption_timer1,f,c
 10791  003314  5082               	movf	3970,w,c	;volatile
 10792  003316  1801               	xorwf	??_interruption_timer1,w,c
 10793  003318  0BDF               	andlw	-33
 10794  00331A  1801               	xorwf	??_interruption_timer1,w,c
 10795  00331C  6E82               	movwf	3970,c	;volatile
 10796                           
 10797                           ;interruptions.c: 123: uart_logiciel.indice++;
 10798  00331E  2A34               	incf	_uart_logiciel+12,f,c
 10799                           
 10800                           ;interruptions.c: 125: if (uart_logiciel.indice > 10)
 10801  003320  0E0A               	movlw	10
 10802  003322  6434               	cpfsgt	_uart_logiciel+12,c
 10803  003324  D005               	goto	i1l378
 10804                           
 10805                           ;interruptions.c: 126: uart_logiciel.transmission_en_cours = 0;
 10806  003326  0E00               	movlw	0
 10807  003328  6E33               	movwf	_uart_logiciel+11,c
 10808                           
 10809                           ;interruptions.c: 127: }
 10810  00332A  D002               	goto	i1l378
 10811  00332C                     i1l375:
 10812                           
 10813                           ;interruptions.c: 128: else
 10814                           ;interruptions.c: 129: PORTCbits.RC5 = 1;
 10815  00332C  8A82               	bsf	3970,5,c	;volatile
 10816  00332E  D000               	goto	i1l378
 10817  003330                     i1l378:
 10818  003330  0012               	return		;funcret
 10819  003332                     __end_of_interruption_timer1:
 10820                           	opt stack 0
 10821                           pclatu	equ	0xFFB
 10822                           pclath	equ	0xFFA
 10823                           tblptru	equ	0xFF8
 10824                           tblptrh	equ	0xFF7
 10825                           tblptrl	equ	0xFF6
 10826                           tablat	equ	0xFF5
 10827                           prodh	equ	0xFF4
 10828                           prodl	equ	0xFF3
 10829                           intcon	equ	0xFF2
 10830                           intcon2	equ	0xFF1
 10831                           intcon3	equ	0xFF0
 10832                           indf0	equ	0xFEF
 10833                           postinc0	equ	0xFEE
 10834                           plusw0	equ	0xFEB
 10835                           fsr0h	equ	0xFEA
 10836                           fsr0l	equ	0xFE9
 10837                           wreg	equ	0xFE8
 10838                           postinc1	equ	0xFE6
 10839                           postdec1	equ	0xFE5
 10840                           plusw1	equ	0xFE3
 10841                           fsr1h	equ	0xFE2
 10842                           fsr1l	equ	0xFE1
 10843                           bsr	equ	0xFE0
 10844                           indf2	equ	0xFDF
 10845                           postinc2	equ	0xFDE
 10846                           postdec2	equ	0xFDD
 10847                           fsr2h	equ	0xFDA
 10848                           fsr2l	equ	0xFD9
 10849                           status	equ	0xFD8
 10850                           
 10851 ;; *************** function _interruption_timer0 *****************
 10852 ;; Defined at:
 10853 ;;		line 104 in file "interruptions.c"
 10854 ;; Parameters:    Size  Location     Type
 10855 ;;		None
 10856 ;; Auto vars:     Size  Location     Type
 10857 ;;		None
 10858 ;; Return value:  Size  Location     Type
 10859 ;;		None               void
 10860 ;; Registers used:
 10861 ;;		wreg, status,2
 10862 ;; Tracked objects:
 10863 ;;		On entry : 0/0
 10864 ;;		On exit  : 0/0
 10865 ;;		Unchanged: 0/0
 10866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10867 ;;      Params:         0       0       0       0
 10868 ;;      Locals:         0       0       0       0
 10869 ;;      Temps:          0       0       0       0
 10870 ;;      Totals:         0       0       0       0
 10871 ;;Total ram usage:        0 bytes
 10872 ;; Hardware stack levels used:    1
 10873 ;; Hardware stack levels required when called:    3
 10874 ;; This function calls:
 10875 ;;		Nothing
 10876 ;; This function is called by:
 10877 ;;		_subroutine_interruptions
 10878 ;; This function uses a non-reentrant model
 10879 ;;
 10880                           
 10881                           	psect	text48
 10882  0035FC                     __ptext48:
 10883                           	opt stack 0
 10884  0035FC                     _interruption_timer0:
 10885                           	opt stack 17
 10886                           
 10887                           ;interruptions.c: 106: INTCONbits.TMR0IF = 0;
 10888                           
 10889                           ;incstack = 0
 10890  0035FC  94F2               	bcf	intcon,2,c	;volatile
 10891                           
 10892                           ;interruptions.c: 110: TMR0 = 32750;
 10893  0035FE  0E7F               	movlw	127
 10894  003600  6ED7               	movwf	4055,c	;volatile
 10895  003602  0EEE               	movlw	238
 10896  003604  6ED6               	movwf	4054,c	;volatile
 10897  003606  0012               	return		;funcret
 10898  003608                     __end_of_interruption_timer0:
 10899                           	opt stack 0
 10900                           pclatu	equ	0xFFB
 10901                           pclath	equ	0xFFA
 10902                           tblptru	equ	0xFF8
 10903                           tblptrh	equ	0xFF7
 10904                           tblptrl	equ	0xFF6
 10905                           tablat	equ	0xFF5
 10906                           prodh	equ	0xFF4
 10907                           prodl	equ	0xFF3
 10908                           intcon	equ	0xFF2
 10909                           intcon2	equ	0xFF1
 10910                           intcon3	equ	0xFF0
 10911                           indf0	equ	0xFEF
 10912                           postinc0	equ	0xFEE
 10913                           plusw0	equ	0xFEB
 10914                           fsr0h	equ	0xFEA
 10915                           fsr0l	equ	0xFE9
 10916                           wreg	equ	0xFE8
 10917                           postinc1	equ	0xFE6
 10918                           postdec1	equ	0xFE5
 10919                           plusw1	equ	0xFE3
 10920                           fsr1h	equ	0xFE2
 10921                           fsr1l	equ	0xFE1
 10922                           bsr	equ	0xFE0
 10923                           indf2	equ	0xFDF
 10924                           postinc2	equ	0xFDE
 10925                           postdec2	equ	0xFDD
 10926                           fsr2h	equ	0xFDA
 10927                           fsr2l	equ	0xFD9
 10928                           status	equ	0xFD8
 10929                           
 10930 ;; *************** function _interruption_QEI *****************
 10931 ;; Defined at:
 10932 ;;		line 171 in file "interruptions.c"
 10933 ;; Parameters:    Size  Location     Type
 10934 ;;		None
 10935 ;; Auto vars:     Size  Location     Type
 10936 ;;		None
 10937 ;; Return value:  Size  Location     Type
 10938 ;;		None               void
 10939 ;; Registers used:
 10940 ;;		wreg, status,2, status,0
 10941 ;; Tracked objects:
 10942 ;;		On entry : 0/0
 10943 ;;		On exit  : 0/0
 10944 ;;		Unchanged: 0/0
 10945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10946 ;;      Params:         0       0       0       0
 10947 ;;      Locals:         0       0       0       0
 10948 ;;      Temps:          0       0       0       0
 10949 ;;      Totals:         0       0       0       0
 10950 ;;Total ram usage:        0 bytes
 10951 ;; Hardware stack levels used:    1
 10952 ;; Hardware stack levels required when called:    3
 10953 ;; This function calls:
 10954 ;;		Nothing
 10955 ;; This function is called by:
 10956 ;;		_subroutine_interruptions
 10957 ;; This function uses a non-reentrant model
 10958 ;;
 10959                           
 10960                           	psect	text49
 10961  003522                     __ptext49:
 10962                           	opt stack 0
 10963  003522                     _interruption_QEI:
 10964                           	opt stack 17
 10965                           
 10966                           ;interruptions.c: 173: PIR3bits.IC2QEIF = 0;
 10967                           
 10968                           ;incstack = 0
 10969  003522  94A4               	bcf	4004,2,c	;volatile
 10970                           
 10971                           ;interruptions.c: 174: QEICONbits.QERR = 0;
 10972  003524  9CB6               	bcf	4022,6,c	;volatile
 10973                           
 10974                           ;interruptions.c: 176: if (capteur.synchro_debut_tour == 1)
 10975  003526  0101               	movlb	1	; () banked
 10976  003528  0568               	decf	(_capteur+1)& (0+255),w,b
 10977  00352A  A4D8               	btfss	status,2,c
 10978  00352C  D007               	goto	i1l2986
 10979                           
 10980                           ; BSR set to: 1
 10981                           ;interruptions.c: 177: {
 10982                           ;interruptions.c: 178: capteur.tour_en_cours = 1;
 10983  00352E  0E01               	movlw	1
 10984  003530  0101               	movlb	1	; () banked
 10985  003532  6F67               	movwf	_capteur& (0+255),b
 10986                           
 10987                           ;interruptions.c: 179: capteur.synchro_debut_tour = 0;
 10988  003534  0E00               	movlw	0
 10989  003536  0101               	movlb	1	; () banked
 10990  003538  6F68               	movwf	(_capteur+1)& (0+255),b
 10991                           
 10992                           ;interruptions.c: 180: }
 10993  00353A  D004               	goto	i1l401
 10994  00353C                     i1l2986:
 10995                           
 10996                           ; BSR set to: 1
 10997                           ;interruptions.c: 181: else
 10998                           ;interruptions.c: 182: capteur.tour_en_cours = 0;
 10999  00353C  0E00               	movlw	0
 11000  00353E  0101               	movlb	1	; () banked
 11001  003540  6F67               	movwf	_capteur& (0+255),b
 11002  003542  D000               	goto	i1l401
 11003  003544                     i1l401:
 11004                           
 11005                           ; BSR set to: 1
 11006  003544  0012               	return		;funcret
 11007  003546                     __end_of_interruption_QEI:
 11008                           	opt stack 0
 11009                           pclatu	equ	0xFFB
 11010                           pclath	equ	0xFFA
 11011                           tblptru	equ	0xFF8
 11012                           tblptrh	equ	0xFF7
 11013                           tblptrl	equ	0xFF6
 11014                           tablat	equ	0xFF5
 11015                           prodh	equ	0xFF4
 11016                           prodl	equ	0xFF3
 11017                           intcon	equ	0xFF2
 11018                           intcon2	equ	0xFF1
 11019                           intcon3	equ	0xFF0
 11020                           indf0	equ	0xFEF
 11021                           postinc0	equ	0xFEE
 11022                           plusw0	equ	0xFEB
 11023                           fsr0h	equ	0xFEA
 11024                           fsr0l	equ	0xFE9
 11025                           wreg	equ	0xFE8
 11026                           postinc1	equ	0xFE6
 11027                           postdec1	equ	0xFE5
 11028                           plusw1	equ	0xFE3
 11029                           fsr1h	equ	0xFE2
 11030                           fsr1l	equ	0xFE1
 11031                           bsr	equ	0xFE0
 11032                           indf2	equ	0xFDF
 11033                           postinc2	equ	0xFDE
 11034                           postdec2	equ	0xFDD
 11035                           fsr2h	equ	0xFDA
 11036                           fsr2l	equ	0xFD9
 11037                           status	equ	0xFD8
 11038                           
 11039 ;; *************** function _interruption_INT0 *****************
 11040 ;; Defined at:
 11041 ;;		line 144 in file "interruptions.c"
 11042 ;; Parameters:    Size  Location     Type
 11043 ;;		None
 11044 ;; Auto vars:     Size  Location     Type
 11045 ;;		None
 11046 ;; Return value:  Size  Location     Type
 11047 ;;		None               void
 11048 ;; Registers used:
 11049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11050 ;; Tracked objects:
 11051 ;;		On entry : 0/0
 11052 ;;		On exit  : 0/0
 11053 ;;		Unchanged: 0/0
 11054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11055 ;;      Params:         0       0       0       0
 11056 ;;      Locals:         0       0       0       0
 11057 ;;      Temps:          2       0       0       0
 11058 ;;      Totals:         2       0       0       0
 11059 ;;Total ram usage:        2 bytes
 11060 ;; Hardware stack levels used:    1
 11061 ;; Hardware stack levels required when called:    3
 11062 ;; This function calls:
 11063 ;;		Nothing
 11064 ;; This function is called by:
 11065 ;;		_subroutine_interruptions
 11066 ;; This function uses a non-reentrant model
 11067 ;;
 11068                           
 11069                           	psect	text50
 11070  003210                     __ptext50:
 11071                           	opt stack 0
 11072  003210                     _interruption_INT0:
 11073                           	opt stack 17
 11074                           
 11075                           ;interruptions.c: 146: if (capteur.tour_en_cours == 1)
 11076                           
 11077                           ; BSR set to: 1
 11078                           ;incstack = 0
 11079  003210  0101               	movlb	1	; () banked
 11080  003212  0567               	decf	_capteur& (0+255),w,b
 11081  003214  A4D8               	btfss	status,2,c
 11082  003216  D01F               	goto	i1l2998
 11083                           
 11084                           ; BSR set to: 1
 11085                           ;interruptions.c: 147: {
 11086                           ;interruptions.c: 148: if (capteur.indice < 3)
 11087  003218  0E03               	movlw	3
 11088  00321A  0101               	movlb	1	; () banked
 11089  00321C  6179               	cpfslt	(_capteur+18)& (0+255),b
 11090  00321E  D018               	goto	i1l2996
 11091                           
 11092                           ; BSR set to: 1
 11093                           ;interruptions.c: 149: {
 11094                           ;interruptions.c: 150: capteur.position[capteur.indice++] = POSCNTH * 256 + POSCNTL;
 11095  003220  5066               	movf	3942,w,c	;volatile
 11096  003222  CF67 F001          	movff	3943,??_interruption_INT0	;volatile
 11097  003226  6A02               	clrf	(??_interruption_INT0+1)& (0+255),c
 11098  003228  C001  F002         	movff	??_interruption_INT0,??_interruption_INT0+1
 11099  00322C  6A01               	clrf	??_interruption_INT0,c
 11100  00322E  2601               	addwf	??_interruption_INT0,f,c
 11101  003230  0E00               	movlw	0
 11102  003232  2202               	addwfc	??_interruption_INT0+1,f,c
 11103  003234  0101               	movlb	1	; () banked
 11104  003236  5179               	movf	(_capteur+18)& (0+255),w,b
 11105  003238  0D02               	mullw	2
 11106  00323A  0E73               	movlw	low (_capteur+12)
 11107  00323C  24F3               	addwf	prodl,w,c
 11108  00323E  6ED9               	movwf	fsr2l,c
 11109  003240  0E01               	movlw	high (_capteur+12)
 11110  003242  20F4               	addwfc	prodh,w,c
 11111  003244  6EDA               	movwf	fsr2h,c
 11112  003246  C001  FFDE         	movff	??_interruption_INT0,postinc2
 11113  00324A  C002  FFDD         	movff	??_interruption_INT0+1,postdec2
 11114  00324E  D000               	goto	i1l2996
 11115  003250                     i1l2996:
 11116                           
 11117                           ; BSR set to: 1
 11118                           ;interruptions.c: 152: else
 11119                           ;interruptions.c: 153: capteur.indice++;
 11120  003250  0101               	movlb	1	; () banked
 11121  003252  2B79               	incf	(_capteur+18)& (0+255),f,b
 11122                           
 11123                           ; BSR set to: 1
 11124  003254  D000               	goto	i1l2998
 11125  003256                     i1l2998:
 11126                           
 11127                           ; BSR set to: 1
 11128                           ;interruptions.c: 154: }
 11129                           ;interruptions.c: 155: INTCONbits.INT0IF = 0;
 11130  003256  92F2               	bcf	intcon,1,c	;volatile
 11131                           
 11132                           ; BSR set to: 1
 11133  003258  0012               	return		;funcret
 11134  00325A                     __end_of_interruption_INT0:
 11135                           	opt stack 0
 11136                           pclatu	equ	0xFFB
 11137                           pclath	equ	0xFFA
 11138                           tblptru	equ	0xFF8
 11139                           tblptrh	equ	0xFF7
 11140                           tblptrl	equ	0xFF6
 11141                           tablat	equ	0xFF5
 11142                           prodh	equ	0xFF4
 11143                           prodl	equ	0xFF3
 11144                           intcon	equ	0xFF2
 11145                           intcon2	equ	0xFF1
 11146                           intcon3	equ	0xFF0
 11147                           indf0	equ	0xFEF
 11148                           postinc0	equ	0xFEE
 11149                           plusw0	equ	0xFEB
 11150                           fsr0h	equ	0xFEA
 11151                           fsr0l	equ	0xFE9
 11152                           wreg	equ	0xFE8
 11153                           postinc1	equ	0xFE6
 11154                           postdec1	equ	0xFE5
 11155                           plusw1	equ	0xFE3
 11156                           fsr1h	equ	0xFE2
 11157                           fsr1l	equ	0xFE1
 11158                           bsr	equ	0xFE0
 11159                           indf2	equ	0xFDF
 11160                           postinc2	equ	0xFDE
 11161                           postdec2	equ	0xFDD
 11162                           fsr2h	equ	0xFDA
 11163                           fsr2l	equ	0xFD9
 11164                           status	equ	0xFD8
 11165                           
 11166 ;; *************** function _interrupt_TX *****************
 11167 ;; Defined at:
 11168 ;;		line 229 in file "interruptions.c"
 11169 ;; Parameters:    Size  Location     Type
 11170 ;;		None
 11171 ;; Auto vars:     Size  Location     Type
 11172 ;;		None
 11173 ;; Return value:  Size  Location     Type
 11174 ;;		None               void
 11175 ;; Registers used:
 11176 ;;		None
 11177 ;; Tracked objects:
 11178 ;;		On entry : 0/0
 11179 ;;		On exit  : 0/0
 11180 ;;		Unchanged: 0/0
 11181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11182 ;;      Params:         0       0       0       0
 11183 ;;      Locals:         0       0       0       0
 11184 ;;      Temps:          0       0       0       0
 11185 ;;      Totals:         0       0       0       0
 11186 ;;Total ram usage:        0 bytes
 11187 ;; Hardware stack levels used:    1
 11188 ;; Hardware stack levels required when called:    3
 11189 ;; This function calls:
 11190 ;;		Nothing
 11191 ;; This function is called by:
 11192 ;;		_subroutine_interruptions
 11193 ;; This function uses a non-reentrant model
 11194 ;;
 11195                           
 11196                           	psect	text51
 11197  00361C                     __ptext51:
 11198                           	opt stack 0
 11199  00361C                     _interrupt_TX:
 11200                           	opt stack 17
 11201                           
 11202                           ;interruptions.c: 231: PIR1bits.TXIF = 0;
 11203                           
 11204                           ; BSR set to: 1
 11205                           ;incstack = 0
 11206  00361C  989E               	bcf	3998,4,c	;volatile
 11207  00361E  0012               	return		;funcret
 11208  003620                     __end_of_interrupt_TX:
 11209                           	opt stack 0
 11210                           pclatu	equ	0xFFB
 11211                           pclath	equ	0xFFA
 11212                           tblptru	equ	0xFF8
 11213                           tblptrh	equ	0xFF7
 11214                           tblptrl	equ	0xFF6
 11215                           tablat	equ	0xFF5
 11216                           prodh	equ	0xFF4
 11217                           prodl	equ	0xFF3
 11218                           intcon	equ	0xFF2
 11219                           intcon2	equ	0xFF1
 11220                           intcon3	equ	0xFF0
 11221                           indf0	equ	0xFEF
 11222                           postinc0	equ	0xFEE
 11223                           plusw0	equ	0xFEB
 11224                           fsr0h	equ	0xFEA
 11225                           fsr0l	equ	0xFE9
 11226                           wreg	equ	0xFE8
 11227                           postinc1	equ	0xFE6
 11228                           postdec1	equ	0xFE5
 11229                           plusw1	equ	0xFE3
 11230                           fsr1h	equ	0xFE2
 11231                           fsr1l	equ	0xFE1
 11232                           bsr	equ	0xFE0
 11233                           indf2	equ	0xFDF
 11234                           postinc2	equ	0xFDE
 11235                           postdec2	equ	0xFDD
 11236                           fsr2h	equ	0xFDA
 11237                           fsr2l	equ	0xFD9
 11238                           status	equ	0xFD8
 11239                           
 11240 ;; *************** function _interrupt_RX *****************
 11241 ;; Defined at:
 11242 ;;		line 210 in file "interruptions.c"
 11243 ;; Parameters:    Size  Location     Type
 11244 ;;		None
 11245 ;; Auto vars:     Size  Location     Type
 11246 ;;  temp            1    0[COMRAM] unsigned char 
 11247 ;; Return value:  Size  Location     Type
 11248 ;;		None               void
 11249 ;; Registers used:
 11250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11251 ;; Tracked objects:
 11252 ;;		On entry : 0/0
 11253 ;;		On exit  : 0/0
 11254 ;;		Unchanged: 0/0
 11255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11256 ;;      Params:         0       0       0       0
 11257 ;;      Locals:         1       0       0       0
 11258 ;;      Temps:          0       0       0       0
 11259 ;;      Totals:         1       0       0       0
 11260 ;;Total ram usage:        1 bytes
 11261 ;; Hardware stack levels used:    1
 11262 ;; Hardware stack levels required when called:    3
 11263 ;; This function calls:
 11264 ;;		Nothing
 11265 ;; This function is called by:
 11266 ;;		_subroutine_interruptions
 11267 ;; This function uses a non-reentrant model
 11268 ;;
 11269                           
 11270                           	psect	text52
 11271  0033B8                     __ptext52:
 11272                           	opt stack 0
 11273  0033B8                     _interrupt_RX:
 11274                           	opt stack 17
 11275                           
 11276                           ;interruptions.c: 212: PIR1bits.RCIF = 0;
 11277                           
 11278                           ;incstack = 0
 11279  0033B8  9A9E               	bcf	3998,5,c	;volatile
 11280                           
 11281                           ;interruptions.c: 213: PORTBbits.RB0 = 1;
 11282  0033BA  8081               	bsf	3969,0,c	;volatile
 11283                           
 11284                           ;interruptions.c: 215: if (uart_reception.indice < 100)
 11285  0033BC  0E64               	movlw	100
 11286  0033BE  0101               	movlb	1	; () banked
 11287  0033C0  6164               	cpfslt	(_uart_reception+100)& (0+255),b
 11288  0033C2  D011               	goto	i1l3010
 11289                           
 11290                           ; BSR set to: 1
 11291                           ;interruptions.c: 216: {
 11292                           ;interruptions.c: 217: uart_reception.buffer_reeption[uart_reception.indice] = RCREG;
 11293  0033C4  0101               	movlb	1	; () banked
 11294  0033C6  5164               	movf	(_uart_reception+100)& (0+255),w,b
 11295  0033C8  0D01               	mullw	1
 11296  0033CA  0E00               	movlw	low _uart_reception
 11297  0033CC  24F3               	addwf	prodl,w,c
 11298  0033CE  6ED9               	movwf	fsr2l,c
 11299  0033D0  0E01               	movlw	high _uart_reception
 11300  0033D2  20F4               	addwfc	prodh,w,c
 11301  0033D4  6EDA               	movwf	fsr2h,c
 11302  0033D6  CFAE FFDF          	movff	4014,indf2	;volatile
 11303                           
 11304                           ; BSR set to: 1
 11305                           ;interruptions.c: 218: uart_reception.buffer_vide = 0;
 11306  0033DA  0E00               	movlw	0
 11307  0033DC  0101               	movlb	1	; () banked
 11308  0033DE  6F66               	movwf	(_uart_reception+102)& (0+255),b
 11309                           
 11310                           ; BSR set to: 1
 11311                           ;interruptions.c: 219: uart_reception.indice++;
 11312  0033E0  0101               	movlb	1	; () banked
 11313  0033E2  2B64               	incf	(_uart_reception+100)& (0+255),f,b
 11314                           
 11315                           ;interruptions.c: 220: }
 11316  0033E4  D006               	goto	i1l412
 11317  0033E6                     i1l3010:
 11318                           
 11319                           ; BSR set to: 1
 11320                           ;interruptions.c: 221: else
 11321                           ;interruptions.c: 222: {
 11322                           ;interruptions.c: 223: uart_reception.buffer_plein = 1;
 11323  0033E6  0E01               	movlw	1
 11324  0033E8  0101               	movlb	1	; () banked
 11325  0033EA  6F65               	movwf	(_uart_reception+101)& (0+255),b
 11326                           
 11327                           ; BSR set to: 1
 11328                           ;interruptions.c: 224: uint8_t temp = RCREG;
 11329  0033EC  CFAE F001          	movff	4014,interrupt_RX@temp	;volatile
 11330  0033F0  D000               	goto	i1l412
 11331  0033F2                     i1l412:
 11332                           
 11333                           ; BSR set to: 1
 11334  0033F2  0012               	return		;funcret
 11335  0033F4                     __end_of_interrupt_RX:
 11336                           	opt stack 0
 11337                           pclatu	equ	0xFFB
 11338                           pclath	equ	0xFFA
 11339                           tblptru	equ	0xFF8
 11340                           tblptrh	equ	0xFF7
 11341                           tblptrl	equ	0xFF6
 11342                           tablat	equ	0xFF5
 11343                           prodh	equ	0xFF4
 11344                           prodl	equ	0xFF3
 11345                           intcon	equ	0xFF2
 11346                           intcon2	equ	0xFF1
 11347                           intcon3	equ	0xFF0
 11348                           indf0	equ	0xFEF
 11349                           postinc0	equ	0xFEE
 11350                           plusw0	equ	0xFEB
 11351                           fsr0h	equ	0xFEA
 11352                           fsr0l	equ	0xFE9
 11353                           wreg	equ	0xFE8
 11354                           postinc1	equ	0xFE6
 11355                           postdec1	equ	0xFE5
 11356                           plusw1	equ	0xFE3
 11357                           fsr1h	equ	0xFE2
 11358                           fsr1l	equ	0xFE1
 11359                           bsr	equ	0xFE0
 11360                           indf2	equ	0xFDF
 11361                           postinc2	equ	0xFDE
 11362                           postdec2	equ	0xFDD
 11363                           fsr2h	equ	0xFDA
 11364                           fsr2l	equ	0xFD9
 11365                           status	equ	0xFD8
 11366                           
 11367 ;; *************** function _high_isr *****************
 11368 ;; Defined at:
 11369 ;;		line 27 in file "interruptions.c"
 11370 ;; Parameters:    Size  Location     Type
 11371 ;;		None
 11372 ;; Auto vars:     Size  Location     Type
 11373 ;;		None
 11374 ;; Return value:  Size  Location     Type
 11375 ;;		None               void
 11376 ;; Registers used:
 11377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11378 ;; Tracked objects:
 11379 ;;		On entry : 0/0
 11380 ;;		On exit  : 0/0
 11381 ;;		Unchanged: 0/0
 11382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11383 ;;      Params:         0       0       0       0
 11384 ;;      Locals:         0       0       0       0
 11385 ;;      Temps:         14       0       0       0
 11386 ;;      Totals:        14       0       0       0
 11387 ;;Total ram usage:       14 bytes
 11388 ;; Hardware stack levels used:    1
 11389 ;; Hardware stack levels required when called:    2
 11390 ;; This function calls:
 11391 ;;		i2_subroutine_interruptions
 11392 ;; This function is called by:
 11393 ;;		Interrupt level 2
 11394 ;; This function uses a non-reentrant model
 11395 ;;
 11396                           
 11397                           	psect	intcode
 11398  000008                     __pintcode:
 11399                           	opt stack 0
 11400  000008                     _high_isr:
 11401                           	opt stack 17
 11402                           
 11403                           ; BSR set to: 1
 11404                           ;incstack = 0
 11405  000008  CFFA F018          	movff	pclath,??_high_isr
 11406  00000C  CFFB F019          	movff	pclatu,??_high_isr+1
 11407  000010  CFE9 F01A          	movff	fsr0l,??_high_isr+2
 11408  000014  EF19  F018         	goto	int_func
 11409                           pclatu	equ	0xFFB
 11410                           pclath	equ	0xFFA
 11411                           tblptru	equ	0xFF8
 11412                           tblptrh	equ	0xFF7
 11413                           tblptrl	equ	0xFF6
 11414                           tablat	equ	0xFF5
 11415                           prodh	equ	0xFF4
 11416                           prodl	equ	0xFF3
 11417                           intcon	equ	0xFF2
 11418                           intcon2	equ	0xFF1
 11419                           intcon3	equ	0xFF0
 11420                           indf0	equ	0xFEF
 11421                           postinc0	equ	0xFEE
 11422                           plusw0	equ	0xFEB
 11423                           fsr0h	equ	0xFEA
 11424                           fsr0l	equ	0xFE9
 11425                           wreg	equ	0xFE8
 11426                           postinc1	equ	0xFE6
 11427                           postdec1	equ	0xFE5
 11428                           plusw1	equ	0xFE3
 11429                           fsr1h	equ	0xFE2
 11430                           fsr1l	equ	0xFE1
 11431                           bsr	equ	0xFE0
 11432                           indf2	equ	0xFDF
 11433                           postinc2	equ	0xFDE
 11434                           postdec2	equ	0xFDD
 11435                           fsr2h	equ	0xFDA
 11436                           fsr2l	equ	0xFD9
 11437                           status	equ	0xFD8
 11438                           
 11439                           	psect	intcode_body
 11440  003032                     __pintcode_body:
 11441                           	opt stack 17
 11442  003032                     int_func:
 11443                           	opt stack 17
 11444  003032  CFEA F01B          	movff	fsr0h,??_high_isr+3
 11445  003036  CFE1 F01C          	movff	fsr1l,??_high_isr+4
 11446  00303A  CFE2 F01D          	movff	fsr1h,??_high_isr+5
 11447  00303E  CFD9 F01E          	movff	fsr2l,??_high_isr+6
 11448  003042  CFDA F01F          	movff	fsr2h,??_high_isr+7
 11449  003046  CFF3 F020          	movff	prodl,??_high_isr+8
 11450  00304A  CFF4 F021          	movff	prodh,??_high_isr+9
 11451  00304E  CFF6 F022          	movff	tblptrl,??_high_isr+10
 11452  003052  CFF7 F023          	movff	tblptrh,??_high_isr+11
 11453  003056  CFF8 F024          	movff	tblptru,??_high_isr+12
 11454  00305A  CFF5 F025          	movff	tablat,??_high_isr+13
 11455                           
 11456                           ;interruptions.c: 29: subroutine_interruptions(0b1);
 11457  00305E  0E01               	movlw	1
 11458  003060  EC2D  F017         	call	i2_subroutine_interruptions
 11459  003064  C025  FFF5         	movff	??_high_isr+13,tablat
 11460  003068  C024  FFF8         	movff	??_high_isr+12,tblptru
 11461  00306C  C023  FFF7         	movff	??_high_isr+11,tblptrh
 11462  003070  C022  FFF6         	movff	??_high_isr+10,tblptrl
 11463  003074  C021  FFF4         	movff	??_high_isr+9,prodh
 11464  003078  C020  FFF3         	movff	??_high_isr+8,prodl
 11465  00307C  C01F  FFDA         	movff	??_high_isr+7,fsr2h
 11466  003080  C01E  FFD9         	movff	??_high_isr+6,fsr2l
 11467  003084  C01D  FFE2         	movff	??_high_isr+5,fsr1h
 11468  003088  C01C  FFE1         	movff	??_high_isr+4,fsr1l
 11469  00308C  C01B  FFEA         	movff	??_high_isr+3,fsr0h
 11470  003090  C01A  FFE9         	movff	??_high_isr+2,fsr0l
 11471  003094  C019  FFFB         	movff	??_high_isr+1,pclatu
 11472  003098  C018  FFFA         	movff	??_high_isr,pclath
 11473  00309C  0011               	retfie		f
 11474  00309E                     __end_of_high_isr:
 11475                           	opt stack 0
 11476                           pclatu	equ	0xFFB
 11477                           pclath	equ	0xFFA
 11478                           tblptru	equ	0xFF8
 11479                           tblptrh	equ	0xFF7
 11480                           tblptrl	equ	0xFF6
 11481                           tablat	equ	0xFF5
 11482                           prodh	equ	0xFF4
 11483                           prodl	equ	0xFF3
 11484                           intcon	equ	0xFF2
 11485                           intcon2	equ	0xFF1
 11486                           intcon3	equ	0xFF0
 11487                           indf0	equ	0xFEF
 11488                           postinc0	equ	0xFEE
 11489                           plusw0	equ	0xFEB
 11490                           fsr0h	equ	0xFEA
 11491                           fsr0l	equ	0xFE9
 11492                           wreg	equ	0xFE8
 11493                           postinc1	equ	0xFE6
 11494                           postdec1	equ	0xFE5
 11495                           plusw1	equ	0xFE3
 11496                           fsr1h	equ	0xFE2
 11497                           fsr1l	equ	0xFE1
 11498                           bsr	equ	0xFE0
 11499                           indf2	equ	0xFDF
 11500                           postinc2	equ	0xFDE
 11501                           postdec2	equ	0xFDD
 11502                           fsr2h	equ	0xFDA
 11503                           fsr2l	equ	0xFD9
 11504                           status	equ	0xFD8
 11505                           
 11506 ;; *************** function i2_subroutine_interruptions *****************
 11507 ;; Defined at:
 11508 ;;		line 43 in file "interruptions.c"
 11509 ;; Parameters:    Size  Location     Type
 11510 ;;  priorite        1    wreg     unsigned char 
 11511 ;; Auto vars:     Size  Location     Type
 11512 ;;  priorite        1   22[COMRAM] unsigned char 
 11513 ;; Return value:  Size  Location     Type
 11514 ;;		None               void
 11515 ;; Registers used:
 11516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11517 ;; Tracked objects:
 11518 ;;		On entry : 0/0
 11519 ;;		On exit  : 0/0
 11520 ;;		Unchanged: 0/0
 11521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11522 ;;      Params:         0       0       0       0
 11523 ;;      Locals:         1       0       0       0
 11524 ;;      Temps:          0       0       0       0
 11525 ;;      Totals:         1       0       0       0
 11526 ;;Total ram usage:        1 bytes
 11527 ;; Hardware stack levels used:    1
 11528 ;; Hardware stack levels required when called:    1
 11529 ;; This function calls:
 11530 ;;		i2_interrupt_RX
 11531 ;;		i2_interrupt_TX
 11532 ;;		i2_interruption_INT0
 11533 ;;		i2_interruption_QEI
 11534 ;;		i2_interruption_timer0
 11535 ;;		i2_interruption_timer1
 11536 ;;		i2_interruption_timer2
 11537 ;;		i2_interuption_QEI_sens
 11538 ;; This function is called by:
 11539 ;;		_high_isr
 11540 ;; This function uses a non-reentrant model
 11541 ;;
 11542                           
 11543                           	psect	text54
 11544  002E5A                     __ptext54:
 11545                           	opt stack 0
 11546  002E5A                     i2_subroutine_interruptions:
 11547                           	opt stack 17
 11548                           
 11549                           ;incstack = 0
 11550                           ;i2subroutine_interruptions@priorite stored from wreg
 11551  002E5A  6E17               	movwf	i2subroutine_interruptions@priorite,c
 11552                           
 11553                           ;interruptions.c: 45: if ( PIR3bits.IC2QEIF == 1 && 0b1 == 1 && priorite == 0b1)
 11554  002E5C  A4A4               	btfss	4004,2,c	;volatile
 11555  002E5E  D006               	goto	i2l354
 11556  002E60  0417               	decf	i2subroutine_interruptions@priorite,w,c
 11557  002E62  A4D8               	btfss	status,2,c
 11558  002E64  D003               	goto	i2l354
 11559                           
 11560                           ;interruptions.c: 46: {
 11561                           ;interruptions.c: 47: interruption_QEI();
 11562  002E66  ECA3  F01A         	call	i2_interruption_QEI	;wreg free
 11563                           
 11564                           ;interruptions.c: 48: }
 11565  002E6A  D038               	goto	i2l369
 11566  002E6C                     i2l354:
 11567                           
 11568                           ;interruptions.c: 49: else if ( PIR3bits.IC3DRIF == 1 && 0b0 == 1 && priorite == 0b1)
 11569  002E6C  50A4               	movf	4004,w,c	;volatile
 11570  002E6E  D006               	goto	i2l356
 11571  002E70  0417               	decf	i2subroutine_interruptions@priorite,w,c
 11572  002E72  A4D8               	btfss	status,2,c
 11573  002E74  D003               	goto	i2l356
 11574                           
 11575                           ;interruptions.c: 50: {
 11576                           ;interruptions.c: 51: interuption_QEI_sens();
 11577  002E76  EC10  F01B         	call	i2_interuption_QEI_sens	;wreg free
 11578                           
 11579                           ;interruptions.c: 52: }
 11580  002E7A  D030               	goto	i2l369
 11581  002E7C                     i2l356:
 11582                           
 11583                           ;interruptions.c: 53: else if ( INTCONbits.TMR0IF == 1 && 0b1 == 1 && priorite == 0b0)
 11584  002E7C  A4F2               	btfss	intcon,2,c	;volatile
 11585  002E7E  D006               	goto	i2l358
 11586  002E80  5017               	movf	i2subroutine_interruptions@priorite,w,c
 11587  002E82  A4D8               	btfss	status,2,c
 11588  002E84  D003               	goto	i2l358
 11589                           
 11590                           ;interruptions.c: 54: {
 11591                           ;interruptions.c: 55: interruption_timer0();
 11592  002E86  EC04  F01B         	call	i2_interruption_timer0	;wreg free
 11593                           
 11594                           ;interruptions.c: 56: }
 11595  002E8A  D028               	goto	i2l369
 11596  002E8C                     i2l358:
 11597                           
 11598                           ;interruptions.c: 57: else if ( PIR1bits.TMR1IF == 1 && 0b1 == 1 && priorite == 0b1)
 11599  002E8C  A09E               	btfss	3998,0,c	;volatile
 11600  002E8E  D006               	goto	i2l360
 11601  002E90  0417               	decf	i2subroutine_interruptions@priorite,w,c
 11602  002E92  A4D8               	btfss	status,2,c
 11603  002E94  D003               	goto	i2l360
 11604                           
 11605                           ;interruptions.c: 58: {
 11606                           ;interruptions.c: 59: interruption_timer1();
 11607  002E96  EC99  F019         	call	i2_interruption_timer1	;wreg free
 11608                           
 11609                           ;interruptions.c: 60: }
 11610  002E9A  D020               	goto	i2l369
 11611  002E9C                     i2l360:
 11612                           
 11613                           ;interruptions.c: 61: else if ( PIR1bits.TMR2IF == 1 && 0b0 == 1 && priorite == 0b0)
 11614  002E9C  509E               	movf	3998,w,c	;volatile
 11615  002E9E  D006               	goto	i2l362
 11616  002EA0  5017               	movf	i2subroutine_interruptions@priorite,w,c
 11617  002EA2  A4D8               	btfss	status,2,c
 11618  002EA4  D003               	goto	i2l362
 11619                           
 11620                           ;interruptions.c: 62: {
 11621                           ;interruptions.c: 63: interruption_timer2();
 11622  002EA6  EC12  F01B         	call	i2_interruption_timer2	;wreg free
 11623                           
 11624                           ;interruptions.c: 64: }
 11625  002EAA  D018               	goto	i2l369
 11626  002EAC                     i2l362:
 11627                           
 11628                           ;interruptions.c: 65: else if (INTCONbits.INT0IF == 1 && 0b1 == 1 && priorite == 0b1)
 11629  002EAC  A2F2               	btfss	intcon,1,c	;volatile
 11630  002EAE  D006               	goto	i2l364
 11631  002EB0  0417               	decf	i2subroutine_interruptions@priorite,w,c
 11632  002EB2  A4D8               	btfss	status,2,c
 11633  002EB4  D003               	goto	i2l364
 11634                           
 11635                           ;interruptions.c: 66: {
 11636                           ;interruptions.c: 67: interruption_INT0();
 11637  002EB6  EC2D  F019         	call	i2_interruption_INT0	;wreg free
 11638                           
 11639                           ;interruptions.c: 68: }
 11640  002EBA  D010               	goto	i2l369
 11641  002EBC                     i2l364:
 11642                           
 11643                           ;interruptions.c: 85: else if ( PIR1bits.RCIF == 1 && 0b1 == 1 && priorite == 0b1)
 11644  002EBC  AA9E               	btfss	3998,5,c	;volatile
 11645  002EBE  D006               	goto	i2l366
 11646  002EC0  0417               	decf	i2subroutine_interruptions@priorite,w,c
 11647  002EC2  A4D8               	btfss	status,2,c
 11648  002EC4  D003               	goto	i2l366
 11649                           
 11650                           ;interruptions.c: 86: {
 11651                           ;interruptions.c: 87: interrupt_RX();
 11652  002EC6  ECFA  F019         	call	i2_interrupt_RX	;wreg free
 11653                           
 11654                           ;interruptions.c: 88: }
 11655  002ECA  D008               	goto	i2l369
 11656  002ECC                     i2l366:
 11657                           
 11658                           ;interruptions.c: 89: else if (PIR1bits.TXIF == 1 && 0b0 == 1 && priorite == 0b0)
 11659  002ECC  509E               	movf	3998,w,c	;volatile
 11660  002ECE  D006               	goto	i2l369
 11661  002ED0  5017               	movf	i2subroutine_interruptions@priorite,w,c
 11662  002ED2  A4D8               	btfss	status,2,c
 11663  002ED4  D003               	goto	i2l369
 11664                           
 11665                           ;interruptions.c: 90: {
 11666                           ;interruptions.c: 91: interrupt_TX();
 11667  002ED6  EC14  F01B         	call	i2_interrupt_TX	;wreg free
 11668  002EDA  D000               	goto	i2l369
 11669  002EDC                     i2l369:
 11670  002EDC  0012               	return		;funcret
 11671  002EDE                     __end_ofi2_subroutine_interruptions:
 11672                           	opt stack 0
 11673                           pclatu	equ	0xFFB
 11674                           pclath	equ	0xFFA
 11675                           tblptru	equ	0xFF8
 11676                           tblptrh	equ	0xFF7
 11677                           tblptrl	equ	0xFF6
 11678                           tablat	equ	0xFF5
 11679                           prodh	equ	0xFF4
 11680                           prodl	equ	0xFF3
 11681                           intcon	equ	0xFF2
 11682                           intcon2	equ	0xFF1
 11683                           intcon3	equ	0xFF0
 11684                           indf0	equ	0xFEF
 11685                           postinc0	equ	0xFEE
 11686                           plusw0	equ	0xFEB
 11687                           fsr0h	equ	0xFEA
 11688                           fsr0l	equ	0xFE9
 11689                           wreg	equ	0xFE8
 11690                           postinc1	equ	0xFE6
 11691                           postdec1	equ	0xFE5
 11692                           plusw1	equ	0xFE3
 11693                           fsr1h	equ	0xFE2
 11694                           fsr1l	equ	0xFE1
 11695                           bsr	equ	0xFE0
 11696                           indf2	equ	0xFDF
 11697                           postinc2	equ	0xFDE
 11698                           postdec2	equ	0xFDD
 11699                           fsr2h	equ	0xFDA
 11700                           fsr2l	equ	0xFD9
 11701                           status	equ	0xFD8
 11702                           
 11703 ;; *************** function i2_interuption_QEI_sens *****************
 11704 ;; Defined at:
 11705 ;;		line 196 in file "interruptions.c"
 11706 ;; Parameters:    Size  Location     Type
 11707 ;;		None
 11708 ;; Auto vars:     Size  Location     Type
 11709 ;;		None
 11710 ;; Return value:  Size  Location     Type
 11711 ;;		None               void
 11712 ;; Registers used:
 11713 ;;		None
 11714 ;; Tracked objects:
 11715 ;;		On entry : 0/0
 11716 ;;		On exit  : 0/0
 11717 ;;		Unchanged: 0/0
 11718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11719 ;;      Params:         0       0       0       0
 11720 ;;      Locals:         0       0       0       0
 11721 ;;      Temps:          0       0       0       0
 11722 ;;      Totals:         0       0       0       0
 11723 ;;Total ram usage:        0 bytes
 11724 ;; Hardware stack levels used:    1
 11725 ;; This function calls:
 11726 ;;		Nothing
 11727 ;; This function is called by:
 11728 ;;		i2_subroutine_interruptions
 11729 ;; This function uses a non-reentrant model
 11730 ;;
 11731                           
 11732                           	psect	text55
 11733  003620                     __ptext55:
 11734                           	opt stack 0
 11735  003620                     i2_interuption_QEI_sens:
 11736                           	opt stack 17
 11737                           
 11738                           ;interruptions.c: 198: PIR3bits.IC3DRIF = 0;
 11739                           
 11740                           ;incstack = 0
 11741  003620  96A4               	bcf	4004,3,c	;volatile
 11742  003622  0012               	return		;funcret
 11743  003624                     __end_ofi2_interuption_QEI_sens:
 11744                           	opt stack 0
 11745                           pclatu	equ	0xFFB
 11746                           pclath	equ	0xFFA
 11747                           tblptru	equ	0xFF8
 11748                           tblptrh	equ	0xFF7
 11749                           tblptrl	equ	0xFF6
 11750                           tablat	equ	0xFF5
 11751                           prodh	equ	0xFF4
 11752                           prodl	equ	0xFF3
 11753                           intcon	equ	0xFF2
 11754                           intcon2	equ	0xFF1
 11755                           intcon3	equ	0xFF0
 11756                           indf0	equ	0xFEF
 11757                           postinc0	equ	0xFEE
 11758                           plusw0	equ	0xFEB
 11759                           fsr0h	equ	0xFEA
 11760                           fsr0l	equ	0xFE9
 11761                           wreg	equ	0xFE8
 11762                           postinc1	equ	0xFE6
 11763                           postdec1	equ	0xFE5
 11764                           plusw1	equ	0xFE3
 11765                           fsr1h	equ	0xFE2
 11766                           fsr1l	equ	0xFE1
 11767                           bsr	equ	0xFE0
 11768                           indf2	equ	0xFDF
 11769                           postinc2	equ	0xFDE
 11770                           postdec2	equ	0xFDD
 11771                           fsr2h	equ	0xFDA
 11772                           fsr2l	equ	0xFD9
 11773                           status	equ	0xFD8
 11774                           
 11775 ;; *************** function i2_interruption_timer2 *****************
 11776 ;; Defined at:
 11777 ;;		line 132 in file "interruptions.c"
 11778 ;; Parameters:    Size  Location     Type
 11779 ;;		None
 11780 ;; Auto vars:     Size  Location     Type
 11781 ;;		None
 11782 ;; Return value:  Size  Location     Type
 11783 ;;		None               void
 11784 ;; Registers used:
 11785 ;;		None
 11786 ;; Tracked objects:
 11787 ;;		On entry : 0/0
 11788 ;;		On exit  : 0/0
 11789 ;;		Unchanged: 0/0
 11790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11791 ;;      Params:         0       0       0       0
 11792 ;;      Locals:         0       0       0       0
 11793 ;;      Temps:          0       0       0       0
 11794 ;;      Totals:         0       0       0       0
 11795 ;;Total ram usage:        0 bytes
 11796 ;; Hardware stack levels used:    1
 11797 ;; This function calls:
 11798 ;;		Nothing
 11799 ;; This function is called by:
 11800 ;;		i2_subroutine_interruptions
 11801 ;; This function uses a non-reentrant model
 11802 ;;
 11803                           
 11804                           	psect	text56
 11805  003624                     __ptext56:
 11806                           	opt stack 0
 11807  003624                     i2_interruption_timer2:
 11808                           	opt stack 17
 11809                           
 11810                           ;interruptions.c: 134: PIR1bits.TMR2IF = 0;
 11811                           
 11812                           ;incstack = 0
 11813  003624  929E               	bcf	3998,1,c	;volatile
 11814  003626  0012               	return		;funcret
 11815  003628                     __end_ofi2_interruption_timer2:
 11816                           	opt stack 0
 11817                           pclatu	equ	0xFFB
 11818                           pclath	equ	0xFFA
 11819                           tblptru	equ	0xFF8
 11820                           tblptrh	equ	0xFF7
 11821                           tblptrl	equ	0xFF6
 11822                           tablat	equ	0xFF5
 11823                           prodh	equ	0xFF4
 11824                           prodl	equ	0xFF3
 11825                           intcon	equ	0xFF2
 11826                           intcon2	equ	0xFF1
 11827                           intcon3	equ	0xFF0
 11828                           indf0	equ	0xFEF
 11829                           postinc0	equ	0xFEE
 11830                           plusw0	equ	0xFEB
 11831                           fsr0h	equ	0xFEA
 11832                           fsr0l	equ	0xFE9
 11833                           wreg	equ	0xFE8
 11834                           postinc1	equ	0xFE6
 11835                           postdec1	equ	0xFE5
 11836                           plusw1	equ	0xFE3
 11837                           fsr1h	equ	0xFE2
 11838                           fsr1l	equ	0xFE1
 11839                           bsr	equ	0xFE0
 11840                           indf2	equ	0xFDF
 11841                           postinc2	equ	0xFDE
 11842                           postdec2	equ	0xFDD
 11843                           fsr2h	equ	0xFDA
 11844                           fsr2l	equ	0xFD9
 11845                           status	equ	0xFD8
 11846                           
 11847 ;; *************** function i2_interruption_timer1 *****************
 11848 ;; Defined at:
 11849 ;;		line 115 in file "interruptions.c"
 11850 ;; Parameters:    Size  Location     Type
 11851 ;;		None
 11852 ;; Auto vars:     Size  Location     Type
 11853 ;;		None
 11854 ;; Return value:  Size  Location     Type
 11855 ;;		None               void
 11856 ;; Registers used:
 11857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11858 ;; Tracked objects:
 11859 ;;		On entry : 0/0
 11860 ;;		On exit  : 0/0
 11861 ;;		Unchanged: 0/0
 11862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11863 ;;      Params:         0       0       0       0
 11864 ;;      Locals:         0       0       0       0
 11865 ;;      Temps:          1       0       0       0
 11866 ;;      Totals:         1       0       0       0
 11867 ;;Total ram usage:        1 bytes
 11868 ;; Hardware stack levels used:    1
 11869 ;; This function calls:
 11870 ;;		Nothing
 11871 ;; This function is called by:
 11872 ;;		i2_subroutine_interruptions
 11873 ;; This function uses a non-reentrant model
 11874 ;;
 11875                           
 11876                           	psect	text57
 11877  003332                     __ptext57:
 11878                           	opt stack 0
 11879  003332                     i2_interruption_timer1:
 11880                           	opt stack 17
 11881                           
 11882                           ;interruptions.c: 117: PIR1bits.TMR1IF = 0;
 11883                           
 11884                           ;incstack = 0
 11885  003332  909E               	bcf	3998,0,c	;volatile
 11886                           
 11887                           ;interruptions.c: 118: TMR1 = 65535 - 810;
 11888  003334  0EFC               	movlw	252
 11889  003336  6ECF               	movwf	4047,c	;volatile
 11890  003338  0ED5               	movlw	213
 11891  00333A  6ECE               	movwf	4046,c	;volatile
 11892                           
 11893                           ;interruptions.c: 120: if (uart_logiciel.transmission_en_cours == 1)
 11894  00333C  0433               	decf	_uart_logiciel+11,w,c
 11895  00333E  A4D8               	btfss	status,2,c
 11896  003340  D018               	goto	i2l375
 11897                           
 11898                           ;interruptions.c: 121: {
 11899                           ;interruptions.c: 122: PORTCbits.RC5 = uart_logiciel.buffer_uart[uart_logiciel.indice];
 11900  003342  5034               	movf	_uart_logiciel+12,w,c
 11901  003344  0D01               	mullw	1
 11902  003346  0E28               	movlw	low _uart_logiciel
 11903  003348  24F3               	addwf	prodl,w,c
 11904  00334A  6ED9               	movwf	fsr2l,c
 11905  00334C  0E00               	movlw	high _uart_logiciel
 11906  00334E  20F4               	addwfc	prodh,w,c
 11907  003350  6EDA               	movwf	fsr2h,c
 11908  003352  50DF               	movf	indf2,w,c
 11909  003354  6E15               	movwf	??i2_interruption_timer1& (0+255),c
 11910  003356  3A15               	swapf	??i2_interruption_timer1,f,c
 11911  003358  4615               	rlncf	??i2_interruption_timer1,f,c
 11912  00335A  5082               	movf	3970,w,c	;volatile
 11913  00335C  1815               	xorwf	??i2_interruption_timer1,w,c
 11914  00335E  0BDF               	andlw	-33
 11915  003360  1815               	xorwf	??i2_interruption_timer1,w,c
 11916  003362  6E82               	movwf	3970,c	;volatile
 11917                           
 11918                           ;interruptions.c: 123: uart_logiciel.indice++;
 11919  003364  2A34               	incf	_uart_logiciel+12,f,c
 11920                           
 11921                           ;interruptions.c: 125: if (uart_logiciel.indice > 10)
 11922  003366  0E0A               	movlw	10
 11923  003368  6434               	cpfsgt	_uart_logiciel+12,c
 11924  00336A  D005               	goto	i2l378
 11925                           
 11926                           ;interruptions.c: 126: uart_logiciel.transmission_en_cours = 0;
 11927  00336C  0E00               	movlw	0
 11928  00336E  6E33               	movwf	_uart_logiciel+11,c
 11929                           
 11930                           ;interruptions.c: 127: }
 11931  003370  D002               	goto	i2l378
 11932  003372                     i2l375:
 11933                           
 11934                           ;interruptions.c: 128: else
 11935                           ;interruptions.c: 129: PORTCbits.RC5 = 1;
 11936  003372  8A82               	bsf	3970,5,c	;volatile
 11937  003374  D000               	goto	i2l378
 11938  003376                     i2l378:
 11939  003376  0012               	return		;funcret
 11940  003378                     __end_ofi2_interruption_timer1:
 11941                           	opt stack 0
 11942                           pclatu	equ	0xFFB
 11943                           pclath	equ	0xFFA
 11944                           tblptru	equ	0xFF8
 11945                           tblptrh	equ	0xFF7
 11946                           tblptrl	equ	0xFF6
 11947                           tablat	equ	0xFF5
 11948                           prodh	equ	0xFF4
 11949                           prodl	equ	0xFF3
 11950                           intcon	equ	0xFF2
 11951                           intcon2	equ	0xFF1
 11952                           intcon3	equ	0xFF0
 11953                           indf0	equ	0xFEF
 11954                           postinc0	equ	0xFEE
 11955                           plusw0	equ	0xFEB
 11956                           fsr0h	equ	0xFEA
 11957                           fsr0l	equ	0xFE9
 11958                           wreg	equ	0xFE8
 11959                           postinc1	equ	0xFE6
 11960                           postdec1	equ	0xFE5
 11961                           plusw1	equ	0xFE3
 11962                           fsr1h	equ	0xFE2
 11963                           fsr1l	equ	0xFE1
 11964                           bsr	equ	0xFE0
 11965                           indf2	equ	0xFDF
 11966                           postinc2	equ	0xFDE
 11967                           postdec2	equ	0xFDD
 11968                           fsr2h	equ	0xFDA
 11969                           fsr2l	equ	0xFD9
 11970                           status	equ	0xFD8
 11971                           
 11972 ;; *************** function i2_interruption_timer0 *****************
 11973 ;; Defined at:
 11974 ;;		line 104 in file "interruptions.c"
 11975 ;; Parameters:    Size  Location     Type
 11976 ;;		None
 11977 ;; Auto vars:     Size  Location     Type
 11978 ;;		None
 11979 ;; Return value:  Size  Location     Type
 11980 ;;		None               void
 11981 ;; Registers used:
 11982 ;;		wreg, status,2
 11983 ;; Tracked objects:
 11984 ;;		On entry : 0/0
 11985 ;;		On exit  : 0/0
 11986 ;;		Unchanged: 0/0
 11987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11988 ;;      Params:         0       0       0       0
 11989 ;;      Locals:         0       0       0       0
 11990 ;;      Temps:          0       0       0       0
 11991 ;;      Totals:         0       0       0       0
 11992 ;;Total ram usage:        0 bytes
 11993 ;; Hardware stack levels used:    1
 11994 ;; This function calls:
 11995 ;;		Nothing
 11996 ;; This function is called by:
 11997 ;;		i2_subroutine_interruptions
 11998 ;; This function uses a non-reentrant model
 11999 ;;
 12000                           
 12001                           	psect	text58
 12002  003608                     __ptext58:
 12003                           	opt stack 0
 12004  003608                     i2_interruption_timer0:
 12005                           	opt stack 17
 12006                           
 12007                           ;interruptions.c: 106: INTCONbits.TMR0IF = 0;
 12008                           
 12009                           ;incstack = 0
 12010  003608  94F2               	bcf	intcon,2,c	;volatile
 12011                           
 12012                           ;interruptions.c: 110: TMR0 = 32750;
 12013  00360A  0E7F               	movlw	127
 12014  00360C  6ED7               	movwf	4055,c	;volatile
 12015  00360E  0EEE               	movlw	238
 12016  003610  6ED6               	movwf	4054,c	;volatile
 12017  003612  0012               	return		;funcret
 12018  003614                     __end_ofi2_interruption_timer0:
 12019                           	opt stack 0
 12020                           pclatu	equ	0xFFB
 12021                           pclath	equ	0xFFA
 12022                           tblptru	equ	0xFF8
 12023                           tblptrh	equ	0xFF7
 12024                           tblptrl	equ	0xFF6
 12025                           tablat	equ	0xFF5
 12026                           prodh	equ	0xFF4
 12027                           prodl	equ	0xFF3
 12028                           intcon	equ	0xFF2
 12029                           intcon2	equ	0xFF1
 12030                           intcon3	equ	0xFF0
 12031                           indf0	equ	0xFEF
 12032                           postinc0	equ	0xFEE
 12033                           plusw0	equ	0xFEB
 12034                           fsr0h	equ	0xFEA
 12035                           fsr0l	equ	0xFE9
 12036                           wreg	equ	0xFE8
 12037                           postinc1	equ	0xFE6
 12038                           postdec1	equ	0xFE5
 12039                           plusw1	equ	0xFE3
 12040                           fsr1h	equ	0xFE2
 12041                           fsr1l	equ	0xFE1
 12042                           bsr	equ	0xFE0
 12043                           indf2	equ	0xFDF
 12044                           postinc2	equ	0xFDE
 12045                           postdec2	equ	0xFDD
 12046                           fsr2h	equ	0xFDA
 12047                           fsr2l	equ	0xFD9
 12048                           status	equ	0xFD8
 12049                           
 12050 ;; *************** function i2_interruption_QEI *****************
 12051 ;; Defined at:
 12052 ;;		line 171 in file "interruptions.c"
 12053 ;; Parameters:    Size  Location     Type
 12054 ;;		None
 12055 ;; Auto vars:     Size  Location     Type
 12056 ;;		None
 12057 ;; Return value:  Size  Location     Type
 12058 ;;		None               void
 12059 ;; Registers used:
 12060 ;;		wreg, status,2, status,0
 12061 ;; Tracked objects:
 12062 ;;		On entry : 0/0
 12063 ;;		On exit  : 0/0
 12064 ;;		Unchanged: 0/0
 12065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12066 ;;      Params:         0       0       0       0
 12067 ;;      Locals:         0       0       0       0
 12068 ;;      Temps:          0       0       0       0
 12069 ;;      Totals:         0       0       0       0
 12070 ;;Total ram usage:        0 bytes
 12071 ;; Hardware stack levels used:    1
 12072 ;; This function calls:
 12073 ;;		Nothing
 12074 ;; This function is called by:
 12075 ;;		i2_subroutine_interruptions
 12076 ;; This function uses a non-reentrant model
 12077 ;;
 12078                           
 12079                           	psect	text59
 12080  003546                     __ptext59:
 12081                           	opt stack 0
 12082  003546                     i2_interruption_QEI:
 12083                           	opt stack 17
 12084                           
 12085                           ;interruptions.c: 173: PIR3bits.IC2QEIF = 0;
 12086                           
 12087                           ;incstack = 0
 12088  003546  94A4               	bcf	4004,2,c	;volatile
 12089                           
 12090                           ;interruptions.c: 174: QEICONbits.QERR = 0;
 12091  003548  9CB6               	bcf	4022,6,c	;volatile
 12092                           
 12093                           ;interruptions.c: 176: if (capteur.synchro_debut_tour == 1)
 12094  00354A  0101               	movlb	1	; () banked
 12095  00354C  0568               	decf	(_capteur+1)& (0+255),w,b
 12096  00354E  A4D8               	btfss	status,2,c
 12097  003550  D007               	goto	i2l3110
 12098                           
 12099                           ; BSR set to: 1
 12100                           ;interruptions.c: 177: {
 12101                           ;interruptions.c: 178: capteur.tour_en_cours = 1;
 12102  003552  0E01               	movlw	1
 12103  003554  0101               	movlb	1	; () banked
 12104  003556  6F67               	movwf	_capteur& (0+255),b
 12105                           
 12106                           ;interruptions.c: 179: capteur.synchro_debut_tour = 0;
 12107  003558  0E00               	movlw	0
 12108  00355A  0101               	movlb	1	; () banked
 12109  00355C  6F68               	movwf	(_capteur+1)& (0+255),b
 12110                           
 12111                           ;interruptions.c: 180: }
 12112  00355E  D004               	goto	i2l401
 12113  003560                     i2l3110:
 12114                           
 12115                           ; BSR set to: 1
 12116                           ;interruptions.c: 181: else
 12117                           ;interruptions.c: 182: capteur.tour_en_cours = 0;
 12118  003560  0E00               	movlw	0
 12119  003562  0101               	movlb	1	; () banked
 12120  003564  6F67               	movwf	_capteur& (0+255),b
 12121  003566  D000               	goto	i2l401
 12122  003568                     i2l401:
 12123                           
 12124                           ; BSR set to: 1
 12125  003568  0012               	return		;funcret
 12126  00356A                     __end_ofi2_interruption_QEI:
 12127                           	opt stack 0
 12128                           pclatu	equ	0xFFB
 12129                           pclath	equ	0xFFA
 12130                           tblptru	equ	0xFF8
 12131                           tblptrh	equ	0xFF7
 12132                           tblptrl	equ	0xFF6
 12133                           tablat	equ	0xFF5
 12134                           prodh	equ	0xFF4
 12135                           prodl	equ	0xFF3
 12136                           intcon	equ	0xFF2
 12137                           intcon2	equ	0xFF1
 12138                           intcon3	equ	0xFF0
 12139                           indf0	equ	0xFEF
 12140                           postinc0	equ	0xFEE
 12141                           plusw0	equ	0xFEB
 12142                           fsr0h	equ	0xFEA
 12143                           fsr0l	equ	0xFE9
 12144                           wreg	equ	0xFE8
 12145                           postinc1	equ	0xFE6
 12146                           postdec1	equ	0xFE5
 12147                           plusw1	equ	0xFE3
 12148                           fsr1h	equ	0xFE2
 12149                           fsr1l	equ	0xFE1
 12150                           bsr	equ	0xFE0
 12151                           indf2	equ	0xFDF
 12152                           postinc2	equ	0xFDE
 12153                           postdec2	equ	0xFDD
 12154                           fsr2h	equ	0xFDA
 12155                           fsr2l	equ	0xFD9
 12156                           status	equ	0xFD8
 12157                           
 12158 ;; *************** function i2_interruption_INT0 *****************
 12159 ;; Defined at:
 12160 ;;		line 144 in file "interruptions.c"
 12161 ;; Parameters:    Size  Location     Type
 12162 ;;		None
 12163 ;; Auto vars:     Size  Location     Type
 12164 ;;		None
 12165 ;; Return value:  Size  Location     Type
 12166 ;;		None               void
 12167 ;; Registers used:
 12168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12169 ;; Tracked objects:
 12170 ;;		On entry : 0/0
 12171 ;;		On exit  : 0/0
 12172 ;;		Unchanged: 0/0
 12173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12174 ;;      Params:         0       0       0       0
 12175 ;;      Locals:         0       0       0       0
 12176 ;;      Temps:          2       0       0       0
 12177 ;;      Totals:         2       0       0       0
 12178 ;;Total ram usage:        2 bytes
 12179 ;; Hardware stack levels used:    1
 12180 ;; This function calls:
 12181 ;;		Nothing
 12182 ;; This function is called by:
 12183 ;;		i2_subroutine_interruptions
 12184 ;; This function uses a non-reentrant model
 12185 ;;
 12186                           
 12187                           	psect	text60
 12188  00325A                     __ptext60:
 12189                           	opt stack 0
 12190  00325A                     i2_interruption_INT0:
 12191                           	opt stack 17
 12192                           
 12193                           ;interruptions.c: 146: if (capteur.tour_en_cours == 1)
 12194                           
 12195                           ; BSR set to: 1
 12196                           ;incstack = 0
 12197  00325A  0101               	movlb	1	; () banked
 12198  00325C  0567               	decf	_capteur& (0+255),w,b
 12199  00325E  A4D8               	btfss	status,2,c
 12200  003260  D01F               	goto	i2l3102
 12201                           
 12202                           ; BSR set to: 1
 12203                           ;interruptions.c: 147: {
 12204                           ;interruptions.c: 148: if (capteur.indice < 3)
 12205  003262  0E03               	movlw	3
 12206  003264  0101               	movlb	1	; () banked
 12207  003266  6179               	cpfslt	(_capteur+18)& (0+255),b
 12208  003268  D018               	goto	i2l3100
 12209                           
 12210                           ; BSR set to: 1
 12211                           ;interruptions.c: 149: {
 12212                           ;interruptions.c: 150: capteur.position[capteur.indice++] = POSCNTH * 256 + POSCNTL;
 12213  00326A  5066               	movf	3942,w,c	;volatile
 12214  00326C  CF67 F015          	movff	3943,??i2_interruption_INT0	;volatile
 12215  003270  6A16               	clrf	(??i2_interruption_INT0+1)& (0+255),c
 12216  003272  C015  F016         	movff	??i2_interruption_INT0,??i2_interruption_INT0+1
 12217  003276  6A15               	clrf	??i2_interruption_INT0,c
 12218  003278  2615               	addwf	??i2_interruption_INT0,f,c
 12219  00327A  0E00               	movlw	0
 12220  00327C  2216               	addwfc	??i2_interruption_INT0+1,f,c
 12221  00327E  0101               	movlb	1	; () banked
 12222  003280  5179               	movf	(_capteur+18)& (0+255),w,b
 12223  003282  0D02               	mullw	2
 12224  003284  0E73               	movlw	low (_capteur+12)
 12225  003286  24F3               	addwf	prodl,w,c
 12226  003288  6ED9               	movwf	fsr2l,c
 12227  00328A  0E01               	movlw	high (_capteur+12)
 12228  00328C  20F4               	addwfc	prodh,w,c
 12229  00328E  6EDA               	movwf	fsr2h,c
 12230  003290  C015  FFDE         	movff	??i2_interruption_INT0,postinc2
 12231  003294  C016  FFDD         	movff	??i2_interruption_INT0+1,postdec2
 12232  003298  D000               	goto	i2l3100
 12233  00329A                     i2l3100:
 12234                           
 12235                           ; BSR set to: 1
 12236                           ;interruptions.c: 152: else
 12237                           ;interruptions.c: 153: capteur.indice++;
 12238  00329A  0101               	movlb	1	; () banked
 12239  00329C  2B79               	incf	(_capteur+18)& (0+255),f,b
 12240                           
 12241                           ; BSR set to: 1
 12242  00329E  D000               	goto	i2l3102
 12243  0032A0                     i2l3102:
 12244                           
 12245                           ; BSR set to: 1
 12246                           ;interruptions.c: 154: }
 12247                           ;interruptions.c: 155: INTCONbits.INT0IF = 0;
 12248  0032A0  92F2               	bcf	intcon,1,c	;volatile
 12249                           
 12250                           ; BSR set to: 1
 12251  0032A2  0012               	return		;funcret
 12252  0032A4                     __end_ofi2_interruption_INT0:
 12253                           	opt stack 0
 12254                           pclatu	equ	0xFFB
 12255                           pclath	equ	0xFFA
 12256                           tblptru	equ	0xFF8
 12257                           tblptrh	equ	0xFF7
 12258                           tblptrl	equ	0xFF6
 12259                           tablat	equ	0xFF5
 12260                           prodh	equ	0xFF4
 12261                           prodl	equ	0xFF3
 12262                           intcon	equ	0xFF2
 12263                           intcon2	equ	0xFF1
 12264                           intcon3	equ	0xFF0
 12265                           indf0	equ	0xFEF
 12266                           postinc0	equ	0xFEE
 12267                           plusw0	equ	0xFEB
 12268                           fsr0h	equ	0xFEA
 12269                           fsr0l	equ	0xFE9
 12270                           wreg	equ	0xFE8
 12271                           postinc1	equ	0xFE6
 12272                           postdec1	equ	0xFE5
 12273                           plusw1	equ	0xFE3
 12274                           fsr1h	equ	0xFE2
 12275                           fsr1l	equ	0xFE1
 12276                           bsr	equ	0xFE0
 12277                           indf2	equ	0xFDF
 12278                           postinc2	equ	0xFDE
 12279                           postdec2	equ	0xFDD
 12280                           fsr2h	equ	0xFDA
 12281                           fsr2l	equ	0xFD9
 12282                           status	equ	0xFD8
 12283                           
 12284 ;; *************** function i2_interrupt_TX *****************
 12285 ;; Defined at:
 12286 ;;		line 229 in file "interruptions.c"
 12287 ;; Parameters:    Size  Location     Type
 12288 ;;		None
 12289 ;; Auto vars:     Size  Location     Type
 12290 ;;		None
 12291 ;; Return value:  Size  Location     Type
 12292 ;;		None               void
 12293 ;; Registers used:
 12294 ;;		None
 12295 ;; Tracked objects:
 12296 ;;		On entry : 0/0
 12297 ;;		On exit  : 0/0
 12298 ;;		Unchanged: 0/0
 12299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12300 ;;      Params:         0       0       0       0
 12301 ;;      Locals:         0       0       0       0
 12302 ;;      Temps:          0       0       0       0
 12303 ;;      Totals:         0       0       0       0
 12304 ;;Total ram usage:        0 bytes
 12305 ;; Hardware stack levels used:    1
 12306 ;; This function calls:
 12307 ;;		Nothing
 12308 ;; This function is called by:
 12309 ;;		i2_subroutine_interruptions
 12310 ;; This function uses a non-reentrant model
 12311 ;;
 12312                           
 12313                           	psect	text61
 12314  003628                     __ptext61:
 12315                           	opt stack 0
 12316  003628                     i2_interrupt_TX:
 12317                           	opt stack 17
 12318                           
 12319                           ;interruptions.c: 231: PIR1bits.TXIF = 0;
 12320                           
 12321                           ; BSR set to: 1
 12322                           ;incstack = 0
 12323  003628  989E               	bcf	3998,4,c	;volatile
 12324  00362A  0012               	return		;funcret
 12325  00362C                     __end_ofi2_interrupt_TX:
 12326                           	opt stack 0
 12327                           pclatu	equ	0xFFB
 12328                           pclath	equ	0xFFA
 12329                           tblptru	equ	0xFF8
 12330                           tblptrh	equ	0xFF7
 12331                           tblptrl	equ	0xFF6
 12332                           tablat	equ	0xFF5
 12333                           prodh	equ	0xFF4
 12334                           prodl	equ	0xFF3
 12335                           intcon	equ	0xFF2
 12336                           intcon2	equ	0xFF1
 12337                           intcon3	equ	0xFF0
 12338                           indf0	equ	0xFEF
 12339                           postinc0	equ	0xFEE
 12340                           plusw0	equ	0xFEB
 12341                           fsr0h	equ	0xFEA
 12342                           fsr0l	equ	0xFE9
 12343                           wreg	equ	0xFE8
 12344                           postinc1	equ	0xFE6
 12345                           postdec1	equ	0xFE5
 12346                           plusw1	equ	0xFE3
 12347                           fsr1h	equ	0xFE2
 12348                           fsr1l	equ	0xFE1
 12349                           bsr	equ	0xFE0
 12350                           indf2	equ	0xFDF
 12351                           postinc2	equ	0xFDE
 12352                           postdec2	equ	0xFDD
 12353                           fsr2h	equ	0xFDA
 12354                           fsr2l	equ	0xFD9
 12355                           status	equ	0xFD8
 12356                           
 12357 ;; *************** function i2_interrupt_RX *****************
 12358 ;; Defined at:
 12359 ;;		line 210 in file "interruptions.c"
 12360 ;; Parameters:    Size  Location     Type
 12361 ;;		None
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;  interrupt_RX    1   20[COMRAM] unsigned char 
 12364 ;; Return value:  Size  Location     Type
 12365 ;;		None               void
 12366 ;; Registers used:
 12367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12368 ;; Tracked objects:
 12369 ;;		On entry : 0/0
 12370 ;;		On exit  : 0/0
 12371 ;;		Unchanged: 0/0
 12372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12373 ;;      Params:         0       0       0       0
 12374 ;;      Locals:         1       0       0       0
 12375 ;;      Temps:          0       0       0       0
 12376 ;;      Totals:         1       0       0       0
 12377 ;;Total ram usage:        1 bytes
 12378 ;; Hardware stack levels used:    1
 12379 ;; This function calls:
 12380 ;;		Nothing
 12381 ;; This function is called by:
 12382 ;;		i2_subroutine_interruptions
 12383 ;; This function uses a non-reentrant model
 12384 ;;
 12385                           
 12386                           	psect	text62
 12387  0033F4                     __ptext62:
 12388                           	opt stack 0
 12389  0033F4                     i2_interrupt_RX:
 12390                           	opt stack 17
 12391                           
 12392                           ;interruptions.c: 212: PIR1bits.RCIF = 0;
 12393                           
 12394                           ;incstack = 0
 12395  0033F4  9A9E               	bcf	3998,5,c	;volatile
 12396                           
 12397                           ;interruptions.c: 213: PORTBbits.RB0 = 1;
 12398  0033F6  8081               	bsf	3969,0,c	;volatile
 12399                           
 12400                           ;interruptions.c: 215: if (uart_reception.indice < 100)
 12401  0033F8  0E64               	movlw	100
 12402  0033FA  0101               	movlb	1	; () banked
 12403  0033FC  6164               	cpfslt	(_uart_reception+100)& (0+255),b
 12404  0033FE  D011               	goto	i2l3124
 12405                           
 12406                           ; BSR set to: 1
 12407                           ;interruptions.c: 216: {
 12408                           ;interruptions.c: 217: uart_reception.buffer_reeption[uart_reception.indice] = RCREG;
 12409  003400  0101               	movlb	1	; () banked
 12410  003402  5164               	movf	(_uart_reception+100)& (0+255),w,b
 12411  003404  0D01               	mullw	1
 12412  003406  0E00               	movlw	low _uart_reception
 12413  003408  24F3               	addwf	prodl,w,c
 12414  00340A  6ED9               	movwf	fsr2l,c
 12415  00340C  0E01               	movlw	high _uart_reception
 12416  00340E  20F4               	addwfc	prodh,w,c
 12417  003410  6EDA               	movwf	fsr2h,c
 12418  003412  CFAE FFDF          	movff	4014,indf2	;volatile
 12419                           
 12420                           ; BSR set to: 1
 12421                           ;interruptions.c: 218: uart_reception.buffer_vide = 0;
 12422  003416  0E00               	movlw	0
 12423  003418  0101               	movlb	1	; () banked
 12424  00341A  6F66               	movwf	(_uart_reception+102)& (0+255),b
 12425                           
 12426                           ; BSR set to: 1
 12427                           ;interruptions.c: 219: uart_reception.indice++;
 12428  00341C  0101               	movlb	1	; () banked
 12429  00341E  2B64               	incf	(_uart_reception+100)& (0+255),f,b
 12430                           
 12431                           ;interruptions.c: 220: }
 12432  003420  D006               	goto	i2l412
 12433  003422                     i2l3124:
 12434                           
 12435                           ; BSR set to: 1
 12436                           ;interruptions.c: 221: else
 12437                           ;interruptions.c: 222: {
 12438                           ;interruptions.c: 223: uart_reception.buffer_plein = 1;
 12439  003422  0E01               	movlw	1
 12440  003424  0101               	movlb	1	; () banked
 12441  003426  6F65               	movwf	(_uart_reception+101)& (0+255),b
 12442                           
 12443                           ; BSR set to: 1
 12444                           ;interruptions.c: 224: uint8_t temp = RCREG;
 12445  003428  CFAE F015          	movff	4014,i2interrupt_RX@temp	;volatile
 12446  00342C  D000               	goto	i2l412
 12447  00342E                     i2l412:
 12448                           
 12449                           ; BSR set to: 1
 12450  00342E  0012               	return		;funcret
 12451  003430                     __end_ofi2_interrupt_RX:
 12452                           	opt stack 0
 12453                           pclatu	equ	0xFFB
 12454                           pclath	equ	0xFFA
 12455                           tblptru	equ	0xFF8
 12456                           tblptrh	equ	0xFF7
 12457                           tblptrl	equ	0xFF6
 12458                           tablat	equ	0xFF5
 12459                           prodh	equ	0xFF4
 12460                           prodl	equ	0xFF3
 12461                           intcon	equ	0xFF2
 12462                           intcon2	equ	0xFF1
 12463                           intcon3	equ	0xFF0
 12464                           indf0	equ	0xFEF
 12465                           postinc0	equ	0xFEE
 12466                           plusw0	equ	0xFEB
 12467                           fsr0h	equ	0xFEA
 12468                           fsr0l	equ	0xFE9
 12469                           wreg	equ	0xFE8
 12470                           postinc1	equ	0xFE6
 12471                           postdec1	equ	0xFE5
 12472                           plusw1	equ	0xFE3
 12473                           fsr1h	equ	0xFE2
 12474                           fsr1l	equ	0xFE1
 12475                           bsr	equ	0xFE0
 12476                           indf2	equ	0xFDF
 12477                           postinc2	equ	0xFDE
 12478                           postdec2	equ	0xFDD
 12479                           fsr2h	equ	0xFDA
 12480                           fsr2l	equ	0xFD9
 12481                           status	equ	0xFD8
 12482                           pclatu	equ	0xFFB
 12483                           pclath	equ	0xFFA
 12484                           tblptru	equ	0xFF8
 12485                           tblptrh	equ	0xFF7
 12486                           tblptrl	equ	0xFF6
 12487                           tablat	equ	0xFF5
 12488                           prodh	equ	0xFF4
 12489                           prodl	equ	0xFF3
 12490                           intcon	equ	0xFF2
 12491                           intcon2	equ	0xFF1
 12492                           intcon3	equ	0xFF0
 12493                           indf0	equ	0xFEF
 12494                           postinc0	equ	0xFEE
 12495                           plusw0	equ	0xFEB
 12496                           fsr0h	equ	0xFEA
 12497                           fsr0l	equ	0xFE9
 12498                           wreg	equ	0xFE8
 12499                           postinc1	equ	0xFE6
 12500                           postdec1	equ	0xFE5
 12501                           plusw1	equ	0xFE3
 12502                           fsr1h	equ	0xFE2
 12503                           fsr1l	equ	0xFE1
 12504                           bsr	equ	0xFE0
 12505                           indf2	equ	0xFDF
 12506                           postinc2	equ	0xFDE
 12507                           postdec2	equ	0xFDD
 12508                           fsr2h	equ	0xFDA
 12509                           fsr2l	equ	0xFD9
 12510                           status	equ	0xFD8
 12511                           
 12512                           	psect	rparam
 12513  0000                     pclatu	equ	0xFFB
 12514                           pclath	equ	0xFFA
 12515                           tblptru	equ	0xFF8
 12516                           tblptrh	equ	0xFF7
 12517                           tblptrl	equ	0xFF6
 12518                           tablat	equ	0xFF5
 12519                           prodh	equ	0xFF4
 12520                           prodl	equ	0xFF3
 12521                           intcon	equ	0xFF2
 12522                           intcon2	equ	0xFF1
 12523                           intcon3	equ	0xFF0
 12524                           indf0	equ	0xFEF
 12525                           postinc0	equ	0xFEE
 12526                           plusw0	equ	0xFEB
 12527                           fsr0h	equ	0xFEA
 12528                           fsr0l	equ	0xFE9
 12529                           wreg	equ	0xFE8
 12530                           postinc1	equ	0xFE6
 12531                           postdec1	equ	0xFE5
 12532                           plusw1	equ	0xFE3
 12533                           fsr1h	equ	0xFE2
 12534                           fsr1l	equ	0xFE1
 12535                           bsr	equ	0xFE0
 12536                           indf2	equ	0xFDF
 12537                           postinc2	equ	0xFDE
 12538                           postdec2	equ	0xFDD
 12539                           fsr2h	equ	0xFDA
 12540                           fsr2l	equ	0xFD9
 12541                           status	equ	0xFD8


Data Sizes:
    Strings     135
    Constant    27
    Data        1
    BSS         182
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      60
    BANK0           160    146     160
    BANK1           256     56     202
    BANK2           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 15
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), 

    triangulation@c	PTR struct . size(2) Largest target is 18
		 -> main@c(BANK1[18]), 

    sp__IntToC	PTR unsigned char  size(2) Largest target is 8
		 -> IntToC@out(COMRAM[8]), 

    PutsUART@chaine	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[2]), 
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[2]), STR_6(CODE[3]), IntToC@out(COMRAM[8]), STR_5(CODE[20]), 
		 -> STR_4(CODE[8]), STR_3(CODE[24]), STR_2(CODE[43]), STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_subroutine_interruptions
    i2_subroutine_interruptions->i2_interruption_INT0

Critical Paths under _low_isr in COMRAM

    _low_isr->_subroutine_interruptions
    _subroutine_interruptions->_interruption_INT0

Critical Paths under _main in BANK0

    _triangulation->_cotangeante
    _saturation->___ftge
    _cotangeante->_tan
    _tan->_cos
    _cos->_sin
    _sin->___ftsub
    _floor->___altoft
    ___altoft->___fttol
    _eval_poly->___ftadd
    _conversion_degre_radian->___ftdiv
    _obtention_angle->___ftdiv
    ___lwtoft->___ftpack
    _get_distance->_sqrt
    _sqrt->___ftsub
    ___ftsub->_floor
    ___ftadd->___ftneg
    _envoit_pwm->___fttol
    ___ftneg->___ftmul
    ___ftmul->___ftpack
    ___ftge->___ftneg
    _affichage_position->_PutIntUART
    ___fttol->___ftdiv
    ___ftdiv->_eval_poly
    _PutIntUART->___fttol
    _PutsUART->_IntToC
    _PutcUART->___awdiv
    _IntToC->___awdiv
    ___awdiv->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_triangulation

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     3      5  300890
                                            138 BANK0      8     3      5
                         _PutIntUART
                           _PutsUART
                             ___ftge
                             ___wmul
                 _affichage_position
                         _envoit_pwm
                       _get_distance
                        _init_system
                    _obtention_angle
                      _triangulation
 ---------------------------------------------------------------------------------
 (1) _triangulation                                       65    54     11  197102
                                              0 BANK1     56    45     11
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                        _cotangeante
                         _saturation
 ---------------------------------------------------------------------------------
 (2) _saturation                                           6     0      6    4259
                                             35 BANK0      6     0      6
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (2) _cotangeante                                          6     3      3  167499
                                            132 BANK0      6     3      3
                            ___ftdiv
            _conversion_degre_radian
                                _tan
 ---------------------------------------------------------------------------------
 (3) _tan                                                  9     6      3  150966
                                            123 BANK0      9     6      3
                            ___ftdiv
                                _cos
                                _sin
 ---------------------------------------------------------------------------------
 (4) _cos                                                  9     6      3   78498
                                            117 BANK0      6     3      3
                            ___ftadd
                             ___ftge
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 13    10      3   67817
                                            104 BANK0     13    10      3
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                                8     5      3   14777
                                             90 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                7     2      5     452
                                              0 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (6) ___altoft                                            10     6      4    2805
                                             80 BANK0     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           12     5      7   19179
                                             38 BANK0     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _conversion_degre_radian                              3     0      3   11836
                                             65 BANK0      3     0      3
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (1) _obtention_angle                                      6     3      3   14536
                                             65 BANK0      6     3      3
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2632
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _init_system                                          0     0      0       0
                    _ConfigInterrupt
                        _ConfigPorts
                         _config_QEI
                         _config_pwm
                        _config_uart
                       _init_capteur
                       _init_timer_0
                 _init_uart_logiciel
                _init_uart_reception
 ---------------------------------------------------------------------------------
 (2) _init_uart_reception                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_uart_logiciel                                   0     0      0       0
                       _init_timer_1
 ---------------------------------------------------------------------------------
 (3) _init_timer_1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_capteur                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_uart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_pwm                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_QEI                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ConfigPorts                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ConfigInterrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_distance                                        24    12     12   36899
                                            123 BANK0     12     0     12
                                              0 BANK1     12    12      0
                            ___ftadd
                            ___ftmul
                            ___ftneg
                             ___wmul (ARG)
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _sqrt                                                19    16      3   18968
                                            104 BANK0     19    16      3
                             ___ftge
                            ___ftmul
                            ___ftsub
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    9155
                                             98 BANK0      6     0      6
                            ___ftadd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             12     6      6    8483
                                             26 BANK0     12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _envoit_pwm                                           6     3      3   11895
                                             80 BANK0      6     3      3
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3    1682
                                             23 BANK0      3     0      3
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftmul                                             15     9      6    7284
                                              8 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1892
                                             26 BANK0      9     3      6
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (1) _affichage_position                                   8     8      0   20592
                                             83 BANK0      8     8      0
                         _PutIntUART
                           _PutsUART
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             15    11      4     700
                                             65 BANK0     15    11      4
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             15     9      6    4444
                                             50 BANK0     15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2524
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _PutIntUART                                           3     1      2   10702
                                             80 BANK0      3     1      2
                             _IntToC
                           _PutsUART
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _PutsUART                                             5     3      2    4313
                                             30 BANK0      5     3      2
                             _IntToC (ARG)
                           _PutcUART
 ---------------------------------------------------------------------------------
 (3) _PutcUART                                             8     7      1    2680
                                             14 BANK0      8     7      1
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _IntToC                                              16    14      2    6019
                                             14 BANK0     16    14      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    2696
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    2139
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                             17    17      0     177
                                              3 COMRAM    17    17      0
           _subroutine_interruptions
 ---------------------------------------------------------------------------------
 (10) _subroutine_interruptions                            1     1      0     177
                                              2 COMRAM     1     1      0
                       _interrupt_RX
                       _interrupt_TX
                  _interruption_INT0
                   _interruption_QEI
                _interruption_timer0
                _interruption_timer1
                _interruption_timer2
               _interuption_QEI_sens
 ---------------------------------------------------------------------------------
 (11) _interuption_QEI_sens                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _interruption_timer2                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _interruption_timer1                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _interruption_timer0                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _interruption_QEI                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _interruption_INT0                                   2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _interrupt_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _interrupt_RX                                        1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _high_isr                                           14    14      0     177
                                             23 COMRAM    14    14      0
         i2_subroutine_interruptions
 ---------------------------------------------------------------------------------
 (13) i2_subroutine_interruptions                          1     1      0     177
                                             22 COMRAM     1     1      0
                     i2_interrupt_RX
                     i2_interrupt_TX
                i2_interruption_INT0
                 i2_interruption_QEI
              i2_interruption_timer0
              i2_interruption_timer1
              i2_interruption_timer2
             i2_interuption_QEI_sens
 ---------------------------------------------------------------------------------
 (14) i2_interuption_QEI_sens                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_interruption_timer2                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_interruption_timer1                               1     1      0       0
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) i2_interruption_timer0                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_interruption_QEI                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_interruption_INT0                                 2     2      0       0
                                             20 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (14) i2_interrupt_TX                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_interrupt_RX                                      1     1      0       1
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PutIntUART
     _IntToC
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _PutsUART
       _IntToC (ARG)
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _PutcUART (ARG)
         ___awdiv
           ___wmul (ARG)
     ___fttol (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _eval_poly (ARG)
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___wmul
   _PutsUART
     _IntToC (ARG)
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _PutcUART (ARG)
       ___awdiv
         ___wmul (ARG)
   ___ftge
     ___ftneg (ARG)
       ___ftmul (ARG)
         ___ftpack
   ___wmul
   _affichage_position
     _PutIntUART
       _IntToC
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _PutsUART
         _IntToC (ARG)
           ___awdiv
             ___wmul (ARG)
           ___wmul
         _PutcUART (ARG)
           ___awdiv
             ___wmul (ARG)
       ___fttol (ARG)
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _eval_poly (ARG)
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul
               ___ftpack
             ___wmul
     _PutsUART
       _IntToC (ARG)
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _PutcUART (ARG)
         ___awdiv
           ___wmul (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _eval_poly (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul
           ___ftpack
         ___wmul
     ___fttol
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _eval_poly (ARG)
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___wmul
   _envoit_pwm
     ___ftge
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftmul (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _eval_poly (ARG)
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___wmul
   _get_distance
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftmul (ARG)
         ___ftpack
     ___wmul (ARG)
     _sqrt (ARG)
       ___ftge
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftmul
         ___ftpack
       ___ftsub
         ___ftadd
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___ftadd (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _eval_poly (ARG)
                   ___ftadd
                     ___ftmul (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftmul
                     ___ftpack
                   ___wmul
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftge
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___fttol
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _eval_poly (ARG)
                 ___ftadd
                   ___ftmul (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___ftpack
                 ___wmul
           _frexp
   _init_system
     _ConfigInterrupt
     _ConfigPorts
     _config_QEI
     _config_pwm
     _config_uart
     _init_capteur
     _init_timer_0
     _init_uart_logiciel
       _init_timer_1
     _init_uart_reception
   _obtention_angle
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _eval_poly (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul
           ___ftpack
         ___wmul
     ___ftmul
       ___ftpack
     ___lwtoft
       ___ftpack
   _triangulation
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _eval_poly (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul
           ___ftpack
         ___wmul
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftmul (ARG)
         ___ftpack
     _cotangeante
       ___ftdiv
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _eval_poly (ARG)
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___wmul
       _conversion_degre_radian
         ___ftdiv
           ___ftadd (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _eval_poly (ARG)
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul
               ___ftpack
             ___wmul
         ___ftmul
           ___ftpack
       _tan
         ___ftdiv
           ___ftadd (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _eval_poly (ARG)
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul
               ___ftpack
             ___wmul
         _cos
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftge
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
           _sin
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftdiv
               ___ftadd (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _eval_poly (ARG)
                 ___ftadd
                   ___ftmul (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___ftpack
                 ___wmul
             ___ftge
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
             ___ftmul
               ___ftpack
             ___ftneg
               ___ftmul (ARG)
                 ___ftpack
             ___ftsub
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               _floor (ARG)
                 ___altoft
                   ___ftpack
                   ___fttol (ARG)
                     ___ftdiv (ARG)
                       ___ftadd (ARG)
                         ___ftmul (ARG)
                           ___ftpack
                         ___ftneg (ARG)
                           ___ftmul (ARG)
                             ___ftpack
                         ___ftpack (ARG)
                         ___wmul (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                       ___ftneg (ARG)
                         ___ftmul (ARG)
                           ___ftpack
                       ___ftpack (ARG)
                       ___lwtoft (ARG)
                         ___ftpack
                       _eval_poly (ARG)
                         ___ftadd
                           ___ftmul (ARG)
                             ___ftpack
                           ___ftneg (ARG)
                             ___ftmul (ARG)
                               ___ftpack
                           ___ftpack (ARG)
                           ___wmul (ARG)
                         ___ftmul
                           ___ftpack
                         ___wmul
                 ___ftadd
                   ___ftmul (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftge
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                 ___fttol
                   ___ftdiv (ARG)
                     ___ftadd (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                       ___ftneg (ARG)
                         ___ftmul (ARG)
                           ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                     _eval_poly (ARG)
                       ___ftadd
                         ___ftmul (ARG)
                           ___ftpack
                         ___ftneg (ARG)
                           ___ftmul (ARG)
                             ___ftpack
                         ___ftpack (ARG)
                         ___wmul (ARG)
                       ___ftmul
                         ___ftpack
                       ___wmul
                 _frexp
             _eval_poly
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___ftpack
               ___wmul
             _floor
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
                   ___ftdiv (ARG)
                     ___ftadd (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                       ___ftneg (ARG)
                         ___ftmul (ARG)
                           ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                     _eval_poly (ARG)
                       ___ftadd
                         ___ftmul (ARG)
                           ___ftpack
                         ___ftneg (ARG)
                           ___ftmul (ARG)
                             ___ftpack
                         ___ftpack (ARG)
                         ___wmul (ARG)
                       ___ftmul
                         ___ftpack
                       ___wmul
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftge
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
               ___fttol
                 ___ftdiv (ARG)
                   ___ftadd (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   _eval_poly (ARG)
                     ___ftadd
                       ___ftmul (ARG)
                         ___ftpack
                       ___ftneg (ARG)
                         ___ftmul (ARG)
                           ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                     ___ftmul
                       ___ftpack
                     ___wmul
               _frexp
         _sin
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftdiv
             ___ftadd (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _eval_poly (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___ftpack
               ___wmul
           ___ftge
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___ftmul
             ___ftpack
           ___ftneg
             ___ftmul (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             _floor (ARG)
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
                   ___ftdiv (ARG)
                     ___ftadd (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                       ___ftneg (ARG)
                         ___ftmul (ARG)
                           ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                     _eval_poly (ARG)
                       ___ftadd
                         ___ftmul (ARG)
                           ___ftpack
                         ___ftneg (ARG)
                           ___ftmul (ARG)
                             ___ftpack
                         ___ftpack (ARG)
                         ___wmul (ARG)
                       ___ftmul
                         ___ftpack
                       ___wmul
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftge
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
               ___fttol
                 ___ftdiv (ARG)
                   ___ftadd (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   _eval_poly (ARG)
                     ___ftadd
                       ___ftmul (ARG)
                         ___ftpack
                       ___ftneg (ARG)
                         ___ftmul (ARG)
                           ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                     ___ftmul
                       ___ftpack
                     ___wmul
               _frexp
           _eval_poly
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul
               ___ftpack
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___ftdiv (ARG)
                   ___ftadd (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   _eval_poly (ARG)
                     ___ftadd
                       ___ftmul (ARG)
                         ___ftpack
                       ___ftneg (ARG)
                         ___ftmul (ARG)
                           ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                     ___ftmul
                       ___ftpack
                     ___wmul
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftge
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
             ___fttol
               ___ftdiv (ARG)
                 ___ftadd (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _eval_poly (ARG)
                   ___ftadd
                     ___ftmul (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftmul
                     ___ftpack
                   ___wmul
             _frexp
     _saturation
       ___ftge
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftneg
         ___ftmul (ARG)
           ___ftpack

 _low_isr (ROOT)
   _subroutine_interruptions
     _interrupt_RX
     _interrupt_TX
     _interruption_INT0
     _interruption_QEI
     _interruption_timer0
     _interruption_timer1
     _interruption_timer2
     _interuption_QEI_sens

 _high_isr (ROOT)
   i2_subroutine_interruptions
     i2_interrupt_RX
     i2_interrupt_TX
     i2_interruption_INT0
     i2_interruption_QEI
     i2_interruption_timer0
     i2_interruption_timer1
     i2_interruption_timer2
     i2_interuption_QEI_sens

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     38      CA       7       78.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     92      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     25      3C       1       63.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A6       3        0.0%
DATA                 0      0     1A6      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon May 04 22:25:07 2015

                       ___altoft@exp 00B8               __end_ofi2_interrupt_RX 3430  
             __end_ofi2_interrupt_TX 362C                        ___altoft@sign 00B9  
                                 l31 0A9A                                   l64 0F82  
                                 l56 0F0C                                   l59 0F62  
                       ___awdiv@sign 006B                                   bsr 000FE0  
               ?_init_uart_reception 0001                  ___wmul@multiplicand 0062  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       ?_cotangeante 00E4                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                         ___ftadd@exp1 0085  
                       ___ftadd@exp2 0084                         ___ftadd@sign 0083  
                                l513 2C2E                                  l275 1304  
                                l507 3106                                  l292 164C  
                                l268 0F9A                                  l516 31BE  
                                l533 181E                                  l471 27EA  
                                l519 26D6                                  l474 286C  
                                l482 2F54                                  l539 349E  
                                l732 2976                                  l636 2B9E  
                                l902 1D5E                                  l911 1D88  
                                l922 2254                                  l934 214A  
                                l847 24DE                                  l919 228C  
                                l951 320E                                  l928 2A44  
                                l944 34C2                                  l858 24A6  
                                l955 23BE                                  l891 1C50  
                                l893 1C7A                                  l887 1C16  
                                l888 1E2A                         __CFG_CPB$OFF 000000  
                       __CFG_CPD$OFF 000000                                  _cos 2A46  
                                _tan 3108                                  _sin 1912  
                                prod 000FF3                                  wreg 000FE8  
__size_ofi2_subroutine_interruptions 0084                         __CFG_LVP$OFF 000000  
                       ___ftdiv@cntr 009B                         ___ftdiv@sign 00A0  
                               l1100 316A                                 l1121 1AA8  
                               l1122 1BA0                                 l1106 2AFC  
                               l1123 1BAC                                 l1144 2CBE  
                               l1136 25DA                                 l1090 1E64  
                               l1138 25CE                                 l1091 1FEE  
                               l1084 34FA                                 l1089 1E78  
                               l4102 2C20                                 l2610 233C  
                               l4122 1EE2                                 l2620 236E  
                               l2622 2380                                 l2614 2350  
                               l4302 188C                                 l2616 2358  
                               l2624 238E                                 l4240 16EC  
                               l4312 190A                                 l4136 1FC4  
                               l4250 1722                                 l3610 1C24  
                               l4402 0D0C                                 l2628 23AC  
                               l4244 1706                                 l4172 2870  
                               l4164 27F8                                 l4420 0E28  
                               l4412 0D68                                 ?_cos 00D5  
                               l4262 1774                                 l4254 173E  
                               l3702 20C4                                 l3622 1C70  
                               l3560 2454                                 l3552 23F0  
                               l2592 22B8                                 l4272 17CE  
                               l3712 2108                                 l4168 2862  
                               l3640 1CF2                                 l3632 1CB2  
                               l3616 1C5E                                 l4432 0F26  
                               l4416 0E0E                                 l3570 24B2  
                               l3562 2486                                 l3554 2400  
                               l4274 17E2                                 l4266 178E  
                               l4258 1758                                 l3706 20E0  
                               l3650 1D3E                                 l3642 1D02  
                               l4098 2BD0                                 l4426 0EAE  
                               l3564 2496                                 l3556 2432  
                               l3548 23DA                                 l4292 1856  
                               l3724 29BA                                 l3716 2124  
                               l3708 20E8                                 l3652 1D4E  
                               l3644 1D0E                                 l3804 31E4  
                               l4436 0F7C                                 l4380 0C44  
                               l4278 17EC                                 l3734 2A40  
                               l3638 1CE2                                 l3830 254C  
                               l3822 251A                                 l4390 0C8A  
                               l4374 0C2A                                 l3576 24D0  
                               l3760 2176                                 l4296 1870  
                               l4288 183A                                 l3728 29FC  
                               l3680 2040                                 l3840 27AC  
                               l3744 2C52                                 l4392 0C94  
                               l3850 28C6                                 l3762 219C  
                               l3658 1DB4                                 l3594 2B2A  
                               l3826 252E                                 l3906 1A42  
                               l4378 0C38                                 l3924 0FA6  
                               l3684 2054                                 l3668 1E04  
                               l3596 2B3C                                 l4396 0CAE  
                               l3862 28FC                                 l3766 21B0  
                               l3678 201A                                 l3838 2722  
                               l3864 290A                                 l3856 28DE  
                               l3882 296C                                 l3874 2946  
                               l3866 2914                                 l3962 2FC8  
                               l3786 2212                                 l3698 20A4  
                               l3796 2266                                 l3956 2AB0  
                               l3878 2956                                 l3982 134E  
                               l3894 1942                                 ?_tan 00DB  
                               ?_sin 00C8                                 STR_1 035F  
                               STR_2 031C                                 STR_3 0347  
                               STR_4 038B                                 STR_5 0377  
                               STR_6 0399                                 STR_7 03A1  
                               STR_8 035C                                 STR_9 039C  
                               u3211 1BC4                                 u3221 1BE2  
                               u4121 0E58                                 u4131 0E8C  
                               u3421 2006                                 u3520 2C84  
                               u3441 2030                                 u4217 0AC0  
                               u3531 2162                                 u4307 0B50  
                               u4227 0AD0                                 u3620 253E  
                               u4317 0B60                                 u4237 0AE0  
                               u3551 218C                                 u4407 0BF0  
                               u4327 0B70                                 u4247 0AF0  
                               u3528 2C88                                 u4417 0C00  
                               u4337 0B80                                 u4257 0B00  
                               u3810 2FE8                                 u3730 1A3A  
                               u1971 22A4                                 u4427 0C10  
                               u4347 0B90                                 u4267 0B10  
                               u3820 302A                                 u3740 1A3C  
                               u4437 0C20                                 u4357 0BA0  
                               u4277 0B20                                 u1990 22DE  
                               u4367 0BB0                                 u4287 0B30  
                               u3817 2FDE                                 u4377 0BC0  
                               u4297 0B40                                 u3827 3020  
                               u1995 22D4                                 u4387 0BD0  
                               u4397 0BE0                                 _TMR0 000FD6  
                               _TMR1 000FCE                       ??_get_distance 00E7  
                   _cotangeante$3139 00E7                                 _main 0A72  
                       ___ftpack@arg 0060                                 cos@f 00D5  
                       ___ftpack@exp 0063                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 indf0 000FEF  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 _sqrt 1E2C  
                               tan@x 00DB                                 pclat 000FFA  
                               sin@f 00C8                                 sin@y 00CB  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00A8                        __CFG_IESO$OFF 000000  
                   ?_obtention_angle 00A1                   _triangulation$3135 01A3  
                 _triangulation$3136 01A6                   _triangulation$3137 019D  
                 _triangulation$3138 01A0                        __CFG_MCLRE$ON 000000  
                       ___ftmul@cntr 0075                         ___param_bank 000010  
                       ___ftmul@sign 0076                  __end_of_ConfigPorts 2D4E  
            ??i2_interruption_timer0 0015              ??i2_interruption_timer1 0015  
            ??i2_interruption_timer2 0015                      ?i2_interrupt_RX 0001  
                    ?i2_interrupt_TX 0001                         ___fttol@exp1 00AF  
                              ??_cos 00D8                         ___fttol@lval 00AB  
                              ??_tan 00DE                                ??_sin 00CB  
              ??_init_uart_reception 0060              __end_of_ConfigInterrupt 2DD6  
                       main@distance 00F2                                ?_main 00EA  
                    __end_of___awdiv 2978                      __end_of___ftadd 1E2C  
                              STR_10 0396                                STR_11 0393  
                              STR_12 039D                                STR_13 039F  
                              STR_14 035C                                STR_15 0399  
                              STR_16 03A1                                STR_17 035C  
                              STR_18 035C                                STR_19 035C  
                    __end_of___ftdiv 228E                      __end_of___ftneg 34D0  
                              ?_sqrt 00C8                      __end_of___ftmul 214C  
                    ___awdiv@divisor 0068                      __end_of___ftsub 3210  
                    __end_of___fttol 23C0                                _LATA0 007C48  
                              _LATA1 007C49                                _LATB0 007C50  
                              _LATA2 007C4A                                _LATB1 007C51  
                              _LATA3 007C4B                                _LATC0 007C58  
                              _LATB2 007C52                                _LATA4 007C4C  
                              _LATC1 007C59                                _LATB3 007C53  
                              _LATA5 007C4D                                _LATD0 007C60  
                              _LATC2 007C5A                                _LATB4 007C54  
                              _LATA6 007C4E                                _LATD1 007C61  
                              _LATC3 007C5B                                _LATB5 007C55  
                              _LATA7 007C4F                                _LATE0 007C68  
                              _LATD2 007C62                                _LATC4 007C5C  
                              _LATB6 007C56                                _LATE1 007C69  
                              _LATD3 007C63                                _LATC5 007C5D  
                              _LATB7 007C57                                _LATE2 007C6A  
                              _LATD4 007C64                                _LATC6 007C5E  
                              _PDC0H 000F78                                _LATD5 007C65  
                              _LATC7 007C5F                                _LATD6 007C66  
                              _PDC1H 000F76                                _LATD7 007C67  
                              _PDC2H 000F74                                _PDC0L 000F79  
                              _PDC3H 000F72                                _PDC1L 000F77  
                              _PDC2L 000F75                                _PDC3L 000F73  
                              i1l401 3544                                i1l412 33F2  
                              i1l360 2E18                                i1l362 2E28  
                              i1l354 2DE8                                i1l364 2E38  
                              i1l356 2DF8                                i1l366 2E48  
                              i1l358 2E08                                i1l375 332C  
                              i2l401 3568                                i1l369 2E58  
                              i1l378 3330                                i2l412 342E  
                              i2l360 2E9C                                i2l362 2EAC  
                              i2l354 2E6C                                i2l364 2EBC  
                              i2l356 2E7C                                i2l366 2ECC  
                              i2l358 2E8C                                i2l375 3372  
                              i2l369 2EDC                                i2l378 3376  
                    ___awdiv@counter 006A      __end_of_conversion_degre_radian 31C0  
                              _RCREG 000FAE             __end_of_interruption_QEI 3546  
                              _SPBRG 000FAF                   __end_ofsin@coeff_a 0310  
                 __end_ofsin@coeff_b 031C                                _TXREG 000FAD  
                      _triangulation 03A4                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
            obtention_angle@position 00A1                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                       ?_init_system 0001                       __CFG_EBTRB$OFF 000000  
         ??_subroutine_interruptions 0003                                _floor 24E0  
                              _frexp 2C30                                _errno 00FB  
                      ___ftpack@sign 0064                                main@c 0180  
                              main@i 00F0             ??i2_interuption_QEI_sens 0015  
                    __end_of_low_isr 00A8                       __CFG_BOREN$OFF 000000  
                              sin@x2 00D1                                tablat 000FF5  
                              plusw0 000FEB                                plusw1 000FE3  
                              sqrt@i 00D4                                sqrt@q 00D5  
                              sqrt@x 00D8                                sqrt@y 00C8  
                              sqrt@z 00D1                                status 000FD8  
                   saturation@valeur 0083                      __initialization 3378  
                     __CFG_HPOL$HIGH 000000                         __end_of_main 0F88  
                       __end_of_sqrt 1FF0                       __CFG_OSC$HSPLL 000000  
                     __CFG_LPOL$HIGH 000000                               ??_main 00EF  
                      ___fttol@sign1 00AA                               ??_sqrt 00CB  
         affichage_position@compteur 00FD                        __activetblptr 000002  
                     ?_triangulation 0192                   i2interrupt_RX@temp 0015  
                   __end_of_PutcUART 1306                     __end_of_PutsUART 3032  
                             ?_floor 00BA                               ?_frexp 0060  
                   __end_of___altoft 2BA0                     ___awdiv@dividend 0066  
                             _ANSEL0 000FB8                     __end_of___ftpack 24E0  
                      ?_init_capteur 0001                               i1l3010 33E6  
       __size_ofi2_interruption_INT0 004A                               i2l3100 329A  
                             i2l3102 32A0                               i2l3110 3560  
                             i2l3124 3422                               i1l2986 353C  
                             i1l2996 3250                               i1l2998 3256  
                     __CFG_WDTEN$OFF 000000                     __end_of___lwtoft 34FC  
                     __CFG_WINEN$OFF 000000                               _TMR0ON 007EAF  
                             _TMR1ON 007E68                               _PTPERH 000F7A  
                             _PTPERL 000F7B                          _ConfigPorts 2CC0  
                      ?_init_timer_0 0001                        ?_init_timer_1 0001  
                             _IntToC 1306           __end_of_init_uart_logiciel 35FC  
                     __CFG_SSPMX$RC7 000000                     __end_of_high_isr 309E  
                             ___ftge 2978                               ___wmul 3468  
                          ??___awdiv 006A                            ??___ftadd 0080  
                 i2_interruption_QEI 3546                            ??___ftdiv 0098  
                          ??___ftneg 007A                 __size_of_config_uart 001C  
                          ??___ftmul 006E                            ??___ftsub 00C8  
                          ??___fttol 00A5                           _PutIntUART 356A  
                             clear_0 337E                               clear_1 338A  
                             clear_2 3396                     ___awdiv@quotient 006C  
                   ?_ConfigInterrupt 0001                 __end_of_get_distance 26D8  
                             floor@i 00BD                               floor@x 00BA  
              ___ftmul@f3_as_product 0072                  ?i2_interruption_QEI 0001  
               __size_of_cotangeante 006A                               sin@sgn 00D4  
                       __mediumconst 0000                            ??_low_isr 0004  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                               sqrt@og 00CE  
                     ??_init_capteur 0060      __size_ofi2_interuption_QEI_sens 0004  
                 _affichage_position 164E                           __accesstop 0060  
            __end_of__initialization 33AE                           ___altoft@c 00B0  
                         ___ftadd@f1 007A                           ___ftadd@f2 007D  
                    __CFG_FLTAMX$RC1 000000                 ??i2_interruption_QEI 0015  
                         ___ftge@ff1 007A                           ___ftge@ff2 007D  
                     ??_init_timer_0 0060                       ??_init_timer_1 0060  
                       eval_poly@res 008F                        ___rparam_used 000001  
                         ___ftdiv@f1 0092                           ___ftdiv@f2 0095  
                         ___ftdiv@f3 009C                           ___ftneg@f1 0077  
                  saturation@maximum 0086                           ___ftmul@f1 0068  
                         ___ftmul@f2 006B                  ?_affichage_position 0001  
                         ___ftsub@f1 00C2                           ___ftsub@f2 00C5  
                         ___fttol@f1 00A1                       __pcstackCOMRAM 0001  
                      ?_interrupt_RX 0001                        ?_interrupt_TX 0001  
                       __pidataBANK0 362C                        __end_of_floor 25DC  
                      __end_of_frexp 2CC0        __size_of_interuption_QEI_sens 0004  
                affichage_position@i 00B9                  affichage_position@j 00B7  
                    ??_triangulation 00EA                           ___lwtoft@c 0068  
               ??_affichage_position 00B3     __end_of_subroutine_interruptions 2E5A  
                   cotangeante@angle 00E4          __end_of_interruption_timer0 3608  
        __end_of_interruption_timer1 3332          __end_of_interruption_timer2 361C  
                            ??_floor 00BD                              ??_frexp 0065  
                         __pbssBANK0 00F2                           __pbssBANK1 0100  
               __size_of_init_system 0026                   __size_of_eval_poly 00EE  
                   ??i2_interrupt_RX 0015                     ??i2_interrupt_TX 0015  
                            ?_IntToC 006E         conversion_degre_radian@angle 00A1  
                     ??_interrupt_RX 0001                       ??_interrupt_TX 0001  
                            ?___ftge 007A                            ?_PutcUART 006E  
                            ?___wmul 0060                            ?_PutsUART 007E  
                    __CFG_WDPS$32768 000000               i2_interuption_QEI_sens 3620  
     __size_ofi2_interruption_timer0 000C       __size_ofi2_interruption_timer1 0046  
     __size_ofi2_interruption_timer2 0004                          ?_PutIntUART 00B0  
                          ?___altoft 00B0        __end_ofi2_interruption_timer0 3614  
      __end_ofi2_interruption_timer1 3378        __end_ofi2_interruption_timer2 3628  
                          ?___ftpack 0060                            ?___lwtoft 0068  
                    __CFG_PWM4MX$RB5 000000                              _MAXCNTH 000F65  
                            _MAXCNTL 000F64                    ?_interruption_QEI 0001  
                         _config_QEI 3430                    PutcUART@type_uart 0075  
                         _config_pwm 32A4                              _POSCNTH 000F67  
                            _POSCNTL 000F66                   ??_interruption_QEI 0001  
                          ?_high_isr 0001                              IntToC@i 0072  
                            IntToC@j 007C             ?_conversion_degre_radian 00A1  
                    __CFG_PWMPIN$OFF 000000                         _flag_cpateur 0027  
                    __CFG_PWRTEN$OFF 000000         ??i2_subroutine_interruptions 0017  
                            __Hparam 0000          __end_of_init_uart_reception 35EE  
                    __size_of_IntToC 0348                              __Lparam 0000  
                         ??_PutcUART 006F                __size_of_get_distance 00FC  
                    __size_of___ftge 00CE                              ___awdiv 28A8  
                            ___ftadd 1BAE                              ___ftdiv 214C  
                         ??_PutsUART 0080                              ___ftneg 34A0  
                    __size_of___wmul 0038                              ___ftmul 1FF0  
                            ___ftsub 31C0                              ___fttol 228E  
                         _envoit_pwm 27C6                 __end_of_init_capteur 2FC4  
                       __psmallconst 0300                           ??___altoft 00B4  
                i2_interruption_INT0 325A                      __CFG_STVREN$OFF 000000  
                            __pcinit 3378                           ??___ftpack 0065  
                  __end_of_eval_poly 27C6                              _capteur 0167  
                            __ramtop 0300             __size_of_obtention_angle 0078  
                            __ptext0 0A72                              __ptext1 03A4  
                            __ptext2 2BA0                              __ptext3 309E  
                            __ptext4 3108                              __ptext5 2A46  
                            __ptext6 1912                              __ptext7 24E0  
                            __ptext8 2C30                              __ptext9 2AFE  
                         ??___lwtoft 006B                            _T0CONbits 000FD5  
                PutIntUART@type_uart 00B2                            _T1CONbits 000FCD  
                       __size_of_cos 00B8                         __size_of_tan 0064  
                       __size_of_sin 029C                 __end_of_init_timer_0 35C2  
               __end_of_init_timer_1 35DA                  get_distance@delta_x 0198  
                get_distance@delta_y 019B                              _low_isr 0018  
                         ??_high_isr 0018                       __pintcode_body 3032  
               end_of_initialization 33AE                 ?i2_interruption_INT0 0001  
                __size_of_PutIntUART 0022                        __Lmediumconst 0000  
                            int_func 3032                         ?_ConfigPorts 0001  
                       _get_distance 25DC    __size_of_subroutine_interruptions 0084  
                          _RCSTAbits 000FAB            ?_subroutine_interruptions 0001  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE                      _OVERFLOW_CODEUR 0026  
                         _saturation 2BA0                            _PORTBbits 000F81  
                          _PORTCbits 000F82                            _PORTDbits 000F83  
                 _init_uart_logiciel 35EE                          ?_config_QEI 0001  
                  _get_distance$3140 0195                            _TRISAbits 000F92  
                          _TRISBbits 000F93                            _TRISCbits 000F94  
                        ?_config_pwm 0001                            _TRISDbits 000F95  
                          _TRISEbits 000F96                          _CAP1CONbits 000F63  
               __end_of_interrupt_RX 33F4                 __end_of_interrupt_TX 3620  
                ?_init_uart_logiciel 0001                     envoit_pwm@valeur 00B0  
               obtention_angle@angle 00A4                ??i2_interruption_INT0 0015  
                          IntToC@out 0035                          ___ftdiv@exp 009F  
                          _TXSTAbits 000FAC                     __CFG_T1OSCMX$OFF 000000  
                      ??_config_uart 0060                          ___ftmul@exp 0071  
                     __end_of_IntToC 164E                 ??_init_uart_logiciel 0060  
                        ?_envoit_pwm 00B0                       __end_of___ftge 2A46  
                   __CFG_EXCLKMX$RC3 000000                       __end_of___wmul 34A0  
                        _BAUDCONbits 000FAA                        ??_cotangeante 00E7  
                  main@premiere_fois 00FF                           floor@expon 00C0  
                start_initialization 3378                           eval_poly@d 0089  
                         eval_poly@n 008B                           eval_poly@x 0086  
                  ??_obtention_angle 00A4                 affichage_position@_x 00B3  
               affichage_position@_y 00B5                          __end_of_cos 2AFE  
                        __end_of_tan 316C                          __end_of_sin 1BAE  
           __size_of_ConfigInterrupt 0088         __end_of_interuption_QEI_sens 3618  
                         frexp@value 0060   __end_ofi2_subroutine_interruptions 2EDE  
         i2_subroutine_interruptions 2E5A          __size_ofi2_interruption_QEI 0024  
                           ??_IntToC 0070                __size_of_init_capteur 006E  
                __size_of_config_QEI 0038              ?i2_interuption_QEI_sens 0001  
                           ??___ftge 0080                  __size_of_config_pwm 0048  
                           ??___wmul 0064                          ?_saturation 0083  
                        __pdataBANK0 00FF                         ??_PutIntUART 00B2  
                  __size_of_PutcUART 037E                __size_of_init_timer_0 001A  
              __size_of_init_timer_1 0018                  __end_of_config_uart 35A8  
                  __size_of_PutsUART 006E                          _DFLTCONbits 000F60  
                triangulation@angle1 0194                  triangulation@angle2 0197  
                triangulation@angle3 019A                    __size_of___altoft 00A2  
                  __size_of___ftpack 0120                __end_of_triangulation 0A72  
                        __pbssCOMRAM 0026                    __size_of___lwtoft 002C  
                      __pcstackBANK0 0060                        __pcstackBANK1 0192  
        __size_of_affichage_position 02C4                        ??_init_system 0060  
                __end_of_cotangeante 3108                         _init_capteur 2F56  
                __size_of_envoit_pwm 00E2                    __size_of_high_isr 3096  
                         sin@coeff_a 0301                           sin@coeff_b 0310  
                 __end_of_PutIntUART 358C   i2subroutine_interruptions@priorite 0017  
   subroutine_interruptions@priorite 0003         __size_of_interruption_timer0 000C  
       __size_of_interruption_timer1 0046         __size_of_interruption_timer2 0004  
          __size_of_interruption_QEI 0024       __end_ofi2_interuption_QEI_sens 3624  
               __size_of_ConfigPorts 008E                         _init_timer_0 35A8  
                       _init_timer_1 35C2                            __pintcode 0008  
                           ?___awdiv 0066                             ?___ftadd 007A  
                           ?___ftdiv 0092                             ?___ftneg 0077  
   __size_of_conversion_degre_radian 0054                             ?___ftmul 0068  
                           ?___ftsub 00C2                             ?___fttol 00A1  
                   get_distance@actu 00E1                          __pintcodelo 0018  
                     _uart_reception 0100                i2_interruption_timer0 3608  
              i2_interruption_timer1 3332                i2_interruption_timer2 3624  
              __size_of_interrupt_RX 003C                __size_of_interrupt_TX 0004  
                        __smallconst 0300                            _eval_poly 26D8  
                  PutsUART@type_uart 0082                             ?_low_isr 0001  
                      PutcUART@octet 006E                       __size_of_floor 00FC  
                     __size_of_frexp 0090                    _interruption_INT0 3210  
                 get_distance@ancien 00DB                  __size_of_saturation 0090  
                __end_of_init_system 3522                       ___wmul@product 0064  
                           _LATCbits 000F8B                   ?_interruption_INT0 0001  
                  ??_ConfigInterrupt 0060                             _IPR1bits 000F9F  
                           _IPR2bits 000FA2                             _PIE1bits 000F9D  
                           _IPR3bits 000FA5                             _PIE2bits 000FA0  
                           _PIE3bits 000FA3                             _PIR1bits 000F9E  
                           _PIR2bits 000FA1                             _PIR3bits 000FA4  
                        _config_uart 358C                             _RCONbits 000FD0  
                ??_interruption_INT0 0001                         _interrupt_RX 33B8  
                       _interrupt_TX 361C                 _interuption_QEI_sens 3614  
       __size_of_init_uart_reception 0014              __size_ofi2_interrupt_RX 003C  
            __size_ofi2_interrupt_TX 0004                          _cotangeante 309E  
                  ___wmul@multiplier 0060                             IntToC@nb 006E  
                       ??_config_QEI 0060                           ?_eval_poly 0086  
                       ??_config_pwm 0060            __end_of_interruption_INT0 325A  
                        _INTCON2bits 000FF1                          _INTCON3bits 000FF0  
                          frexp@eptr 0063                             __Hrparam 0000  
                           __Lrparam 0000                   __end_of_config_QEI 3468  
                           _PutcUART 0F88                   __end_of_config_pwm 32EC  
                       ??_envoit_pwm 00B3                             _PutsUART 2FC4  
                   __size_of___awdiv 00D0                     interrupt_RX@temp 0001  
                    _obtention_angle 2EDE                     __size_of___ftadd 027E  
              ?_interuption_QEI_sens 0001                     __size_of___ftdiv 0142  
                   __size_of___ftneg 0030                             ___altoft 2AFE  
                   __size_of___ftmul 015C                             _cos$3143 00D8  
                   __size_of___ftsub 0050                     __size_of___fttol 0132  
                           ___ftpack 23C0               ?i2_interruption_timer0 0001  
             ?i2_interruption_timer1 0001               ?i2_interruption_timer2 0001  
                           ___lwtoft 34D0          __end_ofi2_interruption_INT0 32A4  
                           _tan$3141 00DE                             _tan$3142 00E1  
                   __size_of_low_isr 0090                             __ptext10 26D8  
                           __ptext11 316C                             __ptext20 358C  
                           __ptext12 2EDE                             __ptext21 32A4  
                           __ptext13 34D0                             __ptext30 34A0  
                           __ptext22 3430                             __ptext14 34FC  
                           __ptext31 1FF0                             __ptext23 2CC0  
                           __ptext15 35DA                             __ptext40 1306  
                           __ptext32 2978                             __ptext24 2D4E  
                           __ptext16 35EE                             __ptext41 3468  
                           __ptext33 164E                             __ptext25 25DC  
                           __ptext17 35C2                             __ptext50 3210  
                           __ptext42 28A8                             __ptext34 228E  
                           __ptext26 1E2C                             __ptext18 35A8  
                           __ptext51 361C                             __ptext35 214C  
                           __ptext27 31C0                             __ptext19 2F56  
                           __ptext60 325A                             __ptext52 33B8  
                           __ptext44 2DD6                             __ptext36 23C0  
                           __ptext28 1BAE                             __ptext61 3628  
                           __ptext45 3614                             __ptext37 356A  
                           __ptext29 27C6                             __ptext62 33F4  
                           __ptext54 2E5A                             __ptext46 3618  
                           __ptext38 2FC4                             __ptext55 3620  
                           __ptext47 32EC                             __ptext39 0F88  
                           __ptext56 3624                             __ptext48 35FC  
                           __ptext57 3332                             __ptext49 3522  
                        _init_system 34FC                             __ptext58 3608  
                           __ptext59 3546                             _sin$3144 00CE  
                       PutIntUART@nb 00B0                        _uart_logiciel 0028  
                           _high_isr 0008                   __end_of_envoit_pwm 28A8  
                      __size_of_main 0516                        __size_of_sqrt 01C4  
                   _interruption_QEI 3522          ?i2_subroutine_interruptions 0001  
           _subroutine_interruptions 2DD6                 get_distance@distance 0192  
            _conversion_degre_radian 316C          __size_of_init_uart_logiciel 000E  
                       ??_saturation 0089                             main@argc 00EA  
                           main@argv 00EC                  _interruption_timer0 35FC  
                _interruption_timer1 32EC                  _interruption_timer2 3618  
                         _INTCONbits 000FF2                          ??_eval_poly 008D  
                         _QEICONbits 000FB6           __size_of_interruption_INT0 004A  
                           intlevel1 0000                             intlevel2 0000  
         __end_ofi2_interruption_QEI 356A                   __end_of_saturation 2C30  
               ?_interruption_timer0 0001                 ?_interruption_timer1 0001  
               ?_interruption_timer2 0001                       triangulation@c 0192  
                     triangulation@t 01A9              __end_of_obtention_angle 2F56  
                        _PWMCON0bits 000F6F                          _PWMCON1bits 000F6E  
             ??_interuption_QEI_sens 0001                 envoit_pwm@abs_valeur 00B3  
                         _PTCON0bits 000F7F                       PutsUART@chaine 007E  
                         _PTCON1bits 000F7E                       i2_interrupt_RX 33F4  
                     i2_interrupt_TX 3628           __end_of_affichage_position 1912  
                    _ConfigInterrupt 2D4E                  _init_uart_reception 35DA  
                      ??_ConfigPorts 0060                        ?_get_distance 00DB  
              ??_interruption_timer0 0001                ??_interruption_timer1 0001  
              ??_interruption_timer2 0001            ??_conversion_degre_radian 00A4  
             __size_of_triangulation 06CE                         ?_config_uart 0001  
