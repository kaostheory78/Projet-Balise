

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed May 20 13:29:59 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    81  0000                     
    82                           	psect	idataBANK0
    83  003652                     __pidataBANK0:
    84                           	opt stack 0
    85                           
    86                           ;initializer for main@led
    87  003652  01                 	db	1
    88                           
    89                           ;initializer for main@premiere_fois
    90  003653  01                 	db	1
    91                           
    92                           	psect	smallconst
    93  000300                     __psmallconst:
    94                           	opt stack 0
    95  000300  00                 	db	0
    96  000301                     sin@coeff_a:
    97                           	opt stack 0
    98  000301  F4                 	db	244
    99  000302  4A                 	db	74
   100  000303  48                 	db	72
   101  000304  95                 	db	149
   102  000305  95                 	db	149
   103  000306  C7                 	db	199
   104  000307  C1                 	db	193
   105  000308  DC                 	db	220
   106  000309  45                 	db	69
   107  00030A  DC                 	db	220
   108  00030B  6D                 	db	109
   109  00030C  C3                 	db	195
   110  00030D  B3                 	db	179
   111  00030E  33                 	db	51
   112  00030F  40                 	db	64
   113  000310                     __end_ofsin@coeff_a:
   114                           	opt stack 0
   115  000310                     sin@coeff_b:
   116                           	opt stack 0
   117  000310  34                 	db	52
   118  000311  01                 	db	1
   119  000312  48                 	db	72
   120  000313  9D                 	db	157
   121  000314  B0                 	db	176
   122  000315  45                 	db	69
   123  000316  00                 	db	0
   124  000317  DA                 	db	218
   125  000318  42                 	db	66
   126  000319  00                 	db	0
   127  00031A  80                 	db	128
   128  00031B  3F                 	db	63
   129  00031C                     __end_ofsin@coeff_b:
   130                           	opt stack 0
   131  0000                     _TMR0	set	4054
   132  0000                     _TMR1	set	4046
   133  0000                     _ANSEL0	set	4024
   134  0000                     _BAUDCONbits	set	4010
   135  0000                     _CAP1CONbits	set	3939
   136  0000                     _DFLTCONbits	set	3936
   137  0000                     _INTCON2bits	set	4081
   138  0000                     _INTCON3bits	set	4080
   139  0000                     _INTCONbits	set	4082
   140  0000                     _IPR1bits	set	3999
   141  0000                     _IPR2bits	set	4002
   142  0000                     _IPR3bits	set	4005
   143  0000                     _LATCbits	set	3979
   144  0000                     _MAXCNTH	set	3941
   145  0000                     _MAXCNTL	set	3940
   146  0000                     _PDC0H	set	3960
   147  0000                     _PDC0L	set	3961
   148  0000                     _PDC1H	set	3958
   149  0000                     _PDC1L	set	3959
   150  0000                     _PDC2H	set	3956
   151  0000                     _PDC2L	set	3957
   152  0000                     _PDC3H	set	3954
   153  0000                     _PDC3L	set	3955
   154  0000                     _PIE1bits	set	3997
   155  0000                     _PIE2bits	set	4000
   156  0000                     _PIE3bits	set	4003
   157  0000                     _PIR1bits	set	3998
   158  0000                     _PIR2bits	set	4001
   159  0000                     _PIR3bits	set	4004
   160  0000                     _PORTBbits	set	3969
   161  0000                     _PORTCbits	set	3970
   162  0000                     _PORTDbits	set	3971
   163  0000                     _POSCNTH	set	3943
   164  0000                     _POSCNTL	set	3942
   165  0000                     _PTCON0bits	set	3967
   166  0000                     _PTCON1bits	set	3966
   167  0000                     _PTPERH	set	3962
   168  0000                     _PTPERL	set	3963
   169  0000                     _PWMCON0bits	set	3951
   170  0000                     _PWMCON1bits	set	3950
   171  0000                     _QEICONbits	set	4022
   172  0000                     _RCONbits	set	4048
   173  0000                     _RCREG	set	4014
   174  0000                     _RCSTAbits	set	4011
   175  0000                     _SPBRG	set	4015
   176  0000                     _T0CONbits	set	4053
   177  0000                     _T1CONbits	set	4045
   178  0000                     _TRISAbits	set	3986
   179  0000                     _TRISBbits	set	3987
   180  0000                     _TRISCbits	set	3988
   181  0000                     _TRISDbits	set	3989
   182  0000                     _TRISEbits	set	3990
   183  0000                     _TXREG	set	4013
   184  0000                     _TXSTAbits	set	4012
   185  0000                     _LATA0	set	31816
   186  0000                     _LATA1	set	31817
   187  0000                     _LATA2	set	31818
   188  0000                     _LATA3	set	31819
   189  0000                     _LATA4	set	31820
   190  0000                     _LATA5	set	31821
   191  0000                     _LATA6	set	31822
   192  0000                     _LATA7	set	31823
   193  0000                     _LATB0	set	31824
   194  0000                     _LATB1	set	31825
   195  0000                     _LATB2	set	31826
   196  0000                     _LATB3	set	31827
   197  0000                     _LATB4	set	31828
   198  0000                     _LATB5	set	31829
   199  0000                     _LATB6	set	31830
   200  0000                     _LATB7	set	31831
   201  0000                     _LATC0	set	31832
   202  0000                     _LATC1	set	31833
   203  0000                     _LATC2	set	31834
   204  0000                     _LATC3	set	31835
   205  0000                     _LATC4	set	31836
   206  0000                     _LATC5	set	31837
   207  0000                     _LATC6	set	31838
   208  0000                     _LATC7	set	31839
   209  0000                     _LATD0	set	31840
   210  0000                     _LATD1	set	31841
   211  0000                     _LATD2	set	31842
   212  0000                     _LATD3	set	31843
   213  0000                     _LATD4	set	31844
   214  0000                     _LATD5	set	31845
   215  0000                     _LATD6	set	31846
   216  0000                     _LATD7	set	31847
   217  0000                     _LATE0	set	31848
   218  0000                     _LATE1	set	31849
   219  0000                     _LATE2	set	31850
   220  0000                     _TMR0ON	set	32431
   221  0000                     _TMR1ON	set	32360
   222  00031C                     STR_2:
   223                           
   224                           ; BSR set to: 1
   225  00031C  0A                 	db	10
   226  00031D  0A                 	db	10
   227  00031E  50                 	db	80	;'P'
   228  00031F  72                 	db	114	;'r'
   229  000320  6F                 	db	111	;'o'
   230  000321  62                 	db	98	;'b'
   231  000322  6C                 	db	108	;'l'
   232  000323  65                 	db	101	;'e'
   233  000324  6D                 	db	109	;'m'
   234  000325  65                 	db	101	;'e'
   235  000326  20                 	db	32
   236  000327  64                 	db	100	;'d'
   237  000328  65                 	db	101	;'e'
   238  000329  20                 	db	32
   239  00032A  64                 	db	100	;'d'
   240  00032B  65                 	db	101	;'e'
   241  00032C  74                 	db	116	;'t'
   242  00032D  65                 	db	101	;'e'
   243  00032E  63                 	db	99	;'c'
   244  00032F  74                 	db	116	;'t'
   245  000330  69                 	db	105	;'i'
   246  000331  6F                 	db	111	;'o'
   247  000332  6E                 	db	110	;'n'
   248  000333  20                 	db	32
   249  000334  64                 	db	100	;'d'
   250  000335  65                 	db	101	;'e'
   251  000336  20                 	db	32
   252  000337  62                 	db	98	;'b'
   253  000338  61                 	db	97	;'a'
   254  000339  6C                 	db	108	;'l'
   255  00033A  69                 	db	105	;'i'
   256  00033B  73                 	db	115	;'s'
   257  00033C  65                 	db	101	;'e'
   258  00033D  73                 	db	115	;'s'
   259  00033E  20                 	db	32
   260  00033F  2E                 	db	46
   261  000340  2E                 	db	46
   262  000341  2E                 	db	46
   263  000342  2E                 	db	46
   264  000343  20                 	db	32
   265  000344  3A                 	db	58	;':'
   266  000345  20                 	db	32
   267  000346  00                 	db	0
   268  000347                     STR_3:
   269                           
   270                           ; BSR set to: 1
   271  000347  20                 	db	32
   272  000348  42                 	db	66	;'B'
   273  000349  61                 	db	97	;'a'
   274  00034A  6C                 	db	108	;'l'
   275  00034B  69                 	db	105	;'i'
   276  00034C  73                 	db	115	;'s'
   277  00034D  65                 	db	101	;'e'
   278  00034E  73                 	db	115	;'s'
   279  00034F  20                 	db	32
   280  000350  64                 	db	100	;'d'
   281  000351  65                 	db	101	;'e'
   282  000352  74                 	db	116	;'t'
   283  000353  65                 	db	101	;'e'
   284  000354  63                 	db	99	;'c'
   285  000355  74                 	db	116	;'t'
   286  000356  65                 	db	101	;'e'
   287  000357  65                 	db	101	;'e'
   288  000358  73                 	db	115	;'s'
   289  000359  20                 	db	32
   290  00035A  0A                 	db	10
   291  00035B  0A                 	db	10
   292  00035C  0A                 	db	10
   293  00035D  0D                 	db	13
   294  00035E  00                 	db	0
   295  00035F                     STR_1:
   296                           
   297                           ; BSR set to: 1
   298  00035F  42                 	db	66	;'B'
   299  000360  6F                 	db	111	;'o'
   300  000361  6E                 	db	110	;'n'
   301  000362  6A                 	db	106	;'j'
   302  000363  6F                 	db	111	;'o'
   303  000364  75                 	db	117	;'u'
   304  000365  72                 	db	114	;'r'
   305  000366  20                 	db	32
   306  000367  6C                 	db	108	;'l'
   307  000368  65                 	db	101	;'e'
   308  000369  73                 	db	115	;'s'
   309  00036A  20                 	db	32
   310  00036B  61                 	db	97	;'a'
   311  00036C  6D                 	db	109	;'m'
   312  00036D  69                 	db	105	;'i'
   313  00036E  73                 	db	115	;'s'
   314  00036F  20                 	db	32
   315  000370  21                 	db	33
   316  000371  21                 	db	33
   317  000372  21                 	db	33
   318  000373  20                 	db	32
   319  000374  3D                 	db	61	;'='
   320  000375  29                 	db	41
   321  000376  00                 	db	0
   322  000377                     
   323                           ; BSR set to: 1
   324  000377  20                 	db	32
   325  000378  64                 	db	100	;'d'
   326  000379  61                 	db	97	;'a'
   327  00037A  6E                 	db	110	;'n'
   328  00037B  73                 	db	115	;'s'
   329  00037C  20                 	db	32
   330  00037D  6C                 	db	108	;'l'
   331  00037E  65                 	db	101	;'e'
   332  00037F  20                 	db	32
   333  000380  62                 	db	98	;'b'
   334  000381  75                 	db	117	;'u'
   335  000382  66                 	db	102	;'f'
   336  000383  66                 	db	102	;'f'
   337  000384  65                 	db	101	;'e'
   338  000385  72                 	db	114	;'r'
   339  000386  20                 	db	32
   340  000387  0A                 	db	10
   341  000388  0A                 	db	10
   342  000389  0D                 	db	13
   343  00038A  00                 	db	0
   344  00038B                     
   345                           ; BSR set to: 1
   346  00038B  49                 	db	73	;'I'
   347  00038C  4C                 	db	76	;'L'
   348  00038D  20                 	db	32
   349  00038E  79                 	db	121	;'y'
   350  00038F  20                 	db	32
   351  000390  61                 	db	97	;'a'
   352  000391  20                 	db	32
   353  000392  00                 	db	0
   354  000393                     STR_11:
   355                           
   356                           ; BSR set to: 1
   357  000393  2D                 	db	45
   358  000394  20                 	db	32
   359  000395  00                 	db	0
   360  000396                     STR_10:
   361                           
   362                           ; BSR set to: 1
   363  000396  4F                 	db	79	;'O'
   364  000397  20                 	db	32
   365  000398  00                 	db	0
   366  000399                     STR_6:
   367                           
   368                           ; BSR set to: 1
   369  000399  58                 	db	88	;'X'
   370  00039A  20                 	db	32
   371  00039B  00                 	db	0
   372  00039C                     STR_9:
   373                           
   374                           ; BSR set to: 1
   375  00039C  20                 	db	32
   376  00039D  7C                 	db	124
   377  00039E  00                 	db	0
   378  00039F                     STR_13:
   379                           
   380                           ; BSR set to: 1
   381  00039F  58                 	db	88	;'X'
   382  0003A0  00                 	db	0
   383  0003A1                     STR_7:
   384                           
   385                           ; BSR set to: 1
   386  0003A1  7E                 	db	126
   387  0003A2  00                 	db	0
   388  0000                     
   389                           ; #config settings
   390  0003A3  00                 	db	0	; dummy byte at the end
   391  0000                     
   392                           	psect	cinit
   393  00330C                     __pcinit:
   394                           	opt stack 0
   395  00330C                     start_initialization:
   396                           	opt stack 0
   397  00330C                     __initialization:
   398                           	opt stack 0
   399                           
   400                           ; Clear objects allocated to BANK1 (146 bytes)
   401  00330C  EE01  F000         	lfsr	0,__pbssBANK1
   402  003310  0E92               	movlw	146
   403  003312                     clear_0:
   404  003312  6AEE               	clrf	postinc0,c
   405  003314  06E8               	decf	wreg,f,c
   406  003316  E1FD               	bnz	clear_0
   407                           
   408                           ; Clear objects allocated to BANK0 (13 bytes)
   409  003318  EE00  F0F0         	lfsr	0,__pbssBANK0
   410  00331C  0E0D               	movlw	13
   411  00331E                     clear_1:
   412  00331E  6AEE               	clrf	postinc0,c
   413  003320  06E8               	decf	wreg,f,c
   414  003322  E1FD               	bnz	clear_1
   415                           
   416                           ; Clear objects allocated to COMRAM (23 bytes)
   417  003324  EE00  F026         	lfsr	0,__pbssCOMRAM
   418  003328  0E17               	movlw	23
   419  00332A                     clear_2:
   420  00332A  6AEE               	clrf	postinc0,c
   421  00332C  06E8               	decf	wreg,f,c
   422  00332E  E1FD               	bnz	clear_2
   423                           
   424                           ; Initialize objects allocated to BANK0 (2 bytes)
   425                           ; load TBLPTR registers with __pidataBANK0
   426  003330  0E52               	movlw	low __pidataBANK0
   427  003332  6EF6               	movwf	tblptrl,c
   428  003334  0E36               	movlw	high __pidataBANK0
   429  003336  6EF7               	movwf	tblptrh,c
   430  003338  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   431  00333A  6EF8               	movwf	tblptru,c
   432  00333C  0009               	tblrd		*+	;fetch initializer
   433  00333E  CFF5 F0FD          	movff	tablat,__pdataBANK0
   434  003342  0009               	tblrd		*+	;fetch initializer
   435  003344  CFF5 F0FE          	movff	tablat,__pdataBANK0+1
   436  003348                     end_of_initialization:
   437                           	opt stack 0
   438  003348                     __end_of__initialization:
   439                           	opt stack 0
   440  003348  0E00               	movlw	low (__Lmediumconst shr (0+16))
   441  00334A  6EF8               	movwf	tblptru,c
   442  00334C  0100               	movlb	0
   443  00334E  EF39  F005         	goto	_main	;jump to C main() function
   444                           tblptru	equ	0xFF8
   445                           tblptrh	equ	0xFF7
   446                           tblptrl	equ	0xFF6
   447                           tablat	equ	0xFF5
   448                           postinc0	equ	0xFEE
   449                           wreg	equ	0xFE8
   450                           
   451                           	psect	bssCOMRAM
   452  000026                     __pbssCOMRAM:
   453                           	opt stack 0
   454  000026                     _OVERFLOW_CODEUR:
   455                           	opt stack 0
   456  000026                     	ds	1
   457  000027                     _flag_cpateur:
   458                           	opt stack 0
   459  000027                     	ds	1
   460  000028                     _uart_logiciel:
   461                           	opt stack 0
   462  000028                     	ds	13
   463  000035                     IntToC@out:
   464                           	opt stack 0
   465  000035                     	ds	8
   466                           tblptru	equ	0xFF8
   467                           tblptrh	equ	0xFF7
   468                           tblptrl	equ	0xFF6
   469                           tablat	equ	0xFF5
   470                           postinc0	equ	0xFEE
   471                           wreg	equ	0xFE8
   472                           
   473                           	psect	bssBANK0
   474  0000F0                     __pbssBANK0:
   475                           	opt stack 0
   476  0000F0                     main@distance:
   477                           	opt stack 0
   478  0000F0                     	ds	9
   479  0000F9                     _errno:
   480                           	opt stack 0
   481  0000F9                     	ds	2
   482  0000FB                     affichage_position@compteur:
   483                           	opt stack 0
   484  0000FB                     	ds	2
   485                           tblptru	equ	0xFF8
   486                           tblptrh	equ	0xFF7
   487                           tblptrl	equ	0xFF6
   488                           tablat	equ	0xFF5
   489                           postinc0	equ	0xFEE
   490                           wreg	equ	0xFE8
   491                           
   492                           	psect	dataBANK0
   493  0000FD                     __pdataBANK0:
   494                           	opt stack 0
   495  0000FD                     main@led:
   496                           	opt stack 0
   497  0000FD                     	ds	1
   498  0000FE                     main@premiere_fois:
   499                           	opt stack 0
   500  0000FE                     	ds	1
   501                           tblptru	equ	0xFF8
   502                           tblptrh	equ	0xFF7
   503                           tblptrl	equ	0xFF6
   504                           tablat	equ	0xFF5
   505                           postinc0	equ	0xFEE
   506                           wreg	equ	0xFE8
   507                           
   508                           	psect	bssBANK1
   509  000100                     __pbssBANK1:
   510                           	opt stack 0
   511  000100                     _uart_reception:
   512                           	opt stack 0
   513  000100                     	ds	103
   514  000167                     _capteur:
   515                           	opt stack 0
   516  000167                     	ds	25
   517  000180                     main@c:
   518                           	opt stack 0
   519  000180                     	ds	18
   520                           tblptru	equ	0xFF8
   521                           tblptrh	equ	0xFF7
   522                           tblptrl	equ	0xFF6
   523                           tablat	equ	0xFF5
   524                           postinc0	equ	0xFEE
   525                           wreg	equ	0xFE8
   526                           
   527                           	psect	cstackBANK1
   528  000192                     __pcstackBANK1:
   529                           	opt stack 0
   530  000192                     triangulation@c:
   531                           	opt stack 0
   532  000192                     get_distance@distance:
   533                           	opt stack 0
   534                           
   535                           ; 3 bytes @ 0x0
   536  000192                     	ds	2
   537  000194                     triangulation@angle1:
   538                           	opt stack 0
   539                           
   540                           ; 3 bytes @ 0x2
   541  000194                     	ds	1
   542  000195                     _get_distance$3141:
   543                           	opt stack 0
   544                           
   545                           ; 3 bytes @ 0x3
   546  000195                     	ds	2
   547  000197                     triangulation@angle2:
   548                           	opt stack 0
   549                           
   550                           ; 3 bytes @ 0x5
   551  000197                     	ds	1
   552  000198                     get_distance@delta_x:
   553                           	opt stack 0
   554                           
   555                           ; 3 bytes @ 0x6
   556  000198                     	ds	2
   557  00019A                     triangulation@angle3:
   558                           	opt stack 0
   559                           
   560                           ; 3 bytes @ 0x8
   561  00019A                     	ds	1
   562  00019B                     get_distance@delta_y:
   563                           	opt stack 0
   564                           
   565                           ; 3 bytes @ 0x9
   566  00019B                     	ds	2
   567  00019D                     _triangulation$3138:
   568                           	opt stack 0
   569                           
   570                           ; 3 bytes @ 0xB
   571  00019D                     	ds	3
   572  0001A0                     _triangulation$3139:
   573                           	opt stack 0
   574                           
   575                           ; 3 bytes @ 0xE
   576  0001A0                     	ds	3
   577  0001A3                     _triangulation$3136:
   578                           	opt stack 0
   579                           
   580                           ; 3 bytes @ 0x11
   581  0001A3                     	ds	3
   582  0001A6                     _triangulation$3137:
   583                           	opt stack 0
   584                           
   585                           ; 3 bytes @ 0x14
   586  0001A6                     	ds	3
   587  0001A9                     triangulation@t:
   588                           	opt stack 0
   589                           
   590                           ; 33 bytes @ 0x17
   591  0001A9                     	ds	33
   592  0001CA                     main@i:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x38
   596  0001CA                     	ds	2
   597                           tblptru	equ	0xFF8
   598                           tblptrh	equ	0xFF7
   599                           tblptrl	equ	0xFF6
   600                           tablat	equ	0xFF5
   601                           postinc0	equ	0xFEE
   602                           wreg	equ	0xFE8
   603                           
   604                           	psect	cstackBANK0
   605  000060                     __pcstackBANK0:
   606                           	opt stack 0
   607  000060                     ?___wmul:
   608                           	opt stack 0
   609  000060                     ?___ftpack:
   610                           	opt stack 0
   611  000060                     ___wmul@multiplier:
   612                           	opt stack 0
   613  000060                     ___ftpack@arg:
   614                           	opt stack 0
   615  000060                     frexp@value:
   616                           	opt stack 0
   617                           
   618                           ; 3 bytes @ 0x0
   619  000060                     	ds	2
   620  000062                     ___wmul@multiplicand:
   621                           	opt stack 0
   622                           
   623                           ; 2 bytes @ 0x2
   624  000062                     	ds	1
   625  000063                     ___ftpack@exp:
   626                           	opt stack 0
   627  000063                     frexp@eptr:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x3
   631  000063                     	ds	1
   632  000064                     ___ftpack@sign:
   633                           	opt stack 0
   634  000064                     ___wmul@product:
   635                           	opt stack 0
   636                           
   637                           ; 2 bytes @ 0x4
   638  000064                     	ds	1
   639  000065                     ??___ftpack:
   640  000065                     ??_frexp:
   641                           
   642                           ; 0 bytes @ 0x5
   643  000065                     	ds	1
   644  000066                     ?___awdiv:
   645                           	opt stack 0
   646  000066                     ___awdiv@dividend:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0x6
   650  000066                     	ds	2
   651  000068                     ?___ftmul:
   652                           	opt stack 0
   653  000068                     ?___lwtoft:
   654                           	opt stack 0
   655  000068                     ___awdiv@divisor:
   656                           	opt stack 0
   657  000068                     ___lwtoft@c:
   658                           	opt stack 0
   659  000068                     ___ftmul@f1:
   660                           	opt stack 0
   661                           
   662                           ; 3 bytes @ 0x8
   663  000068                     	ds	2
   664  00006A                     ___awdiv@counter:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0xA
   668  00006A                     	ds	1
   669  00006B                     ___awdiv@sign:
   670                           	opt stack 0
   671  00006B                     ___ftmul@f2:
   672                           	opt stack 0
   673                           
   674                           ; 3 bytes @ 0xB
   675  00006B                     	ds	1
   676  00006C                     ___awdiv@quotient:
   677                           	opt stack 0
   678                           
   679                           ; 2 bytes @ 0xC
   680  00006C                     	ds	2
   681  00006E                     ??___ftmul:
   682  00006E                     ?_IntToC:
   683                           	opt stack 0
   684  00006E                     PutcUART@octet:
   685                           	opt stack 0
   686  00006E                     IntToC@nb:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0xE
   690  00006E                     	ds	1
   691  00006F                     ??_PutcUART:
   692                           
   693                           ; 0 bytes @ 0xF
   694  00006F                     	ds	1
   695  000070                     ??_IntToC:
   696                           
   697                           ; 0 bytes @ 0x10
   698  000070                     	ds	1
   699  000071                     ___ftmul@exp:
   700                           	opt stack 0
   701                           
   702                           ; 1 bytes @ 0x11
   703  000071                     	ds	1
   704  000072                     ___ftmul@f3_as_product:
   705                           	opt stack 0
   706  000072                     IntToC@i:
   707                           	opt stack 0
   708                           
   709                           ; 10 bytes @ 0x12
   710  000072                     	ds	3
   711  000075                     PutcUART@type_uart:
   712                           	opt stack 0
   713  000075                     ___ftmul@cntr:
   714                           	opt stack 0
   715                           
   716                           ; 1 bytes @ 0x15
   717  000075                     	ds	1
   718  000076                     ___ftmul@sign:
   719                           	opt stack 0
   720                           
   721                           ; 1 bytes @ 0x16
   722  000076                     	ds	1
   723  000077                     ?___ftneg:
   724                           	opt stack 0
   725  000077                     ___ftneg@f1:
   726                           	opt stack 0
   727                           
   728                           ; 3 bytes @ 0x17
   729  000077                     	ds	3
   730  00007A                     ?___ftadd:
   731                           	opt stack 0
   732  00007A                     ___ftadd@f1:
   733                           	opt stack 0
   734  00007A                     ___ftge@ff1:
   735                           	opt stack 0
   736                           
   737                           ; 3 bytes @ 0x1A
   738  00007A                     	ds	2
   739  00007C                     IntToC@j:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x1C
   743  00007C                     	ds	1
   744  00007D                     ___ftadd@f2:
   745                           	opt stack 0
   746  00007D                     ___ftge@ff2:
   747                           	opt stack 0
   748                           
   749                           ; 3 bytes @ 0x1D
   750  00007D                     	ds	1
   751  00007E                     PutsUART@chaine:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x1E
   755  00007E                     	ds	2
   756  000080                     ??_PutsUART:
   757  000080                     ??___ftadd:
   758  000080                     ??___ftge:
   759                           
   760                           ; 0 bytes @ 0x20
   761  000080                     	ds	2
   762  000082                     PutsUART@type_uart:
   763                           	opt stack 0
   764                           
   765                           ; 1 bytes @ 0x22
   766  000082                     	ds	1
   767  000083                     ?_saturation:
   768                           	opt stack 0
   769  000083                     ___ftadd@sign:
   770                           	opt stack 0
   771  000083                     saturation@valeur:
   772                           	opt stack 0
   773                           
   774                           ; 3 bytes @ 0x23
   775  000083                     	ds	1
   776  000084                     ___ftadd@exp2:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0x24
   780  000084                     	ds	1
   781  000085                     ___ftadd@exp1:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x25
   785  000085                     	ds	1
   786  000086                     ?_eval_poly:
   787                           	opt stack 0
   788  000086                     saturation@maximum:
   789                           	opt stack 0
   790  000086                     eval_poly@x:
   791                           	opt stack 0
   792                           
   793                           ; 3 bytes @ 0x26
   794  000086                     	ds	3
   795  000089                     eval_poly@d:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x29
   799  000089                     	ds	2
   800  00008B                     eval_poly@n:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0x2B
   804  00008B                     	ds	2
   805  00008D                     ??_eval_poly:
   806                           
   807                           ; 0 bytes @ 0x2D
   808  00008D                     	ds	2
   809  00008F                     eval_poly@res:
   810                           	opt stack 0
   811                           
   812                           ; 3 bytes @ 0x2F
   813  00008F                     	ds	3
   814  000092                     ?___ftdiv:
   815                           	opt stack 0
   816  000092                     ___ftdiv@f1:
   817                           	opt stack 0
   818                           
   819                           ; 3 bytes @ 0x32
   820  000092                     	ds	3
   821  000095                     ___ftdiv@f2:
   822                           	opt stack 0
   823                           
   824                           ; 3 bytes @ 0x35
   825  000095                     	ds	3
   826  000098                     ??___ftdiv:
   827                           
   828                           ; 0 bytes @ 0x38
   829  000098                     	ds	3
   830  00009B                     ___ftdiv@cntr:
   831                           	opt stack 0
   832                           
   833                           ; 1 bytes @ 0x3B
   834  00009B                     	ds	1
   835  00009C                     ___ftdiv@f3:
   836                           	opt stack 0
   837                           
   838                           ; 3 bytes @ 0x3C
   839  00009C                     	ds	3
   840  00009F                     ___ftdiv@exp:
   841                           	opt stack 0
   842                           
   843                           ; 1 bytes @ 0x3F
   844  00009F                     	ds	1
   845  0000A0                     ___ftdiv@sign:
   846                           	opt stack 0
   847                           
   848                           ; 1 bytes @ 0x40
   849  0000A0                     	ds	1
   850  0000A1                     ?_obtention_angle:
   851                           	opt stack 0
   852  0000A1                     ?_conversion_degre_radian:
   853                           	opt stack 0
   854  0000A1                     ?___fttol:
   855                           	opt stack 0
   856  0000A1                     obtention_angle@position:
   857                           	opt stack 0
   858  0000A1                     conversion_degre_radian@angle:
   859                           	opt stack 0
   860  0000A1                     ___fttol@f1:
   861                           	opt stack 0
   862                           
   863                           ; 3 bytes @ 0x41
   864  0000A1                     	ds	3
   865  0000A4                     obtention_angle@angle:
   866                           	opt stack 0
   867                           
   868                           ; 3 bytes @ 0x44
   869  0000A4                     	ds	1
   870  0000A5                     ??___fttol:
   871                           
   872                           ; 0 bytes @ 0x45
   873  0000A5                     	ds	5
   874  0000AA                     ___fttol@sign1:
   875                           	opt stack 0
   876                           
   877                           ; 1 bytes @ 0x4A
   878  0000AA                     	ds	1
   879  0000AB                     ___fttol@lval:
   880                           	opt stack 0
   881                           
   882                           ; 4 bytes @ 0x4B
   883  0000AB                     	ds	4
   884  0000AF                     ___fttol@exp1:
   885                           	opt stack 0
   886                           
   887                           ; 1 bytes @ 0x4F
   888  0000AF                     	ds	1
   889  0000B0                     ?___altoft:
   890                           	opt stack 0
   891  0000B0                     PutIntUART@nb:
   892                           	opt stack 0
   893  0000B0                     envoit_pwm@valeur:
   894                           	opt stack 0
   895  0000B0                     ___altoft@c:
   896                           	opt stack 0
   897                           
   898                           ; 4 bytes @ 0x50
   899  0000B0                     	ds	2
   900  0000B2                     PutIntUART@type_uart:
   901                           	opt stack 0
   902                           
   903                           ; 1 bytes @ 0x52
   904  0000B2                     	ds	1
   905  0000B3                     affichage_position@_x:
   906                           	opt stack 0
   907  0000B3                     envoit_pwm@abs_valeur:
   908                           	opt stack 0
   909                           
   910                           ; 3 bytes @ 0x53
   911  0000B3                     	ds	1
   912  0000B4                     ??___altoft:
   913                           
   914                           ; 0 bytes @ 0x54
   915  0000B4                     	ds	1
   916  0000B5                     affichage_position@_y:
   917                           	opt stack 0
   918                           
   919                           ; 2 bytes @ 0x55
   920  0000B5                     	ds	2
   921  0000B7                     affichage_position@j:
   922                           	opt stack 0
   923                           
   924                           ; 2 bytes @ 0x57
   925  0000B7                     	ds	1
   926  0000B8                     ___altoft@exp:
   927                           	opt stack 0
   928                           
   929                           ; 1 bytes @ 0x58
   930  0000B8                     	ds	1
   931  0000B9                     ___altoft@sign:
   932                           	opt stack 0
   933  0000B9                     affichage_position@i:
   934                           	opt stack 0
   935                           
   936                           ; 2 bytes @ 0x59
   937  0000B9                     	ds	1
   938  0000BA                     ?_floor:
   939                           	opt stack 0
   940  0000BA                     floor@x:
   941                           	opt stack 0
   942                           
   943                           ; 3 bytes @ 0x5A
   944  0000BA                     	ds	3
   945  0000BD                     floor@i:
   946                           	opt stack 0
   947                           
   948                           ; 3 bytes @ 0x5D
   949  0000BD                     	ds	3
   950  0000C0                     floor@expon:
   951                           	opt stack 0
   952                           
   953                           ; 2 bytes @ 0x60
   954  0000C0                     	ds	2
   955  0000C2                     ?___ftsub:
   956                           	opt stack 0
   957  0000C2                     ___ftsub@f1:
   958                           	opt stack 0
   959                           
   960                           ; 3 bytes @ 0x62
   961  0000C2                     	ds	3
   962  0000C5                     ___ftsub@f2:
   963                           	opt stack 0
   964                           
   965                           ; 3 bytes @ 0x65
   966  0000C5                     	ds	3
   967  0000C8                     ?_sqrt:
   968                           	opt stack 0
   969  0000C8                     ?_sin:
   970                           	opt stack 0
   971  0000C8                     sqrt@y:
   972                           	opt stack 0
   973  0000C8                     sin@f:
   974                           	opt stack 0
   975                           
   976                           ; 3 bytes @ 0x68
   977  0000C8                     	ds	3
   978  0000CB                     ??_sqrt:
   979  0000CB                     sin@y:
   980                           	opt stack 0
   981                           
   982                           ; 3 bytes @ 0x6B
   983  0000CB                     	ds	3
   984  0000CE                     sqrt@og:
   985                           	opt stack 0
   986  0000CE                     _sin$3145:
   987                           	opt stack 0
   988                           
   989                           ; 3 bytes @ 0x6E
   990  0000CE                     	ds	3
   991  0000D1                     sqrt@z:
   992                           	opt stack 0
   993  0000D1                     sin@x2:
   994                           	opt stack 0
   995                           
   996                           ; 3 bytes @ 0x71
   997  0000D1                     	ds	3
   998  0000D4                     sqrt@i:
   999                           	opt stack 0
  1000  0000D4                     sin@sgn:
  1001                           	opt stack 0
  1002                           
  1003                           ; 1 bytes @ 0x74
  1004  0000D4                     	ds	1
  1005  0000D5                     ?_cos:
  1006                           	opt stack 0
  1007  0000D5                     sqrt@q:
  1008                           	opt stack 0
  1009  0000D5                     cos@f:
  1010                           	opt stack 0
  1011                           
  1012                           ; 3 bytes @ 0x75
  1013  0000D5                     	ds	3
  1014  0000D8                     sqrt@x:
  1015                           	opt stack 0
  1016  0000D8                     _cos$3144:
  1017                           	opt stack 0
  1018                           
  1019                           ; 3 bytes @ 0x78
  1020  0000D8                     	ds	3
  1021  0000DB                     ?_get_distance:
  1022                           	opt stack 0
  1023  0000DB                     ?_tan:
  1024                           	opt stack 0
  1025  0000DB                     tan@x:
  1026                           	opt stack 0
  1027  0000DB                     get_distance@ancien:
  1028                           	opt stack 0
  1029                           
  1030                           ; 6 bytes @ 0x7B
  1031  0000DB                     	ds	3
  1032  0000DE                     _tan$3142:
  1033                           	opt stack 0
  1034                           
  1035                           ; 3 bytes @ 0x7E
  1036  0000DE                     	ds	3
  1037  0000E1                     _tan$3143:
  1038                           	opt stack 0
  1039  0000E1                     get_distance@actu:
  1040                           	opt stack 0
  1041                           
  1042                           ; 6 bytes @ 0x81
  1043  0000E1                     	ds	3
  1044  0000E4                     ?_cotangeante:
  1045                           	opt stack 0
  1046  0000E4                     cotangeante@angle:
  1047                           	opt stack 0
  1048                           
  1049                           ; 3 bytes @ 0x84
  1050  0000E4                     	ds	3
  1051  0000E7                     _cotangeante$3140:
  1052                           	opt stack 0
  1053                           
  1054                           ; 3 bytes @ 0x87
  1055  0000E7                     	ds	3
  1056  0000EA                     
  1057                           ; 2 bytes @ 0x8A
  1058  0000EA                     	ds	2
  1059  0000EC                     
  1060                           ; 3 bytes @ 0x8C
  1061  0000EC                     	ds	3
  1062  0000EF                     ??_main:
  1063                           
  1064                           ; 0 bytes @ 0x8F
  1065  0000EF                     	ds	1
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           postinc0	equ	0xFEE
  1071                           wreg	equ	0xFE8
  1072                           
  1073                           	psect	cstackCOMRAM
  1074  000001                     __pcstackCOMRAM:
  1075                           	opt stack 0
  1076  000001                     ??_interruption_timer1:
  1077  000001                     ??_interruption_INT0:
  1078  000001                     interrupt_RX@temp:
  1079                           	opt stack 0
  1080                           
  1081                           ; 1 bytes @ 0x0
  1082  000001                     	ds	2
  1083  000003                     subroutine_interruptions@priorite:
  1084                           	opt stack 0
  1085                           
  1086                           ; 1 bytes @ 0x2
  1087  000003                     	ds	1
  1088  000004                     ??_low_isr:
  1089                           
  1090                           ; 0 bytes @ 0x3
  1091  000004                     	ds	17
  1092  000015                     ??i2_interruption_timer1:
  1093  000015                     ??i2_interruption_INT0:
  1094  000015                     i2interrupt_RX@temp:
  1095                           	opt stack 0
  1096                           
  1097                           ; 1 bytes @ 0x14
  1098  000015                     	ds	2
  1099  000017                     i2subroutine_interruptions@priorite:
  1100                           	opt stack 0
  1101                           
  1102                           ; 1 bytes @ 0x16
  1103  000017                     	ds	1
  1104  000018                     ??_high_isr:
  1105                           
  1106                           ; 0 bytes @ 0x17
  1107  000018                     	ds	14
  1108                           tblptru	equ	0xFF8
  1109                           tblptrh	equ	0xFF7
  1110                           tblptrl	equ	0xFF6
  1111                           tablat	equ	0xFF5
  1112                           postinc0	equ	0xFEE
  1113                           wreg	equ	0xFE8
  1114                           
  1115 ;;
  1116 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1117 ;;
  1118 ;; *************** function _main *****************
  1119 ;; Defined at:
  1120 ;;		line 83 in file "main.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  argc            2  138[BANK0 ] int 
  1123 ;;  argv            3  140[BANK0 ] PTR PTR unsigned char 
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;  i               2   56[BANK1 ] int 
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  2  138[BANK0 ] int 
  1128 ;; Registers used:
  1129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1135 ;;      Params:         0       5       0       0
  1136 ;;      Locals:         0       0       2       0
  1137 ;;      Temps:          0       1       0       0
  1138 ;;      Totals:         0       6       2       0
  1139 ;;Total ram usage:        8 bytes
  1140 ;; Hardware stack levels required when called:   14
  1141 ;; This function calls:
  1142 ;;		_PutIntUART
  1143 ;;		_PutsUART
  1144 ;;		___ftge
  1145 ;;		___wmul
  1146 ;;		_affichage_position
  1147 ;;		_envoit_pwm
  1148 ;;		_get_distance
  1149 ;;		_init_system
  1150 ;;		_obtention_angle
  1151 ;;		_triangulation
  1152 ;; This function is called by:
  1153 ;;		Startup code after reset
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text0
  1158  000A72                     __ptext0:
  1159                           	opt stack 0
  1160  000A72                     _main:
  1161                           	opt stack 17
  1162                           
  1163                           ;main.c: 86: init_system ();
  1164                           
  1165                           ; BSR set to: 1
  1166                           ;incstack = 0
  1167  000A72  EC91  F01A         	call	_init_system	;wreg free
  1168                           
  1169                           ;main.c: 87: int i = 0;
  1170  000A76  0E00               	movlw	0
  1171  000A78  0101               	movlb	1	; () banked
  1172  000A7A  6FCB               	movwf	(main@i+1)& (0+255),b
  1173  000A7C  0E00               	movlw	0
  1174  000A7E  6FCA               	movwf	main@i& (0+255),b
  1175                           
  1176                           ; BSR set to: 1
  1177                           ;main.c: 89: PORTDbits.RD1 = 1;
  1178  000A80  8283               	bsf	3971,1,c	;volatile
  1179                           
  1180                           ; BSR set to: 1
  1181                           ;main.c: 90: LATCbits.LATC2 = 1;
  1182  000A82  848B               	bsf	3979,2,c	;volatile
  1183                           
  1184                           ; BSR set to: 1
  1185                           ;main.c: 91: PORTBbits.RB0 = 1;
  1186  000A84  8081               	bsf	3969,0,c	;volatile
  1187                           
  1188                           ; BSR set to: 1
  1189                           ;main.c: 93: PutsUART(0, "Bonjour les amis !!! =)");
  1190  000A86  0E5F               	movlw	low STR_1
  1191  000A88  0100               	movlb	0	; () banked
  1192  000A8A  6F7E               	movwf	PutsUART@chaine& (0+255),b
  1193  000A8C  0E03               	movlw	high STR_1
  1194  000A8E  0100               	movlb	0	; () banked
  1195  000A90  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  1196  000A92  0E00               	movlw	0
  1197  000A94  ECF2  F017         	call	_PutsUART
  1198                           
  1199                           ;main.c: 95: while(PORTCbits.RC4 == 0);
  1200  000A98  D000               	goto	l31
  1201  000A9A                     l31:
  1202  000A9A  A882               	btfss	3970,4,c	;volatile
  1203  000A9C  D7FE               	goto	l31
  1204                           
  1205                           ;main.c: 96: PORTBbits.RB0= 0;
  1206  000A9E  9081               	bcf	3969,0,c	;volatile
  1207                           
  1208                           ;main.c: 97: PORTBbits.RB4 =1;
  1209  000AA0  8881               	bsf	3969,4,c	;volatile
  1210                           
  1211                           ;main.c: 98: envoit_pwm(60);
  1212  000AA2  0E00               	movlw	0
  1213  000AA4  0100               	movlb	0	; () banked
  1214  000AA6  6FB0               	movwf	envoit_pwm@valeur& (0+255),b
  1215  000AA8  0E70               	movlw	112
  1216  000AAA  0100               	movlb	0	; () banked
  1217  000AAC  6FB1               	movwf	(envoit_pwm@valeur+1)& (0+255),b
  1218  000AAE  0E42               	movlw	66
  1219  000AB0  0100               	movlb	0	; () banked
  1220  000AB2  6FB2               	movwf	(envoit_pwm@valeur+2)& (0+255),b
  1221  000AB4  ECF3  F013         	call	_envoit_pwm	;wreg free
  1222                           
  1223                           ;main.c: 101: _delay((unsigned long)((10)*(40000000/4000.0)));
  1224  000AB8  0E82               	movlw	130
  1225  000ABA  0100               	movlb	0	; () banked
  1226  000ABC  6FEF               	movwf	??_main& (0+255),b
  1227  000ABE  0EDE               	movlw	222
  1228  000AC0                     u4387:
  1229  000AC0  2EE8               	decfsz	wreg,f,c
  1230  000AC2  D7FE               	goto	u4387
  1231  000AC4  2FEF               	decfsz	??_main& (0+255),f,b
  1232  000AC6  D7FC               	goto	u4387
  1233                           
  1234                           ;main.c: 102: _delay((unsigned long)((10)*(40000000/4000.0)));
  1235  000AC8  0E82               	movlw	130
  1236  000ACA  0100               	movlb	0	; () banked
  1237  000ACC  6FEF               	movwf	??_main& (0+255),b
  1238  000ACE  0EDE               	movlw	222
  1239  000AD0                     u4397:
  1240  000AD0  2EE8               	decfsz	wreg,f,c
  1241  000AD2  D7FE               	goto	u4397
  1242  000AD4  2FEF               	decfsz	??_main& (0+255),f,b
  1243  000AD6  D7FC               	goto	u4397
  1244                           
  1245                           ;main.c: 103: _delay((unsigned long)((10)*(40000000/4000.0)));
  1246  000AD8  0E82               	movlw	130
  1247  000ADA  0100               	movlb	0	; () banked
  1248  000ADC  6FEF               	movwf	??_main& (0+255),b
  1249  000ADE  0EDE               	movlw	222
  1250  000AE0                     u4407:
  1251  000AE0  2EE8               	decfsz	wreg,f,c
  1252  000AE2  D7FE               	goto	u4407
  1253  000AE4  2FEF               	decfsz	??_main& (0+255),f,b
  1254  000AE6  D7FC               	goto	u4407
  1255                           
  1256                           ;main.c: 104: _delay((unsigned long)((10)*(40000000/4000.0)));
  1257  000AE8  0E82               	movlw	130
  1258  000AEA  0100               	movlb	0	; () banked
  1259  000AEC  6FEF               	movwf	??_main& (0+255),b
  1260  000AEE  0EDE               	movlw	222
  1261  000AF0                     u4417:
  1262  000AF0  2EE8               	decfsz	wreg,f,c
  1263  000AF2  D7FE               	goto	u4417
  1264  000AF4  2FEF               	decfsz	??_main& (0+255),f,b
  1265  000AF6  D7FC               	goto	u4417
  1266                           
  1267                           ;main.c: 105: _delay((unsigned long)((10)*(40000000/4000.0)));
  1268  000AF8  0E82               	movlw	130
  1269  000AFA  0100               	movlb	0	; () banked
  1270  000AFC  6FEF               	movwf	??_main& (0+255),b
  1271  000AFE  0EDE               	movlw	222
  1272  000B00                     u4427:
  1273  000B00  2EE8               	decfsz	wreg,f,c
  1274  000B02  D7FE               	goto	u4427
  1275  000B04  2FEF               	decfsz	??_main& (0+255),f,b
  1276  000B06  D7FC               	goto	u4427
  1277                           
  1278                           ;main.c: 106: _delay((unsigned long)((10)*(40000000/4000.0)));
  1279  000B08  0E82               	movlw	130
  1280  000B0A  0100               	movlb	0	; () banked
  1281  000B0C  6FEF               	movwf	??_main& (0+255),b
  1282  000B0E  0EDE               	movlw	222
  1283  000B10                     u4437:
  1284  000B10  2EE8               	decfsz	wreg,f,c
  1285  000B12  D7FE               	goto	u4437
  1286  000B14  2FEF               	decfsz	??_main& (0+255),f,b
  1287  000B16  D7FC               	goto	u4437
  1288                           
  1289                           ;main.c: 107: _delay((unsigned long)((10)*(40000000/4000.0)));
  1290  000B18  0E82               	movlw	130
  1291  000B1A  0100               	movlb	0	; () banked
  1292  000B1C  6FEF               	movwf	??_main& (0+255),b
  1293  000B1E  0EDE               	movlw	222
  1294  000B20                     u4447:
  1295  000B20  2EE8               	decfsz	wreg,f,c
  1296  000B22  D7FE               	goto	u4447
  1297  000B24  2FEF               	decfsz	??_main& (0+255),f,b
  1298  000B26  D7FC               	goto	u4447
  1299                           
  1300                           ;main.c: 108: _delay((unsigned long)((10)*(40000000/4000.0)));
  1301  000B28  0E82               	movlw	130
  1302  000B2A  0100               	movlb	0	; () banked
  1303  000B2C  6FEF               	movwf	??_main& (0+255),b
  1304  000B2E  0EDE               	movlw	222
  1305  000B30                     u4457:
  1306  000B30  2EE8               	decfsz	wreg,f,c
  1307  000B32  D7FE               	goto	u4457
  1308  000B34  2FEF               	decfsz	??_main& (0+255),f,b
  1309  000B36  D7FC               	goto	u4457
  1310                           
  1311                           ;main.c: 109: _delay((unsigned long)((10)*(40000000/4000.0)));
  1312  000B38  0E82               	movlw	130
  1313  000B3A  0100               	movlb	0	; () banked
  1314  000B3C  6FEF               	movwf	??_main& (0+255),b
  1315  000B3E  0EDE               	movlw	222
  1316  000B40                     u4467:
  1317  000B40  2EE8               	decfsz	wreg,f,c
  1318  000B42  D7FE               	goto	u4467
  1319  000B44  2FEF               	decfsz	??_main& (0+255),f,b
  1320  000B46  D7FC               	goto	u4467
  1321                           
  1322                           ;main.c: 110: _delay((unsigned long)((10)*(40000000/4000.0)));
  1323  000B48  0E82               	movlw	130
  1324  000B4A  0100               	movlb	0	; () banked
  1325  000B4C  6FEF               	movwf	??_main& (0+255),b
  1326  000B4E  0EDE               	movlw	222
  1327  000B50                     u4477:
  1328  000B50  2EE8               	decfsz	wreg,f,c
  1329  000B52  D7FE               	goto	u4477
  1330  000B54  2FEF               	decfsz	??_main& (0+255),f,b
  1331  000B56  D7FC               	goto	u4477
  1332                           
  1333                           ;main.c: 111: _delay((unsigned long)((10)*(40000000/4000.0)));
  1334  000B58  0E82               	movlw	130
  1335  000B5A  0100               	movlb	0	; () banked
  1336  000B5C  6FEF               	movwf	??_main& (0+255),b
  1337  000B5E  0EDE               	movlw	222
  1338  000B60                     u4487:
  1339  000B60  2EE8               	decfsz	wreg,f,c
  1340  000B62  D7FE               	goto	u4487
  1341  000B64  2FEF               	decfsz	??_main& (0+255),f,b
  1342  000B66  D7FC               	goto	u4487
  1343                           
  1344                           ;main.c: 112: _delay((unsigned long)((10)*(40000000/4000.0)));
  1345  000B68  0E82               	movlw	130
  1346  000B6A  0100               	movlb	0	; () banked
  1347  000B6C  6FEF               	movwf	??_main& (0+255),b
  1348  000B6E  0EDE               	movlw	222
  1349  000B70                     u4497:
  1350  000B70  2EE8               	decfsz	wreg,f,c
  1351  000B72  D7FE               	goto	u4497
  1352  000B74  2FEF               	decfsz	??_main& (0+255),f,b
  1353  000B76  D7FC               	goto	u4497
  1354                           
  1355                           ;main.c: 113: _delay((unsigned long)((10)*(40000000/4000.0)));
  1356  000B78  0E82               	movlw	130
  1357  000B7A  0100               	movlb	0	; () banked
  1358  000B7C  6FEF               	movwf	??_main& (0+255),b
  1359  000B7E  0EDE               	movlw	222
  1360  000B80                     u4507:
  1361  000B80  2EE8               	decfsz	wreg,f,c
  1362  000B82  D7FE               	goto	u4507
  1363  000B84  2FEF               	decfsz	??_main& (0+255),f,b
  1364  000B86  D7FC               	goto	u4507
  1365                           
  1366                           ;main.c: 114: _delay((unsigned long)((10)*(40000000/4000.0)));
  1367  000B88  0E82               	movlw	130
  1368  000B8A  0100               	movlb	0	; () banked
  1369  000B8C  6FEF               	movwf	??_main& (0+255),b
  1370  000B8E  0EDE               	movlw	222
  1371  000B90                     u4517:
  1372  000B90  2EE8               	decfsz	wreg,f,c
  1373  000B92  D7FE               	goto	u4517
  1374  000B94  2FEF               	decfsz	??_main& (0+255),f,b
  1375  000B96  D7FC               	goto	u4517
  1376                           
  1377                           ;main.c: 115: _delay((unsigned long)((10)*(40000000/4000.0)));
  1378  000B98  0E82               	movlw	130
  1379  000B9A  0100               	movlb	0	; () banked
  1380  000B9C  6FEF               	movwf	??_main& (0+255),b
  1381  000B9E  0EDE               	movlw	222
  1382  000BA0                     u4527:
  1383  000BA0  2EE8               	decfsz	wreg,f,c
  1384  000BA2  D7FE               	goto	u4527
  1385  000BA4  2FEF               	decfsz	??_main& (0+255),f,b
  1386  000BA6  D7FC               	goto	u4527
  1387                           
  1388                           ;main.c: 116: _delay((unsigned long)((10)*(40000000/4000.0)));
  1389  000BA8  0E82               	movlw	130
  1390  000BAA  0100               	movlb	0	; () banked
  1391  000BAC  6FEF               	movwf	??_main& (0+255),b
  1392  000BAE  0EDE               	movlw	222
  1393  000BB0                     u4537:
  1394  000BB0  2EE8               	decfsz	wreg,f,c
  1395  000BB2  D7FE               	goto	u4537
  1396  000BB4  2FEF               	decfsz	??_main& (0+255),f,b
  1397  000BB6  D7FC               	goto	u4537
  1398                           
  1399                           ;main.c: 117: _delay((unsigned long)((10)*(40000000/4000.0)));
  1400  000BB8  0E82               	movlw	130
  1401  000BBA  0100               	movlb	0	; () banked
  1402  000BBC  6FEF               	movwf	??_main& (0+255),b
  1403  000BBE  0EDE               	movlw	222
  1404  000BC0                     u4547:
  1405  000BC0  2EE8               	decfsz	wreg,f,c
  1406  000BC2  D7FE               	goto	u4547
  1407  000BC4  2FEF               	decfsz	??_main& (0+255),f,b
  1408  000BC6  D7FC               	goto	u4547
  1409                           
  1410                           ;main.c: 118: _delay((unsigned long)((10)*(40000000/4000.0)));
  1411  000BC8  0E82               	movlw	130
  1412  000BCA  0100               	movlb	0	; () banked
  1413  000BCC  6FEF               	movwf	??_main& (0+255),b
  1414  000BCE  0EDE               	movlw	222
  1415  000BD0                     u4557:
  1416  000BD0  2EE8               	decfsz	wreg,f,c
  1417  000BD2  D7FE               	goto	u4557
  1418  000BD4  2FEF               	decfsz	??_main& (0+255),f,b
  1419  000BD6  D7FC               	goto	u4557
  1420                           
  1421                           ;main.c: 119: _delay((unsigned long)((10)*(40000000/4000.0)));
  1422  000BD8  0E82               	movlw	130
  1423  000BDA  0100               	movlb	0	; () banked
  1424  000BDC  6FEF               	movwf	??_main& (0+255),b
  1425  000BDE  0EDE               	movlw	222
  1426  000BE0                     u4567:
  1427  000BE0  2EE8               	decfsz	wreg,f,c
  1428  000BE2  D7FE               	goto	u4567
  1429  000BE4  2FEF               	decfsz	??_main& (0+255),f,b
  1430  000BE6  D7FC               	goto	u4567
  1431                           
  1432                           ;main.c: 120: _delay((unsigned long)((10)*(40000000/4000.0)));
  1433  000BE8  0E82               	movlw	130
  1434  000BEA  0100               	movlb	0	; () banked
  1435  000BEC  6FEF               	movwf	??_main& (0+255),b
  1436  000BEE  0EDE               	movlw	222
  1437  000BF0                     u4577:
  1438  000BF0  2EE8               	decfsz	wreg,f,c
  1439  000BF2  D7FE               	goto	u4577
  1440  000BF4  2FEF               	decfsz	??_main& (0+255),f,b
  1441  000BF6  D7FC               	goto	u4577
  1442                           
  1443                           ;main.c: 121: _delay((unsigned long)((10)*(40000000/4000.0)));
  1444  000BF8  0E82               	movlw	130
  1445  000BFA  0100               	movlb	0	; () banked
  1446  000BFC  6FEF               	movwf	??_main& (0+255),b
  1447  000BFE  0EDE               	movlw	222
  1448  000C00                     u4587:
  1449  000C00  2EE8               	decfsz	wreg,f,c
  1450  000C02  D7FE               	goto	u4587
  1451  000C04  2FEF               	decfsz	??_main& (0+255),f,b
  1452  000C06  D7FC               	goto	u4587
  1453                           
  1454                           ;main.c: 122: _delay((unsigned long)((10)*(40000000/4000.0)));
  1455  000C08  0E82               	movlw	130
  1456  000C0A  0100               	movlb	0	; () banked
  1457  000C0C  6FEF               	movwf	??_main& (0+255),b
  1458  000C0E  0EDE               	movlw	222
  1459  000C10                     u4597:
  1460  000C10  2EE8               	decfsz	wreg,f,c
  1461  000C12  D7FE               	goto	u4597
  1462  000C14  2FEF               	decfsz	??_main& (0+255),f,b
  1463  000C16  D7FC               	goto	u4597
  1464                           
  1465                           ;main.c: 123: _delay((unsigned long)((10)*(40000000/4000.0)));
  1466  000C18  0E82               	movlw	130
  1467  000C1A  0100               	movlb	0	; () banked
  1468  000C1C  6FEF               	movwf	??_main& (0+255),b
  1469  000C1E  0EDE               	movlw	222
  1470  000C20                     u4607:
  1471  000C20  2EE8               	decfsz	wreg,f,c
  1472  000C22  D7FE               	goto	u4607
  1473  000C24  2FEF               	decfsz	??_main& (0+255),f,b
  1474  000C26  D7FC               	goto	u4607
  1475  000C28  D000               	goto	l4430
  1476  000C2A                     l4430:
  1477                           
  1478                           ;main.c: 126: {
  1479                           ;main.c: 128: static bool led = 1;
  1480                           ;main.c: 129: led = !led;
  1481  000C2A  0100               	movlb	0	; () banked
  1482  000C2C  51FD               	movf	main@led& (0+255),w,b
  1483  000C2E  0100               	movlb	0	; () banked
  1484  000C30  A4D8               	btfss	status,2,c
  1485  000C32  D002               	goto	u4190
  1486  000C34  0E01               	movlw	1
  1487  000C36  D001               	goto	u4200
  1488  000C38                     u4190:
  1489  000C38  0E00               	movlw	0
  1490  000C3A                     u4200:
  1491  000C3A  0100               	movlb	0	; () banked
  1492  000C3C  6FFD               	movwf	main@led& (0+255),b
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;main.c: 130: PORTBbits.RB0 = led;
  1496  000C3E  0100               	movlb	0	; () banked
  1497  000C40  B1FD               	btfsc	main@led& (0+255),0,b
  1498  000C42  D002               	bra	u4215
  1499  000C44  9081               	bcf	3969,0,c	;volatile
  1500  000C46  D001               	bra	u4216
  1501  000C48                     u4215:
  1502  000C48  8081               	bsf	3969,0,c	;volatile
  1503  000C4A                     u4216:
  1504                           
  1505                           ;main.c: 131: static _coordonees c[3];
  1506                           ;main.c: 132: static double distance[3];
  1507                           ;main.c: 133: static bool premiere_fois = 1;
  1508                           ;main.c: 135: capteur.indice = 0;
  1509  000C4A  0E00               	movlw	0
  1510  000C4C  0101               	movlb	1	; () banked
  1511  000C4E  6F79               	movwf	(_capteur+18)& (0+255),b
  1512                           
  1513                           ; BSR set to: 1
  1514                           ;main.c: 136: capteur.synchro_debut_tour = 1;
  1515  000C50  0E01               	movlw	1
  1516  000C52  0101               	movlb	1	; () banked
  1517  000C54  6F68               	movwf	(_capteur+1)& (0+255),b
  1518                           
  1519                           ; BSR set to: 1
  1520                           
  1521                           ;main.c: 138: while(capteur.synchro_debut_tour == 1);
  1522  000C56  D000               	goto	l4438
  1523  000C58                     l4438:
  1524                           
  1525                           ; BSR set to: 1
  1526  000C58  0101               	movlb	1	; () banked
  1527  000C5A  0568               	decf	(_capteur+1)& (0+255),w,b
  1528  000C5C  A4D8               	btfss	status,2,c
  1529  000C5E  D002               	goto	l4440
  1530  000C60  D7FB               	goto	l4438
  1531                           
  1532                           ; BSR set to: 1
  1533                           
  1534                           ; BSR set to: 1
  1535                           ;main.c: 139: while(capteur.tour_en_cours == 1);
  1536  000C62  D000               	goto	l4440
  1537  000C64                     l4440:
  1538                           
  1539                           ; BSR set to: 1
  1540  000C64  0101               	movlb	1	; () banked
  1541  000C66  0567               	decf	_capteur& (0+255),w,b
  1542  000C68  B4D8               	btfsc	status,2,c
  1543  000C6A  D7FC               	goto	l4440
  1544                           
  1545                           ; BSR set to: 1
  1546                           ;main.c: 141: if (capteur.indice != 3)
  1547                           
  1548                           ; BSR set to: 1
  1549  000C6C  0E03               	movlw	3
  1550  000C6E  0101               	movlb	1	; () banked
  1551  000C70  1979               	xorwf	(_capteur+18)& (0+255),w,b
  1552  000C72  B4D8               	btfsc	status,2,c
  1553  000C74  D01A               	goto	l4450
  1554                           
  1555                           ; BSR set to: 1
  1556                           ;main.c: 142: {
  1557                           ;main.c: 143: PutsUART(0, "\n\nProbleme de detection de balises .... : ");
  1558  000C76  0E1C               	movlw	low STR_2
  1559  000C78  0100               	movlb	0	; () banked
  1560  000C7A  6F7E               	movwf	PutsUART@chaine& (0+255),b
  1561  000C7C  0E03               	movlw	high STR_2
  1562  000C7E  0100               	movlb	0	; () banked
  1563  000C80  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  1564  000C82  0E00               	movlw	0
  1565  000C84  ECF2  F017         	call	_PutsUART
  1566                           
  1567                           ;main.c: 144: PutIntUART(0, (uint16_t) capteur.indice);
  1568  000C88  C179  F0B0         	movff	_capteur+18,PutIntUART@nb
  1569  000C8C  0100               	movlb	0	; () banked
  1570  000C8E  6BB1               	clrf	(PutIntUART@nb+1)& (0+255),b
  1571  000C90  0E00               	movlw	0
  1572  000C92  ECC8  F01A         	call	_PutIntUART
  1573                           
  1574                           ;main.c: 145: PutsUART(0, " Balises detectees \n\n\n\r");
  1575  000C96  0E47               	movlw	low STR_3
  1576  000C98  0100               	movlb	0	; () banked
  1577  000C9A  6F7E               	movwf	PutsUART@chaine& (0+255),b
  1578  000C9C  0E03               	movlw	high STR_3
  1579  000C9E  0100               	movlb	0	; () banked
  1580  000CA0  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  1581  000CA2  0E00               	movlw	0
  1582  000CA4  ECF2  F017         	call	_PutsUART
  1583                           
  1584                           ;main.c: 146: }
  1585  000CA8  D7C0               	goto	l4430
  1586  000CAA                     l4450:
  1587                           
  1588                           ;main.c: 147: else
  1589                           ;main.c: 148: {
  1590                           ;main.c: 149: for (i = 0; i < 3 ; i++)
  1591  000CAA  0E00               	movlw	0
  1592  000CAC  0101               	movlb	1	; () banked
  1593  000CAE  6FCB               	movwf	(main@i+1)& (0+255),b
  1594  000CB0  0E00               	movlw	0
  1595  000CB2  6FCA               	movwf	main@i& (0+255),b
  1596  000CB4                     l4452:
  1597                           
  1598                           ; BSR set to: 1
  1599  000CB4  0101               	movlb	1	; () banked
  1600  000CB6  BFCB               	btfsc	(main@i+1)& (0+255),7,b
  1601  000CB8  D00A               	goto	l4456
  1602  000CBA  0101               	movlb	1	; () banked
  1603  000CBC  51CB               	movf	(main@i+1)& (0+255),w,b
  1604  000CBE  E136               	bnz	l4462
  1605  000CC0  0E03               	movlw	3
  1606  000CC2  0101               	movlb	1	; () banked
  1607  000CC4  5DCA               	subwf	main@i& (0+255),w,b
  1608  000CC6  B0D8               	btfsc	status,0,c
  1609  000CC8  D031               	goto	l4462
  1610  000CCA  D001               	goto	l4456
  1611                           
  1612                           ; BSR set to: 1
  1613  000CCC  D02F               	goto	l4462
  1614  000CCE                     l4456:
  1615                           
  1616                           ; BSR set to: 1
  1617                           ;main.c: 150: capteur.angle[i] = obtention_angle(capteur.position[i]);
  1618  000CCE  C1CA  F060         	movff	main@i,___wmul@multiplier
  1619  000CD2  C1CB  F061         	movff	main@i+1,___wmul@multiplier+1
  1620  000CD6  0E00               	movlw	0
  1621  000CD8  0100               	movlb	0	; () banked
  1622  000CDA  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1623  000CDC  0E03               	movlw	3
  1624  000CDE  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1625  000CE0  EC47  F01A         	call	___wmul	;wreg free
  1626  000CE4  0E6A               	movlw	low (_capteur+3)
  1627  000CE6  0100               	movlb	0	; () banked
  1628  000CE8  2560               	addwf	?___wmul& (0+255),w,b
  1629  000CEA  6ED9               	movwf	fsr2l,c
  1630  000CEC  0E01               	movlw	high (_capteur+3)
  1631  000CEE  0100               	movlb	0	; () banked
  1632  000CF0  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1633  000CF2  6EDA               	movwf	fsr2h,c
  1634  000CF4  90D8               	bcf	status,0,c
  1635  000CF6  0101               	movlb	1	; () banked
  1636  000CF8  35CA               	rlcf	main@i& (0+255),w,b
  1637  000CFA  6EE1               	movwf	fsr1l,c
  1638  000CFC  0101               	movlb	1	; () banked
  1639  000CFE  35CB               	rlcf	(main@i+1)& (0+255),w,b
  1640  000D00  6EE2               	movwf	fsr1h,c
  1641  000D02  0E73               	movlw	low (_capteur+12)
  1642  000D04  26E1               	addwf	fsr1l,f,c
  1643  000D06  0E01               	movlw	high (_capteur+12)
  1644  000D08  22E2               	addwfc	fsr1h,f,c
  1645  000D0A  CFE6 F0A1          	movff	postinc1,obtention_angle@position
  1646  000D0E  CFE5 F0A2          	movff	postdec1,obtention_angle@position+1
  1647  000D12  EC7F  F017         	call	_obtention_angle	;wreg free
  1648  000D16  C0A1  FFDE         	movff	?_obtention_angle,postinc2
  1649  000D1A  C0A2  FFDE         	movff	?_obtention_angle+1,postinc2
  1650  000D1E  C0A3  FFDE         	movff	?_obtention_angle+2,postinc2
  1651  000D22  0101               	movlb	1	; () banked
  1652  000D24  4BCA               	infsnz	main@i& (0+255),f,b
  1653  000D26  2BCB               	incf	(main@i+1)& (0+255),f,b
  1654  000D28  D7C5               	goto	l4452
  1655                           
  1656                           ; BSR set to: 1
  1657  000D2A  D000               	goto	l4462
  1658  000D2C                     l4462:
  1659                           
  1660                           ; BSR set to: 1
  1661                           ;main.c: 155: if (premiere_fois == 1)
  1662  000D2C  0100               	movlb	0	; () banked
  1663  000D2E  05FE               	decf	main@premiere_fois& (0+255),w,b
  1664  000D30  A4D8               	btfss	status,2,c
  1665  000D32  D02A               	goto	l4472
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;main.c: 156: {
  1669                           ;main.c: 157: triangulation(&c[0], capteur.angle[0], capteur.angle[1], capteur.angle[2])
      +                          ;
  1670  000D34  0E80               	movlw	low main@c
  1671  000D36  0101               	movlb	1	; () banked
  1672  000D38  6F92               	movwf	triangulation@c& (0+255),b
  1673  000D3A  0E01               	movlw	high main@c
  1674  000D3C  0101               	movlb	1	; () banked
  1675  000D3E  6F93               	movwf	(triangulation@c+1)& (0+255),b
  1676  000D40  C16A  F194         	movff	_capteur+3,triangulation@angle1
  1677  000D44  C16B  F195         	movff	_capteur+4,triangulation@angle1+1
  1678  000D48  C16C  F196         	movff	_capteur+5,triangulation@angle1+2
  1679  000D4C  C16D  F197         	movff	_capteur+6,triangulation@angle2
  1680  000D50  C16E  F198         	movff	_capteur+7,triangulation@angle2+1
  1681  000D54  C16F  F199         	movff	_capteur+8,triangulation@angle2+2
  1682  000D58  C170  F19A         	movff	_capteur+9,triangulation@angle3
  1683  000D5C  C171  F19B         	movff	_capteur+10,triangulation@angle3+1
  1684  000D60  C172  F19C         	movff	_capteur+11,triangulation@angle3+2
  1685  000D64  ECD2  F001         	call	_triangulation	;wreg free
  1686                           
  1687                           ;main.c: 158: capteur.c.x = c[0].x;
  1688  000D68  C180  F17A         	movff	main@c,_capteur+19
  1689  000D6C  C181  F17B         	movff	main@c+1,_capteur+20
  1690  000D70  C182  F17C         	movff	main@c+2,_capteur+21
  1691                           
  1692                           ;main.c: 159: capteur.c.y = c[0].y;
  1693  000D74  C183  F17D         	movff	main@c+3,_capteur+22
  1694  000D78  C184  F17E         	movff	main@c+4,_capteur+23
  1695  000D7C  C185  F17F         	movff	main@c+5,_capteur+24
  1696                           
  1697                           ;main.c: 160: premiere_fois = 0;
  1698  000D80  0E00               	movlw	0
  1699  000D82  0100               	movlb	0	; () banked
  1700  000D84  6FFE               	movwf	main@premiere_fois& (0+255),b
  1701                           
  1702                           ;main.c: 161: }
  1703  000D86  D10A               	goto	l4496
  1704  000D88                     l4472:
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;main.c: 162: else
  1708                           ;main.c: 163: {
  1709                           ;main.c: 164: triangulation(&c[0], capteur.angle[0], capteur.angle[1], capteur.angle[2])
      +                          ;
  1710  000D88  0E80               	movlw	low main@c
  1711  000D8A  0101               	movlb	1	; () banked
  1712  000D8C  6F92               	movwf	triangulation@c& (0+255),b
  1713  000D8E  0E01               	movlw	high main@c
  1714  000D90  0101               	movlb	1	; () banked
  1715  000D92  6F93               	movwf	(triangulation@c+1)& (0+255),b
  1716  000D94  C16A  F194         	movff	_capteur+3,triangulation@angle1
  1717  000D98  C16B  F195         	movff	_capteur+4,triangulation@angle1+1
  1718  000D9C  C16C  F196         	movff	_capteur+5,triangulation@angle1+2
  1719  000DA0  C16D  F197         	movff	_capteur+6,triangulation@angle2
  1720  000DA4  C16E  F198         	movff	_capteur+7,triangulation@angle2+1
  1721  000DA8  C16F  F199         	movff	_capteur+8,triangulation@angle2+2
  1722  000DAC  C170  F19A         	movff	_capteur+9,triangulation@angle3
  1723  000DB0  C171  F19B         	movff	_capteur+10,triangulation@angle3+1
  1724  000DB4  C172  F19C         	movff	_capteur+11,triangulation@angle3+2
  1725  000DB8  ECD2  F001         	call	_triangulation	;wreg free
  1726                           
  1727                           ;main.c: 165: triangulation(&c[1], capteur.angle[1], capteur.angle[2], capteur.angle[0])
      +                          ;
  1728  000DBC  0E86               	movlw	low (main@c+6)
  1729  000DBE  0101               	movlb	1	; () banked
  1730  000DC0  6F92               	movwf	triangulation@c& (0+255),b
  1731  000DC2  0E01               	movlw	high (main@c+6)
  1732  000DC4  0101               	movlb	1	; () banked
  1733  000DC6  6F93               	movwf	(triangulation@c+1)& (0+255),b
  1734  000DC8  C16D  F194         	movff	_capteur+6,triangulation@angle1
  1735  000DCC  C16E  F195         	movff	_capteur+7,triangulation@angle1+1
  1736  000DD0  C16F  F196         	movff	_capteur+8,triangulation@angle1+2
  1737  000DD4  C170  F197         	movff	_capteur+9,triangulation@angle2
  1738  000DD8  C171  F198         	movff	_capteur+10,triangulation@angle2+1
  1739  000DDC  C172  F199         	movff	_capteur+11,triangulation@angle2+2
  1740  000DE0  C16A  F19A         	movff	_capteur+3,triangulation@angle3
  1741  000DE4  C16B  F19B         	movff	_capteur+4,triangulation@angle3+1
  1742  000DE8  C16C  F19C         	movff	_capteur+5,triangulation@angle3+2
  1743  000DEC  ECD2  F001         	call	_triangulation	;wreg free
  1744                           
  1745                           ;main.c: 166: triangulation(&c[2], capteur.angle[2], capteur.angle[0], capteur.angle[1])
      +                          ;
  1746  000DF0  0E8C               	movlw	low (main@c+12)
  1747  000DF2  0101               	movlb	1	; () banked
  1748  000DF4  6F92               	movwf	triangulation@c& (0+255),b
  1749  000DF6  0E01               	movlw	high (main@c+12)
  1750  000DF8  0101               	movlb	1	; () banked
  1751  000DFA  6F93               	movwf	(triangulation@c+1)& (0+255),b
  1752  000DFC  C170  F194         	movff	_capteur+9,triangulation@angle1
  1753  000E00  C171  F195         	movff	_capteur+10,triangulation@angle1+1
  1754  000E04  C172  F196         	movff	_capteur+11,triangulation@angle1+2
  1755  000E08  C16A  F197         	movff	_capteur+3,triangulation@angle2
  1756  000E0C  C16B  F198         	movff	_capteur+4,triangulation@angle2+1
  1757  000E10  C16C  F199         	movff	_capteur+5,triangulation@angle2+2
  1758  000E14  C16D  F19A         	movff	_capteur+6,triangulation@angle3
  1759  000E18  C16E  F19B         	movff	_capteur+7,triangulation@angle3+1
  1760  000E1C  C16F  F19C         	movff	_capteur+8,triangulation@angle3+2
  1761  000E20  ECD2  F001         	call	_triangulation	;wreg free
  1762                           
  1763                           ;main.c: 168: for (i = 0 ; i < 3 ; i++)
  1764  000E24  0E00               	movlw	0
  1765  000E26  0101               	movlb	1	; () banked
  1766  000E28  6FCB               	movwf	(main@i+1)& (0+255),b
  1767  000E2A  0E00               	movlw	0
  1768  000E2C  6FCA               	movwf	main@i& (0+255),b
  1769  000E2E                     l4476:
  1770                           
  1771                           ; BSR set to: 1
  1772  000E2E  0101               	movlb	1	; () banked
  1773  000E30  BFCB               	btfsc	(main@i+1)& (0+255),7,b
  1774  000E32  D00A               	goto	l4480
  1775  000E34  0101               	movlb	1	; () banked
  1776  000E36  51CB               	movf	(main@i+1)& (0+255),w,b
  1777  000E38  E14A               	bnz	l4486
  1778  000E3A  0E03               	movlw	3
  1779  000E3C  0101               	movlb	1	; () banked
  1780  000E3E  5DCA               	subwf	main@i& (0+255),w,b
  1781  000E40  B0D8               	btfsc	status,0,c
  1782  000E42  D045               	goto	l4486
  1783  000E44  D001               	goto	l4480
  1784                           
  1785                           ; BSR set to: 1
  1786  000E46  D043               	goto	l4486
  1787  000E48                     l4480:
  1788                           
  1789                           ; BSR set to: 1
  1790                           ;main.c: 169: distance[i] = get_distance(capteur.c, c[i]);
  1791  000E48  C1CA  F060         	movff	main@i,___wmul@multiplier
  1792  000E4C  C1CB  F061         	movff	main@i+1,___wmul@multiplier+1
  1793  000E50  0E00               	movlw	0
  1794  000E52  0100               	movlb	0	; () banked
  1795  000E54  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1796  000E56  0E03               	movlw	3
  1797  000E58  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1798  000E5A  EC47  F01A         	call	___wmul	;wreg free
  1799  000E5E  0EF0               	movlw	low main@distance
  1800  000E60  0100               	movlb	0	; () banked
  1801  000E62  2560               	addwf	?___wmul& (0+255),w,b
  1802  000E64  6ED9               	movwf	fsr2l,c
  1803  000E66  0E00               	movlw	high main@distance
  1804  000E68  0100               	movlb	0	; () banked
  1805  000E6A  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1806  000E6C  6EDA               	movwf	fsr2h,c
  1807  000E6E  EE11  F07A         	lfsr	1,_capteur+19
  1808  000E72  EE00  F0DB         	lfsr	0,get_distance@ancien
  1809  000E76  0E05               	movlw	5
  1810  000E78                     u4291:
  1811  000E78  CFE3 FFEB          	movff	plusw1,plusw0
  1812  000E7C  06E8               	decf	wreg,f,c
  1813  000E7E  E2FC               	bc	u4291
  1814  000E80  C1CA  F060         	movff	main@i,___wmul@multiplier
  1815  000E84  C1CB  F061         	movff	main@i+1,___wmul@multiplier+1
  1816  000E88  0E00               	movlw	0
  1817  000E8A  0100               	movlb	0	; () banked
  1818  000E8C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1819  000E8E  0E06               	movlw	6
  1820  000E90  6F62               	movwf	___wmul@multiplicand& (0+255),b
  1821  000E92  EC47  F01A         	call	___wmul	;wreg free
  1822  000E96  0E80               	movlw	low main@c
  1823  000E98  0100               	movlb	0	; () banked
  1824  000E9A  2560               	addwf	?___wmul& (0+255),w,b
  1825  000E9C  6EE1               	movwf	fsr1l,c
  1826  000E9E  0E01               	movlw	high main@c
  1827  000EA0  0100               	movlb	0	; () banked
  1828  000EA2  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  1829  000EA4  6EE2               	movwf	fsr1h,c
  1830  000EA6  EE00  F0E1         	lfsr	0,get_distance@actu
  1831  000EAA  0E05               	movlw	5
  1832  000EAC                     u4301:
  1833  000EAC  CFE3 FFEB          	movff	plusw1,plusw0
  1834  000EB0  06E8               	decf	wreg,f,c
  1835  000EB2  E2FC               	bc	u4301
  1836  000EB4  ECFE  F012         	call	_get_distance	;wreg free
  1837  000EB8  C0DB  FFDE         	movff	?_get_distance,postinc2
  1838  000EBC  C0DC  FFDE         	movff	?_get_distance+1,postinc2
  1839  000EC0  C0DD  FFDE         	movff	?_get_distance+2,postinc2
  1840  000EC4  0101               	movlb	1	; () banked
  1841  000EC6  4BCA               	infsnz	main@i& (0+255),f,b
  1842  000EC8  2BCB               	incf	(main@i+1)& (0+255),f,b
  1843  000ECA  D7B1               	goto	l4476
  1844                           
  1845                           ; BSR set to: 1
  1846  000ECC  D000               	goto	l4486
  1847  000ECE                     l4486:
  1848                           
  1849                           ; BSR set to: 1
  1850                           ;main.c: 171: if (distance[0] < distance[1])
  1851  000ECE  C0F0  F07A         	movff	main@distance,___ftge@ff1
  1852  000ED2  C0F1  F07B         	movff	main@distance+1,___ftge@ff1+1
  1853  000ED6  C0F2  F07C         	movff	main@distance+2,___ftge@ff1+2
  1854  000EDA  C0F3  F07D         	movff	main@distance+3,___ftge@ff2
  1855  000EDE  C0F4  F07E         	movff	main@distance+4,___ftge@ff2+1
  1856  000EE2  C0F5  F07F         	movff	main@distance+5,___ftge@ff2+2
  1857  000EE6  ECCC  F014         	call	___ftge	;wreg free
  1858  000EEA  0100               	movlb	0	; () banked
  1859  000EEC  B0D8               	btfsc	status,0,c
  1860  000EEE  D02B               	goto	l4492
  1861                           
  1862                           ; BSR set to: 0
  1863                           ;main.c: 172: {
  1864                           ;main.c: 173: if (distance[0] < distance[2])
  1865  000EF0  C0F0  F07A         	movff	main@distance,___ftge@ff1
  1866  000EF4  C0F1  F07B         	movff	main@distance+1,___ftge@ff1+1
  1867  000EF8  C0F2  F07C         	movff	main@distance+2,___ftge@ff1+2
  1868  000EFC  C0F6  F07D         	movff	main@distance+6,___ftge@ff2
  1869  000F00  C0F7  F07E         	movff	main@distance+7,___ftge@ff2+1
  1870  000F04  C0F8  F07F         	movff	main@distance+8,___ftge@ff2+2
  1871  000F08  ECCC  F014         	call	___ftge	;wreg free
  1872  000F0C  0100               	movlb	0	; () banked
  1873  000F0E  B0D8               	btfsc	status,0,c
  1874  000F10  D00D               	goto	l58
  1875                           
  1876                           ; BSR set to: 0
  1877                           ;main.c: 174: {
  1878                           ;main.c: 175: capteur.c.x = c[0].x;
  1879  000F12  C180  F17A         	movff	main@c,_capteur+19
  1880  000F16  C181  F17B         	movff	main@c+1,_capteur+20
  1881  000F1A  C182  F17C         	movff	main@c+2,_capteur+21
  1882                           
  1883                           ;main.c: 176: capteur.c.y = c[0].y;
  1884  000F1E  C183  F17D         	movff	main@c+3,_capteur+22
  1885  000F22  C184  F17E         	movff	main@c+4,_capteur+23
  1886  000F26  C185  F17F         	movff	main@c+5,_capteur+24
  1887                           
  1888                           ;main.c: 178: }
  1889  000F2A  D038               	goto	l4496
  1890  000F2C                     l58:
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;main.c: 179: else
  1894                           ;main.c: 180: {
  1895                           ;main.c: 182: capteur.c.x = c[2].x;
  1896  000F2C  C18C  F17A         	movff	main@c+12,_capteur+19
  1897  000F30  C18D  F17B         	movff	main@c+13,_capteur+20
  1898  000F34  C18E  F17C         	movff	main@c+14,_capteur+21
  1899                           
  1900                           ;main.c: 183: capteur.c.y = c[2].y;
  1901  000F38  C18F  F17D         	movff	main@c+15,_capteur+22
  1902  000F3C  C190  F17E         	movff	main@c+16,_capteur+23
  1903  000F40  C191  F17F         	movff	main@c+17,_capteur+24
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;main.c: 184: }
  1907                           ;main.c: 185: }
  1908  000F44  D02B               	goto	l4496
  1909  000F46                     l4492:
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;main.c: 186: else if (distance[1] < distance[2])
  1913  000F46  C0F3  F07A         	movff	main@distance+3,___ftge@ff1
  1914  000F4A  C0F4  F07B         	movff	main@distance+4,___ftge@ff1+1
  1915  000F4E  C0F5  F07C         	movff	main@distance+5,___ftge@ff1+2
  1916  000F52  C0F6  F07D         	movff	main@distance+6,___ftge@ff2
  1917  000F56  C0F7  F07E         	movff	main@distance+7,___ftge@ff2+1
  1918  000F5A  C0F8  F07F         	movff	main@distance+8,___ftge@ff2+2
  1919  000F5E  ECCC  F014         	call	___ftge	;wreg free
  1920  000F62  0100               	movlb	0	; () banked
  1921  000F64  B0D8               	btfsc	status,0,c
  1922  000F66  D00D               	goto	l61
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;main.c: 187: {
  1926                           ;main.c: 189: capteur.c.x = c[1].x;
  1927  000F68  C186  F17A         	movff	main@c+6,_capteur+19
  1928  000F6C  C187  F17B         	movff	main@c+7,_capteur+20
  1929  000F70  C188  F17C         	movff	main@c+8,_capteur+21
  1930                           
  1931                           ;main.c: 190: capteur.c.y = c[1].y;
  1932  000F74  C189  F17D         	movff	main@c+9,_capteur+22
  1933  000F78  C18A  F17E         	movff	main@c+10,_capteur+23
  1934  000F7C  C18B  F17F         	movff	main@c+11,_capteur+24
  1935                           
  1936                           ;main.c: 191: }
  1937  000F80  D00D               	goto	l4496
  1938  000F82                     l61:
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;main.c: 192: else
  1942                           ;main.c: 193: {
  1943                           ;main.c: 195: capteur.c.x = c[2].x;
  1944  000F82  C18C  F17A         	movff	main@c+12,_capteur+19
  1945  000F86  C18D  F17B         	movff	main@c+13,_capteur+20
  1946  000F8A  C18E  F17C         	movff	main@c+14,_capteur+21
  1947                           
  1948                           ;main.c: 196: capteur.c.y = c[2].y;
  1949  000F8E  C18F  F17D         	movff	main@c+15,_capteur+22
  1950  000F92  C190  F17E         	movff	main@c+16,_capteur+23
  1951  000F96  C191  F17F         	movff	main@c+17,_capteur+24
  1952                           
  1953                           ; BSR set to: 0
  1954                           
  1955                           ; BSR set to: 0
  1956  000F9A  D000               	goto	l4496
  1957  000F9C                     l4496:
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;main.c: 197: }
  1961                           ;main.c: 199: }
  1962                           ;main.c: 200: affichage_position();
  1963  000F9C  EC37  F00B         	call	_affichage_position	;wreg free
  1964  000FA0  D644               	goto	l4430
  1965  000FA2  D7FF               	goto	l66
  1966                           
  1967                           ;main.c: 210: return (0);
  1968                           ;	Return value of _main is never used
  1969  000FA4  EF54  F000         	goto	start
  1970  000FA8                     __end_of_main:
  1971                           	opt stack 0
  1972                           tblptru	equ	0xFF8
  1973                           tblptrh	equ	0xFF7
  1974                           tblptrl	equ	0xFF6
  1975                           tablat	equ	0xFF5
  1976                           postinc0	equ	0xFEE
  1977                           plusw0	equ	0xFEB
  1978                           wreg	equ	0xFE8
  1979                           postinc1	equ	0xFE6
  1980                           postdec1	equ	0xFE5
  1981                           plusw1	equ	0xFE3
  1982                           fsr1h	equ	0xFE2
  1983                           fsr1l	equ	0xFE1
  1984                           postinc2	equ	0xFDE
  1985                           fsr2h	equ	0xFDA
  1986                           fsr2l	equ	0xFD9
  1987                           status	equ	0xFD8
  1988                           
  1989 ;; *************** function _triangulation *****************
  1990 ;; Defined at:
  1991 ;;		line 24 in file "triangulation.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  c               2    0[BANK1 ] PTR struct .
  1994 ;;		 -> main@c(18), 
  1995 ;;  angle1          3    2[BANK1 ] PTR struct .
  1996 ;;  angle2          3    5[BANK1 ] PTR struct .
  1997 ;;  angle3          3    8[BANK1 ] PTR struct .
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  t              33   23[BANK1 ] struct .
  2000 ;; Return value:  Size  Location     Type
  2001 ;;		None               void
  2002 ;; Registers used:
  2003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2009 ;;      Params:         0       0      11       0
  2010 ;;      Locals:         0       0      45       0
  2011 ;;      Temps:          0       0       0       0
  2012 ;;      Totals:         0       0      56       0
  2013 ;;Total ram usage:       56 bytes
  2014 ;; Hardware stack levels used:    1
  2015 ;; Hardware stack levels required when called:   13
  2016 ;; This function calls:
  2017 ;;		___ftadd
  2018 ;;		___ftdiv
  2019 ;;		___ftmul
  2020 ;;		___ftneg
  2021 ;;		_cotangeante
  2022 ;;		_saturation
  2023 ;; This function is called by:
  2024 ;;		_main
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text1
  2029  0003A4                     __ptext1:
  2030                           	opt stack 0
  2031  0003A4                     _triangulation:
  2032                           	opt stack 17
  2033                           
  2034                           ;triangulation.c: 26: _triangulation t;
  2035                           ;triangulation.c: 29: t.cotan_1_2= cotangeante( angle2 - angle1 ) ;
  2036                           
  2037                           ;incstack = 0
  2038  0003A4  C194  F077         	movff	triangulation@angle1,___ftneg@f1
  2039  0003A8  C195  F078         	movff	triangulation@angle1+1,___ftneg@f1+1
  2040  0003AC  C196  F079         	movff	triangulation@angle1+2,___ftneg@f1+2
  2041  0003B0  EC63  F01A         	call	___ftneg	;wreg free
  2042  0003B4  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2043  0003B8  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2044  0003BC  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2045  0003C0  C197  F07D         	movff	triangulation@angle2,___ftadd@f2
  2046  0003C4  C198  F07E         	movff	triangulation@angle2+1,___ftadd@f2+1
  2047  0003C8  C199  F07F         	movff	triangulation@angle2+2,___ftadd@f2+2
  2048  0003CC  ECE7  F00D         	call	___ftadd	;wreg free
  2049  0003D0  C07A  F1A3         	movff	?___ftadd,_triangulation$3136
  2050  0003D4  C07B  F1A4         	movff	?___ftadd+1,_triangulation$3136+1
  2051  0003D8  C07C  F1A5         	movff	?___ftadd+2,_triangulation$3136+2
  2052                           
  2053                           ;triangulation.c: 26: _triangulation t;
  2054                           ;triangulation.c: 29: t.cotan_1_2= cotangeante( angle2 - angle1 ) ;
  2055  0003DC  C1A3  F0E4         	movff	_triangulation$3136,cotangeante@angle
  2056  0003E0  C1A4  F0E5         	movff	_triangulation$3136+1,cotangeante@angle+1
  2057  0003E4  C1A5  F0E6         	movff	_triangulation$3136+2,cotangeante@angle+2
  2058  0003E8  EC5F  F018         	call	_cotangeante	;wreg free
  2059  0003EC  C0E4  F1BB         	movff	?_cotangeante,triangulation@t+18
  2060  0003F0  C0E5  F1BC         	movff	?_cotangeante+1,triangulation@t+19
  2061  0003F4  C0E6  F1BD         	movff	?_cotangeante+2,triangulation@t+20
  2062                           
  2063                           ;triangulation.c: 30: t.cotan_2_3 = cotangeante( angle3 - angle2 ) ;
  2064  0003F8  C197  F077         	movff	triangulation@angle2,___ftneg@f1
  2065  0003FC  C198  F078         	movff	triangulation@angle2+1,___ftneg@f1+1
  2066  000400  C199  F079         	movff	triangulation@angle2+2,___ftneg@f1+2
  2067  000404  EC63  F01A         	call	___ftneg	;wreg free
  2068  000408  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2069  00040C  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2070  000410  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2071  000414  C19A  F07D         	movff	triangulation@angle3,___ftadd@f2
  2072  000418  C19B  F07E         	movff	triangulation@angle3+1,___ftadd@f2+1
  2073  00041C  C19C  F07F         	movff	triangulation@angle3+2,___ftadd@f2+2
  2074  000420  ECE7  F00D         	call	___ftadd	;wreg free
  2075  000424  C07A  F1A3         	movff	?___ftadd,_triangulation$3136
  2076  000428  C07B  F1A4         	movff	?___ftadd+1,_triangulation$3136+1
  2077  00042C  C07C  F1A5         	movff	?___ftadd+2,_triangulation$3136+2
  2078                           
  2079                           ;triangulation.c: 30: t.cotan_2_3 = cotangeante( angle3 - angle2 ) ;
  2080  000430  C1A3  F0E4         	movff	_triangulation$3136,cotangeante@angle
  2081  000434  C1A4  F0E5         	movff	_triangulation$3136+1,cotangeante@angle+1
  2082  000438  C1A5  F0E6         	movff	_triangulation$3136+2,cotangeante@angle+2
  2083  00043C  EC5F  F018         	call	_cotangeante	;wreg free
  2084  000440  C0E4  F1BE         	movff	?_cotangeante,triangulation@t+21
  2085  000444  C0E5  F1BF         	movff	?_cotangeante+1,triangulation@t+22
  2086  000448  C0E6  F1C0         	movff	?_cotangeante+2,triangulation@t+23
  2087                           
  2088                           ;triangulation.c: 33: t.cotan_1_2 = saturation( t.cotan_1_2 , 100000000 ) ;
  2089  00044C  C1BB  F083         	movff	triangulation@t+18,saturation@valeur
  2090  000450  C1BC  F084         	movff	triangulation@t+19,saturation@valeur+1
  2091  000454  C1BD  F085         	movff	triangulation@t+20,saturation@valeur+2
  2092  000458  0EBC               	movlw	188
  2093  00045A  0100               	movlb	0	; () banked
  2094  00045C  6F86               	movwf	saturation@maximum& (0+255),b
  2095  00045E  0EBE               	movlw	190
  2096  000460  0100               	movlb	0	; () banked
  2097  000462  6F87               	movwf	(saturation@maximum+1)& (0+255),b
  2098  000464  0E4C               	movlw	76
  2099  000466  0100               	movlb	0	; () banked
  2100  000468  6F88               	movwf	(saturation@maximum+2)& (0+255),b
  2101  00046A  ECE0  F015         	call	_saturation	;wreg free
  2102  00046E  C083  F1BB         	movff	?_saturation,triangulation@t+18
  2103  000472  C084  F1BC         	movff	?_saturation+1,triangulation@t+19
  2104  000476  C085  F1BD         	movff	?_saturation+2,triangulation@t+20
  2105                           
  2106                           ;triangulation.c: 34: t.cotan_2_3 = saturation( t.cotan_2_3 , 100000000 ) ;
  2107  00047A  C1BE  F083         	movff	triangulation@t+21,saturation@valeur
  2108  00047E  C1BF  F084         	movff	triangulation@t+22,saturation@valeur+1
  2109  000482  C1C0  F085         	movff	triangulation@t+23,saturation@valeur+2
  2110  000486  0EBC               	movlw	188
  2111  000488  0100               	movlb	0	; () banked
  2112  00048A  6F86               	movwf	saturation@maximum& (0+255),b
  2113  00048C  0EBE               	movlw	190
  2114  00048E  0100               	movlb	0	; () banked
  2115  000490  6F87               	movwf	(saturation@maximum+1)& (0+255),b
  2116  000492  0E4C               	movlw	76
  2117  000494  0100               	movlb	0	; () banked
  2118  000496  6F88               	movwf	(saturation@maximum+2)& (0+255),b
  2119  000498  ECE0  F015         	call	_saturation	;wreg free
  2120  00049C  C083  F1BE         	movff	?_saturation,triangulation@t+21
  2121  0004A0  C084  F1BF         	movff	?_saturation+1,triangulation@t+22
  2122  0004A4  C085  F1C0         	movff	?_saturation+2,triangulation@t+23
  2123                           
  2124                           ;triangulation.c: 36: t.cotan_3_1 = ( 1.0 - t.cotan_1_2 * t.cotan_2_3 ) / ( t.cotan_1_2 
      +                          + t.cotan_2_3 ) ;
  2125  0004A8  0E00               	movlw	0
  2126  0004AA  0100               	movlb	0	; () banked
  2127  0004AC  6F7D               	movwf	___ftadd@f2& (0+255),b
  2128  0004AE  0E80               	movlw	128
  2129  0004B0  0100               	movlb	0	; () banked
  2130  0004B2  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2131  0004B4  0E3F               	movlw	63
  2132  0004B6  0100               	movlb	0	; () banked
  2133  0004B8  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2134  0004BA  C1BE  F06B         	movff	triangulation@t+21,___ftmul@f2
  2135  0004BE  C1BF  F06C         	movff	triangulation@t+22,___ftmul@f2+1
  2136  0004C2  C1C0  F06D         	movff	triangulation@t+23,___ftmul@f2+2
  2137  0004C6  C1BB  F068         	movff	triangulation@t+18,___ftmul@f1
  2138  0004CA  C1BC  F069         	movff	triangulation@t+19,___ftmul@f1+1
  2139  0004CE  C1BD  F06A         	movff	triangulation@t+20,___ftmul@f1+2
  2140  0004D2  EC08  F010         	call	___ftmul	;wreg free
  2141  0004D6  C068  F077         	movff	?___ftmul,___ftneg@f1
  2142  0004DA  C069  F078         	movff	?___ftmul+1,___ftneg@f1+1
  2143  0004DE  C06A  F079         	movff	?___ftmul+2,___ftneg@f1+2
  2144  0004E2  EC63  F01A         	call	___ftneg	;wreg free
  2145  0004E6  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2146  0004EA  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2147  0004EE  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2148  0004F2  ECE7  F00D         	call	___ftadd	;wreg free
  2149  0004F6  C07A  F092         	movff	?___ftadd,___ftdiv@f1
  2150  0004FA  C07B  F093         	movff	?___ftadd+1,___ftdiv@f1+1
  2151  0004FE  C07C  F094         	movff	?___ftadd+2,___ftdiv@f1+2
  2152  000502  C1BE  F07D         	movff	triangulation@t+21,___ftadd@f2
  2153  000506  C1BF  F07E         	movff	triangulation@t+22,___ftadd@f2+1
  2154  00050A  C1C0  F07F         	movff	triangulation@t+23,___ftadd@f2+2
  2155  00050E  C1BB  F07A         	movff	triangulation@t+18,___ftadd@f1
  2156  000512  C1BC  F07B         	movff	triangulation@t+19,___ftadd@f1+1
  2157  000516  C1BD  F07C         	movff	triangulation@t+20,___ftadd@f1+2
  2158  00051A  ECE7  F00D         	call	___ftadd	;wreg free
  2159  00051E  C07A  F095         	movff	?___ftadd,___ftdiv@f2
  2160  000522  C07B  F096         	movff	?___ftadd+1,___ftdiv@f2+1
  2161  000526  C07C  F097         	movff	?___ftadd+2,___ftdiv@f2+2
  2162  00052A  ECB6  F010         	call	___ftdiv	;wreg free
  2163  00052E  C092  F1C1         	movff	?___ftdiv,triangulation@t+24
  2164  000532  C093  F1C2         	movff	?___ftdiv+1,triangulation@t+25
  2165  000536  C094  F1C3         	movff	?___ftdiv+2,triangulation@t+26
  2166                           
  2167                           ;triangulation.c: 37: t.cotan_3_1 = saturation( t.cotan_3_1 , 100000000 ) ;
  2168  00053A  C1C1  F083         	movff	triangulation@t+24,saturation@valeur
  2169  00053E  C1C2  F084         	movff	triangulation@t+25,saturation@valeur+1
  2170  000542  C1C3  F085         	movff	triangulation@t+26,saturation@valeur+2
  2171  000546  0EBC               	movlw	188
  2172  000548  0100               	movlb	0	; () banked
  2173  00054A  6F86               	movwf	saturation@maximum& (0+255),b
  2174  00054C  0EBE               	movlw	190
  2175  00054E  0100               	movlb	0	; () banked
  2176  000550  6F87               	movwf	(saturation@maximum+1)& (0+255),b
  2177  000552  0E4C               	movlw	76
  2178  000554  0100               	movlb	0	; () banked
  2179  000556  6F88               	movwf	(saturation@maximum+2)& (0+255),b
  2180  000558  ECE0  F015         	call	_saturation	;wreg free
  2181  00055C  C083  F1C1         	movff	?_saturation,triangulation@t+24
  2182  000560  C084  F1C2         	movff	?_saturation+1,triangulation@t+25
  2183  000564  C085  F1C3         	movff	?_saturation+2,triangulation@t+26
  2184                           
  2185                           ;triangulation.c: 40: t.cercle._1_2.x = (2062. - -62.) + t.cotan_1_2 * (3062. - 3062.) ;
  2186  000568  0E00               	movlw	0
  2187  00056A  0100               	movlb	0	; () banked
  2188  00056C  6F6B               	movwf	___ftmul@f2& (0+255),b
  2189  00056E  0E00               	movlw	0
  2190  000570  0100               	movlb	0	; () banked
  2191  000572  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  2192  000574  0E00               	movlw	0
  2193  000576  0100               	movlb	0	; () banked
  2194  000578  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  2195  00057A  C1BB  F068         	movff	triangulation@t+18,___ftmul@f1
  2196  00057E  C1BC  F069         	movff	triangulation@t+19,___ftmul@f1+1
  2197  000582  C1BD  F06A         	movff	triangulation@t+20,___ftmul@f1+2
  2198  000586  EC08  F010         	call	___ftmul	;wreg free
  2199  00058A  C068  F07A         	movff	?___ftmul,___ftadd@f1
  2200  00058E  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  2201  000592  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  2202  000596  0EC0               	movlw	192
  2203  000598  0100               	movlb	0	; () banked
  2204  00059A  6F7D               	movwf	___ftadd@f2& (0+255),b
  2205  00059C  0E04               	movlw	4
  2206  00059E  0100               	movlb	0	; () banked
  2207  0005A0  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2208  0005A2  0E45               	movlw	69
  2209  0005A4  0100               	movlb	0	; () banked
  2210  0005A6  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2211  0005A8  ECE7  F00D         	call	___ftadd	;wreg free
  2212  0005AC  C07A  F1A9         	movff	?___ftadd,triangulation@t
  2213  0005B0  C07B  F1AA         	movff	?___ftadd+1,triangulation@t+1
  2214  0005B4  C07C  F1AB         	movff	?___ftadd+2,triangulation@t+2
  2215                           
  2216                           ;triangulation.c: 41: t.cercle._1_2.y = (3062. - 3062.) - t.cotan_1_2 * (2062. - -62.) ;
  2217  0005B8  0E60               	movlw	96
  2218  0005BA  0100               	movlb	0	; () banked
  2219  0005BC  6F7D               	movwf	___ftadd@f2& (0+255),b
  2220  0005BE  0E3F               	movlw	63
  2221  0005C0  0100               	movlb	0	; () banked
  2222  0005C2  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2223  0005C4  0E45               	movlw	69
  2224  0005C6  0100               	movlb	0	; () banked
  2225  0005C8  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2226  0005CA  0EC0               	movlw	192
  2227  0005CC  0100               	movlb	0	; () banked
  2228  0005CE  6F6B               	movwf	___ftmul@f2& (0+255),b
  2229  0005D0  0E04               	movlw	4
  2230  0005D2  0100               	movlb	0	; () banked
  2231  0005D4  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  2232  0005D6  0E45               	movlw	69
  2233  0005D8  0100               	movlb	0	; () banked
  2234  0005DA  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  2235  0005DC  C1BB  F068         	movff	triangulation@t+18,___ftmul@f1
  2236  0005E0  C1BC  F069         	movff	triangulation@t+19,___ftmul@f1+1
  2237  0005E4  C1BD  F06A         	movff	triangulation@t+20,___ftmul@f1+2
  2238  0005E8  EC08  F010         	call	___ftmul	;wreg free
  2239  0005EC  C068  F07A         	movff	?___ftmul,___ftadd@f1
  2240  0005F0  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  2241  0005F4  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  2242  0005F8  ECE7  F00D         	call	___ftadd	;wreg free
  2243  0005FC  C07A  F077         	movff	?___ftadd,___ftneg@f1
  2244  000600  C07B  F078         	movff	?___ftadd+1,___ftneg@f1+1
  2245  000604  C07C  F079         	movff	?___ftadd+2,___ftneg@f1+2
  2246  000608  EC63  F01A         	call	___ftneg	;wreg free
  2247  00060C  C077  F1A6         	movff	?___ftneg,_triangulation$3137
  2248  000610  C078  F1A7         	movff	?___ftneg+1,_triangulation$3137+1
  2249  000614  C079  F1A8         	movff	?___ftneg+2,_triangulation$3137+2
  2250                           
  2251                           ;triangulation.c: 41: t.cercle._1_2.y = (3062. - 3062.) - t.cotan_1_2 * (2062. - -62.) ;
  2252  000618  C1A6  F07A         	movff	_triangulation$3137,___ftadd@f1
  2253  00061C  C1A7  F07B         	movff	_triangulation$3137+1,___ftadd@f1+1
  2254  000620  C1A8  F07C         	movff	_triangulation$3137+2,___ftadd@f1+2
  2255  000624  0E60               	movlw	96
  2256  000626  0100               	movlb	0	; () banked
  2257  000628  6F7D               	movwf	___ftadd@f2& (0+255),b
  2258  00062A  0E3F               	movlw	63
  2259  00062C  0100               	movlb	0	; () banked
  2260  00062E  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2261  000630  0E45               	movlw	69
  2262  000632  0100               	movlb	0	; () banked
  2263  000634  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2264  000636  ECE7  F00D         	call	___ftadd	;wreg free
  2265  00063A  C07A  F1AC         	movff	?___ftadd,triangulation@t+3
  2266  00063E  C07B  F1AD         	movff	?___ftadd+1,triangulation@t+4
  2267  000642  C07C  F1AE         	movff	?___ftadd+2,triangulation@t+5
  2268                           
  2269                           ;triangulation.c: 44: t.cercle._2_3.x = (1000. - -62.) - t.cotan_2_3 * (-62. - 3062.);
  2270  000646  0E40               	movlw	64
  2271  000648  0100               	movlb	0	; () banked
  2272  00064A  6F6B               	movwf	___ftmul@f2& (0+255),b
  2273  00064C  0E43               	movlw	67
  2274  00064E  0100               	movlb	0	; () banked
  2275  000650  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  2276  000652  0EC5               	movlw	197
  2277  000654  0100               	movlb	0	; () banked
  2278  000656  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  2279  000658  C1BE  F068         	movff	triangulation@t+21,___ftmul@f1
  2280  00065C  C1BF  F069         	movff	triangulation@t+22,___ftmul@f1+1
  2281  000660  C1C0  F06A         	movff	triangulation@t+23,___ftmul@f1+2
  2282  000664  EC08  F010         	call	___ftmul	;wreg free
  2283  000668  C068  F077         	movff	?___ftmul,___ftneg@f1
  2284  00066C  C069  F078         	movff	?___ftmul+1,___ftneg@f1+1
  2285  000670  C06A  F079         	movff	?___ftmul+2,___ftneg@f1+2
  2286  000674  EC63  F01A         	call	___ftneg	;wreg free
  2287  000678  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2288  00067C  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2289  000680  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2290  000684  0EC0               	movlw	192
  2291  000686  0100               	movlb	0	; () banked
  2292  000688  6F7D               	movwf	___ftadd@f2& (0+255),b
  2293  00068A  0E84               	movlw	132
  2294  00068C  0100               	movlb	0	; () banked
  2295  00068E  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2296  000690  0E44               	movlw	68
  2297  000692  0100               	movlb	0	; () banked
  2298  000694  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2299  000696  ECE7  F00D         	call	___ftadd	;wreg free
  2300  00069A  C07A  F1AF         	movff	?___ftadd,triangulation@t+6
  2301  00069E  C07B  F1B0         	movff	?___ftadd+1,triangulation@t+7
  2302  0006A2  C07C  F1B1         	movff	?___ftadd+2,triangulation@t+8
  2303                           
  2304                           ;triangulation.c: 45: t.cercle._2_3.y = (-62. - 3062.) + t.cotan_2_3 * (1000. - -62.);
  2305  0006A6  0EC0               	movlw	192
  2306  0006A8  0100               	movlb	0	; () banked
  2307  0006AA  6F6B               	movwf	___ftmul@f2& (0+255),b
  2308  0006AC  0E84               	movlw	132
  2309  0006AE  0100               	movlb	0	; () banked
  2310  0006B0  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  2311  0006B2  0E44               	movlw	68
  2312  0006B4  0100               	movlb	0	; () banked
  2313  0006B6  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  2314  0006B8  C1BE  F068         	movff	triangulation@t+21,___ftmul@f1
  2315  0006BC  C1BF  F069         	movff	triangulation@t+22,___ftmul@f1+1
  2316  0006C0  C1C0  F06A         	movff	triangulation@t+23,___ftmul@f1+2
  2317  0006C4  EC08  F010         	call	___ftmul	;wreg free
  2318  0006C8  C068  F07A         	movff	?___ftmul,___ftadd@f1
  2319  0006CC  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  2320  0006D0  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  2321  0006D4  0E40               	movlw	64
  2322  0006D6  0100               	movlb	0	; () banked
  2323  0006D8  6F7D               	movwf	___ftadd@f2& (0+255),b
  2324  0006DA  0E43               	movlw	67
  2325  0006DC  0100               	movlb	0	; () banked
  2326  0006DE  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2327  0006E0  0EC5               	movlw	197
  2328  0006E2  0100               	movlb	0	; () banked
  2329  0006E4  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2330  0006E6  ECE7  F00D         	call	___ftadd	;wreg free
  2331  0006EA  C07A  F1B2         	movff	?___ftadd,triangulation@t+9
  2332  0006EE  C07B  F1B3         	movff	?___ftadd+1,triangulation@t+10
  2333  0006F2  C07C  F1B4         	movff	?___ftadd+2,triangulation@t+11
  2334                           
  2335                           ;triangulation.c: 48: t.cercle._3_1.x = ((1000. - -62.) + (2062. - -62.)) + t.cotan_3_1 
      +                          * ((-62. - 3062.) - (3062. - 3062.));
  2336  0006F6  0E40               	movlw	64
  2337  0006F8  0100               	movlb	0	; () banked
  2338  0006FA  6F6B               	movwf	___ftmul@f2& (0+255),b
  2339  0006FC  0E43               	movlw	67
  2340  0006FE  0100               	movlb	0	; () banked
  2341  000700  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  2342  000702  0EC5               	movlw	197
  2343  000704  0100               	movlb	0	; () banked
  2344  000706  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  2345  000708  C1C1  F068         	movff	triangulation@t+24,___ftmul@f1
  2346  00070C  C1C2  F069         	movff	triangulation@t+25,___ftmul@f1+1
  2347  000710  C1C3  F06A         	movff	triangulation@t+26,___ftmul@f1+2
  2348  000714  EC08  F010         	call	___ftmul	;wreg free
  2349  000718  C068  F07A         	movff	?___ftmul,___ftadd@f1
  2350  00071C  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  2351  000720  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  2352  000724  0E20               	movlw	32
  2353  000726  0100               	movlb	0	; () banked
  2354  000728  6F7D               	movwf	___ftadd@f2& (0+255),b
  2355  00072A  0E47               	movlw	71
  2356  00072C  0100               	movlb	0	; () banked
  2357  00072E  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2358  000730  0E45               	movlw	69
  2359  000732  0100               	movlb	0	; () banked
  2360  000734  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2361  000736  ECE7  F00D         	call	___ftadd	;wreg free
  2362  00073A  C07A  F1B5         	movff	?___ftadd,triangulation@t+12
  2363  00073E  C07B  F1B6         	movff	?___ftadd+1,triangulation@t+13
  2364  000742  C07C  F1B7         	movff	?___ftadd+2,triangulation@t+14
  2365                           
  2366                           ;triangulation.c: 49: t.cercle._3_1.y = ((-62. - 3062.) + (3062. - 3062.)) - t.cotan_3_1
      +                           * ((1000. - -62.) - (2062. - -62.));
  2367  000746  0EC0               	movlw	192
  2368  000748  0100               	movlb	0	; () banked
  2369  00074A  6F6B               	movwf	___ftmul@f2& (0+255),b
  2370  00074C  0E84               	movlw	132
  2371  00074E  0100               	movlb	0	; () banked
  2372  000750  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  2373  000752  0EC4               	movlw	196
  2374  000754  0100               	movlb	0	; () banked
  2375  000756  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  2376  000758  C1C1  F068         	movff	triangulation@t+24,___ftmul@f1
  2377  00075C  C1C2  F069         	movff	triangulation@t+25,___ftmul@f1+1
  2378  000760  C1C3  F06A         	movff	triangulation@t+26,___ftmul@f1+2
  2379  000764  EC08  F010         	call	___ftmul	;wreg free
  2380  000768  C068  F077         	movff	?___ftmul,___ftneg@f1
  2381  00076C  C069  F078         	movff	?___ftmul+1,___ftneg@f1+1
  2382  000770  C06A  F079         	movff	?___ftmul+2,___ftneg@f1+2
  2383  000774  EC63  F01A         	call	___ftneg	;wreg free
  2384  000778  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2385  00077C  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2386  000780  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2387  000784  0E40               	movlw	64
  2388  000786  0100               	movlb	0	; () banked
  2389  000788  6F7D               	movwf	___ftadd@f2& (0+255),b
  2390  00078A  0E43               	movlw	67
  2391  00078C  0100               	movlb	0	; () banked
  2392  00078E  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2393  000790  0EC5               	movlw	197
  2394  000792  0100               	movlb	0	; () banked
  2395  000794  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2396  000796  ECE7  F00D         	call	___ftadd	;wreg free
  2397  00079A  C07A  F1B8         	movff	?___ftadd,triangulation@t+15
  2398  00079E  C07B  F1B9         	movff	?___ftadd+1,triangulation@t+16
  2399  0007A2  C07C  F1BA         	movff	?___ftadd+2,triangulation@t+17
  2400                           
  2401                           ;triangulation.c: 51: t.K = ((1000. - -62.) * (2062. - -62.)) + ((-62. - 3062.) * (3062.
      +                           - 3062.)) + t.cotan_3_1 * ( ((-62. - 3062.) * (2062. - -62.)) - ((1000. - -62.) * (3062
      +                          . - 3062.)));
  2402  0007A6  0E7F               	movlw	127
  2403  0007A8  0100               	movlb	0	; () banked
  2404  0007AA  6F6B               	movwf	___ftmul@f2& (0+255),b
  2405  0007AC  0ECA               	movlw	202
  2406  0007AE  0100               	movlb	0	; () banked
  2407  0007B0  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  2408  0007B2  0ECA               	movlw	202
  2409  0007B4  0100               	movlb	0	; () banked
  2410  0007B6  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  2411  0007B8  C1C1  F068         	movff	triangulation@t+24,___ftmul@f1
  2412  0007BC  C1C2  F069         	movff	triangulation@t+25,___ftmul@f1+1
  2413  0007C0  C1C3  F06A         	movff	triangulation@t+26,___ftmul@f1+2
  2414  0007C4  EC08  F010         	call	___ftmul	;wreg free
  2415  0007C8  C068  F07A         	movff	?___ftmul,___ftadd@f1
  2416  0007CC  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  2417  0007D0  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  2418  0007D4  0EAD               	movlw	173
  2419  0007D6  0100               	movlb	0	; () banked
  2420  0007D8  6F7D               	movwf	___ftadd@f2& (0+255),b
  2421  0007DA  0E09               	movlw	9
  2422  0007DC  0100               	movlb	0	; () banked
  2423  0007DE  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2424  0007E0  0E4A               	movlw	74
  2425  0007E2  0100               	movlb	0	; () banked
  2426  0007E4  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2427  0007E6  ECE7  F00D         	call	___ftadd	;wreg free
  2428  0007EA  C07A  F1C7         	movff	?___ftadd,triangulation@t+30
  2429  0007EE  C07B  F1C8         	movff	?___ftadd+1,triangulation@t+31
  2430  0007F2  C07C  F1C9         	movff	?___ftadd+2,triangulation@t+32
  2431                           
  2432                           ;triangulation.c: 53: t.D = (t.cercle._1_2.x - t.cercle._2_3.x) * (t.cercle._2_3.y - t.c
      +                          ercle._3_1.y) - (t.cercle._2_3.x - t.cercle._3_1.x) * (t.cercle._1_2.y - t.cercle._2_3.y
      +                          );
  2433  0007F6  C1AC  F07D         	movff	triangulation@t+3,___ftadd@f2
  2434  0007FA  C1AD  F07E         	movff	triangulation@t+4,___ftadd@f2+1
  2435  0007FE  C1AE  F07F         	movff	triangulation@t+5,___ftadd@f2+2
  2436  000802  C1B2  F077         	movff	triangulation@t+9,___ftneg@f1
  2437  000806  C1B3  F078         	movff	triangulation@t+10,___ftneg@f1+1
  2438  00080A  C1B4  F079         	movff	triangulation@t+11,___ftneg@f1+2
  2439  00080E  EC63  F01A         	call	___ftneg	;wreg free
  2440  000812  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2441  000816  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2442  00081A  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2443  00081E  ECE7  F00D         	call	___ftadd	;wreg free
  2444  000822  C07A  F06B         	movff	?___ftadd,___ftmul@f2
  2445  000826  C07B  F06C         	movff	?___ftadd+1,___ftmul@f2+1
  2446  00082A  C07C  F06D         	movff	?___ftadd+2,___ftmul@f2+2
  2447  00082E  C1AF  F07D         	movff	triangulation@t+6,___ftadd@f2
  2448  000832  C1B0  F07E         	movff	triangulation@t+7,___ftadd@f2+1
  2449  000836  C1B1  F07F         	movff	triangulation@t+8,___ftadd@f2+2
  2450  00083A  C1B5  F077         	movff	triangulation@t+12,___ftneg@f1
  2451  00083E  C1B6  F078         	movff	triangulation@t+13,___ftneg@f1+1
  2452  000842  C1B7  F079         	movff	triangulation@t+14,___ftneg@f1+2
  2453  000846  EC63  F01A         	call	___ftneg	;wreg free
  2454  00084A  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2455  00084E  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2456  000852  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2457  000856  ECE7  F00D         	call	___ftadd	;wreg free
  2458  00085A  C07A  F068         	movff	?___ftadd,___ftmul@f1
  2459  00085E  C07B  F069         	movff	?___ftadd+1,___ftmul@f1+1
  2460  000862  C07C  F06A         	movff	?___ftadd+2,___ftmul@f1+2
  2461  000866  EC08  F010         	call	___ftmul	;wreg free
  2462  00086A  C068  F19D         	movff	?___ftmul,_triangulation$3138
  2463  00086E  C069  F19E         	movff	?___ftmul+1,_triangulation$3138+1
  2464  000872  C06A  F19F         	movff	?___ftmul+2,_triangulation$3138+2
  2465                           
  2466                           ;triangulation.c: 53: t.D = (t.cercle._1_2.x - t.cercle._2_3.x) * (t.cercle._2_3.y - t.c
      +                          ercle._3_1.y) - (t.cercle._2_3.x - t.cercle._3_1.x) * (t.cercle._1_2.y - t.cercle._2_3.y
      +                          );
  2467  000876  C1B2  F07D         	movff	triangulation@t+9,___ftadd@f2
  2468  00087A  C1B3  F07E         	movff	triangulation@t+10,___ftadd@f2+1
  2469  00087E  C1B4  F07F         	movff	triangulation@t+11,___ftadd@f2+2
  2470  000882  C1B8  F077         	movff	triangulation@t+15,___ftneg@f1
  2471  000886  C1B9  F078         	movff	triangulation@t+16,___ftneg@f1+1
  2472  00088A  C1BA  F079         	movff	triangulation@t+17,___ftneg@f1+2
  2473  00088E  EC63  F01A         	call	___ftneg	;wreg free
  2474  000892  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2475  000896  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2476  00089A  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2477  00089E  ECE7  F00D         	call	___ftadd	;wreg free
  2478  0008A2  C07A  F06B         	movff	?___ftadd,___ftmul@f2
  2479  0008A6  C07B  F06C         	movff	?___ftadd+1,___ftmul@f2+1
  2480  0008AA  C07C  F06D         	movff	?___ftadd+2,___ftmul@f2+2
  2481  0008AE  C1A9  F07D         	movff	triangulation@t,___ftadd@f2
  2482  0008B2  C1AA  F07E         	movff	triangulation@t+1,___ftadd@f2+1
  2483  0008B6  C1AB  F07F         	movff	triangulation@t+2,___ftadd@f2+2
  2484  0008BA  C1AF  F077         	movff	triangulation@t+6,___ftneg@f1
  2485  0008BE  C1B0  F078         	movff	triangulation@t+7,___ftneg@f1+1
  2486  0008C2  C1B1  F079         	movff	triangulation@t+8,___ftneg@f1+2
  2487  0008C6  EC63  F01A         	call	___ftneg	;wreg free
  2488  0008CA  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2489  0008CE  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2490  0008D2  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2491  0008D6  ECE7  F00D         	call	___ftadd	;wreg free
  2492  0008DA  C07A  F068         	movff	?___ftadd,___ftmul@f1
  2493  0008DE  C07B  F069         	movff	?___ftadd+1,___ftmul@f1+1
  2494  0008E2  C07C  F06A         	movff	?___ftadd+2,___ftmul@f1+2
  2495  0008E6  EC08  F010         	call	___ftmul	;wreg free
  2496  0008EA  C068  F1A0         	movff	?___ftmul,_triangulation$3139
  2497  0008EE  C069  F1A1         	movff	?___ftmul+1,_triangulation$3139+1
  2498  0008F2  C06A  F1A2         	movff	?___ftmul+2,_triangulation$3139+2
  2499                           
  2500                           ;triangulation.c: 53: t.D = (t.cercle._1_2.x - t.cercle._2_3.x) * (t.cercle._2_3.y - t.c
      +                          ercle._3_1.y) - (t.cercle._2_3.x - t.cercle._3_1.x) * (t.cercle._1_2.y - t.cercle._2_3.y
      +                          );
  2501  0008F6  C1A0  F07A         	movff	_triangulation$3139,___ftadd@f1
  2502  0008FA  C1A1  F07B         	movff	_triangulation$3139+1,___ftadd@f1+1
  2503  0008FE  C1A2  F07C         	movff	_triangulation$3139+2,___ftadd@f1+2
  2504  000902  C19D  F077         	movff	_triangulation$3138,___ftneg@f1
  2505  000906  C19E  F078         	movff	_triangulation$3138+1,___ftneg@f1+1
  2506  00090A  C19F  F079         	movff	_triangulation$3138+2,___ftneg@f1+2
  2507  00090E  EC63  F01A         	call	___ftneg	;wreg free
  2508  000912  C077  F07D         	movff	?___ftneg,___ftadd@f2
  2509  000916  C078  F07E         	movff	?___ftneg+1,___ftadd@f2+1
  2510  00091A  C079  F07F         	movff	?___ftneg+2,___ftadd@f2+2
  2511  00091E  ECE7  F00D         	call	___ftadd	;wreg free
  2512  000922  C07A  F1C4         	movff	?___ftadd,triangulation@t+27
  2513  000926  C07B  F1C5         	movff	?___ftadd+1,triangulation@t+28
  2514  00092A  C07C  F1C6         	movff	?___ftadd+2,triangulation@t+29
  2515                           
  2516                           ;triangulation.c: 54: t.K /= t.D;
  2517  00092E  C1C7  F092         	movff	triangulation@t+30,___ftdiv@f1
  2518  000932  C1C8  F093         	movff	triangulation@t+31,___ftdiv@f1+1
  2519  000936  C1C9  F094         	movff	triangulation@t+32,___ftdiv@f1+2
  2520  00093A  C1C4  F095         	movff	triangulation@t+27,___ftdiv@f2
  2521  00093E  C1C5  F096         	movff	triangulation@t+28,___ftdiv@f2+1
  2522  000942  C1C6  F097         	movff	triangulation@t+29,___ftdiv@f2+2
  2523  000946  ECB6  F010         	call	___ftdiv	;wreg free
  2524  00094A  C092  F1C7         	movff	?___ftdiv,triangulation@t+30
  2525  00094E  C093  F1C8         	movff	?___ftdiv+1,triangulation@t+31
  2526  000952  C094  F1C9         	movff	?___ftdiv+2,triangulation@t+32
  2527                           
  2528                           ;triangulation.c: 56: c->x = t.K * (t.cercle._1_2.y - t.cercle._2_3.y) + -62. ;
  2529  000956  C1C7  F06B         	movff	triangulation@t+30,___ftmul@f2
  2530  00095A  C1C8  F06C         	movff	triangulation@t+31,___ftmul@f2+1
  2531  00095E  C1C9  F06D         	movff	triangulation@t+32,___ftmul@f2+2
  2532  000962  C1AC  F07D         	movff	triangulation@t+3,___ftadd@f2
  2533  000966  C1AD  F07E         	movff	triangulation@t+4,___ftadd@f2+1
  2534  00096A  C1AE  F07F         	movff	triangulation@t+5,___ftadd@f2+2
  2535  00096E  C1B2  F077         	movff	triangulation@t+9,___ftneg@f1
  2536  000972  C1B3  F078         	movff	triangulation@t+10,___ftneg@f1+1
  2537  000976  C1B4  F079         	movff	triangulation@t+11,___ftneg@f1+2
  2538  00097A  EC63  F01A         	call	___ftneg	;wreg free
  2539  00097E  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2540  000982  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2541  000986  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2542  00098A  ECE7  F00D         	call	___ftadd	;wreg free
  2543  00098E  C07A  F068         	movff	?___ftadd,___ftmul@f1
  2544  000992  C07B  F069         	movff	?___ftadd+1,___ftmul@f1+1
  2545  000996  C07C  F06A         	movff	?___ftadd+2,___ftmul@f1+2
  2546  00099A  EC08  F010         	call	___ftmul	;wreg free
  2547  00099E  C068  F1A6         	movff	?___ftmul,_triangulation$3137
  2548  0009A2  C069  F1A7         	movff	?___ftmul+1,_triangulation$3137+1
  2549  0009A6  C06A  F1A8         	movff	?___ftmul+2,_triangulation$3137+2
  2550                           
  2551                           ;triangulation.c: 56: c->x = t.K * (t.cercle._1_2.y - t.cercle._2_3.y) + -62. ;
  2552  0009AA  C1A6  F07A         	movff	_triangulation$3137,___ftadd@f1
  2553  0009AE  C1A7  F07B         	movff	_triangulation$3137+1,___ftadd@f1+1
  2554  0009B2  C1A8  F07C         	movff	_triangulation$3137+2,___ftadd@f1+2
  2555  0009B6  0E00               	movlw	0
  2556  0009B8  0100               	movlb	0	; () banked
  2557  0009BA  6F7D               	movwf	___ftadd@f2& (0+255),b
  2558  0009BC  0E78               	movlw	120
  2559  0009BE  0100               	movlb	0	; () banked
  2560  0009C0  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2561  0009C2  0EC2               	movlw	194
  2562  0009C4  0100               	movlb	0	; () banked
  2563  0009C6  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2564  0009C8  ECE7  F00D         	call	___ftadd	;wreg free
  2565  0009CC  C192  FFD9         	movff	triangulation@c,fsr2l
  2566  0009D0  C193  FFDA         	movff	triangulation@c+1,fsr2h
  2567  0009D4  C07A  FFDE         	movff	?___ftadd,postinc2
  2568  0009D8  C07B  FFDE         	movff	?___ftadd+1,postinc2
  2569  0009DC  C07C  FFDE         	movff	?___ftadd+2,postinc2
  2570                           
  2571                           ;triangulation.c: 57: c->y = t.K * (t.cercle._2_3.x - t.cercle._1_2.x) + 3062. ;
  2572  0009E0  C1C7  F06B         	movff	triangulation@t+30,___ftmul@f2
  2573  0009E4  C1C8  F06C         	movff	triangulation@t+31,___ftmul@f2+1
  2574  0009E8  C1C9  F06D         	movff	triangulation@t+32,___ftmul@f2+2
  2575  0009EC  C1AF  F07D         	movff	triangulation@t+6,___ftadd@f2
  2576  0009F0  C1B0  F07E         	movff	triangulation@t+7,___ftadd@f2+1
  2577  0009F4  C1B1  F07F         	movff	triangulation@t+8,___ftadd@f2+2
  2578  0009F8  C1A9  F077         	movff	triangulation@t,___ftneg@f1
  2579  0009FC  C1AA  F078         	movff	triangulation@t+1,___ftneg@f1+1
  2580  000A00  C1AB  F079         	movff	triangulation@t+2,___ftneg@f1+2
  2581  000A04  EC63  F01A         	call	___ftneg	;wreg free
  2582  000A08  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2583  000A0C  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2584  000A10  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2585  000A14  ECE7  F00D         	call	___ftadd	;wreg free
  2586  000A18  C07A  F068         	movff	?___ftadd,___ftmul@f1
  2587  000A1C  C07B  F069         	movff	?___ftadd+1,___ftmul@f1+1
  2588  000A20  C07C  F06A         	movff	?___ftadd+2,___ftmul@f1+2
  2589  000A24  EC08  F010         	call	___ftmul	;wreg free
  2590  000A28  C068  F1A6         	movff	?___ftmul,_triangulation$3137
  2591  000A2C  C069  F1A7         	movff	?___ftmul+1,_triangulation$3137+1
  2592  000A30  C06A  F1A8         	movff	?___ftmul+2,_triangulation$3137+2
  2593                           
  2594                           ;triangulation.c: 57: c->y = t.K * (t.cercle._2_3.x - t.cercle._1_2.x) + 3062. ;
  2595  000A34  C1A6  F07A         	movff	_triangulation$3137,___ftadd@f1
  2596  000A38  C1A7  F07B         	movff	_triangulation$3137+1,___ftadd@f1+1
  2597  000A3C  C1A8  F07C         	movff	_triangulation$3137+2,___ftadd@f1+2
  2598  000A40  0E60               	movlw	96
  2599  000A42  0100               	movlb	0	; () banked
  2600  000A44  6F7D               	movwf	___ftadd@f2& (0+255),b
  2601  000A46  0E3F               	movlw	63
  2602  000A48  0100               	movlb	0	; () banked
  2603  000A4A  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2604  000A4C  0E45               	movlw	69
  2605  000A4E  0100               	movlb	0	; () banked
  2606  000A50  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2607  000A52  ECE7  F00D         	call	___ftadd	;wreg free
  2608  000A56  0101               	movlb	1	; () banked
  2609  000A58  EE20 F003          	lfsr	2,3
  2610  000A5C  5192               	movf	triangulation@c& (0+255),w,b
  2611  000A5E  26D9               	addwf	fsr2l,f,c
  2612  000A60  5193               	movf	(triangulation@c+1)& (0+255),w,b
  2613  000A62  22DA               	addwfc	fsr2h,f,c
  2614  000A64  C07A  FFDE         	movff	?___ftadd,postinc2
  2615  000A68  C07B  FFDE         	movff	?___ftadd+1,postinc2
  2616  000A6C  C07C  FFDE         	movff	?___ftadd+2,postinc2
  2617                           
  2618                           ; BSR set to: 1
  2619  000A70  0012               	return		;funcret
  2620  000A72                     __end_of_triangulation:
  2621                           	opt stack 0
  2622                           tblptru	equ	0xFF8
  2623                           tblptrh	equ	0xFF7
  2624                           tblptrl	equ	0xFF6
  2625                           tablat	equ	0xFF5
  2626                           postinc0	equ	0xFEE
  2627                           plusw0	equ	0xFEB
  2628                           wreg	equ	0xFE8
  2629                           postinc1	equ	0xFE6
  2630                           postdec1	equ	0xFE5
  2631                           plusw1	equ	0xFE3
  2632                           fsr1h	equ	0xFE2
  2633                           fsr1l	equ	0xFE1
  2634                           postinc2	equ	0xFDE
  2635                           fsr2h	equ	0xFDA
  2636                           fsr2l	equ	0xFD9
  2637                           status	equ	0xFD8
  2638                           
  2639 ;; *************** function _saturation *****************
  2640 ;; Defined at:
  2641 ;;		line 67 in file "triangulation.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  valeur          3   35[BANK0 ] struct .
  2644 ;;  maximum         3   38[BANK0 ] struct .
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  3   35[BANK0 ] struct .
  2649 ;; Registers used:
  2650 ;;		wreg, status,2, status,0, cstack
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2656 ;;      Params:         0       6       0       0
  2657 ;;      Locals:         0       0       0       0
  2658 ;;      Temps:          0       0       0       0
  2659 ;;      Totals:         0       6       0       0
  2660 ;;Total ram usage:        6 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; Hardware stack levels required when called:    7
  2663 ;; This function calls:
  2664 ;;		___ftge
  2665 ;;		___ftneg
  2666 ;; This function is called by:
  2667 ;;		_triangulation
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           	psect	text2
  2672  002BC0                     __ptext2:
  2673                           	opt stack 0
  2674  002BC0                     _saturation:
  2675                           	opt stack 22
  2676                           
  2677                           ;triangulation.c: 69: if (valeur > maximum)
  2678                           
  2679                           ; BSR set to: 1
  2680                           ;incstack = 0
  2681  002BC0  C086  F07A         	movff	saturation@maximum,___ftge@ff1
  2682  002BC4  C087  F07B         	movff	saturation@maximum+1,___ftge@ff1+1
  2683  002BC8  C088  F07C         	movff	saturation@maximum+2,___ftge@ff1+2
  2684  002BCC  C083  F07D         	movff	saturation@valeur,___ftge@ff2
  2685  002BD0  C084  F07E         	movff	saturation@valeur+1,___ftge@ff2+1
  2686  002BD4  C085  F07F         	movff	saturation@valeur+2,___ftge@ff2+2
  2687  002BD8  ECCC  F014         	call	___ftge	;wreg free
  2688  002BDC  0100               	movlb	0	; () banked
  2689  002BDE  B0D8               	btfsc	status,0,c
  2690  002BE0  D007               	goto	l4154
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;triangulation.c: 70: valeur = maximum;
  2694  002BE2  C086  F083         	movff	saturation@maximum,saturation@valeur
  2695  002BE6  C087  F084         	movff	saturation@maximum+1,saturation@valeur+1
  2696  002BEA  C088  F085         	movff	saturation@maximum+2,saturation@valeur+2
  2697  002BEE  D028               	goto	l4158
  2698  002BF0                     l4154:
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;triangulation.c: 71: else if (valeur < -maximum)
  2702  002BF0  C083  F07A         	movff	saturation@valeur,___ftge@ff1
  2703  002BF4  C084  F07B         	movff	saturation@valeur+1,___ftge@ff1+1
  2704  002BF8  C085  F07C         	movff	saturation@valeur+2,___ftge@ff1+2
  2705  002BFC  C086  F077         	movff	saturation@maximum,___ftneg@f1
  2706  002C00  C087  F078         	movff	saturation@maximum+1,___ftneg@f1+1
  2707  002C04  C088  F079         	movff	saturation@maximum+2,___ftneg@f1+2
  2708  002C08  EC63  F01A         	call	___ftneg	;wreg free
  2709  002C0C  C077  F07D         	movff	?___ftneg,___ftge@ff2
  2710  002C10  C078  F07E         	movff	?___ftneg+1,___ftge@ff2+1
  2711  002C14  C079  F07F         	movff	?___ftneg+2,___ftge@ff2+2
  2712  002C18  ECCC  F014         	call	___ftge	;wreg free
  2713  002C1C  0100               	movlb	0	; () banked
  2714  002C1E  B0D8               	btfsc	status,0,c
  2715  002C20  D00F               	goto	l4158
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;triangulation.c: 72: valeur = -maximum;
  2719  002C22  C086  F077         	movff	saturation@maximum,___ftneg@f1
  2720  002C26  C087  F078         	movff	saturation@maximum+1,___ftneg@f1+1
  2721  002C2A  C088  F079         	movff	saturation@maximum+2,___ftneg@f1+2
  2722  002C2E  EC63  F01A         	call	___ftneg	;wreg free
  2723  002C32  C077  F083         	movff	?___ftneg,saturation@valeur
  2724  002C36  C078  F084         	movff	?___ftneg+1,saturation@valeur+1
  2725  002C3A  C079  F085         	movff	?___ftneg+2,saturation@valeur+2
  2726  002C3E  D000               	goto	l4158
  2727  002C40                     l4158:
  2728                           
  2729                           ;triangulation.c: 73: return valeur;
  2730  002C40  C083  F083         	movff	saturation@valeur,?_saturation
  2731  002C44  C084  F084         	movff	saturation@valeur+1,?_saturation+1
  2732  002C48  C085  F085         	movff	saturation@valeur+2,?_saturation+2
  2733  002C4C  D000               	goto	l515
  2734  002C4E                     l515:
  2735  002C4E  0012               	return		;funcret
  2736  002C50                     __end_of_saturation:
  2737                           	opt stack 0
  2738                           tblptru	equ	0xFF8
  2739                           tblptrh	equ	0xFF7
  2740                           tblptrl	equ	0xFF6
  2741                           tablat	equ	0xFF5
  2742                           postinc0	equ	0xFEE
  2743                           plusw0	equ	0xFEB
  2744                           wreg	equ	0xFE8
  2745                           postinc1	equ	0xFE6
  2746                           postdec1	equ	0xFE5
  2747                           plusw1	equ	0xFE3
  2748                           fsr1h	equ	0xFE2
  2749                           fsr1l	equ	0xFE1
  2750                           postinc2	equ	0xFDE
  2751                           fsr2h	equ	0xFDA
  2752                           fsr2l	equ	0xFD9
  2753                           status	equ	0xFD8
  2754                           
  2755 ;; *************** function _cotangeante *****************
  2756 ;; Defined at:
  2757 ;;		line 60 in file "triangulation.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;  angle           3  132[BANK0 ] struct .
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;		None
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  3  132[BANK0 ] struct .
  2764 ;; Registers used:
  2765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2771 ;;      Params:         0       3       0       0
  2772 ;;      Locals:         0       3       0       0
  2773 ;;      Temps:          0       0       0       0
  2774 ;;      Totals:         0       6       0       0
  2775 ;;Total ram usage:        6 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; Hardware stack levels required when called:   12
  2778 ;; This function calls:
  2779 ;;		___ftdiv
  2780 ;;		_conversion_degre_radian
  2781 ;;		_tan
  2782 ;; This function is called by:
  2783 ;;		_triangulation
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text3
  2788  0030BE                     __ptext3:
  2789                           	opt stack 0
  2790  0030BE                     _cotangeante:
  2791                           	opt stack 17
  2792                           
  2793                           ;triangulation.c: 62: angle = conversion_degre_radian(angle);
  2794                           
  2795                           ;incstack = 0
  2796  0030BE  C0E4  F0A1         	movff	cotangeante@angle,conversion_degre_radian@angle
  2797  0030C2  C0E5  F0A2         	movff	cotangeante@angle+1,conversion_degre_radian@angle+1
  2798  0030C6  C0E6  F0A3         	movff	cotangeante@angle+2,conversion_degre_radian@angle+2
  2799  0030CA  ECC6  F018         	call	_conversion_degre_radian	;wreg free
  2800  0030CE  C0A1  F0E4         	movff	?_conversion_degre_radian,cotangeante@angle
  2801  0030D2  C0A2  F0E5         	movff	?_conversion_degre_radian+1,cotangeante@angle+1
  2802  0030D6  C0A3  F0E6         	movff	?_conversion_degre_radian+2,cotangeante@angle+2
  2803                           
  2804                           ;triangulation.c: 63: return (1 / tan(angle));
  2805  0030DA  C0E4  F0DB         	movff	cotangeante@angle,tan@x
  2806  0030DE  C0E5  F0DC         	movff	cotangeante@angle+1,tan@x+1
  2807  0030E2  C0E6  F0DD         	movff	cotangeante@angle+2,tan@x+2
  2808  0030E6  EC94  F018         	call	_tan	;wreg free
  2809  0030EA  C0DB  F0E7         	movff	?_tan,_cotangeante$3140
  2810  0030EE  C0DC  F0E8         	movff	?_tan+1,_cotangeante$3140+1
  2811  0030F2  C0DD  F0E9         	movff	?_tan+2,_cotangeante$3140+2
  2812                           
  2813                           ;triangulation.c: 63: return (1 / tan(angle));
  2814  0030F6  0E00               	movlw	0
  2815  0030F8  0100               	movlb	0	; () banked
  2816  0030FA  6F92               	movwf	___ftdiv@f1& (0+255),b
  2817  0030FC  0E80               	movlw	128
  2818  0030FE  0100               	movlb	0	; () banked
  2819  003100  6F93               	movwf	(___ftdiv@f1+1)& (0+255),b
  2820  003102  0E3F               	movlw	63
  2821  003104  0100               	movlb	0	; () banked
  2822  003106  6F94               	movwf	(___ftdiv@f1+2)& (0+255),b
  2823  003108  C0E7  F095         	movff	_cotangeante$3140,___ftdiv@f2
  2824  00310C  C0E8  F096         	movff	_cotangeante$3140+1,___ftdiv@f2+1
  2825  003110  C0E9  F097         	movff	_cotangeante$3140+2,___ftdiv@f2+2
  2826  003114  ECB6  F010         	call	___ftdiv	;wreg free
  2827  003118  C092  F0E4         	movff	?___ftdiv,?_cotangeante
  2828  00311C  C093  F0E5         	movff	?___ftdiv+1,?_cotangeante+1
  2829  003120  C094  F0E6         	movff	?___ftdiv+2,?_cotangeante+2
  2830  003124  D000               	goto	l509
  2831  003126                     l509:
  2832  003126  0012               	return		;funcret
  2833  003128                     __end_of_cotangeante:
  2834                           	opt stack 0
  2835                           tblptru	equ	0xFF8
  2836                           tblptrh	equ	0xFF7
  2837                           tblptrl	equ	0xFF6
  2838                           tablat	equ	0xFF5
  2839                           postinc0	equ	0xFEE
  2840                           plusw0	equ	0xFEB
  2841                           wreg	equ	0xFE8
  2842                           postinc1	equ	0xFE6
  2843                           postdec1	equ	0xFE5
  2844                           plusw1	equ	0xFE3
  2845                           fsr1h	equ	0xFE2
  2846                           fsr1l	equ	0xFE1
  2847                           postinc2	equ	0xFDE
  2848                           fsr2h	equ	0xFDA
  2849                           fsr2l	equ	0xFD9
  2850                           status	equ	0xFD8
  2851                           
  2852 ;; *************** function _tan *****************
  2853 ;; Defined at:
  2854 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\tan.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  x               3  123[BANK0 ] struct .
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;		None
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  3  123[BANK0 ] struct .
  2861 ;; Registers used:
  2862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2868 ;;      Params:         0       3       0       0
  2869 ;;      Locals:         0       6       0       0
  2870 ;;      Temps:          0       0       0       0
  2871 ;;      Totals:         0       9       0       0
  2872 ;;Total ram usage:        9 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:   11
  2875 ;; This function calls:
  2876 ;;		___ftdiv
  2877 ;;		_cos
  2878 ;;		_sin
  2879 ;; This function is called by:
  2880 ;;		_cotangeante
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text4
  2885  003128                     __ptext4:
  2886                           	opt stack 0
  2887  003128                     _tan:
  2888                           	opt stack 17
  2889                           
  2890                           ;incstack = 0
  2891  003128  C0DB  F0C8         	movff	tan@x,sin@f
  2892  00312C  C0DC  F0C9         	movff	tan@x+1,sin@f+1
  2893  003130  C0DD  F0CA         	movff	tan@x+2,sin@f+2
  2894  003134  EC99  F00C         	call	_sin	;wreg free
  2895  003138  C0C8  F0DE         	movff	?_sin,_tan$3142
  2896  00313C  C0C9  F0DF         	movff	?_sin+1,_tan$3142+1
  2897  003140  C0CA  F0E0         	movff	?_sin+2,_tan$3142+2
  2898  003144  C0DB  F0D5         	movff	tan@x,cos@f
  2899  003148  C0DC  F0D6         	movff	tan@x+1,cos@f+1
  2900  00314C  C0DD  F0D7         	movff	tan@x+2,cos@f+2
  2901  003150  EC33  F015         	call	_cos	;wreg free
  2902  003154  C0D5  F0E1         	movff	?_cos,_tan$3143
  2903  003158  C0D6  F0E2         	movff	?_cos+1,_tan$3143+1
  2904  00315C  C0D7  F0E3         	movff	?_cos+2,_tan$3143+2
  2905  003160  C0DE  F092         	movff	_tan$3142,___ftdiv@f1
  2906  003164  C0DF  F093         	movff	_tan$3142+1,___ftdiv@f1+1
  2907  003168  C0E0  F094         	movff	_tan$3142+2,___ftdiv@f1+2
  2908  00316C  C0E1  F095         	movff	_tan$3143,___ftdiv@f2
  2909  003170  C0E2  F096         	movff	_tan$3143+1,___ftdiv@f2+1
  2910  003174  C0E3  F097         	movff	_tan$3143+2,___ftdiv@f2+2
  2911  003178  ECB6  F010         	call	___ftdiv	;wreg free
  2912  00317C  C092  F0DB         	movff	?___ftdiv,?_tan
  2913  003180  C093  F0DC         	movff	?___ftdiv+1,?_tan+1
  2914  003184  C094  F0DD         	movff	?___ftdiv+2,?_tan+2
  2915  003188  D000               	goto	l1102
  2916  00318A                     l1102:
  2917  00318A  0012               	return		;funcret
  2918  00318C                     __end_of_tan:
  2919                           	opt stack 0
  2920                           tblptru	equ	0xFF8
  2921                           tblptrh	equ	0xFF7
  2922                           tblptrl	equ	0xFF6
  2923                           tablat	equ	0xFF5
  2924                           postinc0	equ	0xFEE
  2925                           plusw0	equ	0xFEB
  2926                           wreg	equ	0xFE8
  2927                           postinc1	equ	0xFE6
  2928                           postdec1	equ	0xFE5
  2929                           plusw1	equ	0xFE3
  2930                           fsr1h	equ	0xFE2
  2931                           fsr1l	equ	0xFE1
  2932                           postinc2	equ	0xFDE
  2933                           fsr2h	equ	0xFDA
  2934                           fsr2l	equ	0xFD9
  2935                           status	equ	0xFD8
  2936                           
  2937 ;; *************** function _cos *****************
  2938 ;; Defined at:
  2939 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\cos.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  f               3  117[BANK0 ] struct .
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  3  117[BANK0 ] struct .
  2946 ;; Registers used:
  2947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2953 ;;      Params:         0       3       0       0
  2954 ;;      Locals:         0       3       0       0
  2955 ;;      Temps:          0       0       0       0
  2956 ;;      Totals:         0       6       0       0
  2957 ;;Total ram usage:        6 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:   10
  2960 ;; This function calls:
  2961 ;;		___ftadd
  2962 ;;		___ftge
  2963 ;;		_sin
  2964 ;; This function is called by:
  2965 ;;		_tan
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text5
  2970  002A66                     __ptext5:
  2971                           	opt stack 0
  2972  002A66                     _cos:
  2973                           	opt stack 17
  2974                           
  2975                           ;incstack = 0
  2976  002A66  0E10               	movlw	16
  2977  002A68  0100               	movlb	0	; () banked
  2978  002A6A  6F7A               	movwf	___ftge@ff1& (0+255),b
  2979  002A6C  0E49               	movlw	73
  2980  002A6E  0100               	movlb	0	; () banked
  2981  002A70  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  2982  002A72  0E40               	movlw	64
  2983  002A74  0100               	movlb	0	; () banked
  2984  002A76  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  2985  002A78  C0D5  F07D         	movff	cos@f,___ftge@ff2
  2986  002A7C  C0D6  F07E         	movff	cos@f+1,___ftge@ff2+1
  2987  002A80  C0D7  F07F         	movff	cos@f+2,___ftge@ff2+2
  2988  002A84  ECCC  F014         	call	___ftge	;wreg free
  2989  002A88  0100               	movlb	0	; () banked
  2990  002A8A  B0D8               	btfsc	status,0,c
  2991  002A8C  D021               	goto	l4012
  2992                           
  2993                           ; BSR set to: 0
  2994  002A8E  C0D5  F07A         	movff	cos@f,___ftadd@f1
  2995  002A92  C0D6  F07B         	movff	cos@f+1,___ftadd@f1+1
  2996  002A96  C0D7  F07C         	movff	cos@f+2,___ftadd@f1+2
  2997  002A9A  0ECC               	movlw	204
  2998  002A9C  0100               	movlb	0	; () banked
  2999  002A9E  6F7D               	movwf	___ftadd@f2& (0+255),b
  3000  002AA0  0E96               	movlw	150
  3001  002AA2  0100               	movlb	0	; () banked
  3002  002AA4  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  3003  002AA6  0EC0               	movlw	192
  3004  002AA8  0100               	movlb	0	; () banked
  3005  002AAA  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  3006  002AAC  ECE7  F00D         	call	___ftadd	;wreg free
  3007  002AB0  C07A  F0D8         	movff	?___ftadd,_cos$3144
  3008  002AB4  C07B  F0D9         	movff	?___ftadd+1,_cos$3144+1
  3009  002AB8  C07C  F0DA         	movff	?___ftadd+2,_cos$3144+2
  3010  002ABC  C0D8  F0C8         	movff	_cos$3144,sin@f
  3011  002AC0  C0D9  F0C9         	movff	_cos$3144+1,sin@f+1
  3012  002AC4  C0DA  F0CA         	movff	_cos$3144+2,sin@f+2
  3013  002AC8  EC99  F00C         	call	_sin	;wreg free
  3014  002ACC  D020               	goto	L1
  3015  002ACE  D026               	goto	l1108
  3016  002AD0                     l4012:
  3017  002AD0  C0D5  F07A         	movff	cos@f,___ftadd@f1
  3018  002AD4  C0D6  F07B         	movff	cos@f+1,___ftadd@f1+1
  3019  002AD8  C0D7  F07C         	movff	cos@f+2,___ftadd@f1+2
  3020  002ADC  0E10               	movlw	16
  3021  002ADE  0100               	movlb	0	; () banked
  3022  002AE0  6F7D               	movwf	___ftadd@f2& (0+255),b
  3023  002AE2  0EC9               	movlw	201
  3024  002AE4  0100               	movlb	0	; () banked
  3025  002AE6  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  3026  002AE8  0E3F               	movlw	63
  3027  002AEA  0100               	movlb	0	; () banked
  3028  002AEC  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  3029  002AEE  ECE7  F00D         	call	___ftadd	;wreg free
  3030  002AF2  C07A  F0D8         	movff	?___ftadd,_cos$3144
  3031  002AF6  C07B  F0D9         	movff	?___ftadd+1,_cos$3144+1
  3032  002AFA  C07C  F0DA         	movff	?___ftadd+2,_cos$3144+2
  3033  002AFE  C0D8  F0C8         	movff	_cos$3144,sin@f
  3034  002B02  C0D9  F0C9         	movff	_cos$3144+1,sin@f+1
  3035  002B06  C0DA  F0CA         	movff	_cos$3144+2,sin@f+2
  3036  002B0A  EC99  F00C         	call	_sin	;wreg free
  3037  002B0E                     L1:
  3038  002B0E  C0C8  F0D5         	movff	?_sin,?_cos
  3039  002B12  C0C9  F0D6         	movff	?_sin+1,?_cos+1
  3040  002B16  C0CA  F0D7         	movff	?_sin+2,?_cos+2
  3041  002B1A  D000               	goto	l1108
  3042  002B1C                     l1108:
  3043  002B1C  0012               	return		;funcret
  3044  002B1E                     __end_of_cos:
  3045                           	opt stack 0
  3046                           tblptru	equ	0xFF8
  3047                           tblptrh	equ	0xFF7
  3048                           tblptrl	equ	0xFF6
  3049                           tablat	equ	0xFF5
  3050                           postinc0	equ	0xFEE
  3051                           plusw0	equ	0xFEB
  3052                           wreg	equ	0xFE8
  3053                           postinc1	equ	0xFE6
  3054                           postdec1	equ	0xFE5
  3055                           plusw1	equ	0xFE3
  3056                           fsr1h	equ	0xFE2
  3057                           fsr1l	equ	0xFE1
  3058                           postinc2	equ	0xFDE
  3059                           fsr2h	equ	0xFDA
  3060                           fsr2l	equ	0xFD9
  3061                           status	equ	0xFD8
  3062                           
  3063 ;; *************** function _sin *****************
  3064 ;; Defined at:
  3065 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\sin.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;  f               3  104[BANK0 ] struct .
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;  x2              3  113[BANK0 ] struct .
  3070 ;;  y               3  107[BANK0 ] struct .
  3071 ;;  sgn             1  116[BANK0 ] unsigned char 
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  3  104[BANK0 ] unsigned char 
  3074 ;; Registers used:
  3075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3081 ;;      Params:         0       3       0       0
  3082 ;;      Locals:         0      10       0       0
  3083 ;;      Temps:          0       0       0       0
  3084 ;;      Totals:         0      13       0       0
  3085 ;;Total ram usage:       13 bytes
  3086 ;; Hardware stack levels used:    1
  3087 ;; Hardware stack levels required when called:    9
  3088 ;; This function calls:
  3089 ;;		___ftadd
  3090 ;;		___ftdiv
  3091 ;;		___ftge
  3092 ;;		___ftmul
  3093 ;;		___ftneg
  3094 ;;		___ftsub
  3095 ;;		_eval_poly
  3096 ;;		_floor
  3097 ;; This function is called by:
  3098 ;;		_tan
  3099 ;;		_cos
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           	psect	text6
  3104  001932                     __ptext6:
  3105                           	opt stack 0
  3106  001932                     _sin:
  3107                           	opt stack 18
  3108                           
  3109                           ;incstack = 0
  3110  001932  0E00               	movlw	0
  3111  001934  0100               	movlb	0	; () banked
  3112  001936  6FD4               	movwf	sin@sgn& (0+255),b
  3113                           
  3114                           ; BSR set to: 0
  3115  001938  0100               	movlb	0	; () banked
  3116  00193A  AFCA               	btfss	(sin@f+2)& (0+255),7,b
  3117  00193C  D012               	goto	l3950
  3118                           
  3119                           ; BSR set to: 0
  3120  00193E  C0C8  F077         	movff	sin@f,___ftneg@f1
  3121  001942  C0C9  F078         	movff	sin@f+1,___ftneg@f1+1
  3122  001946  C0CA  F079         	movff	sin@f+2,___ftneg@f1+2
  3123  00194A  EC63  F01A         	call	___ftneg	;wreg free
  3124  00194E  C077  F0C8         	movff	?___ftneg,sin@f
  3125  001952  C078  F0C9         	movff	?___ftneg+1,sin@f+1
  3126  001956  C079  F0CA         	movff	?___ftneg+2,sin@f+2
  3127  00195A  0E01               	movlw	1
  3128  00195C  0100               	movlb	0	; () banked
  3129  00195E  6FD4               	movwf	sin@sgn& (0+255),b
  3130  001960  D000               	goto	l3950
  3131  001962                     l3950:
  3132                           
  3133                           ; BSR set to: 0
  3134  001962  C0C8  F068         	movff	sin@f,___ftmul@f1
  3135  001966  C0C9  F069         	movff	sin@f+1,___ftmul@f1+1
  3136  00196A  C0CA  F06A         	movff	sin@f+2,___ftmul@f1+2
  3137  00196E  0EFA               	movlw	250
  3138  001970  0100               	movlb	0	; () banked
  3139  001972  6F6B               	movwf	___ftmul@f2& (0+255),b
  3140  001974  0E22               	movlw	34
  3141  001976  0100               	movlb	0	; () banked
  3142  001978  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  3143  00197A  0E3E               	movlw	62
  3144  00197C  0100               	movlb	0	; () banked
  3145  00197E  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  3146  001980  EC08  F010         	call	___ftmul	;wreg free
  3147  001984  C068  F0C8         	movff	?___ftmul,sin@f
  3148  001988  C069  F0C9         	movff	?___ftmul+1,sin@f+1
  3149  00198C  C06A  F0CA         	movff	?___ftmul+2,sin@f+2
  3150  001990  C0C8  F0C2         	movff	sin@f,___ftsub@f1
  3151  001994  C0C9  F0C3         	movff	sin@f+1,___ftsub@f1+1
  3152  001998  C0CA  F0C4         	movff	sin@f+2,___ftsub@f1+2
  3153  00199C  C0C8  F0BA         	movff	sin@f,floor@x
  3154  0019A0  C0C9  F0BB         	movff	sin@f+1,floor@x+1
  3155  0019A4  C0CA  F0BC         	movff	sin@f+2,floor@x+2
  3156  0019A8  EC80  F012         	call	_floor	;wreg free
  3157  0019AC  C0BA  F0C5         	movff	?_floor,___ftsub@f2
  3158  0019B0  C0BB  F0C6         	movff	?_floor+1,___ftsub@f2+1
  3159  0019B4  C0BC  F0C7         	movff	?_floor+2,___ftsub@f2+2
  3160  0019B8  ECF0  F018         	call	___ftsub	;wreg free
  3161  0019BC  C0C2  F0C8         	movff	?___ftsub,sin@f
  3162  0019C0  C0C3  F0C9         	movff	?___ftsub+1,sin@f+1
  3163  0019C4  C0C4  F0CA         	movff	?___ftsub+2,sin@f+2
  3164  0019C8  C0C8  F068         	movff	sin@f,___ftmul@f1
  3165  0019CC  C0C9  F069         	movff	sin@f+1,___ftmul@f1+1
  3166  0019D0  C0CA  F06A         	movff	sin@f+2,___ftmul@f1+2
  3167  0019D4  0E00               	movlw	0
  3168  0019D6  0100               	movlb	0	; () banked
  3169  0019D8  6F6B               	movwf	___ftmul@f2& (0+255),b
  3170  0019DA  0E80               	movlw	128
  3171  0019DC  0100               	movlb	0	; () banked
  3172  0019DE  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  3173  0019E0  0E40               	movlw	64
  3174  0019E2  0100               	movlb	0	; () banked
  3175  0019E4  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  3176  0019E6  EC08  F010         	call	___ftmul	;wreg free
  3177  0019EA  C068  F0C8         	movff	?___ftmul,sin@f
  3178  0019EE  C069  F0C9         	movff	?___ftmul+1,sin@f+1
  3179  0019F2  C06A  F0CA         	movff	?___ftmul+2,sin@f+2
  3180  0019F6  0E00               	movlw	0
  3181  0019F8  0100               	movlb	0	; () banked
  3182  0019FA  6F7A               	movwf	___ftge@ff1& (0+255),b
  3183  0019FC  0E00               	movlw	0
  3184  0019FE  0100               	movlb	0	; () banked
  3185  001A00  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  3186  001A02  0E40               	movlw	64
  3187  001A04  0100               	movlb	0	; () banked
  3188  001A06  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  3189  001A08  C0C8  F07D         	movff	sin@f,___ftge@ff2
  3190  001A0C  C0C9  F07E         	movff	sin@f+1,___ftge@ff2+1
  3191  001A10  C0CA  F07F         	movff	sin@f+2,___ftge@ff2+2
  3192  001A14  ECCC  F014         	call	___ftge	;wreg free
  3193  001A18  0100               	movlb	0	; () banked
  3194  001A1A  B0D8               	btfsc	status,0,c
  3195  001A1C  D022               	goto	l3962
  3196                           
  3197                           ; BSR set to: 0
  3198  001A1E  C0C8  F0C2         	movff	sin@f,___ftsub@f1
  3199  001A22  C0C9  F0C3         	movff	sin@f+1,___ftsub@f1+1
  3200  001A26  C0CA  F0C4         	movff	sin@f+2,___ftsub@f1+2
  3201  001A2A  0E00               	movlw	0
  3202  001A2C  0100               	movlb	0	; () banked
  3203  001A2E  6FC5               	movwf	___ftsub@f2& (0+255),b
  3204  001A30  0E00               	movlw	0
  3205  001A32  0100               	movlb	0	; () banked
  3206  001A34  6FC6               	movwf	(___ftsub@f2+1)& (0+255),b
  3207  001A36  0E40               	movlw	64
  3208  001A38  0100               	movlb	0	; () banked
  3209  001A3A  6FC7               	movwf	(___ftsub@f2+2)& (0+255),b
  3210  001A3C  ECF0  F018         	call	___ftsub	;wreg free
  3211  001A40  C0C2  F0C8         	movff	?___ftsub,sin@f
  3212  001A44  C0C3  F0C9         	movff	?___ftsub+1,sin@f+1
  3213  001A48  C0C4  F0CA         	movff	?___ftsub+2,sin@f+2
  3214  001A4C  0100               	movlb	0	; () banked
  3215  001A4E  51D4               	movf	sin@sgn& (0+255),w,b
  3216  001A50  0100               	movlb	0	; () banked
  3217  001A52  A4D8               	btfss	status,2,c
  3218  001A54  D002               	goto	u3870
  3219  001A56  0E01               	movlw	1
  3220  001A58  D001               	goto	u3880
  3221  001A5A                     u3870:
  3222  001A5A  0E00               	movlw	0
  3223  001A5C                     u3880:
  3224  001A5C  0100               	movlb	0	; () banked
  3225  001A5E  6FD4               	movwf	sin@sgn& (0+255),b
  3226  001A60  D000               	goto	l3962
  3227  001A62                     l3962:
  3228                           
  3229                           ; BSR set to: 0
  3230  001A62  0E00               	movlw	0
  3231  001A64  0100               	movlb	0	; () banked
  3232  001A66  6F7A               	movwf	___ftge@ff1& (0+255),b
  3233  001A68  0E80               	movlw	128
  3234  001A6A  0100               	movlb	0	; () banked
  3235  001A6C  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  3236  001A6E  0E3F               	movlw	63
  3237  001A70  0100               	movlb	0	; () banked
  3238  001A72  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  3239  001A74  C0C8  F07D         	movff	sin@f,___ftge@ff2
  3240  001A78  C0C9  F07E         	movff	sin@f+1,___ftge@ff2+1
  3241  001A7C  C0CA  F07F         	movff	sin@f+2,___ftge@ff2+2
  3242  001A80  ECCC  F014         	call	___ftge	;wreg free
  3243  001A84  0100               	movlb	0	; () banked
  3244  001A86  B0D8               	btfsc	status,0,c
  3245  001A88  D01F               	goto	l1123
  3246                           
  3247                           ; BSR set to: 0
  3248  001A8A  C0C8  F077         	movff	sin@f,___ftneg@f1
  3249  001A8E  C0C9  F078         	movff	sin@f+1,___ftneg@f1+1
  3250  001A92  C0CA  F079         	movff	sin@f+2,___ftneg@f1+2
  3251  001A96  EC63  F01A         	call	___ftneg	;wreg free
  3252  001A9A  C077  F07A         	movff	?___ftneg,___ftadd@f1
  3253  001A9E  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  3254  001AA2  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  3255  001AA6  0E00               	movlw	0
  3256  001AA8  0100               	movlb	0	; () banked
  3257  001AAA  6F7D               	movwf	___ftadd@f2& (0+255),b
  3258  001AAC  0E00               	movlw	0
  3259  001AAE  0100               	movlb	0	; () banked
  3260  001AB0  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  3261  001AB2  0E40               	movlw	64
  3262  001AB4  0100               	movlb	0	; () banked
  3263  001AB6  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  3264  001AB8  ECE7  F00D         	call	___ftadd	;wreg free
  3265  001ABC  C07A  F0C8         	movff	?___ftadd,sin@f
  3266  001AC0  C07B  F0C9         	movff	?___ftadd+1,sin@f+1
  3267  001AC4  C07C  F0CA         	movff	?___ftadd+2,sin@f+2
  3268  001AC8                     l1123:
  3269  001AC8  C0C8  F068         	movff	sin@f,___ftmul@f1
  3270  001ACC  C0C9  F069         	movff	sin@f+1,___ftmul@f1+1
  3271  001AD0  C0CA  F06A         	movff	sin@f+2,___ftmul@f1+2
  3272  001AD4  C0C8  F06B         	movff	sin@f,___ftmul@f2
  3273  001AD8  C0C9  F06C         	movff	sin@f+1,___ftmul@f2+1
  3274  001ADC  C0CA  F06D         	movff	sin@f+2,___ftmul@f2+2
  3275  001AE0  EC08  F010         	call	___ftmul	;wreg free
  3276  001AE4  C068  F0D1         	movff	?___ftmul,sin@x2
  3277  001AE8  C069  F0D2         	movff	?___ftmul+1,sin@x2+1
  3278  001AEC  C06A  F0D3         	movff	?___ftmul+2,sin@x2+2
  3279  001AF0  C0D1  F086         	movff	sin@x2,eval_poly@x
  3280  001AF4  C0D2  F087         	movff	sin@x2+1,eval_poly@x+1
  3281  001AF8  C0D3  F088         	movff	sin@x2+2,eval_poly@x+2
  3282  001AFC  0E10               	movlw	low sin@coeff_b
  3283  001AFE  0100               	movlb	0	; () banked
  3284  001B00  6F89               	movwf	eval_poly@d& (0+255),b
  3285  001B02  0E03               	movlw	high sin@coeff_b
  3286  001B04  0100               	movlb	0	; () banked
  3287  001B06  6F8A               	movwf	(eval_poly@d+1)& (0+255),b
  3288  001B08  0E00               	movlw	0
  3289  001B0A  0100               	movlb	0	; () banked
  3290  001B0C  6F8C               	movwf	(eval_poly@n+1)& (0+255),b
  3291  001B0E  0E03               	movlw	3
  3292  001B10  6F8B               	movwf	eval_poly@n& (0+255),b
  3293  001B12  EC7C  F013         	call	_eval_poly	;wreg free
  3294  001B16  C086  F0CB         	movff	?_eval_poly,sin@y
  3295  001B1A  C087  F0CC         	movff	?_eval_poly+1,sin@y+1
  3296  001B1E  C088  F0CD         	movff	?_eval_poly+2,sin@y+2
  3297  001B22  C0CB  F095         	movff	sin@y,___ftdiv@f2
  3298  001B26  C0CC  F096         	movff	sin@y+1,___ftdiv@f2+1
  3299  001B2A  C0CD  F097         	movff	sin@y+2,___ftdiv@f2+2
  3300  001B2E  0E00               	movlw	0
  3301  001B30  0100               	movlb	0	; () banked
  3302  001B32  6F8C               	movwf	(eval_poly@n+1)& (0+255),b
  3303  001B34  0E04               	movlw	4
  3304  001B36  6F8B               	movwf	eval_poly@n& (0+255),b
  3305  001B38  0E01               	movlw	low sin@coeff_a
  3306  001B3A  0100               	movlb	0	; () banked
  3307  001B3C  6F89               	movwf	eval_poly@d& (0+255),b
  3308  001B3E  0E03               	movlw	high sin@coeff_a
  3309  001B40  0100               	movlb	0	; () banked
  3310  001B42  6F8A               	movwf	(eval_poly@d+1)& (0+255),b
  3311  001B44  C0D1  F086         	movff	sin@x2,eval_poly@x
  3312  001B48  C0D2  F087         	movff	sin@x2+1,eval_poly@x+1
  3313  001B4C  C0D3  F088         	movff	sin@x2+2,eval_poly@x+2
  3314  001B50  EC7C  F013         	call	_eval_poly	;wreg free
  3315  001B54  C086  F092         	movff	?_eval_poly,___ftdiv@f1
  3316  001B58  C087  F093         	movff	?_eval_poly+1,___ftdiv@f1+1
  3317  001B5C  C088  F094         	movff	?_eval_poly+2,___ftdiv@f1+2
  3318  001B60  ECB6  F010         	call	___ftdiv	;wreg free
  3319  001B64  C092  F0CE         	movff	?___ftdiv,_sin$3145
  3320  001B68  C093  F0CF         	movff	?___ftdiv+1,_sin$3145+1
  3321  001B6C  C094  F0D0         	movff	?___ftdiv+2,_sin$3145+2
  3322  001B70  C0C8  F068         	movff	sin@f,___ftmul@f1
  3323  001B74  C0C9  F069         	movff	sin@f+1,___ftmul@f1+1
  3324  001B78  C0CA  F06A         	movff	sin@f+2,___ftmul@f1+2
  3325  001B7C  C0CE  F06B         	movff	_sin$3145,___ftmul@f2
  3326  001B80  C0CF  F06C         	movff	_sin$3145+1,___ftmul@f2+1
  3327  001B84  C0D0  F06D         	movff	_sin$3145+2,___ftmul@f2+2
  3328  001B88  EC08  F010         	call	___ftmul	;wreg free
  3329  001B8C  C068  F0C8         	movff	?___ftmul,sin@f
  3330  001B90  C069  F0C9         	movff	?___ftmul+1,sin@f+1
  3331  001B94  C06A  F0CA         	movff	?___ftmul+2,sin@f+2
  3332  001B98  0100               	movlb	0	; () banked
  3333  001B9A  51D4               	movf	sin@sgn& (0+255),w,b
  3334  001B9C  0100               	movlb	0	; () banked
  3335  001B9E  B4D8               	btfsc	status,2,c
  3336  001BA0  D00F               	goto	l1124
  3337                           
  3338                           ; BSR set to: 0
  3339  001BA2  C0C8  F077         	movff	sin@f,___ftneg@f1
  3340  001BA6  C0C9  F078         	movff	sin@f+1,___ftneg@f1+1
  3341  001BAA  C0CA  F079         	movff	sin@f+2,___ftneg@f1+2
  3342  001BAE  EC63  F01A         	call	___ftneg	;wreg free
  3343  001BB2  C077  F0C8         	movff	?___ftneg,?_sin
  3344  001BB6  C078  F0C9         	movff	?___ftneg+1,?_sin+1
  3345  001BBA  C079  F0CA         	movff	?___ftneg+2,?_sin+2
  3346  001BBE  D006               	goto	l1125
  3347  001BC0                     l1124:
  3348                           
  3349                           ; BSR set to: 0
  3350  001BC0  C0C8  F0C8         	movff	sin@f,?_sin
  3351  001BC4  C0C9  F0C9         	movff	sin@f+1,?_sin+1
  3352  001BC8  C0CA  F0CA         	movff	sin@f+2,?_sin+2
  3353  001BCC                     l1125:
  3354  001BCC  0012               	return		;funcret
  3355  001BCE                     __end_of_sin:
  3356                           	opt stack 0
  3357                           tblptru	equ	0xFF8
  3358                           tblptrh	equ	0xFF7
  3359                           tblptrl	equ	0xFF6
  3360                           tablat	equ	0xFF5
  3361                           postinc0	equ	0xFEE
  3362                           plusw0	equ	0xFEB
  3363                           wreg	equ	0xFE8
  3364                           postinc1	equ	0xFE6
  3365                           postdec1	equ	0xFE5
  3366                           plusw1	equ	0xFE3
  3367                           fsr1h	equ	0xFE2
  3368                           fsr1l	equ	0xFE1
  3369                           postinc2	equ	0xFDE
  3370                           fsr2h	equ	0xFDA
  3371                           fsr2l	equ	0xFD9
  3372                           status	equ	0xFD8
  3373                           
  3374 ;; *************** function _floor *****************
  3375 ;; Defined at:
  3376 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\floor.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;  x               3   90[BANK0 ] unsigned char 
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;  i               3   93[BANK0 ] unsigned char 
  3381 ;;  expon           2   96[BANK0 ] int 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  3   90[BANK0 ] int 
  3384 ;; Registers used:
  3385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3391 ;;      Params:         0       3       0       0
  3392 ;;      Locals:         0       5       0       0
  3393 ;;      Temps:          0       0       0       0
  3394 ;;      Totals:         0       8       0       0
  3395 ;;Total ram usage:        8 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:    8
  3398 ;; This function calls:
  3399 ;;		___altoft
  3400 ;;		___ftadd
  3401 ;;		___ftge
  3402 ;;		___fttol
  3403 ;;		_frexp
  3404 ;; This function is called by:
  3405 ;;		_sin
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text7
  3410  002500                     __ptext7:
  3411                           	opt stack 0
  3412  002500                     _floor:
  3413                           	opt stack 18
  3414                           
  3415                           ;incstack = 0
  3416  002500  C0BA  F060         	movff	floor@x,frexp@value
  3417  002504  C0BB  F061         	movff	floor@x+1,frexp@value+1
  3418  002508  C0BC  F062         	movff	floor@x+2,frexp@value+2
  3419  00250C  0EC0               	movlw	low floor@expon
  3420  00250E  0100               	movlb	0	; () banked
  3421  002510  6F63               	movwf	frexp@eptr& (0+255),b
  3422  002512  0E00               	movlw	high floor@expon
  3423  002514  0100               	movlb	0	; () banked
  3424  002516  6F64               	movwf	(frexp@eptr+1)& (0+255),b
  3425  002518  EC28  F016         	call	_frexp	;wreg free
  3426  00251C  0100               	movlb	0	; () banked
  3427  00251E  AFC1               	btfss	(floor@expon+1)& (0+255),7,b
  3428  002520  D016               	goto	l3882
  3429                           
  3430                           ; BSR set to: 0
  3431  002522  0100               	movlb	0	; () banked
  3432  002524  AFBC               	btfss	(floor@x+2)& (0+255),7,b
  3433  002526  D009               	goto	l3878
  3434                           
  3435                           ; BSR set to: 0
  3436  002528  0E00               	movlw	0
  3437  00252A  0100               	movlb	0	; () banked
  3438  00252C  6FBA               	movwf	?_floor& (0+255),b
  3439  00252E  0E80               	movlw	128
  3440  002530  0100               	movlb	0	; () banked
  3441  002532  6FBB               	movwf	(?_floor+1)& (0+255),b
  3442  002534  0EBF               	movlw	191
  3443  002536  D008               	goto	L2
  3444                           
  3445                           ; BSR set to: 0
  3446  002538  D060               	goto	l1138
  3447  00253A                     l3878:
  3448                           
  3449                           ; BSR set to: 0
  3450  00253A  0E00               	movlw	0
  3451  00253C  0100               	movlb	0	; () banked
  3452  00253E  6FBA               	movwf	?_floor& (0+255),b
  3453  002540  0E00               	movlw	0
  3454  002542  0100               	movlb	0	; () banked
  3455  002544  6FBB               	movwf	(?_floor+1)& (0+255),b
  3456  002546  0E00               	movlw	0
  3457  002548                     L2:
  3458  002548  0100               	movlb	0	; () banked
  3459  00254A  6FBC               	movwf	(?_floor+2)& (0+255),b
  3460                           
  3461                           ; BSR set to: 0
  3462  00254C  D056               	goto	l1138
  3463  00254E                     l3882:
  3464                           
  3465                           ; BSR set to: 0
  3466  00254E  0100               	movlb	0	; () banked
  3467  002550  51C1               	movf	(floor@expon+1)& (0+255),w,b
  3468  002552  E105               	bnz	u3760
  3469  002554  0E15               	movlw	21
  3470  002556  0100               	movlb	0	; () banked
  3471  002558  5DC0               	subwf	floor@expon& (0+255),w,b
  3472  00255A  A0D8               	btfss	status,0,c
  3473  00255C  D007               	goto	l3886
  3474  00255E                     u3760:
  3475                           
  3476                           ; BSR set to: 0
  3477  00255E  C0BA  F0BA         	movff	floor@x,?_floor
  3478  002562  C0BB  F0BB         	movff	floor@x+1,?_floor+1
  3479  002566  C0BC  F0BC         	movff	floor@x+2,?_floor+2
  3480  00256A  D047               	goto	l1138
  3481  00256C                     l3886:
  3482                           
  3483                           ; BSR set to: 0
  3484  00256C  C0BA  F0A1         	movff	floor@x,___fttol@f1
  3485  002570  C0BB  F0A2         	movff	floor@x+1,___fttol@f1+1
  3486  002574  C0BC  F0A3         	movff	floor@x+2,___fttol@f1+2
  3487  002578  EC57  F011         	call	___fttol	;wreg free
  3488  00257C  C0A1  F0B0         	movff	?___fttol,___altoft@c
  3489  002580  C0A2  F0B1         	movff	?___fttol+1,___altoft@c+1
  3490  002584  C0A3  F0B2         	movff	?___fttol+2,___altoft@c+2
  3491  002588  C0A4  F0B3         	movff	?___fttol+3,___altoft@c+3
  3492  00258C  EC8F  F015         	call	___altoft	;wreg free
  3493  002590  C0B0  F0BD         	movff	?___altoft,floor@i
  3494  002594  C0B1  F0BE         	movff	?___altoft+1,floor@i+1
  3495  002598  C0B2  F0BF         	movff	?___altoft+2,floor@i+2
  3496  00259C  C0BA  F07A         	movff	floor@x,___ftge@ff1
  3497  0025A0  C0BB  F07B         	movff	floor@x+1,___ftge@ff1+1
  3498  0025A4  C0BC  F07C         	movff	floor@x+2,___ftge@ff1+2
  3499  0025A8  C0BD  F07D         	movff	floor@i,___ftge@ff2
  3500  0025AC  C0BE  F07E         	movff	floor@i+1,___ftge@ff2+1
  3501  0025B0  C0BF  F07F         	movff	floor@i+2,___ftge@ff2+2
  3502  0025B4  ECCC  F014         	call	___ftge	;wreg free
  3503  0025B8  0100               	movlb	0	; () banked
  3504  0025BA  B0D8               	btfsc	status,0,c
  3505  0025BC  D018               	goto	l1140
  3506                           
  3507                           ; BSR set to: 0
  3508  0025BE  C0BD  F07A         	movff	floor@i,___ftadd@f1
  3509  0025C2  C0BE  F07B         	movff	floor@i+1,___ftadd@f1+1
  3510  0025C6  C0BF  F07C         	movff	floor@i+2,___ftadd@f1+2
  3511  0025CA  0E00               	movlw	0
  3512  0025CC  0100               	movlb	0	; () banked
  3513  0025CE  6F7D               	movwf	___ftadd@f2& (0+255),b
  3514  0025D0  0E80               	movlw	128
  3515  0025D2  0100               	movlb	0	; () banked
  3516  0025D4  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  3517  0025D6  0EBF               	movlw	191
  3518  0025D8  0100               	movlb	0	; () banked
  3519  0025DA  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  3520  0025DC  ECE7  F00D         	call	___ftadd	;wreg free
  3521  0025E0  C07A  F0BA         	movff	?___ftadd,?_floor
  3522  0025E4  C07B  F0BB         	movff	?___ftadd+1,?_floor+1
  3523  0025E8  C07C  F0BC         	movff	?___ftadd+2,?_floor+2
  3524  0025EC  D006               	goto	l1138
  3525  0025EE                     l1140:
  3526                           
  3527                           ; BSR set to: 0
  3528  0025EE  C0BD  F0BA         	movff	floor@i,?_floor
  3529  0025F2  C0BE  F0BB         	movff	floor@i+1,?_floor+1
  3530  0025F6  C0BF  F0BC         	movff	floor@i+2,?_floor+2
  3531  0025FA                     l1138:
  3532  0025FA  0012               	return		;funcret
  3533  0025FC                     __end_of_floor:
  3534                           	opt stack 0
  3535                           tblptru	equ	0xFF8
  3536                           tblptrh	equ	0xFF7
  3537                           tblptrl	equ	0xFF6
  3538                           tablat	equ	0xFF5
  3539                           postinc0	equ	0xFEE
  3540                           plusw0	equ	0xFEB
  3541                           wreg	equ	0xFE8
  3542                           postinc1	equ	0xFE6
  3543                           postdec1	equ	0xFE5
  3544                           plusw1	equ	0xFE3
  3545                           fsr1h	equ	0xFE2
  3546                           fsr1l	equ	0xFE1
  3547                           postinc2	equ	0xFDE
  3548                           fsr2h	equ	0xFDA
  3549                           fsr2l	equ	0xFD9
  3550                           status	equ	0xFD8
  3551                           
  3552 ;; *************** function _frexp *****************
  3553 ;; Defined at:
  3554 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  value           3    0[BANK0 ] int 
  3557 ;;  eptr            2    3[BANK0 ] PTR int 
  3558 ;;		 -> floor@expon(2), 
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;		None
  3561 ;; Return value:  Size  Location     Type
  3562 ;;                  3    0[BANK0 ] PTR int 
  3563 ;; Registers used:
  3564 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3570 ;;      Params:         0       5       0       0
  3571 ;;      Locals:         0       0       0       0
  3572 ;;      Temps:          0       2       0       0
  3573 ;;      Totals:         0       7       0       0
  3574 ;;Total ram usage:        7 bytes
  3575 ;; Hardware stack levels used:    1
  3576 ;; Hardware stack levels required when called:    6
  3577 ;; This function calls:
  3578 ;;		Nothing
  3579 ;; This function is called by:
  3580 ;;		_floor
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           	psect	text8
  3585  002C50                     __ptext8:
  3586                           	opt stack 0
  3587  002C50                     _frexp:
  3588                           	opt stack 19
  3589                           
  3590                           ;incstack = 0
  3591  002C50  0100               	movlb	0	; () banked
  3592  002C52  5160               	movf	frexp@value& (0+255),w,b
  3593  002C54  0100               	movlb	0	; () banked
  3594  002C56  1161               	iorwf	(frexp@value+1)& (0+255),w,b
  3595  002C58  0100               	movlb	0	; () banked
  3596  002C5A  1162               	iorwf	(frexp@value+2)& (0+255),w,b
  3597  002C5C  A4D8               	btfss	status,2,c
  3598  002C5E  D009               	goto	l3800
  3599                           
  3600                           ; BSR set to: 0
  3601  002C60  C063  FFD9         	movff	frexp@eptr,fsr2l
  3602  002C64  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  3603  002C68  0E00               	movlw	0
  3604  002C6A  6EDE               	movwf	postinc2,c
  3605  002C6C  0E00               	movlw	0
  3606  002C6E  6EDD               	movwf	postdec2,c
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;	Return value of _frexp is never used
  3610  002C70  D036               	goto	l1146
  3611  002C72                     l3800:
  3612                           
  3613                           ; BSR set to: 0
  3614  002C72  0100               	movlb	0	; () banked
  3615  002C74  5162               	movf	(frexp@value+2)& (0+255),w,b
  3616  002C76  0B7F               	andlw	127
  3617  002C78  0100               	movlb	0	; () banked
  3618  002C7A  6F65               	movwf	??_frexp& (0+255),b
  3619  002C7C  6B66               	clrf	(??_frexp+1)& (0+255),b
  3620  002C7E  90D8               	bcf	status,0,c
  3621  002C80  0100               	movlb	0	; () banked
  3622  002C82  3765               	rlcf	??_frexp& (0+255),f,b
  3623  002C84  3766               	rlcf	(??_frexp+1)& (0+255),f,b
  3624  002C86  C063  FFD9         	movff	frexp@eptr,fsr2l
  3625  002C8A  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  3626  002C8E  C065  FFDE         	movff	??_frexp,postinc2
  3627  002C92  C066  FFDD         	movff	??_frexp+1,postdec2
  3628  002C96  0100               	movlb	0	; () banked
  3629  002C98  AF61               	btfss	(frexp@value+1)& (0+255),7,b
  3630  002C9A  D004               	goto	u3660
  3631  002C9C  0100               	movlb	0	; () banked
  3632  002C9E  6B65               	clrf	??_frexp& (0+255),b
  3633  002CA0  2B65               	incf	??_frexp& (0+255),f,b
  3634  002CA2  D002               	goto	u3668
  3635  002CA4                     u3660:
  3636  002CA4  0100               	movlb	0	; () banked
  3637  002CA6  6B65               	clrf	??_frexp& (0+255),b
  3638  002CA8                     u3668:
  3639  002CA8  0100               	movlb	0	; () banked
  3640  002CAA  5165               	movf	??_frexp& (0+255),w,b
  3641  002CAC  C063  FFD9         	movff	frexp@eptr,fsr2l
  3642  002CB0  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  3643  002CB4  12DE               	iorwf	postinc2,f,c
  3644  002CB6  0E00               	movlw	0
  3645  002CB8  12DD               	iorwf	postdec2,f,c
  3646                           
  3647                           ; BSR set to: 0
  3648  002CBA  C063  FFD9         	movff	frexp@eptr,fsr2l
  3649  002CBE  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  3650  002CC2  0E82               	movlw	130
  3651  002CC4  26DE               	addwf	postinc2,f,c
  3652  002CC6  0EFF               	movlw	255
  3653  002CC8  22DD               	addwfc	postdec2,f,c
  3654                           
  3655                           ; BSR set to: 0
  3656  002CCA  8162               	bsf	(frexp@value+2)& (0+255),0,b
  3657  002CCC  8362               	bsf	(frexp@value+2)& (0+255),1,b
  3658  002CCE  8562               	bsf	(frexp@value+2)& (0+255),2,b
  3659  002CD0  8762               	bsf	(frexp@value+2)& (0+255),3,b
  3660  002CD2  8962               	bsf	(frexp@value+2)& (0+255),4,b
  3661  002CD4  8B62               	bsf	(frexp@value+2)& (0+255),5,b
  3662  002CD6  9D62               	bcf	(frexp@value+2)& (0+255),6,b
  3663                           
  3664                           ; BSR set to: 0
  3665  002CD8  0100               	movlb	0	; () banked
  3666  002CDA  9F61               	bcf	(frexp@value+1)& (0+255),7,b
  3667  002CDC  D000               	goto	l1146
  3668  002CDE                     l1146:
  3669                           
  3670                           ; BSR set to: 0
  3671  002CDE  0012               	return		;funcret
  3672  002CE0                     __end_of_frexp:
  3673                           	opt stack 0
  3674                           tblptru	equ	0xFF8
  3675                           tblptrh	equ	0xFF7
  3676                           tblptrl	equ	0xFF6
  3677                           tablat	equ	0xFF5
  3678                           postinc0	equ	0xFEE
  3679                           plusw0	equ	0xFEB
  3680                           wreg	equ	0xFE8
  3681                           postinc1	equ	0xFE6
  3682                           postdec1	equ	0xFE5
  3683                           plusw1	equ	0xFE3
  3684                           fsr1h	equ	0xFE2
  3685                           fsr1l	equ	0xFE1
  3686                           postinc2	equ	0xFDE
  3687                           postdec2	equ	0xFDD
  3688                           fsr2h	equ	0xFDA
  3689                           fsr2l	equ	0xFD9
  3690                           status	equ	0xFD8
  3691                           
  3692 ;; *************** function ___altoft *****************
  3693 ;; Defined at:
  3694 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  c               4   80[BANK0 ] long 
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;  sign            1   89[BANK0 ] unsigned char 
  3699 ;;  exp             1   88[BANK0 ] unsigned char 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  3   80[BANK0 ] float 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2, status,0, cstack
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3709 ;;      Params:         0       4       0       0
  3710 ;;      Locals:         0       2       0       0
  3711 ;;      Temps:          0       4       0       0
  3712 ;;      Totals:         0      10       0       0
  3713 ;;Total ram usage:       10 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; Hardware stack levels required when called:    7
  3716 ;; This function calls:
  3717 ;;		___ftpack
  3718 ;; This function is called by:
  3719 ;;		_floor
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text9
  3724  002B1E                     __ptext9:
  3725                           	opt stack 0
  3726  002B1E                     ___altoft:
  3727                           	opt stack 18
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;incstack = 0
  3731  002B1E  0E00               	movlw	0
  3732  002B20  0100               	movlb	0	; () banked
  3733  002B22  6FB9               	movwf	___altoft@sign& (0+255),b
  3734  002B24  0E8E               	movlw	142
  3735  002B26  0100               	movlb	0	; () banked
  3736  002B28  6FB8               	movwf	___altoft@exp& (0+255),b
  3737                           
  3738                           ; BSR set to: 0
  3739  002B2A  0100               	movlb	0	; () banked
  3740  002B2C  AFB3               	btfss	(___altoft@c+3)& (0+255),7,b
  3741  002B2E  D016               	goto	l3606
  3742                           
  3743                           ; BSR set to: 0
  3744  002B30  0100               	movlb	0	; () banked
  3745  002B32  1FB3               	comf	(___altoft@c+3)& (0+255),f,b
  3746  002B34  1FB2               	comf	(___altoft@c+2)& (0+255),f,b
  3747  002B36  1FB1               	comf	(___altoft@c+1)& (0+255),f,b
  3748  002B38  6DB0               	negf	___altoft@c& (0+255),b
  3749  002B3A  0E00               	movlw	0
  3750  002B3C  23B1               	addwfc	(___altoft@c+1)& (0+255),f,b
  3751  002B3E  23B2               	addwfc	(___altoft@c+2)& (0+255),f,b
  3752  002B40  23B3               	addwfc	(___altoft@c+3)& (0+255),f,b
  3753                           
  3754                           ; BSR set to: 0
  3755  002B42  0E01               	movlw	1
  3756  002B44  0100               	movlb	0	; () banked
  3757  002B46  6FB9               	movwf	___altoft@sign& (0+255),b
  3758                           
  3759                           ; BSR set to: 0
  3760  002B48  D009               	goto	l3606
  3761  002B4A                     l3604:
  3762                           
  3763                           ; BSR set to: 0
  3764  002B4A  0100               	movlb	0	; () banked
  3765  002B4C  90D8               	bcf	status,0,c
  3766  002B4E  33B3               	rrcf	(___altoft@c+3)& (0+255),f,b
  3767  002B50  33B2               	rrcf	(___altoft@c+2)& (0+255),f,b
  3768  002B52  33B1               	rrcf	(___altoft@c+1)& (0+255),f,b
  3769  002B54  33B0               	rrcf	___altoft@c& (0+255),f,b
  3770  002B56  0100               	movlb	0	; () banked
  3771  002B58  2BB8               	incf	___altoft@exp& (0+255),f,b
  3772  002B5A  D000               	goto	l3606
  3773  002B5C                     l3606:
  3774                           
  3775                           ; BSR set to: 0
  3776  002B5C  0E00               	movlw	0
  3777  002B5E  0100               	movlb	0	; () banked
  3778  002B60  15B0               	andwf	___altoft@c& (0+255),w,b
  3779  002B62  0100               	movlb	0	; () banked
  3780  002B64  6FB4               	movwf	??___altoft& (0+255),b
  3781  002B66  0E00               	movlw	0
  3782  002B68  0100               	movlb	0	; () banked
  3783  002B6A  15B1               	andwf	(___altoft@c+1)& (0+255),w,b
  3784  002B6C  0100               	movlb	0	; () banked
  3785  002B6E  6FB5               	movwf	(??___altoft+1)& (0+255),b
  3786  002B70  0E00               	movlw	0
  3787  002B72  0100               	movlb	0	; () banked
  3788  002B74  15B2               	andwf	(___altoft@c+2)& (0+255),w,b
  3789  002B76  0100               	movlb	0	; () banked
  3790  002B78  6FB6               	movwf	(??___altoft+2)& (0+255),b
  3791  002B7A  0EFF               	movlw	255
  3792  002B7C  0100               	movlb	0	; () banked
  3793  002B7E  15B3               	andwf	(___altoft@c+3)& (0+255),w,b
  3794  002B80  0100               	movlb	0	; () banked
  3795  002B82  6FB7               	movwf	(??___altoft+3)& (0+255),b
  3796  002B84  0100               	movlb	0	; () banked
  3797  002B86  51B4               	movf	??___altoft& (0+255),w,b
  3798  002B88  0100               	movlb	0	; () banked
  3799  002B8A  11B5               	iorwf	(??___altoft+1)& (0+255),w,b
  3800  002B8C  0100               	movlb	0	; () banked
  3801  002B8E  11B6               	iorwf	(??___altoft+2)& (0+255),w,b
  3802  002B90  0100               	movlb	0	; () banked
  3803  002B92  11B7               	iorwf	(??___altoft+3)& (0+255),w,b
  3804  002B94  A4D8               	btfss	status,2,c
  3805  002B96  D7D9               	goto	l3604
  3806                           
  3807                           ; BSR set to: 0
  3808                           
  3809                           ; BSR set to: 0
  3810  002B98  C0B0  F060         	movff	___altoft@c,___ftpack@arg
  3811  002B9C  C0B1  F061         	movff	___altoft@c+1,___ftpack@arg+1
  3812  002BA0  C0B2  F062         	movff	___altoft@c+2,___ftpack@arg+2
  3813  002BA4  C0B8  F063         	movff	___altoft@exp,___ftpack@exp
  3814  002BA8  C0B9  F064         	movff	___altoft@sign,___ftpack@sign
  3815  002BAC  ECF0  F011         	call	___ftpack	;wreg free
  3816  002BB0  C060  F0B0         	movff	?___ftpack,?___altoft
  3817  002BB4  C061  F0B1         	movff	?___ftpack+1,?___altoft+1
  3818  002BB8  C062  F0B2         	movff	?___ftpack+2,?___altoft+2
  3819  002BBC  D000               	goto	l638
  3820  002BBE                     l638:
  3821  002BBE  0012               	return		;funcret
  3822  002BC0                     __end_of___altoft:
  3823                           	opt stack 0
  3824                           tblptru	equ	0xFF8
  3825                           tblptrh	equ	0xFF7
  3826                           tblptrl	equ	0xFF6
  3827                           tablat	equ	0xFF5
  3828                           postinc0	equ	0xFEE
  3829                           plusw0	equ	0xFEB
  3830                           wreg	equ	0xFE8
  3831                           postinc1	equ	0xFE6
  3832                           postdec1	equ	0xFE5
  3833                           plusw1	equ	0xFE3
  3834                           fsr1h	equ	0xFE2
  3835                           fsr1l	equ	0xFE1
  3836                           postinc2	equ	0xFDE
  3837                           postdec2	equ	0xFDD
  3838                           fsr2h	equ	0xFDA
  3839                           fsr2l	equ	0xFD9
  3840                           status	equ	0xFD8
  3841                           
  3842 ;; *************** function _eval_poly *****************
  3843 ;; Defined at:
  3844 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\evalpoly.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;  x               3   38[BANK0 ] float 
  3847 ;;  d               2   41[BANK0 ] PTR const 
  3848 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), 
  3849 ;;  n               2   43[BANK0 ] int 
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;  res             3   47[BANK0 ] int 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  3   38[BANK0 ] int 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3861 ;;      Params:         0       7       0       0
  3862 ;;      Locals:         0       3       0       0
  3863 ;;      Temps:          0       2       0       0
  3864 ;;      Totals:         0      12       0       0
  3865 ;;Total ram usage:       12 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    8
  3868 ;; This function calls:
  3869 ;;		___ftadd
  3870 ;;		___ftmul
  3871 ;;		___wmul
  3872 ;; This function is called by:
  3873 ;;		_sin
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text10
  3878  0026F8                     __ptext10:
  3879                           	opt stack 0
  3880  0026F8                     _eval_poly:
  3881                           	opt stack 18
  3882                           
  3883                           ;incstack = 0
  3884  0026F8  C08B  F060         	movff	eval_poly@n,___wmul@multiplier
  3885  0026FC  C08C  F061         	movff	eval_poly@n+1,___wmul@multiplier+1
  3886  002700  0E00               	movlw	0
  3887  002702  0100               	movlb	0	; () banked
  3888  002704  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3889  002706  0E03               	movlw	3
  3890  002708  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3891  00270A  EC47  F01A         	call	___wmul	;wreg free
  3892  00270E  C089  F08D         	movff	eval_poly@d,??_eval_poly
  3893  002712  C08A  F08E         	movff	eval_poly@d+1,??_eval_poly+1
  3894  002716  0100               	movlb	0	; () banked
  3895  002718  5160               	movf	?___wmul& (0+255),w,b
  3896  00271A  0100               	movlb	0	; () banked
  3897  00271C  278D               	addwf	??_eval_poly& (0+255),f,b
  3898  00271E  0100               	movlb	0	; () banked
  3899  002720  5161               	movf	(?___wmul+1)& (0+255),w,b
  3900  002722  0100               	movlb	0	; () banked
  3901  002724  238E               	addwfc	(??_eval_poly+1)& (0+255),f,b
  3902  002726  C08D  FFF6         	movff	??_eval_poly,tblptrl
  3903  00272A  C08E  FFF7         	movff	??_eval_poly+1,tblptrh
  3904  00272E                     	if	0	;tblptru may be non-zero
  3905  00272E                     	endif
  3906  00272E                     	if	0	;tblptru may be non-zero
  3907  00272E                     	endif
  3908  00272E  0009               	tblrd		*+
  3909  002730  CFF5 F08F          	movff	tablat,eval_poly@res
  3910  002734  0009               	tblrd		*+
  3911  002736  CFF5 F090          	movff	tablat,eval_poly@res+1
  3912  00273A  000A               	tblrd		*-
  3913  00273C  CFF5 F091          	movff	tablat,eval_poly@res+2
  3914  002740  D045               	goto	l3896
  3915  002742                     l3894:
  3916                           
  3917                           ; BSR set to: 0
  3918  002742  C08F  F06B         	movff	eval_poly@res,___ftmul@f2
  3919  002746  C090  F06C         	movff	eval_poly@res+1,___ftmul@f2+1
  3920  00274A  C091  F06D         	movff	eval_poly@res+2,___ftmul@f2+2
  3921  00274E  C086  F068         	movff	eval_poly@x,___ftmul@f1
  3922  002752  C087  F069         	movff	eval_poly@x+1,___ftmul@f1+1
  3923  002756  C088  F06A         	movff	eval_poly@x+2,___ftmul@f1+2
  3924  00275A  EC08  F010         	call	___ftmul	;wreg free
  3925  00275E  C068  F07A         	movff	?___ftmul,___ftadd@f1
  3926  002762  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  3927  002766  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  3928  00276A  0E00               	movlw	0
  3929  00276C  0100               	movlb	0	; () banked
  3930  00276E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3931  002770  0E03               	movlw	3
  3932  002772  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3933  002774  0100               	movlb	0	; () banked
  3934  002776  078B               	decf	eval_poly@n& (0+255),f,b
  3935  002778  A0D8               	btfss	status,0,c
  3936  00277A  078C               	decf	(eval_poly@n+1)& (0+255),f,b
  3937  00277C  C08B  F060         	movff	eval_poly@n,___wmul@multiplier
  3938  002780  C08C  F061         	movff	eval_poly@n+1,___wmul@multiplier+1
  3939  002784  EC47  F01A         	call	___wmul	;wreg free
  3940  002788  C089  F08D         	movff	eval_poly@d,??_eval_poly
  3941  00278C  C08A  F08E         	movff	eval_poly@d+1,??_eval_poly+1
  3942  002790  0100               	movlb	0	; () banked
  3943  002792  5160               	movf	?___wmul& (0+255),w,b
  3944  002794  0100               	movlb	0	; () banked
  3945  002796  278D               	addwf	??_eval_poly& (0+255),f,b
  3946  002798  0100               	movlb	0	; () banked
  3947  00279A  5161               	movf	(?___wmul+1)& (0+255),w,b
  3948  00279C  0100               	movlb	0	; () banked
  3949  00279E  238E               	addwfc	(??_eval_poly+1)& (0+255),f,b
  3950  0027A0  C08D  FFF6         	movff	??_eval_poly,tblptrl
  3951  0027A4  C08E  FFF7         	movff	??_eval_poly+1,tblptrh
  3952  0027A8                     	if	0	;tblptru may be non-zero
  3953  0027A8                     	endif
  3954  0027A8                     	if	0	;tblptru may be non-zero
  3955  0027A8                     	endif
  3956  0027A8  0009               	tblrd		*+
  3957  0027AA  CFF5 F07D          	movff	tablat,___ftadd@f2
  3958  0027AE  0009               	tblrd		*+
  3959  0027B0  CFF5 F07E          	movff	tablat,___ftadd@f2+1
  3960  0027B4  000A               	tblrd		*-
  3961  0027B6  CFF5 F07F          	movff	tablat,___ftadd@f2+2
  3962  0027BA  ECE7  F00D         	call	___ftadd	;wreg free
  3963  0027BE  C07A  F08F         	movff	?___ftadd,eval_poly@res
  3964  0027C2  C07B  F090         	movff	?___ftadd+1,eval_poly@res+1
  3965  0027C6  C07C  F091         	movff	?___ftadd+2,eval_poly@res+2
  3966  0027CA  D000               	goto	l3896
  3967  0027CC                     l3896:
  3968  0027CC  0100               	movlb	0	; () banked
  3969  0027CE  518B               	movf	eval_poly@n& (0+255),w,b
  3970  0027D0  0100               	movlb	0	; () banked
  3971  0027D2  118C               	iorwf	(eval_poly@n+1)& (0+255),w,b
  3972  0027D4  A4D8               	btfss	status,2,c
  3973  0027D6  D7B5               	goto	l3894
  3974                           
  3975                           ; BSR set to: 0
  3976  0027D8  C08F  F086         	movff	eval_poly@res,?_eval_poly
  3977  0027DC  C090  F087         	movff	eval_poly@res+1,?_eval_poly+1
  3978  0027E0  C091  F088         	movff	eval_poly@res+2,?_eval_poly+2
  3979                           
  3980                           ; BSR set to: 0
  3981  0027E4  0012               	return		;funcret
  3982  0027E6                     __end_of_eval_poly:
  3983                           	opt stack 0
  3984                           tblptru	equ	0xFF8
  3985                           tblptrh	equ	0xFF7
  3986                           tblptrl	equ	0xFF6
  3987                           tablat	equ	0xFF5
  3988                           postinc0	equ	0xFEE
  3989                           plusw0	equ	0xFEB
  3990                           wreg	equ	0xFE8
  3991                           postinc1	equ	0xFE6
  3992                           postdec1	equ	0xFE5
  3993                           plusw1	equ	0xFE3
  3994                           fsr1h	equ	0xFE2
  3995                           fsr1l	equ	0xFE1
  3996                           postinc2	equ	0xFDE
  3997                           postdec2	equ	0xFDD
  3998                           fsr2h	equ	0xFDA
  3999                           fsr2l	equ	0xFD9
  4000                           status	equ	0xFD8
  4001                           
  4002 ;; *************** function _conversion_degre_radian *****************
  4003 ;; Defined at:
  4004 ;;		line 76 in file "triangulation.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;  angle           3   65[BANK0 ] int 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;		None
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  3   65[BANK0 ] int 
  4011 ;; Registers used:
  4012 ;;		wreg, status,2, status,0, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4018 ;;      Params:         0       3       0       0
  4019 ;;      Locals:         0       0       0       0
  4020 ;;      Temps:          0       0       0       0
  4021 ;;      Totals:         0       3       0       0
  4022 ;;Total ram usage:        3 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:    8
  4025 ;; This function calls:
  4026 ;;		___ftdiv
  4027 ;;		___ftmul
  4028 ;; This function is called by:
  4029 ;;		_cotangeante
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text11
  4034  00318C                     __ptext11:
  4035                           	opt stack 0
  4036  00318C                     _conversion_degre_radian:
  4037                           	opt stack 20
  4038                           
  4039                           ;triangulation.c: 78: return ((angle / 180.) * 3.14159265);
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;incstack = 0
  4043  00318C  0E00               	movlw	0
  4044  00318E  0100               	movlb	0	; () banked
  4045  003190  6F95               	movwf	___ftdiv@f2& (0+255),b
  4046  003192  0E34               	movlw	52
  4047  003194  0100               	movlb	0	; () banked
  4048  003196  6F96               	movwf	(___ftdiv@f2+1)& (0+255),b
  4049  003198  0E43               	movlw	67
  4050  00319A  0100               	movlb	0	; () banked
  4051  00319C  6F97               	movwf	(___ftdiv@f2+2)& (0+255),b
  4052  00319E  C0A1  F092         	movff	conversion_degre_radian@angle,___ftdiv@f1
  4053  0031A2  C0A2  F093         	movff	conversion_degre_radian@angle+1,___ftdiv@f1+1
  4054  0031A6  C0A3  F094         	movff	conversion_degre_radian@angle+2,___ftdiv@f1+2
  4055  0031AA  ECB6  F010         	call	___ftdiv	;wreg free
  4056  0031AE  C092  F068         	movff	?___ftdiv,___ftmul@f1
  4057  0031B2  C093  F069         	movff	?___ftdiv+1,___ftmul@f1+1
  4058  0031B6  C094  F06A         	movff	?___ftdiv+2,___ftmul@f1+2
  4059  0031BA  0E10               	movlw	16
  4060  0031BC  0100               	movlb	0	; () banked
  4061  0031BE  6F6B               	movwf	___ftmul@f2& (0+255),b
  4062  0031C0  0E49               	movlw	73
  4063  0031C2  0100               	movlb	0	; () banked
  4064  0031C4  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  4065  0031C6  0E40               	movlw	64
  4066  0031C8  0100               	movlb	0	; () banked
  4067  0031CA  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  4068  0031CC  EC08  F010         	call	___ftmul	;wreg free
  4069  0031D0  C068  F0A1         	movff	?___ftmul,?_conversion_degre_radian
  4070  0031D4  C069  F0A2         	movff	?___ftmul+1,?_conversion_degre_radian+1
  4071  0031D8  C06A  F0A3         	movff	?___ftmul+2,?_conversion_degre_radian+2
  4072  0031DC  D000               	goto	l518
  4073  0031DE                     l518:
  4074  0031DE  0012               	return		;funcret
  4075  0031E0                     __end_of_conversion_degre_radian:
  4076                           	opt stack 0
  4077                           tblptru	equ	0xFF8
  4078                           tblptrh	equ	0xFF7
  4079                           tblptrl	equ	0xFF6
  4080                           tablat	equ	0xFF5
  4081                           postinc0	equ	0xFEE
  4082                           plusw0	equ	0xFEB
  4083                           wreg	equ	0xFE8
  4084                           postinc1	equ	0xFE6
  4085                           postdec1	equ	0xFE5
  4086                           plusw1	equ	0xFE3
  4087                           fsr1h	equ	0xFE2
  4088                           fsr1l	equ	0xFE1
  4089                           postinc2	equ	0xFDE
  4090                           postdec2	equ	0xFDD
  4091                           fsr2h	equ	0xFDA
  4092                           fsr2l	equ	0xFD9
  4093                           status	equ	0xFD8
  4094                           
  4095 ;; *************** function _obtention_angle *****************
  4096 ;; Defined at:
  4097 ;;		line 141 in file "moteur.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  position        2   65[BANK0 ] unsigned int 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  angle           3   68[BANK0 ] unsigned int 
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  3   65[BANK0 ] unsigned int 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2, status,0, cstack
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4111 ;;      Params:         0       3       0       0
  4112 ;;      Locals:         0       3       0       0
  4113 ;;      Temps:          0       0       0       0
  4114 ;;      Totals:         0       6       0       0
  4115 ;;Total ram usage:        6 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; Hardware stack levels required when called:    8
  4118 ;; This function calls:
  4119 ;;		___ftdiv
  4120 ;;		___ftmul
  4121 ;;		___lwtoft
  4122 ;; This function is called by:
  4123 ;;		_main
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text12
  4128  002EFE                     __ptext12:
  4129                           	opt stack 0
  4130  002EFE                     _obtention_angle:
  4131                           	opt stack 22
  4132                           
  4133                           ;moteur.c: 143: double angle;
  4134                           ;moteur.c: 144: angle = (double) ((position) / 7999.);
  4135                           
  4136                           ;incstack = 0
  4137  002EFE  C0A1  F068         	movff	obtention_angle@position,___lwtoft@c
  4138  002F02  C0A2  F069         	movff	obtention_angle@position+1,___lwtoft@c+1
  4139  002F06  EC7B  F01A         	call	___lwtoft	;wreg free
  4140  002F0A  C068  F092         	movff	?___lwtoft,___ftdiv@f1
  4141  002F0E  C069  F093         	movff	?___lwtoft+1,___ftdiv@f1+1
  4142  002F12  C06A  F094         	movff	?___lwtoft+2,___ftdiv@f1+2
  4143  002F16  0EF8               	movlw	248
  4144  002F18  0100               	movlb	0	; () banked
  4145  002F1A  6F95               	movwf	___ftdiv@f2& (0+255),b
  4146  002F1C  0EF9               	movlw	249
  4147  002F1E  0100               	movlb	0	; () banked
  4148  002F20  6F96               	movwf	(___ftdiv@f2+1)& (0+255),b
  4149  002F22  0E45               	movlw	69
  4150  002F24  0100               	movlb	0	; () banked
  4151  002F26  6F97               	movwf	(___ftdiv@f2+2)& (0+255),b
  4152  002F28  ECB6  F010         	call	___ftdiv	;wreg free
  4153  002F2C  C092  F0A4         	movff	?___ftdiv,obtention_angle@angle
  4154  002F30  C093  F0A5         	movff	?___ftdiv+1,obtention_angle@angle+1
  4155  002F34  C094  F0A6         	movff	?___ftdiv+2,obtention_angle@angle+2
  4156                           
  4157                           ;moteur.c: 145: angle *= 360;
  4158  002F38  C0A4  F068         	movff	obtention_angle@angle,___ftmul@f1
  4159  002F3C  C0A5  F069         	movff	obtention_angle@angle+1,___ftmul@f1+1
  4160  002F40  C0A6  F06A         	movff	obtention_angle@angle+2,___ftmul@f1+2
  4161  002F44  0E00               	movlw	0
  4162  002F46  0100               	movlb	0	; () banked
  4163  002F48  6F6B               	movwf	___ftmul@f2& (0+255),b
  4164  002F4A  0EB4               	movlw	180
  4165  002F4C  0100               	movlb	0	; () banked
  4166  002F4E  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  4167  002F50  0E43               	movlw	67
  4168  002F52  0100               	movlb	0	; () banked
  4169  002F54  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  4170  002F56  EC08  F010         	call	___ftmul	;wreg free
  4171  002F5A  C068  F0A4         	movff	?___ftmul,obtention_angle@angle
  4172  002F5E  C069  F0A5         	movff	?___ftmul+1,obtention_angle@angle+1
  4173  002F62  C06A  F0A6         	movff	?___ftmul+2,obtention_angle@angle+2
  4174                           
  4175                           ;moteur.c: 146: return angle;
  4176  002F66  C0A4  F0A1         	movff	obtention_angle@angle,?_obtention_angle
  4177  002F6A  C0A5  F0A2         	movff	obtention_angle@angle+1,?_obtention_angle+1
  4178  002F6E  C0A6  F0A3         	movff	obtention_angle@angle+2,?_obtention_angle+2
  4179  002F72  D000               	goto	l484
  4180  002F74                     l484:
  4181  002F74  0012               	return		;funcret
  4182  002F76                     __end_of_obtention_angle:
  4183                           	opt stack 0
  4184                           tblptru	equ	0xFF8
  4185                           tblptrh	equ	0xFF7
  4186                           tblptrl	equ	0xFF6
  4187                           tablat	equ	0xFF5
  4188                           postinc0	equ	0xFEE
  4189                           plusw0	equ	0xFEB
  4190                           wreg	equ	0xFE8
  4191                           postinc1	equ	0xFE6
  4192                           postdec1	equ	0xFE5
  4193                           plusw1	equ	0xFE3
  4194                           fsr1h	equ	0xFE2
  4195                           fsr1l	equ	0xFE1
  4196                           postinc2	equ	0xFDE
  4197                           postdec2	equ	0xFDD
  4198                           fsr2h	equ	0xFDA
  4199                           fsr2l	equ	0xFD9
  4200                           status	equ	0xFD8
  4201                           
  4202 ;; *************** function ___lwtoft *****************
  4203 ;; Defined at:
  4204 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;  c               2    8[BANK0 ] unsigned int 
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;		None
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  3    8[BANK0 ] float 
  4211 ;; Registers used:
  4212 ;;		wreg, status,2, status,0, cstack
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4218 ;;      Params:         0       3       0       0
  4219 ;;      Locals:         0       0       0       0
  4220 ;;      Temps:          0       0       0       0
  4221 ;;      Totals:         0       3       0       0
  4222 ;;Total ram usage:        3 bytes
  4223 ;; Hardware stack levels used:    1
  4224 ;; Hardware stack levels required when called:    7
  4225 ;; This function calls:
  4226 ;;		___ftpack
  4227 ;; This function is called by:
  4228 ;;		_obtention_angle
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text13
  4233  0034F6                     __ptext13:
  4234                           	opt stack 0
  4235  0034F6                     ___lwtoft:
  4236                           	opt stack 22
  4237                           
  4238                           ;incstack = 0
  4239  0034F6  C068  F060         	movff	___lwtoft@c,___ftpack@arg
  4240  0034FA  C069  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
  4241  0034FE  0100               	movlb	0	; () banked
  4242  003500  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  4243  003502  0E8E               	movlw	142
  4244  003504  0100               	movlb	0	; () banked
  4245  003506  6F63               	movwf	___ftpack@exp& (0+255),b
  4246  003508  0E00               	movlw	0
  4247  00350A  0100               	movlb	0	; () banked
  4248  00350C  6F64               	movwf	___ftpack@sign& (0+255),b
  4249  00350E  ECF0  F011         	call	___ftpack	;wreg free
  4250  003512  C060  F068         	movff	?___ftpack,?___lwtoft
  4251  003516  C061  F069         	movff	?___ftpack+1,?___lwtoft+1
  4252  00351A  C062  F06A         	movff	?___ftpack+2,?___lwtoft+2
  4253  00351E  D000               	goto	l1086
  4254  003520                     l1086:
  4255  003520  0012               	return		;funcret
  4256  003522                     __end_of___lwtoft:
  4257                           	opt stack 0
  4258                           tblptru	equ	0xFF8
  4259                           tblptrh	equ	0xFF7
  4260                           tblptrl	equ	0xFF6
  4261                           tablat	equ	0xFF5
  4262                           postinc0	equ	0xFEE
  4263                           plusw0	equ	0xFEB
  4264                           wreg	equ	0xFE8
  4265                           postinc1	equ	0xFE6
  4266                           postdec1	equ	0xFE5
  4267                           plusw1	equ	0xFE3
  4268                           fsr1h	equ	0xFE2
  4269                           fsr1l	equ	0xFE1
  4270                           postinc2	equ	0xFDE
  4271                           postdec2	equ	0xFDD
  4272                           fsr2h	equ	0xFDA
  4273                           fsr2l	equ	0xFD9
  4274                           status	equ	0xFD8
  4275                           
  4276 ;; *************** function _init_system *****************
  4277 ;; Defined at:
  4278 ;;		line 22 in file "system.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;		None
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;		None
  4283 ;; Return value:  Size  Location     Type
  4284 ;;		None               void
  4285 ;; Registers used:
  4286 ;;		wreg, status,2, cstack
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4292 ;;      Params:         0       0       0       0
  4293 ;;      Locals:         0       0       0       0
  4294 ;;      Temps:          0       0       0       0
  4295 ;;      Totals:         0       0       0       0
  4296 ;;Total ram usage:        0 bytes
  4297 ;; Hardware stack levels used:    1
  4298 ;; Hardware stack levels required when called:    8
  4299 ;; This function calls:
  4300 ;;		_ConfigInterrupt
  4301 ;;		_ConfigPorts
  4302 ;;		_config_QEI
  4303 ;;		_config_pwm
  4304 ;;		_config_uart
  4305 ;;		_init_capteur
  4306 ;;		_init_timer_0
  4307 ;;		_init_uart_logiciel
  4308 ;;		_init_uart_reception
  4309 ;; This function is called by:
  4310 ;;		_main
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           	psect	text14
  4315  003522                     __ptext14:
  4316                           	opt stack 0
  4317  003522                     _init_system:
  4318                           	opt stack 22
  4319                           
  4320                           ;system.c: 25: ConfigPorts();
  4321                           
  4322                           ;incstack = 0
  4323  003522  EC70  F016         	call	_ConfigPorts	;wreg free
  4324                           
  4325                           ;system.c: 26: ConfigInterrupt();
  4326  003526  ECB7  F016         	call	_ConfigInterrupt	;wreg free
  4327                           
  4328                           ;system.c: 27: init_timer_0();
  4329  00352A  ECE7  F01A         	call	_init_timer_0	;wreg free
  4330                           
  4331                           ;system.c: 28: init_uart_logiciel();
  4332  00352E  EC0A  F01B         	call	_init_uart_logiciel	;wreg free
  4333                           
  4334                           ;system.c: 29: init_uart_reception();
  4335  003532  EC00  F01B         	call	_init_uart_reception	;wreg free
  4336                           
  4337                           ;system.c: 30: config_uart ();
  4338  003536  ECD9  F01A         	call	_config_uart	;wreg free
  4339                           
  4340                           ;system.c: 31: config_pwm();
  4341  00353A  EC62  F019         	call	_config_pwm	;wreg free
  4342                           
  4343                           ;system.c: 32: config_QEI();
  4344  00353E  EC2B  F01A         	call	_config_QEI	;wreg free
  4345                           
  4346                           ;system.c: 35: init_capteur();
  4347  003542  ECBB  F017         	call	_init_capteur	;wreg free
  4348  003546  0012               	return		;funcret
  4349  003548                     __end_of_init_system:
  4350                           	opt stack 0
  4351                           tblptru	equ	0xFF8
  4352                           tblptrh	equ	0xFF7
  4353                           tblptrl	equ	0xFF6
  4354                           tablat	equ	0xFF5
  4355                           postinc0	equ	0xFEE
  4356                           plusw0	equ	0xFEB
  4357                           wreg	equ	0xFE8
  4358                           postinc1	equ	0xFE6
  4359                           postdec1	equ	0xFE5
  4360                           plusw1	equ	0xFE3
  4361                           fsr1h	equ	0xFE2
  4362                           fsr1l	equ	0xFE1
  4363                           postinc2	equ	0xFDE
  4364                           postdec2	equ	0xFDD
  4365                           fsr2h	equ	0xFDA
  4366                           fsr2l	equ	0xFD9
  4367                           status	equ	0xFD8
  4368                           
  4369 ;; *************** function _init_uart_reception *****************
  4370 ;; Defined at:
  4371 ;;		line 72 in file "uart.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;		None
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;		None
  4376 ;; Return value:  Size  Location     Type
  4377 ;;		None               void
  4378 ;; Registers used:
  4379 ;;		wreg, status,2
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4385 ;;      Params:         0       0       0       0
  4386 ;;      Locals:         0       0       0       0
  4387 ;;      Temps:          0       0       0       0
  4388 ;;      Totals:         0       0       0       0
  4389 ;;Total ram usage:        0 bytes
  4390 ;; Hardware stack levels used:    1
  4391 ;; Hardware stack levels required when called:    6
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		_init_system
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           	psect	text15
  4400  003600                     __ptext15:
  4401                           	opt stack 0
  4402  003600                     _init_uart_reception:
  4403                           	opt stack 23
  4404                           
  4405                           ;uart.c: 74: uart_reception.buffer_plein = 0;
  4406                           
  4407                           ;incstack = 0
  4408  003600  0E00               	movlw	0
  4409  003602  0101               	movlb	1	; () banked
  4410  003604  6F65               	movwf	(_uart_reception+101)& (0+255),b
  4411                           
  4412                           ;uart.c: 75: uart_reception.buffer_vide = 1;
  4413  003606  0E01               	movlw	1
  4414  003608  0101               	movlb	1	; () banked
  4415  00360A  6F66               	movwf	(_uart_reception+102)& (0+255),b
  4416                           
  4417                           ;uart.c: 76: uart_reception.indice = 0;
  4418  00360C  0E00               	movlw	0
  4419  00360E  0101               	movlb	1	; () banked
  4420  003610  6F64               	movwf	(_uart_reception+100)& (0+255),b
  4421                           
  4422                           ; BSR set to: 1
  4423  003612  0012               	return		;funcret
  4424  003614                     __end_of_init_uart_reception:
  4425                           	opt stack 0
  4426                           tblptru	equ	0xFF8
  4427                           tblptrh	equ	0xFF7
  4428                           tblptrl	equ	0xFF6
  4429                           tablat	equ	0xFF5
  4430                           postinc0	equ	0xFEE
  4431                           plusw0	equ	0xFEB
  4432                           wreg	equ	0xFE8
  4433                           postinc1	equ	0xFE6
  4434                           postdec1	equ	0xFE5
  4435                           plusw1	equ	0xFE3
  4436                           fsr1h	equ	0xFE2
  4437                           fsr1l	equ	0xFE1
  4438                           postinc2	equ	0xFDE
  4439                           postdec2	equ	0xFDD
  4440                           fsr2h	equ	0xFDA
  4441                           fsr2l	equ	0xFD9
  4442                           status	equ	0xFD8
  4443                           
  4444 ;; *************** function _init_uart_logiciel *****************
  4445 ;; Defined at:
  4446 ;;		line 65 in file "uart.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;		None
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;		None
  4451 ;; Return value:  Size  Location     Type
  4452 ;;		None               void
  4453 ;; Registers used:
  4454 ;;		wreg, status,2, cstack
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4460 ;;      Params:         0       0       0       0
  4461 ;;      Locals:         0       0       0       0
  4462 ;;      Temps:          0       0       0       0
  4463 ;;      Totals:         0       0       0       0
  4464 ;;Total ram usage:        0 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:    7
  4467 ;; This function calls:
  4468 ;;		_init_timer_1
  4469 ;; This function is called by:
  4470 ;;		_init_system
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           	psect	text16
  4475  003614                     __ptext16:
  4476                           	opt stack 0
  4477  003614                     _init_uart_logiciel:
  4478                           	opt stack 22
  4479                           
  4480                           ;uart.c: 67: uart_logiciel.transmission_en_cours = 0;
  4481                           
  4482                           ; BSR set to: 1
  4483                           ;incstack = 0
  4484  003614  0E00               	movlw	0
  4485  003616  6E33               	movwf	_uart_logiciel+11,c
  4486                           
  4487                           ;uart.c: 68: uart_logiciel.indice = 0;
  4488  003618  0E00               	movlw	0
  4489  00361A  6E34               	movwf	_uart_logiciel+12,c
  4490                           
  4491                           ;uart.c: 69: init_timer_1();
  4492  00361C  ECF4  F01A         	call	_init_timer_1	;wreg free
  4493  003620  0012               	return		;funcret
  4494  003622                     __end_of_init_uart_logiciel:
  4495                           	opt stack 0
  4496                           tblptru	equ	0xFF8
  4497                           tblptrh	equ	0xFF7
  4498                           tblptrl	equ	0xFF6
  4499                           tablat	equ	0xFF5
  4500                           postinc0	equ	0xFEE
  4501                           plusw0	equ	0xFEB
  4502                           wreg	equ	0xFE8
  4503                           postinc1	equ	0xFE6
  4504                           postdec1	equ	0xFE5
  4505                           plusw1	equ	0xFE3
  4506                           fsr1h	equ	0xFE2
  4507                           fsr1l	equ	0xFE1
  4508                           postinc2	equ	0xFDE
  4509                           postdec2	equ	0xFDD
  4510                           fsr2h	equ	0xFDA
  4511                           fsr2l	equ	0xFD9
  4512                           status	equ	0xFD8
  4513                           
  4514 ;; *************** function _init_timer_1 *****************
  4515 ;; Defined at:
  4516 ;;		line 58 in file "system.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;		None
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;		None
  4521 ;; Return value:  Size  Location     Type
  4522 ;;		None               void
  4523 ;; Registers used:
  4524 ;;		wreg, status,2
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4530 ;;      Params:         0       0       0       0
  4531 ;;      Locals:         0       0       0       0
  4532 ;;      Temps:          0       0       0       0
  4533 ;;      Totals:         0       0       0       0
  4534 ;;Total ram usage:        0 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    6
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_init_uart_logiciel
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text17
  4545  0035E8                     __ptext17:
  4546                           	opt stack 0
  4547  0035E8                     _init_timer_1:
  4548                           	opt stack 22
  4549                           
  4550                           ;system.c: 60: T1CONbits.RD16 = 1;
  4551                           
  4552                           ;incstack = 0
  4553  0035E8  8ECD               	bsf	4045,7,c	;volatile
  4554                           
  4555                           ;system.c: 61: T1CONbits.T1RUN = 0;
  4556  0035EA  9CCD               	bcf	4045,6,c	;volatile
  4557                           
  4558                           ;system.c: 62: T1CONbits.TMR1CS = 0;
  4559  0035EC  92CD               	bcf	4045,1,c	;volatile
  4560                           
  4561                           ;system.c: 63: T1CONbits.T1OSCEN = 1;
  4562  0035EE  86CD               	bsf	4045,3,c	;volatile
  4563                           
  4564                           ;system.c: 64: T1CONbits.T1CKPS0 = 0;
  4565  0035F0  98CD               	bcf	4045,4,c	;volatile
  4566                           
  4567                           ;system.c: 65: T1CONbits.T1CKPS1 = 0;
  4568  0035F2  9ACD               	bcf	4045,5,c	;volatile
  4569                           
  4570                           ;system.c: 67: TMR1 = 65519;
  4571  0035F4  0EFF               	movlw	255
  4572  0035F6  6ECF               	movwf	4047,c	;volatile
  4573  0035F8  0EEF               	movlw	239
  4574  0035FA  6ECE               	movwf	4046,c	;volatile
  4575                           
  4576                           ;system.c: 70: TMR1ON = 1;
  4577  0035FC  80CD               	bsf	4045,0,c	;volatile
  4578  0035FE  0012               	return		;funcret
  4579  003600                     __end_of_init_timer_1:
  4580                           	opt stack 0
  4581                           tblptru	equ	0xFF8
  4582                           tblptrh	equ	0xFF7
  4583                           tblptrl	equ	0xFF6
  4584                           tablat	equ	0xFF5
  4585                           postinc0	equ	0xFEE
  4586                           plusw0	equ	0xFEB
  4587                           wreg	equ	0xFE8
  4588                           postinc1	equ	0xFE6
  4589                           postdec1	equ	0xFE5
  4590                           plusw1	equ	0xFE3
  4591                           fsr1h	equ	0xFE2
  4592                           fsr1l	equ	0xFE1
  4593                           postinc2	equ	0xFDE
  4594                           postdec2	equ	0xFDD
  4595                           fsr2h	equ	0xFDA
  4596                           fsr2l	equ	0xFD9
  4597                           status	equ	0xFD8
  4598                           
  4599 ;; *************** function _init_timer_0 *****************
  4600 ;; Defined at:
  4601 ;;		line 45 in file "system.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;		None
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;		None
  4606 ;; Return value:  Size  Location     Type
  4607 ;;		None               void
  4608 ;; Registers used:
  4609 ;;		wreg, status,2
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4615 ;;      Params:         0       0       0       0
  4616 ;;      Locals:         0       0       0       0
  4617 ;;      Temps:          0       0       0       0
  4618 ;;      Totals:         0       0       0       0
  4619 ;;Total ram usage:        0 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; Hardware stack levels required when called:    6
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_init_system
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text18
  4630  0035CE                     __ptext18:
  4631                           	opt stack 0
  4632  0035CE                     _init_timer_0:
  4633                           	opt stack 23
  4634                           
  4635                           ;system.c: 47: T0CONbits.T016BIT = 1;
  4636                           
  4637                           ;incstack = 0
  4638  0035CE  8CD5               	bsf	4053,6,c	;volatile
  4639                           
  4640                           ;system.c: 48: T0CONbits.T0PS = 0b100;
  4641  0035D0  50D5               	movf	4053,w,c	;volatile
  4642  0035D2  0BF8               	andlw	-8
  4643  0035D4  0904               	iorlw	4
  4644  0035D6  6ED5               	movwf	4053,c	;volatile
  4645                           
  4646                           ;system.c: 49: T0CONbits.T0CS = 0;
  4647  0035D8  9AD5               	bcf	4053,5,c	;volatile
  4648                           
  4649                           ;system.c: 50: T0CONbits.PSA = 0;
  4650  0035DA  96D5               	bcf	4053,3,c	;volatile
  4651                           
  4652                           ;system.c: 53: TMR0 = 32750;
  4653  0035DC  0E7F               	movlw	127
  4654  0035DE  6ED7               	movwf	4055,c	;volatile
  4655  0035E0  0EEE               	movlw	238
  4656  0035E2  6ED6               	movwf	4054,c	;volatile
  4657                           
  4658                           ;system.c: 55: TMR0ON = 1;
  4659  0035E4  8ED5               	bsf	4053,7,c	;volatile
  4660  0035E6  0012               	return		;funcret
  4661  0035E8                     __end_of_init_timer_0:
  4662                           	opt stack 0
  4663                           tblptru	equ	0xFF8
  4664                           tblptrh	equ	0xFF7
  4665                           tblptrl	equ	0xFF6
  4666                           tablat	equ	0xFF5
  4667                           postinc0	equ	0xFEE
  4668                           plusw0	equ	0xFEB
  4669                           wreg	equ	0xFE8
  4670                           postinc1	equ	0xFE6
  4671                           postdec1	equ	0xFE5
  4672                           plusw1	equ	0xFE3
  4673                           fsr1h	equ	0xFE2
  4674                           fsr1l	equ	0xFE1
  4675                           postinc2	equ	0xFDE
  4676                           postdec2	equ	0xFDD
  4677                           fsr2h	equ	0xFDA
  4678                           fsr2l	equ	0xFD9
  4679                           status	equ	0xFD8
  4680                           
  4681 ;; *************** function _init_capteur *****************
  4682 ;; Defined at:
  4683 ;;		line 149 in file "moteur.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;		None
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;		None
  4688 ;; Return value:  Size  Location     Type
  4689 ;;		None               void
  4690 ;; Registers used:
  4691 ;;		wreg, status,2
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4697 ;;      Params:         0       0       0       0
  4698 ;;      Locals:         0       0       0       0
  4699 ;;      Temps:          0       0       0       0
  4700 ;;      Totals:         0       0       0       0
  4701 ;;Total ram usage:        0 bytes
  4702 ;; Hardware stack levels used:    1
  4703 ;; Hardware stack levels required when called:    6
  4704 ;; This function calls:
  4705 ;;		Nothing
  4706 ;; This function is called by:
  4707 ;;		_init_system
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           	psect	text19
  4712  002F76                     __ptext19:
  4713                           	opt stack 0
  4714  002F76                     _init_capteur:
  4715                           	opt stack 23
  4716                           
  4717                           ;moteur.c: 151: capteur.angle[0] = 0.;
  4718                           
  4719                           ;incstack = 0
  4720  002F76  0E00               	movlw	0
  4721  002F78  0101               	movlb	1	; () banked
  4722  002F7A  6F6A               	movwf	(_capteur+3)& (0+255),b
  4723  002F7C  0E00               	movlw	0
  4724  002F7E  0101               	movlb	1	; () banked
  4725  002F80  6F6B               	movwf	(_capteur+4)& (0+255),b
  4726  002F82  0E00               	movlw	0
  4727  002F84  0101               	movlb	1	; () banked
  4728  002F86  6F6C               	movwf	(_capteur+5)& (0+255),b
  4729                           
  4730                           ;moteur.c: 152: capteur.angle[1] = 0.;
  4731  002F88  0E00               	movlw	0
  4732  002F8A  0101               	movlb	1	; () banked
  4733  002F8C  6F6D               	movwf	(_capteur+6)& (0+255),b
  4734  002F8E  0E00               	movlw	0
  4735  002F90  0101               	movlb	1	; () banked
  4736  002F92  6F6E               	movwf	(_capteur+7)& (0+255),b
  4737  002F94  0E00               	movlw	0
  4738  002F96  0101               	movlb	1	; () banked
  4739  002F98  6F6F               	movwf	(_capteur+8)& (0+255),b
  4740                           
  4741                           ;moteur.c: 153: capteur.angle[2] = 0.;
  4742  002F9A  0E00               	movlw	0
  4743  002F9C  0101               	movlb	1	; () banked
  4744  002F9E  6F70               	movwf	(_capteur+9)& (0+255),b
  4745  002FA0  0E00               	movlw	0
  4746  002FA2  0101               	movlb	1	; () banked
  4747  002FA4  6F71               	movwf	(_capteur+10)& (0+255),b
  4748  002FA6  0E00               	movlw	0
  4749  002FA8  0101               	movlb	1	; () banked
  4750  002FAA  6F72               	movwf	(_capteur+11)& (0+255),b
  4751                           
  4752                           ;moteur.c: 154: capteur.flag_capteur = 0;
  4753  002FAC  0E00               	movlw	0
  4754  002FAE  0101               	movlb	1	; () banked
  4755  002FB0  6F69               	movwf	(_capteur+2)& (0+255),b
  4756                           
  4757                           ;moteur.c: 155: capteur.indice = 0;
  4758  002FB2  0E00               	movlw	0
  4759  002FB4  0101               	movlb	1	; () banked
  4760  002FB6  6F79               	movwf	(_capteur+18)& (0+255),b
  4761                           
  4762                           ;moteur.c: 156: capteur.position[0] = 0;
  4763  002FB8  0E00               	movlw	0
  4764  002FBA  0101               	movlb	1	; () banked
  4765  002FBC  6F74               	movwf	(_capteur+13)& (0+255),b
  4766  002FBE  0E00               	movlw	0
  4767  002FC0  6F73               	movwf	(_capteur+12)& (0+255),b
  4768                           
  4769                           ;moteur.c: 157: capteur.position[1] = 0;
  4770  002FC2  0E00               	movlw	0
  4771  002FC4  0101               	movlb	1	; () banked
  4772  002FC6  6F76               	movwf	(_capteur+15)& (0+255),b
  4773  002FC8  0E00               	movlw	0
  4774  002FCA  6F75               	movwf	(_capteur+14)& (0+255),b
  4775                           
  4776                           ;moteur.c: 158: capteur.position[2] = 0;
  4777  002FCC  0E00               	movlw	0
  4778  002FCE  0101               	movlb	1	; () banked
  4779  002FD0  6F78               	movwf	(_capteur+17)& (0+255),b
  4780  002FD2  0E00               	movlw	0
  4781  002FD4  6F77               	movwf	(_capteur+16)& (0+255),b
  4782                           
  4783                           ;moteur.c: 159: capteur.synchro_debut_tour = 0;
  4784  002FD6  0E00               	movlw	0
  4785  002FD8  0101               	movlb	1	; () banked
  4786  002FDA  6F68               	movwf	(_capteur+1)& (0+255),b
  4787                           
  4788                           ;moteur.c: 160: capteur.tour_en_cours = 0;
  4789  002FDC  0E00               	movlw	0
  4790  002FDE  0101               	movlb	1	; () banked
  4791  002FE0  6F67               	movwf	_capteur& (0+255),b
  4792                           
  4793                           ; BSR set to: 1
  4794  002FE2  0012               	return		;funcret
  4795  002FE4                     __end_of_init_capteur:
  4796                           	opt stack 0
  4797                           tblptru	equ	0xFF8
  4798                           tblptrh	equ	0xFF7
  4799                           tblptrl	equ	0xFF6
  4800                           tablat	equ	0xFF5
  4801                           postinc0	equ	0xFEE
  4802                           plusw0	equ	0xFEB
  4803                           wreg	equ	0xFE8
  4804                           postinc1	equ	0xFE6
  4805                           postdec1	equ	0xFE5
  4806                           plusw1	equ	0xFE3
  4807                           fsr1h	equ	0xFE2
  4808                           fsr1l	equ	0xFE1
  4809                           postinc2	equ	0xFDE
  4810                           postdec2	equ	0xFDD
  4811                           fsr2h	equ	0xFDA
  4812                           fsr2l	equ	0xFD9
  4813                           status	equ	0xFD8
  4814                           
  4815 ;; *************** function _config_uart *****************
  4816 ;; Defined at:
  4817 ;;		line 31 in file "uart.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;		None
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;		None
  4822 ;; Return value:  Size  Location     Type
  4823 ;;		None               void
  4824 ;; Registers used:
  4825 ;;		wreg, status,2
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4831 ;;      Params:         0       0       0       0
  4832 ;;      Locals:         0       0       0       0
  4833 ;;      Temps:          0       0       0       0
  4834 ;;      Totals:         0       0       0       0
  4835 ;;Total ram usage:        0 bytes
  4836 ;; Hardware stack levels used:    1
  4837 ;; Hardware stack levels required when called:    6
  4838 ;; This function calls:
  4839 ;;		Nothing
  4840 ;; This function is called by:
  4841 ;;		_init_system
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           	psect	text20
  4846  0035B2                     __ptext20:
  4847                           	opt stack 0
  4848  0035B2                     _config_uart:
  4849                           	opt stack 23
  4850                           
  4851                           ;uart.c: 39: TXSTAbits.TXEN = 1;
  4852                           
  4853                           ; BSR set to: 1
  4854                           ;incstack = 0
  4855  0035B2  8AAC               	bsf	4012,5,c	;volatile
  4856                           
  4857                           ;uart.c: 40: TXSTAbits.TX9 = 0;
  4858  0035B4  9CAC               	bcf	4012,6,c	;volatile
  4859                           
  4860                           ;uart.c: 41: TXSTAbits.SYNC = 0;
  4861  0035B6  98AC               	bcf	4012,4,c	;volatile
  4862                           
  4863                           ;uart.c: 42: TXSTAbits.SENDB = 0;
  4864  0035B8  96AC               	bcf	4012,3,c	;volatile
  4865                           
  4866                           ;uart.c: 43: TXSTAbits.BRGH = 1;
  4867  0035BA  84AC               	bsf	4012,2,c	;volatile
  4868                           
  4869                           ;uart.c: 44: TXSTAbits.TX9 = 0;
  4870  0035BC  9CAC               	bcf	4012,6,c	;volatile
  4871                           
  4872                           ;uart.c: 47: BAUDCONbits.BRG16 = 1;
  4873  0035BE  86AA               	bsf	4010,3,c	;volatile
  4874                           
  4875                           ;uart.c: 49: BAUDCONbits.ABDEN = 0;
  4876  0035C0  90AA               	bcf	4010,0,c	;volatile
  4877                           
  4878                           ;uart.c: 52: SPBRG = 86;
  4879  0035C2  0E56               	movlw	86
  4880  0035C4  6EAF               	movwf	4015,c	;volatile
  4881                           
  4882                           ;uart.c: 59: RCSTAbits.SPEN = 1;
  4883  0035C6  8EAB               	bsf	4011,7,c	;volatile
  4884                           
  4885                           ;uart.c: 60: RCSTAbits.RX9 = 0;
  4886  0035C8  9CAB               	bcf	4011,6,c	;volatile
  4887                           
  4888                           ;uart.c: 61: RCSTAbits.CREN = 1;
  4889  0035CA  88AB               	bsf	4011,4,c	;volatile
  4890  0035CC  0012               	return		;funcret
  4891  0035CE                     __end_of_config_uart:
  4892                           	opt stack 0
  4893                           tblptru	equ	0xFF8
  4894                           tblptrh	equ	0xFF7
  4895                           tblptrl	equ	0xFF6
  4896                           tablat	equ	0xFF5
  4897                           postinc0	equ	0xFEE
  4898                           plusw0	equ	0xFEB
  4899                           wreg	equ	0xFE8
  4900                           postinc1	equ	0xFE6
  4901                           postdec1	equ	0xFE5
  4902                           plusw1	equ	0xFE3
  4903                           fsr1h	equ	0xFE2
  4904                           fsr1l	equ	0xFE1
  4905                           postinc2	equ	0xFDE
  4906                           postdec2	equ	0xFDD
  4907                           fsr2h	equ	0xFDA
  4908                           fsr2l	equ	0xFD9
  4909                           status	equ	0xFD8
  4910                           
  4911 ;; *************** function _config_pwm *****************
  4912 ;; Defined at:
  4913 ;;		line 28 in file "moteur.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;		None
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;		None
  4918 ;; Return value:  Size  Location     Type
  4919 ;;		None               void
  4920 ;; Registers used:
  4921 ;;		wreg, status,2
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4927 ;;      Params:         0       0       0       0
  4928 ;;      Locals:         0       0       0       0
  4929 ;;      Temps:          0       0       0       0
  4930 ;;      Totals:         0       0       0       0
  4931 ;;Total ram usage:        0 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; Hardware stack levels required when called:    6
  4934 ;; This function calls:
  4935 ;;		Nothing
  4936 ;; This function is called by:
  4937 ;;		_init_system
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text21
  4942  0032C4                     __ptext21:
  4943                           	opt stack 0
  4944  0032C4                     _config_pwm:
  4945                           	opt stack 23
  4946                           
  4947                           ;moteur.c: 30: PTCON0bits.PTOPS = 0;
  4948                           
  4949                           ;incstack = 0
  4950  0032C4  987F               	bcf	3967,4,c	;volatile
  4951  0032C6  9A7F               	bcf	3967,5,c	;volatile
  4952  0032C8  9C7F               	bcf	3967,6,c	;volatile
  4953  0032CA  9E7F               	bcf	3967,7,c	;volatile
  4954                           
  4955                           ;moteur.c: 31: PTCON0bits.PTCKPS = 0;
  4956  0032CC  0EF3               	movlw	-13
  4957  0032CE  167F               	andwf	3967,f,c	;volatile
  4958                           
  4959                           ;moteur.c: 32: PTCON0bits.PTMOD = 0;
  4960  0032D0  0EFC               	movlw	-4
  4961  0032D2  167F               	andwf	3967,f,c	;volatile
  4962                           
  4963                           ;moteur.c: 34: PTCON1bits.PTEN = 1;
  4964  0032D4  8E7E               	bsf	3966,7,c	;volatile
  4965                           
  4966                           ;moteur.c: 36: PWMCON0bits.PMOD0 = 1;
  4967  0032D6  806F               	bsf	3951,0,c	;volatile
  4968                           
  4969                           ;moteur.c: 37: PWMCON0bits.PWMEN = 0b001;
  4970  0032D8  506F               	movf	3951,w,c	;volatile
  4971  0032DA  0B8F               	andlw	-113
  4972  0032DC  0910               	iorlw	16
  4973  0032DE  6E6F               	movwf	3951,c	;volatile
  4974                           
  4975                           ;moteur.c: 39: PWMCON1bits.UDIS = 0;
  4976  0032E0  926E               	bcf	3950,1,c	;volatile
  4977                           
  4978                           ;moteur.c: 41: PTPERL = 166;
  4979  0032E2  0EA6               	movlw	166
  4980  0032E4  6E7B               	movwf	3963,c	;volatile
  4981                           
  4982                           ;moteur.c: 42: PTPERH = 0;
  4983  0032E6  0E00               	movlw	0
  4984  0032E8  6E7A               	movwf	3962,c	;volatile
  4985                           
  4986                           ;moteur.c: 45: PDC0L = 0;
  4987  0032EA  0E00               	movlw	0
  4988  0032EC  6E79               	movwf	3961,c	;volatile
  4989                           
  4990                           ;moteur.c: 46: PDC0H = 0;
  4991  0032EE  0E00               	movlw	0
  4992  0032F0  6E78               	movwf	3960,c	;volatile
  4993                           
  4994                           ;moteur.c: 47: PDC1L = 0;
  4995  0032F2  0E00               	movlw	0
  4996  0032F4  6E77               	movwf	3959,c	;volatile
  4997                           
  4998                           ;moteur.c: 48: PDC1H = 0;
  4999  0032F6  0E00               	movlw	0
  5000  0032F8  6E76               	movwf	3958,c	;volatile
  5001                           
  5002                           ;moteur.c: 49: PDC2L = 0;
  5003  0032FA  0E00               	movlw	0
  5004  0032FC  6E75               	movwf	3957,c	;volatile
  5005                           
  5006                           ;moteur.c: 50: PDC2H = 0;
  5007  0032FE  0E00               	movlw	0
  5008  003300  6E74               	movwf	3956,c	;volatile
  5009                           
  5010                           ;moteur.c: 51: PDC3L = 0;
  5011  003302  0E00               	movlw	0
  5012  003304  6E73               	movwf	3955,c	;volatile
  5013                           
  5014                           ;moteur.c: 52: PDC3H = 0;
  5015  003306  0E00               	movlw	0
  5016  003308  6E72               	movwf	3954,c	;volatile
  5017  00330A  0012               	return		;funcret
  5018  00330C                     __end_of_config_pwm:
  5019                           	opt stack 0
  5020                           tblptru	equ	0xFF8
  5021                           tblptrh	equ	0xFF7
  5022                           tblptrl	equ	0xFF6
  5023                           tablat	equ	0xFF5
  5024                           postinc0	equ	0xFEE
  5025                           plusw0	equ	0xFEB
  5026                           wreg	equ	0xFE8
  5027                           postinc1	equ	0xFE6
  5028                           postdec1	equ	0xFE5
  5029                           plusw1	equ	0xFE3
  5030                           fsr1h	equ	0xFE2
  5031                           fsr1l	equ	0xFE1
  5032                           postinc2	equ	0xFDE
  5033                           postdec2	equ	0xFDD
  5034                           fsr2h	equ	0xFDA
  5035                           fsr2l	equ	0xFD9
  5036                           status	equ	0xFD8
  5037                           
  5038 ;; *************** function _config_QEI *****************
  5039 ;; Defined at:
  5040 ;;		line 83 in file "moteur.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;		None
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;		None
  5045 ;; Return value:  Size  Location     Type
  5046 ;;		None               void
  5047 ;; Registers used:
  5048 ;;		wreg, status,2
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5054 ;;      Params:         0       0       0       0
  5055 ;;      Locals:         0       0       0       0
  5056 ;;      Temps:          0       0       0       0
  5057 ;;      Totals:         0       0       0       0
  5058 ;;Total ram usage:        0 bytes
  5059 ;; Hardware stack levels used:    1
  5060 ;; Hardware stack levels required when called:    6
  5061 ;; This function calls:
  5062 ;;		Nothing
  5063 ;; This function is called by:
  5064 ;;		_init_system
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text22
  5069  003456                     __ptext22:
  5070                           	opt stack 0
  5071  003456                     _config_QEI:
  5072                           	opt stack 23
  5073                           
  5074                           ;moteur.c: 85: CAP1CONbits.CAP1REN = 1;
  5075                           
  5076                           ;incstack = 0
  5077  003456  8C63               	bsf	3939,6,c	;volatile
  5078                           
  5079                           ;moteur.c: 86: ANSEL0 = 0;
  5080  003458  0E00               	movlw	0
  5081  00345A  6EB8               	movwf	4024,c	;volatile
  5082                           
  5083                           ;moteur.c: 89: QEICONbits.VELM = 1;
  5084  00345C  8EB6               	bsf	4022,7,c	;volatile
  5085                           
  5086                           ;moteur.c: 90: QEICONbits.QERR = 0;
  5087  00345E  9CB6               	bcf	4022,6,c	;volatile
  5088                           
  5089                           ;moteur.c: 91: QEICONbits.QEIM = 0b110;
  5090  003460  50B6               	movf	4022,w,c	;volatile
  5091  003462  0BE3               	andlw	-29
  5092  003464  0918               	iorlw	24
  5093  003466  6EB6               	movwf	4022,c	;volatile
  5094                           
  5095                           ;moteur.c: 92: QEICONbits.PDEC = 0b01;
  5096  003468  50B6               	movf	4022,w,c	;volatile
  5097  00346A  0BFC               	andlw	-4
  5098  00346C  0901               	iorlw	1
  5099  00346E  6EB6               	movwf	4022,c	;volatile
  5100                           
  5101                           ;moteur.c: 97: DFLTCONbits.FLT3EN = 1;
  5102  003470  8A60               	bsf	3936,5,c	;volatile
  5103                           
  5104                           ;moteur.c: 98: DFLTCONbits.FLT2EN = 1;
  5105  003472  8860               	bsf	3936,4,c	;volatile
  5106                           
  5107                           ;moteur.c: 99: DFLTCONbits.FLTCK = 0b010;
  5108  003474  5060               	movf	3936,w,c	;volatile
  5109  003476  0BF8               	andlw	-8
  5110  003478  0902               	iorlw	2
  5111  00347A  6E60               	movwf	3936,c	;volatile
  5112                           
  5113                           ;moteur.c: 101: POSCNTH = 0;
  5114  00347C  0E00               	movlw	0
  5115  00347E  6E67               	movwf	3943,c	;volatile
  5116                           
  5117                           ;moteur.c: 102: POSCNTL = 0;
  5118  003480  0E00               	movlw	0
  5119  003482  6E66               	movwf	3942,c	;volatile
  5120                           
  5121                           ;moteur.c: 104: MAXCNTH = (uint8_t) (((4 * 2000) - 1) / 256);
  5122  003484  0E1F               	movlw	31
  5123  003486  6E65               	movwf	3941,c	;volatile
  5124                           
  5125                           ;moteur.c: 105: MAXCNTL = (uint8_t) (((4 * 2000) - 1) % 256);
  5126  003488  0E3F               	movlw	63
  5127  00348A  6E64               	movwf	3940,c	;volatile
  5128  00348C  0012               	return		;funcret
  5129  00348E                     __end_of_config_QEI:
  5130                           	opt stack 0
  5131                           tblptru	equ	0xFF8
  5132                           tblptrh	equ	0xFF7
  5133                           tblptrl	equ	0xFF6
  5134                           tablat	equ	0xFF5
  5135                           postinc0	equ	0xFEE
  5136                           plusw0	equ	0xFEB
  5137                           wreg	equ	0xFE8
  5138                           postinc1	equ	0xFE6
  5139                           postdec1	equ	0xFE5
  5140                           plusw1	equ	0xFE3
  5141                           fsr1h	equ	0xFE2
  5142                           fsr1l	equ	0xFE1
  5143                           postinc2	equ	0xFDE
  5144                           postdec2	equ	0xFDD
  5145                           fsr2h	equ	0xFDA
  5146                           fsr2l	equ	0xFD9
  5147                           status	equ	0xFD8
  5148                           
  5149 ;; *************** function _ConfigPorts *****************
  5150 ;; Defined at:
  5151 ;;		line 92 in file "system.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;		None
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;		None
  5156 ;; Return value:  Size  Location     Type
  5157 ;;		None               void
  5158 ;; Registers used:
  5159 ;;		None
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5165 ;;      Params:         0       0       0       0
  5166 ;;      Locals:         0       0       0       0
  5167 ;;      Temps:          0       0       0       0
  5168 ;;      Totals:         0       0       0       0
  5169 ;;Total ram usage:        0 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; Hardware stack levels required when called:    6
  5172 ;; This function calls:
  5173 ;;		Nothing
  5174 ;; This function is called by:
  5175 ;;		_init_system
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text23
  5180  002CE0                     __ptext23:
  5181                           	opt stack 0
  5182  002CE0                     _ConfigPorts:
  5183                           	opt stack 23
  5184                           
  5185                           ;system.c: 95: TRISAbits.RA0 = 0;
  5186                           
  5187                           ;incstack = 0
  5188  002CE0  9092               	bcf	3986,0,c	;volatile
  5189                           
  5190                           ;system.c: 96: TRISAbits.RA1 = 0;
  5191  002CE2  9292               	bcf	3986,1,c	;volatile
  5192                           
  5193                           ;system.c: 97: TRISAbits.RA2 = 0;
  5194  002CE4  9492               	bcf	3986,2,c	;volatile
  5195                           
  5196                           ;system.c: 98: TRISAbits.RA3 = 1;
  5197  002CE6  8692               	bsf	3986,3,c	;volatile
  5198                           
  5199                           ;system.c: 99: TRISAbits.RA4 = 1;
  5200  002CE8  8892               	bsf	3986,4,c	;volatile
  5201                           
  5202                           ;system.c: 100: TRISAbits.RA5 = 0;
  5203  002CEA  9A92               	bcf	3986,5,c	;volatile
  5204                           
  5205                           ;system.c: 101: TRISAbits.RA6 = 1;
  5206  002CEC  8C92               	bsf	3986,6,c	;volatile
  5207                           
  5208                           ;system.c: 102: TRISAbits.RA7 = 1;
  5209  002CEE  8E92               	bsf	3986,7,c	;volatile
  5210                           
  5211                           ;system.c: 105: TRISBbits.RB0 = 0;
  5212  002CF0  9093               	bcf	3987,0,c	;volatile
  5213                           
  5214                           ;system.c: 106: TRISBbits.RB1 = 0;
  5215  002CF2  9293               	bcf	3987,1,c	;volatile
  5216                           
  5217                           ;system.c: 107: TRISBbits.RB2 = 0;
  5218  002CF4  9493               	bcf	3987,2,c	;volatile
  5219                           
  5220                           ;system.c: 108: TRISBbits.RB3 = 0;
  5221  002CF6  9693               	bcf	3987,3,c	;volatile
  5222                           
  5223                           ;system.c: 109: TRISBbits.RB4 = 0;
  5224  002CF8  9893               	bcf	3987,4,c	;volatile
  5225                           
  5226                           ;system.c: 110: TRISBbits.RB5 = 0;
  5227  002CFA  9A93               	bcf	3987,5,c	;volatile
  5228                           
  5229                           ;system.c: 111: TRISBbits.RB6 = 0;
  5230  002CFC  9C93               	bcf	3987,6,c	;volatile
  5231                           
  5232                           ;system.c: 112: TRISBbits.RB7 = 0;
  5233  002CFE  9E93               	bcf	3987,7,c	;volatile
  5234                           
  5235                           ;system.c: 115: TRISCbits.RC0 = 0;
  5236  002D00  9094               	bcf	3988,0,c	;volatile
  5237                           
  5238                           ;system.c: 116: TRISCbits.RC1 = 0;
  5239  002D02  9294               	bcf	3988,1,c	;volatile
  5240                           
  5241                           ;system.c: 117: TRISCbits.RC2 = 0;
  5242  002D04  9494               	bcf	3988,2,c	;volatile
  5243                           
  5244                           ;system.c: 118: TRISCbits.RC3 = 1;
  5245  002D06  8694               	bsf	3988,3,c	;volatile
  5246                           
  5247                           ;system.c: 119: TRISCbits.RC4 = 0;
  5248  002D08  9894               	bcf	3988,4,c	;volatile
  5249                           
  5250                           ;system.c: 120: TRISCbits.RC5 = 0;
  5251  002D0A  9A94               	bcf	3988,5,c	;volatile
  5252                           
  5253                           ;system.c: 121: TRISCbits.RC6 = 1;
  5254  002D0C  8C94               	bsf	3988,6,c	;volatile
  5255                           
  5256                           ;system.c: 122: TRISCbits.RC7 = 1;
  5257  002D0E  8E94               	bsf	3988,7,c	;volatile
  5258                           
  5259                           ;system.c: 125: TRISDbits.RD0 = 0;
  5260  002D10  9095               	bcf	3989,0,c	;volatile
  5261                           
  5262                           ;system.c: 126: TRISDbits.RD1 = 0;
  5263  002D12  9295               	bcf	3989,1,c	;volatile
  5264                           
  5265                           ;system.c: 127: TRISDbits.RD2 = 1;
  5266  002D14  8495               	bsf	3989,2,c	;volatile
  5267                           
  5268                           ;system.c: 128: TRISDbits.RD3 = 0;
  5269  002D16  9695               	bcf	3989,3,c	;volatile
  5270                           
  5271                           ;system.c: 129: TRISDbits.RD4 = 0;
  5272  002D18  9895               	bcf	3989,4,c	;volatile
  5273                           
  5274                           ;system.c: 130: TRISDbits.RD5 = 0;
  5275  002D1A  9A95               	bcf	3989,5,c	;volatile
  5276                           
  5277                           ;system.c: 131: TRISDbits.RD6 = 0;
  5278  002D1C  9C95               	bcf	3989,6,c	;volatile
  5279                           
  5280                           ;system.c: 132: TRISDbits.RD7 = 0;
  5281  002D1E  9E95               	bcf	3989,7,c	;volatile
  5282                           
  5283                           ;system.c: 135: TRISEbits.RE0 = 0;
  5284  002D20  9096               	bcf	3990,0,c	;volatile
  5285                           
  5286                           ;system.c: 136: TRISEbits.RE1 = 0;
  5287  002D22  9296               	bcf	3990,1,c	;volatile
  5288                           
  5289                           ;system.c: 137: TRISEbits.RE2 = 0;
  5290  002D24  9496               	bcf	3990,2,c	;volatile
  5291                           
  5292                           ;system.c: 145: LATA0 = 0;
  5293  002D26  9089               	bcf	3977,0,c	;volatile
  5294                           
  5295                           ;system.c: 146: LATA1 = 0;
  5296  002D28  9289               	bcf	3977,1,c	;volatile
  5297                           
  5298                           ;system.c: 147: LATA2 = 0;
  5299  002D2A  9489               	bcf	3977,2,c	;volatile
  5300                           
  5301                           ;system.c: 148: LATA3 = 0;
  5302  002D2C  9689               	bcf	3977,3,c	;volatile
  5303                           
  5304                           ;system.c: 149: LATA4 = 0;
  5305  002D2E  9889               	bcf	3977,4,c	;volatile
  5306                           
  5307                           ;system.c: 150: LATA5 = 0;
  5308  002D30  9A89               	bcf	3977,5,c	;volatile
  5309                           
  5310                           ;system.c: 151: LATA6 = 0;
  5311  002D32  9C89               	bcf	3977,6,c	;volatile
  5312                           
  5313                           ;system.c: 152: LATA7 = 0;
  5314  002D34  9E89               	bcf	3977,7,c	;volatile
  5315                           
  5316                           ;system.c: 155: LATB0 = 0;
  5317  002D36  908A               	bcf	3978,0,c	;volatile
  5318                           
  5319                           ;system.c: 156: LATB1 = 0;
  5320  002D38  928A               	bcf	3978,1,c	;volatile
  5321                           
  5322                           ;system.c: 157: LATB2 = 0;
  5323  002D3A  948A               	bcf	3978,2,c	;volatile
  5324                           
  5325                           ;system.c: 158: LATB3 = 0;
  5326  002D3C  968A               	bcf	3978,3,c	;volatile
  5327                           
  5328                           ;system.c: 159: LATB4 = 0;
  5329  002D3E  988A               	bcf	3978,4,c	;volatile
  5330                           
  5331                           ;system.c: 160: LATB5 = 0;
  5332  002D40  9A8A               	bcf	3978,5,c	;volatile
  5333                           
  5334                           ;system.c: 161: LATB6 = 0;
  5335  002D42  9C8A               	bcf	3978,6,c	;volatile
  5336                           
  5337                           ;system.c: 162: LATB7 = 0;
  5338  002D44  9E8A               	bcf	3978,7,c	;volatile
  5339                           
  5340                           ;system.c: 165: LATC0 = 0;
  5341  002D46  908B               	bcf	3979,0,c	;volatile
  5342                           
  5343                           ;system.c: 166: LATC1 = 0;
  5344  002D48  928B               	bcf	3979,1,c	;volatile
  5345                           
  5346                           ;system.c: 167: LATC2 = 0;
  5347  002D4A  948B               	bcf	3979,2,c	;volatile
  5348                           
  5349                           ;system.c: 168: LATC3 = 0;
  5350  002D4C  968B               	bcf	3979,3,c	;volatile
  5351                           
  5352                           ;system.c: 169: LATC4 = 0;
  5353  002D4E  988B               	bcf	3979,4,c	;volatile
  5354                           
  5355                           ;system.c: 170: LATC5 = 0;
  5356  002D50  9A8B               	bcf	3979,5,c	;volatile
  5357                           
  5358                           ;system.c: 171: LATC6 = 0;
  5359  002D52  9C8B               	bcf	3979,6,c	;volatile
  5360                           
  5361                           ;system.c: 172: LATC7 = 0;
  5362  002D54  9E8B               	bcf	3979,7,c	;volatile
  5363                           
  5364                           ;system.c: 175: LATD0 = 0;
  5365  002D56  908C               	bcf	3980,0,c	;volatile
  5366                           
  5367                           ;system.c: 176: LATD1 = 0;
  5368  002D58  928C               	bcf	3980,1,c	;volatile
  5369                           
  5370                           ;system.c: 177: LATD2 = 0;
  5371  002D5A  948C               	bcf	3980,2,c	;volatile
  5372                           
  5373                           ;system.c: 178: LATD3 = 0;
  5374  002D5C  968C               	bcf	3980,3,c	;volatile
  5375                           
  5376                           ;system.c: 179: LATD4 = 0;
  5377  002D5E  988C               	bcf	3980,4,c	;volatile
  5378                           
  5379                           ;system.c: 180: LATD5 = 0;
  5380  002D60  9A8C               	bcf	3980,5,c	;volatile
  5381                           
  5382                           ;system.c: 181: LATD6 = 0;
  5383  002D62  9C8C               	bcf	3980,6,c	;volatile
  5384                           
  5385                           ;system.c: 182: LATD7 = 0;
  5386  002D64  9E8C               	bcf	3980,7,c	;volatile
  5387                           
  5388                           ;system.c: 185: LATE0 = 0;
  5389  002D66  908D               	bcf	3981,0,c	;volatile
  5390                           
  5391                           ;system.c: 186: LATE1 = 0;
  5392  002D68  928D               	bcf	3981,1,c	;volatile
  5393                           
  5394                           ;system.c: 187: LATE2 = 0;
  5395  002D6A  948D               	bcf	3981,2,c	;volatile
  5396  002D6C  0012               	return		;funcret
  5397  002D6E                     __end_of_ConfigPorts:
  5398                           	opt stack 0
  5399                           tblptru	equ	0xFF8
  5400                           tblptrh	equ	0xFF7
  5401                           tblptrl	equ	0xFF6
  5402                           tablat	equ	0xFF5
  5403                           postinc0	equ	0xFEE
  5404                           plusw0	equ	0xFEB
  5405                           wreg	equ	0xFE8
  5406                           postinc1	equ	0xFE6
  5407                           postdec1	equ	0xFE5
  5408                           plusw1	equ	0xFE3
  5409                           fsr1h	equ	0xFE2
  5410                           fsr1l	equ	0xFE1
  5411                           postinc2	equ	0xFDE
  5412                           postdec2	equ	0xFDD
  5413                           fsr2h	equ	0xFDA
  5414                           fsr2l	equ	0xFD9
  5415                           status	equ	0xFD8
  5416                           
  5417 ;; *************** function _ConfigInterrupt *****************
  5418 ;; Defined at:
  5419 ;;		line 195 in file "system.c"
  5420 ;; Parameters:    Size  Location     Type
  5421 ;;		None
  5422 ;; Auto vars:     Size  Location     Type
  5423 ;;		None
  5424 ;; Return value:  Size  Location     Type
  5425 ;;		None               void
  5426 ;; Registers used:
  5427 ;;		None
  5428 ;; Tracked objects:
  5429 ;;		On entry : 0/0
  5430 ;;		On exit  : 0/0
  5431 ;;		Unchanged: 0/0
  5432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5433 ;;      Params:         0       0       0       0
  5434 ;;      Locals:         0       0       0       0
  5435 ;;      Temps:          0       0       0       0
  5436 ;;      Totals:         0       0       0       0
  5437 ;;Total ram usage:        0 bytes
  5438 ;; Hardware stack levels used:    1
  5439 ;; Hardware stack levels required when called:    6
  5440 ;; This function calls:
  5441 ;;		Nothing
  5442 ;; This function is called by:
  5443 ;;		_init_system
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           	psect	text24
  5448  002D6E                     __ptext24:
  5449                           	opt stack 0
  5450  002D6E                     _ConfigInterrupt:
  5451                           	opt stack 23
  5452                           
  5453                           ;system.c: 198: INTCONbits.GIEH = 1;
  5454                           
  5455                           ;incstack = 0
  5456  002D6E  8EF2               	bsf	intcon,7,c	;volatile
  5457                           
  5458                           ;system.c: 199: INTCONbits.GIEL = 1;
  5459  002D70  8CF2               	bsf	intcon,6,c	;volatile
  5460                           
  5461                           ;system.c: 200: INTCONbits.TMR0IE = 0b1;
  5462  002D72  8AF2               	bsf	intcon,5,c	;volatile
  5463                           
  5464                           ;system.c: 201: INTCONbits.INT0IE = 0b1;
  5465  002D74  88F2               	bsf	intcon,4,c	;volatile
  5466                           
  5467                           ;system.c: 202: INTCONbits.RBIE = 0;
  5468  002D76  96F2               	bcf	intcon,3,c	;volatile
  5469                           
  5470                           ;system.c: 203: INTCONbits.TMR0IF = 0;
  5471  002D78  94F2               	bcf	intcon,2,c	;volatile
  5472                           
  5473                           ;system.c: 204: INTCONbits.INT0IF = 0;
  5474  002D7A  92F2               	bcf	intcon,1,c	;volatile
  5475                           
  5476                           ;system.c: 205: INTCONbits.RBIF = 0;
  5477  002D7C  90F2               	bcf	intcon,0,c	;volatile
  5478                           
  5479                           ;system.c: 209: INTCON2bits.INTEDG0 = 1;
  5480  002D7E  8CF1               	bsf	intcon2,6,c	;volatile
  5481                           
  5482                           ;system.c: 210: INTCON2bits.INTEDG1 = 1;
  5483  002D80  8AF1               	bsf	intcon2,5,c	;volatile
  5484                           
  5485                           ;system.c: 211: INTCON2bits.INTEDG2 = 1;
  5486  002D82  88F1               	bsf	intcon2,4,c	;volatile
  5487                           
  5488                           ;system.c: 212: INTCON2bits.TMR0IP = 0b0;
  5489  002D84  94F1               	bcf	intcon2,2,c	;volatile
  5490                           
  5491                           ;system.c: 215: INTCON3bits.INT2IP = 0b0 ;
  5492  002D86  9EF0               	bcf	intcon3,7,c	;volatile
  5493                           
  5494                           ;system.c: 216: INTCON3bits.INT1IP = 0b0;
  5495  002D88  9CF0               	bcf	intcon3,6,c	;volatile
  5496                           
  5497                           ;system.c: 217: INTCON3bits.INT2IE = 0b0;
  5498  002D8A  98F0               	bcf	intcon3,4,c	;volatile
  5499                           
  5500                           ;system.c: 218: INTCON3bits.INT2IP = 0b0;
  5501  002D8C  9EF0               	bcf	intcon3,7,c	;volatile
  5502                           
  5503                           ;system.c: 219: INTCON3bits.INT2IF = 0;
  5504  002D8E  92F0               	bcf	intcon3,1,c	;volatile
  5505                           
  5506                           ;system.c: 220: INTCON3bits.INT1IF = 0;
  5507  002D90  90F0               	bcf	intcon3,0,c	;volatile
  5508                           
  5509                           ;system.c: 227: PIR1bits.ADIF = 0;
  5510  002D92  9C9E               	bcf	3998,6,c	;volatile
  5511                           
  5512                           ;system.c: 228: PIR1bits.RCIF = 0;
  5513  002D94  9A9E               	bcf	3998,5,c	;volatile
  5514                           
  5515                           ;system.c: 229: PIR1bits.TXIF = 0;
  5516  002D96  989E               	bcf	3998,4,c	;volatile
  5517                           
  5518                           ;system.c: 230: PIR1bits.SSPIF = 0;
  5519  002D98  969E               	bcf	3998,3,c	;volatile
  5520                           
  5521                           ;system.c: 231: PIR1bits.CCP1IF = 0;
  5522  002D9A  949E               	bcf	3998,2,c	;volatile
  5523                           
  5524                           ;system.c: 232: PIR1bits.TMR2IF = 0;
  5525  002D9C  929E               	bcf	3998,1,c	;volatile
  5526                           
  5527                           ;system.c: 233: PIR1bits.TMR1IF = 0;
  5528  002D9E  909E               	bcf	3998,0,c	;volatile
  5529                           
  5530                           ;system.c: 236: PIR2bits.OSFIF = 0;
  5531  002DA0  9EA1               	bcf	4001,7,c	;volatile
  5532                           
  5533                           ;system.c: 237: PIR2bits.EEIF = 0;
  5534  002DA2  98A1               	bcf	4001,4,c	;volatile
  5535                           
  5536                           ;system.c: 238: PIR2bits.LVDIF = 0;
  5537  002DA4  94A1               	bcf	4001,2,c	;volatile
  5538                           
  5539                           ;system.c: 239: PIR2bits.CCP2IF = 0;
  5540  002DA6  90A1               	bcf	4001,0,c	;volatile
  5541                           
  5542                           ;system.c: 242: PIR3bits.PTIF = 0;
  5543  002DA8  98A4               	bcf	4004,4,c	;volatile
  5544                           
  5545                           ;system.c: 243: PIR3bits.IC3DRIF = 0;
  5546  002DAA  96A4               	bcf	4004,3,c	;volatile
  5547                           
  5548                           ;system.c: 244: PIR3bits.IC2QEIF = 0;
  5549  002DAC  94A4               	bcf	4004,2,c	;volatile
  5550                           
  5551                           ;system.c: 245: PIR3bits.IC1IF = 0;
  5552  002DAE  92A4               	bcf	4004,1,c	;volatile
  5553                           
  5554                           ;system.c: 246: PIR3bits.TMR5IF = 0;
  5555  002DB0  90A4               	bcf	4004,0,c	;volatile
  5556                           
  5557                           ;system.c: 253: RCONbits.IPEN = 1;
  5558  002DB2  8ED0               	bsf	4048,7,c	;volatile
  5559                           
  5560                           ;system.c: 256: IPR1bits.ADIP = 0b0;
  5561  002DB4  9C9F               	bcf	3999,6,c	;volatile
  5562                           
  5563                           ;system.c: 257: IPR1bits.RC1IP = 0b1;
  5564  002DB6  8A9F               	bsf	3999,5,c	;volatile
  5565                           
  5566                           ;system.c: 258: IPR1bits.TX1IP = 0b0;
  5567  002DB8  989F               	bcf	3999,4,c	;volatile
  5568                           
  5569                           ;system.c: 259: IPR1bits.SSPIP = 0;
  5570  002DBA  969F               	bcf	3999,3,c	;volatile
  5571                           
  5572                           ;system.c: 260: IPR1bits.CCP1IP = 0;
  5573  002DBC  949F               	bcf	3999,2,c	;volatile
  5574                           
  5575                           ;system.c: 261: IPR1bits.TMR2IP = 0b0;
  5576  002DBE  929F               	bcf	3999,1,c	;volatile
  5577                           
  5578                           ;system.c: 262: IPR1bits.TMR1IP = 0b1;
  5579  002DC0  809F               	bsf	3999,0,c	;volatile
  5580                           
  5581                           ;system.c: 265: IPR2bits.OSFIP = 0;
  5582  002DC2  9EA2               	bcf	4002,7,c	;volatile
  5583                           
  5584                           ;system.c: 266: IPR2bits.EEIP = 1;
  5585  002DC4  88A2               	bsf	4002,4,c	;volatile
  5586                           
  5587                           ;system.c: 267: IPR2bits.LVDIP = 0;
  5588  002DC6  94A2               	bcf	4002,2,c	;volatile
  5589                           
  5590                           ;system.c: 268: IPR2bits.CCP2IP = 0;
  5591  002DC8  90A2               	bcf	4002,0,c	;volatile
  5592                           
  5593                           ;system.c: 271: IPR3bits.PTIP = 0;
  5594  002DCA  98A5               	bcf	4005,4,c	;volatile
  5595                           
  5596                           ;system.c: 272: IPR3bits.IC3DRIP = 0b1;
  5597  002DCC  86A5               	bsf	4005,3,c	;volatile
  5598                           
  5599                           ;system.c: 273: IPR3bits.IC2QEIP = 0b1;
  5600  002DCE  84A5               	bsf	4005,2,c	;volatile
  5601                           
  5602                           ;system.c: 274: IPR3bits.IC1IP = 0;
  5603  002DD0  92A5               	bcf	4005,1,c	;volatile
  5604                           
  5605                           ;system.c: 275: IPR3bits.TMR5IP = 0b0;
  5606  002DD2  90A5               	bcf	4005,0,c	;volatile
  5607                           
  5608                           ;system.c: 282: PIE1bits.ADIE = 0b0;
  5609  002DD4  9C9D               	bcf	3997,6,c	;volatile
  5610                           
  5611                           ;system.c: 283: PIE1bits.RC1IE = 0b1;
  5612  002DD6  8A9D               	bsf	3997,5,c	;volatile
  5613                           
  5614                           ;system.c: 284: PIE1bits.TXIE = 0b0;
  5615  002DD8  989D               	bcf	3997,4,c	;volatile
  5616                           
  5617                           ;system.c: 285: PIE1bits.SSPIE = 0;
  5618  002DDA  969D               	bcf	3997,3,c	;volatile
  5619                           
  5620                           ;system.c: 286: PIE1bits.CCP1IE = 0;
  5621  002DDC  949D               	bcf	3997,2,c	;volatile
  5622                           
  5623                           ;system.c: 287: PIE1bits.TMR2IE = 0b0;
  5624  002DDE  929D               	bcf	3997,1,c	;volatile
  5625                           
  5626                           ;system.c: 288: PIE1bits.TMR1IE = 0b1;
  5627  002DE0  809D               	bsf	3997,0,c	;volatile
  5628                           
  5629                           ;system.c: 291: PIE2bits.OSFIE = 0;
  5630  002DE2  9EA0               	bcf	4000,7,c	;volatile
  5631                           
  5632                           ;system.c: 292: PIE2bits.EEIE = 1;
  5633  002DE4  88A0               	bsf	4000,4,c	;volatile
  5634                           
  5635                           ;system.c: 293: PIE2bits.LVDIE = 0;
  5636  002DE6  94A0               	bcf	4000,2,c	;volatile
  5637                           
  5638                           ;system.c: 294: PIE2bits.CCP2IE = 0;
  5639  002DE8  90A0               	bcf	4000,0,c	;volatile
  5640                           
  5641                           ;system.c: 297: PIE3bits.PTIE = 0;
  5642  002DEA  98A3               	bcf	4003,4,c	;volatile
  5643                           
  5644                           ;system.c: 298: PIE3bits.IC3DRIE = 0b0;
  5645  002DEC  96A3               	bcf	4003,3,c	;volatile
  5646                           
  5647                           ;system.c: 299: PIE3bits.IC2QEIE = 0b1;
  5648  002DEE  84A3               	bsf	4003,2,c	;volatile
  5649                           
  5650                           ;system.c: 300: PIE3bits.IC1IE = 0;
  5651  002DF0  92A3               	bcf	4003,1,c	;volatile
  5652                           
  5653                           ;system.c: 301: PIE3bits.TMR5IE = 0b0;
  5654  002DF2  90A3               	bcf	4003,0,c	;volatile
  5655  002DF4  0012               	return		;funcret
  5656  002DF6                     __end_of_ConfigInterrupt:
  5657                           	opt stack 0
  5658                           tblptru	equ	0xFF8
  5659                           tblptrh	equ	0xFF7
  5660                           tblptrl	equ	0xFF6
  5661                           tablat	equ	0xFF5
  5662                           intcon	equ	0xFF2
  5663                           intcon2	equ	0xFF1
  5664                           intcon3	equ	0xFF0
  5665                           postinc0	equ	0xFEE
  5666                           plusw0	equ	0xFEB
  5667                           wreg	equ	0xFE8
  5668                           postinc1	equ	0xFE6
  5669                           postdec1	equ	0xFE5
  5670                           plusw1	equ	0xFE3
  5671                           fsr1h	equ	0xFE2
  5672                           fsr1l	equ	0xFE1
  5673                           postinc2	equ	0xFDE
  5674                           postdec2	equ	0xFDD
  5675                           fsr2h	equ	0xFDA
  5676                           fsr2l	equ	0xFD9
  5677                           status	equ	0xFD8
  5678                           
  5679 ;; *************** function _get_distance *****************
  5680 ;; Defined at:
  5681 ;;		line 82 in file "triangulation.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;  ancien          6  123[BANK0 ] struct .
  5684 ;;  actu            6  129[BANK0 ] struct .
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;  delta_y         3    9[BANK1 ] struct .
  5687 ;;  delta_x         3    6[BANK1 ] struct .
  5688 ;;  distance        3    0[BANK1 ] struct .
  5689 ;; Return value:  Size  Location     Type
  5690 ;;                  3  123[BANK0 ] struct .
  5691 ;; Registers used:
  5692 ;;		wreg, status,2, status,0, cstack
  5693 ;; Tracked objects:
  5694 ;;		On entry : 0/0
  5695 ;;		On exit  : 0/0
  5696 ;;		Unchanged: 0/0
  5697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5698 ;;      Params:         0      12       0       0
  5699 ;;      Locals:         0       0      12       0
  5700 ;;      Temps:          0       0       0       0
  5701 ;;      Totals:         0      12      12       0
  5702 ;;Total ram usage:       24 bytes
  5703 ;; Hardware stack levels used:    1
  5704 ;; Hardware stack levels required when called:   10
  5705 ;; This function calls:
  5706 ;;		___ftadd
  5707 ;;		___ftmul
  5708 ;;		___ftneg
  5709 ;;		_sqrt
  5710 ;; This function is called by:
  5711 ;;		_main
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           	psect	text25
  5716  0025FC                     __ptext25:
  5717                           	opt stack 0
  5718  0025FC                     _get_distance:
  5719                           	opt stack 20
  5720                           
  5721                           ;triangulation.c: 84: double delta_x, delta_y, distance;
  5722                           ;triangulation.c: 86: delta_x = ancien.x - actu.x;
  5723                           
  5724                           ;incstack = 0
  5725  0025FC  C0E1  F077         	movff	get_distance@actu,___ftneg@f1
  5726  002600  C0E2  F078         	movff	get_distance@actu+1,___ftneg@f1+1
  5727  002604  C0E3  F079         	movff	get_distance@actu+2,___ftneg@f1+2
  5728  002608  EC63  F01A         	call	___ftneg	;wreg free
  5729  00260C  C077  F07A         	movff	?___ftneg,___ftadd@f1
  5730  002610  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  5731  002614  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  5732  002618  C0DB  F07D         	movff	get_distance@ancien,___ftadd@f2
  5733  00261C  C0DC  F07E         	movff	get_distance@ancien+1,___ftadd@f2+1
  5734  002620  C0DD  F07F         	movff	get_distance@ancien+2,___ftadd@f2+2
  5735  002624  ECE7  F00D         	call	___ftadd	;wreg free
  5736  002628  C07A  F198         	movff	?___ftadd,get_distance@delta_x
  5737  00262C  C07B  F199         	movff	?___ftadd+1,get_distance@delta_x+1
  5738  002630  C07C  F19A         	movff	?___ftadd+2,get_distance@delta_x+2
  5739                           
  5740                           ;triangulation.c: 87: delta_y = ancien.y - actu.y;
  5741  002634  C0E4  F077         	movff	get_distance@actu+3,___ftneg@f1
  5742  002638  C0E5  F078         	movff	get_distance@actu+4,___ftneg@f1+1
  5743  00263C  C0E6  F079         	movff	get_distance@actu+5,___ftneg@f1+2
  5744  002640  EC63  F01A         	call	___ftneg	;wreg free
  5745  002644  C077  F07A         	movff	?___ftneg,___ftadd@f1
  5746  002648  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  5747  00264C  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  5748  002650  C0DE  F07D         	movff	get_distance@ancien+3,___ftadd@f2
  5749  002654  C0DF  F07E         	movff	get_distance@ancien+4,___ftadd@f2+1
  5750  002658  C0E0  F07F         	movff	get_distance@ancien+5,___ftadd@f2+2
  5751  00265C  ECE7  F00D         	call	___ftadd	;wreg free
  5752  002660  C07A  F19B         	movff	?___ftadd,get_distance@delta_y
  5753  002664  C07B  F19C         	movff	?___ftadd+1,get_distance@delta_y+1
  5754  002668  C07C  F19D         	movff	?___ftadd+2,get_distance@delta_y+2
  5755                           
  5756                           ;triangulation.c: 88: distance = sqrt (delta_x * delta_x + delta_y * delta_y);
  5757  00266C  C198  F06B         	movff	get_distance@delta_x,___ftmul@f2
  5758  002670  C199  F06C         	movff	get_distance@delta_x+1,___ftmul@f2+1
  5759  002674  C19A  F06D         	movff	get_distance@delta_x+2,___ftmul@f2+2
  5760  002678  C198  F068         	movff	get_distance@delta_x,___ftmul@f1
  5761  00267C  C199  F069         	movff	get_distance@delta_x+1,___ftmul@f1+1
  5762  002680  C19A  F06A         	movff	get_distance@delta_x+2,___ftmul@f1+2
  5763  002684  EC08  F010         	call	___ftmul	;wreg free
  5764  002688  C068  F07A         	movff	?___ftmul,___ftadd@f1
  5765  00268C  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  5766  002690  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  5767  002694  C19B  F06B         	movff	get_distance@delta_y,___ftmul@f2
  5768  002698  C19C  F06C         	movff	get_distance@delta_y+1,___ftmul@f2+1
  5769  00269C  C19D  F06D         	movff	get_distance@delta_y+2,___ftmul@f2+2
  5770  0026A0  C19B  F068         	movff	get_distance@delta_y,___ftmul@f1
  5771  0026A4  C19C  F069         	movff	get_distance@delta_y+1,___ftmul@f1+1
  5772  0026A8  C19D  F06A         	movff	get_distance@delta_y+2,___ftmul@f1+2
  5773  0026AC  EC08  F010         	call	___ftmul	;wreg free
  5774  0026B0  C068  F07D         	movff	?___ftmul,___ftadd@f2
  5775  0026B4  C069  F07E         	movff	?___ftmul+1,___ftadd@f2+1
  5776  0026B8  C06A  F07F         	movff	?___ftmul+2,___ftadd@f2+2
  5777  0026BC  ECE7  F00D         	call	___ftadd	;wreg free
  5778  0026C0  C07A  F195         	movff	?___ftadd,_get_distance$3141
  5779  0026C4  C07B  F196         	movff	?___ftadd+1,_get_distance$3141+1
  5780  0026C8  C07C  F197         	movff	?___ftadd+2,_get_distance$3141+2
  5781                           
  5782                           ;triangulation.c: 88: distance = sqrt (delta_x * delta_x + delta_y * delta_y);
  5783  0026CC  C195  F0C8         	movff	_get_distance$3141,sqrt@y
  5784  0026D0  C196  F0C9         	movff	_get_distance$3141+1,sqrt@y+1
  5785  0026D4  C197  F0CA         	movff	_get_distance$3141+2,sqrt@y+2
  5786  0026D8  EC26  F00F         	call	_sqrt	;wreg free
  5787  0026DC  C0C8  F192         	movff	?_sqrt,get_distance@distance
  5788  0026E0  C0C9  F193         	movff	?_sqrt+1,get_distance@distance+1
  5789  0026E4  C0CA  F194         	movff	?_sqrt+2,get_distance@distance+2
  5790                           
  5791                           ;triangulation.c: 90: return distance;
  5792  0026E8  C192  F0DB         	movff	get_distance@distance,?_get_distance
  5793  0026EC  C193  F0DC         	movff	get_distance@distance+1,?_get_distance+1
  5794  0026F0  C194  F0DD         	movff	get_distance@distance+2,?_get_distance+2
  5795  0026F4  D000               	goto	l521
  5796  0026F6                     l521:
  5797  0026F6  0012               	return		;funcret
  5798  0026F8                     __end_of_get_distance:
  5799                           	opt stack 0
  5800                           tblptru	equ	0xFF8
  5801                           tblptrh	equ	0xFF7
  5802                           tblptrl	equ	0xFF6
  5803                           tablat	equ	0xFF5
  5804                           intcon	equ	0xFF2
  5805                           intcon2	equ	0xFF1
  5806                           intcon3	equ	0xFF0
  5807                           postinc0	equ	0xFEE
  5808                           plusw0	equ	0xFEB
  5809                           wreg	equ	0xFE8
  5810                           postinc1	equ	0xFE6
  5811                           postdec1	equ	0xFE5
  5812                           plusw1	equ	0xFE3
  5813                           fsr1h	equ	0xFE2
  5814                           fsr1l	equ	0xFE1
  5815                           postinc2	equ	0xFDE
  5816                           postdec2	equ	0xFDD
  5817                           fsr2h	equ	0xFDA
  5818                           fsr2l	equ	0xFD9
  5819                           status	equ	0xFD8
  5820                           
  5821 ;; *************** function _sqrt *****************
  5822 ;; Defined at:
  5823 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\sqrt.c"
  5824 ;; Parameters:    Size  Location     Type
  5825 ;;  y               3  104[BANK0 ] struct .
  5826 ;; Auto vars:     Size  Location     Type
  5827 ;;  x               3  120[BANK0 ] struct .
  5828 ;;  q               3  117[BANK0 ] struct .
  5829 ;;  z               3  113[BANK0 ] struct .
  5830 ;;  og              3  110[BANK0 ] struct .
  5831 ;;  i               1  116[BANK0 ] unsigned char 
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  3  104[BANK0 ] unsigned char 
  5834 ;; Registers used:
  5835 ;;		wreg, status,2, status,0, cstack
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5841 ;;      Params:         0       3       0       0
  5842 ;;      Locals:         0      13       0       0
  5843 ;;      Temps:          0       3       0       0
  5844 ;;      Totals:         0      19       0       0
  5845 ;;Total ram usage:       19 bytes
  5846 ;; Hardware stack levels used:    1
  5847 ;; Hardware stack levels required when called:    9
  5848 ;; This function calls:
  5849 ;;		___ftge
  5850 ;;		___ftmul
  5851 ;;		___ftsub
  5852 ;; This function is called by:
  5853 ;;		_get_distance
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           
  5857                           	psect	text26
  5858  001E4C                     __ptext26:
  5859                           	opt stack 0
  5860  001E4C                     _sqrt:
  5861                           	opt stack 20
  5862                           
  5863                           ;incstack = 0
  5864  001E4C  0E00               	movlw	0
  5865  001E4E  0100               	movlb	0	; () banked
  5866  001E50  6F7A               	movwf	___ftge@ff1& (0+255),b
  5867  001E52  0E00               	movlw	0
  5868  001E54  0100               	movlb	0	; () banked
  5869  001E56  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  5870  001E58  0E00               	movlw	0
  5871  001E5A  0100               	movlb	0	; () banked
  5872  001E5C  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  5873  001E5E  C0C8  F07D         	movff	sqrt@y,___ftge@ff2
  5874  001E62  C0C9  F07E         	movff	sqrt@y+1,___ftge@ff2+1
  5875  001E66  C0CA  F07F         	movff	sqrt@y+2,___ftge@ff2+2
  5876  001E6A  ECCC  F014         	call	___ftge	;wreg free
  5877  001E6E  0100               	movlb	0	; () banked
  5878  001E70  A0D8               	btfss	status,0,c
  5879  001E72  D012               	goto	l1091
  5880                           
  5881                           ; BSR set to: 0
  5882  001E74  0100               	movlb	0	; () banked
  5883  001E76  AFCA               	btfss	(sqrt@y+2)& (0+255),7,b
  5884  001E78  D005               	goto	l1092
  5885                           
  5886                           ; BSR set to: 0
  5887  001E7A  0E00               	movlw	0
  5888  001E7C  0100               	movlb	0	; () banked
  5889  001E7E  6FFA               	movwf	(_errno+1)& (0+255),b
  5890  001E80  0E21               	movlw	33
  5891  001E82  6FF9               	movwf	_errno& (0+255),b
  5892  001E84                     l1092:
  5893                           
  5894                           ; BSR set to: 0
  5895  001E84  0E00               	movlw	0
  5896  001E86  0100               	movlb	0	; () banked
  5897  001E88  6FC8               	movwf	?_sqrt& (0+255),b
  5898  001E8A  0E00               	movlw	0
  5899  001E8C  0100               	movlb	0	; () banked
  5900  001E8E  6FC9               	movwf	(?_sqrt+1)& (0+255),b
  5901  001E90  0E00               	movlw	0
  5902  001E92  0100               	movlb	0	; () banked
  5903  001E94  6FCA               	movwf	(?_sqrt+2)& (0+255),b
  5904                           
  5905                           ; BSR set to: 0
  5906  001E96  D0BB               	goto	l1093
  5907  001E98                     l1091:
  5908                           
  5909                           ; BSR set to: 0
  5910  001E98  C0C8  F0D1         	movff	sqrt@y,sqrt@z
  5911  001E9C  C0C9  F0D2         	movff	sqrt@y+1,sqrt@z+1
  5912  001EA0  C0CA  F0D3         	movff	sqrt@y+2,sqrt@z+2
  5913                           
  5914                           ; BSR set to: 0
  5915  001EA4  C0C8  F0CB         	movff	sqrt@y,??_sqrt
  5916  001EA8  C0C9  F0CC         	movff	sqrt@y+1,??_sqrt+1
  5917  001EAC  C0CA  F0CD         	movff	sqrt@y+2,??_sqrt+2
  5918  001EB0  0100               	movlb	0	; () banked
  5919  001EB2  1FCB               	comf	??_sqrt& (0+255),f,b
  5920  001EB4  1FCC               	comf	(??_sqrt+1)& (0+255),f,b
  5921  001EB6  1FCD               	comf	(??_sqrt+2)& (0+255),f,b
  5922  001EB8  2BCB               	incf	??_sqrt& (0+255),f,b
  5923  001EBA  0E00               	movlw	0
  5924  001EBC  23CC               	addwfc	(??_sqrt+1)& (0+255),f,b
  5925  001EBE  23CD               	addwfc	(??_sqrt+2)& (0+255),f,b
  5926  001EC0  0EC8               	movlw	200
  5927  001EC2  0100               	movlb	0	; () banked
  5928  001EC4  25CB               	addwf	??_sqrt& (0+255),w,b
  5929  001EC6  0100               	movlb	0	; () banked
  5930  001EC8  6FD8               	movwf	sqrt@x& (0+255),b
  5931  001ECA  0E6E               	movlw	110
  5932  001ECC  0100               	movlb	0	; () banked
  5933  001ECE  21CC               	addwfc	(??_sqrt+1)& (0+255),w,b
  5934  001ED0  0100               	movlb	0	; () banked
  5935  001ED2  6FD9               	movwf	(sqrt@x+1)& (0+255),b
  5936  001ED4  0EBE               	movlw	190
  5937  001ED6  0100               	movlb	0	; () banked
  5938  001ED8  21CD               	addwfc	(??_sqrt+2)& (0+255),w,b
  5939  001EDA  0100               	movlb	0	; () banked
  5940  001EDC  6FDA               	movwf	(sqrt@x+2)& (0+255),b
  5941                           
  5942                           ; BSR set to: 0
  5943  001EDE  0100               	movlb	0	; () banked
  5944  001EE0  90D8               	bcf	status,0,c
  5945  001EE2  33DA               	rrcf	(sqrt@x+2)& (0+255),f,b
  5946  001EE4  33D9               	rrcf	(sqrt@x+1)& (0+255),f,b
  5947  001EE6  33D8               	rrcf	sqrt@x& (0+255),f,b
  5948                           
  5949                           ; BSR set to: 0
  5950  001EE8  0E00               	movlw	0
  5951  001EEA  0100               	movlb	0	; () banked
  5952  001EEC  5FD1               	subwf	sqrt@z& (0+255),f,b
  5953  001EEE  0E80               	movlw	128
  5954  001EF0  0100               	movlb	0	; () banked
  5955  001EF2  5BD2               	subwfb	(sqrt@z+1)& (0+255),f,b
  5956  001EF4  0E00               	movlw	0
  5957  001EF6  0100               	movlb	0	; () banked
  5958  001EF8  5BD3               	subwfb	(sqrt@z+2)& (0+255),f,b
  5959                           
  5960                           ; BSR set to: 0
  5961  001EFA  0E04               	movlw	4
  5962  001EFC  0100               	movlb	0	; () banked
  5963  001EFE  6FD4               	movwf	sqrt@i& (0+255),b
  5964  001F00  D000               	goto	l4178
  5965  001F02                     l4178:
  5966                           
  5967                           ; BSR set to: 0
  5968  001F02  C0D8  F0CE         	movff	sqrt@x,sqrt@og
  5969  001F06  C0D9  F0CF         	movff	sqrt@x+1,sqrt@og+1
  5970  001F0A  C0DA  F0D0         	movff	sqrt@x+2,sqrt@og+2
  5971                           
  5972                           ; BSR set to: 0
  5973  001F0E  C0D8  F068         	movff	sqrt@x,___ftmul@f1
  5974  001F12  C0D9  F069         	movff	sqrt@x+1,___ftmul@f1+1
  5975  001F16  C0DA  F06A         	movff	sqrt@x+2,___ftmul@f1+2
  5976  001F1A  C0D1  F06B         	movff	sqrt@z,___ftmul@f2
  5977  001F1E  C0D2  F06C         	movff	sqrt@z+1,___ftmul@f2+1
  5978  001F22  C0D3  F06D         	movff	sqrt@z+2,___ftmul@f2+2
  5979  001F26  EC08  F010         	call	___ftmul	;wreg free
  5980  001F2A  C068  F0D5         	movff	?___ftmul,sqrt@q
  5981  001F2E  C069  F0D6         	movff	?___ftmul+1,sqrt@q+1
  5982  001F32  C06A  F0D7         	movff	?___ftmul+2,sqrt@q+2
  5983  001F36  C0D5  F068         	movff	sqrt@q,___ftmul@f1
  5984  001F3A  C0D6  F069         	movff	sqrt@q+1,___ftmul@f1+1
  5985  001F3E  C0D7  F06A         	movff	sqrt@q+2,___ftmul@f1+2
  5986  001F42  C0D8  F06B         	movff	sqrt@x,___ftmul@f2
  5987  001F46  C0D9  F06C         	movff	sqrt@x+1,___ftmul@f2+1
  5988  001F4A  C0DA  F06D         	movff	sqrt@x+2,___ftmul@f2+2
  5989  001F4E  EC08  F010         	call	___ftmul	;wreg free
  5990  001F52  C068  F0D5         	movff	?___ftmul,sqrt@q
  5991  001F56  C069  F0D6         	movff	?___ftmul+1,sqrt@q+1
  5992  001F5A  C06A  F0D7         	movff	?___ftmul+2,sqrt@q+2
  5993  001F5E  C0D5  F068         	movff	sqrt@q,___ftmul@f1
  5994  001F62  C0D6  F069         	movff	sqrt@q+1,___ftmul@f1+1
  5995  001F66  C0D7  F06A         	movff	sqrt@q+2,___ftmul@f1+2
  5996  001F6A  C0D8  F06B         	movff	sqrt@x,___ftmul@f2
  5997  001F6E  C0D9  F06C         	movff	sqrt@x+1,___ftmul@f2+1
  5998  001F72  C0DA  F06D         	movff	sqrt@x+2,___ftmul@f2+2
  5999  001F76  EC08  F010         	call	___ftmul	;wreg free
  6000  001F7A  C068  F0D5         	movff	?___ftmul,sqrt@q
  6001  001F7E  C069  F0D6         	movff	?___ftmul+1,sqrt@q+1
  6002  001F82  C06A  F0D7         	movff	?___ftmul+2,sqrt@q+2
  6003  001F86  C0D8  F068         	movff	sqrt@x,___ftmul@f1
  6004  001F8A  C0D9  F069         	movff	sqrt@x+1,___ftmul@f1+1
  6005  001F8E  C0DA  F06A         	movff	sqrt@x+2,___ftmul@f1+2
  6006  001F92  0E00               	movlw	0
  6007  001F94  0100               	movlb	0	; () banked
  6008  001F96  6F6B               	movwf	___ftmul@f2& (0+255),b
  6009  001F98  0EC0               	movlw	192
  6010  001F9A  0100               	movlb	0	; () banked
  6011  001F9C  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  6012  001F9E  0E3F               	movlw	63
  6013  001FA0  0100               	movlb	0	; () banked
  6014  001FA2  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  6015  001FA4  EC08  F010         	call	___ftmul	;wreg free
  6016  001FA8  C068  F0D8         	movff	?___ftmul,sqrt@x
  6017  001FAC  C069  F0D9         	movff	?___ftmul+1,sqrt@x+1
  6018  001FB0  C06A  F0DA         	movff	?___ftmul+2,sqrt@x+2
  6019  001FB4  C0D8  F0C2         	movff	sqrt@x,___ftsub@f1
  6020  001FB8  C0D9  F0C3         	movff	sqrt@x+1,___ftsub@f1+1
  6021  001FBC  C0DA  F0C4         	movff	sqrt@x+2,___ftsub@f1+2
  6022  001FC0  C0D5  F0C5         	movff	sqrt@q,___ftsub@f2
  6023  001FC4  C0D6  F0C6         	movff	sqrt@q+1,___ftsub@f2+1
  6024  001FC8  C0D7  F0C7         	movff	sqrt@q+2,___ftsub@f2+2
  6025  001FCC  ECF0  F018         	call	___ftsub	;wreg free
  6026  001FD0  C0C2  F0D8         	movff	?___ftsub,sqrt@x
  6027  001FD4  C0C3  F0D9         	movff	?___ftsub+1,sqrt@x+1
  6028  001FD8  C0C4  F0DA         	movff	?___ftsub+2,sqrt@x+2
  6029  001FDC  0100               	movlb	0	; () banked
  6030  001FDE  2FD4               	decfsz	sqrt@i& (0+255),f,b
  6031  001FE0  D790               	goto	l4178
  6032  001FE2  D000               	goto	l4192
  6033  001FE4                     l4192:
  6034                           
  6035                           ; BSR set to: 0
  6036  001FE4  C0D8  F068         	movff	sqrt@x,___ftmul@f1
  6037  001FE8  C0D9  F069         	movff	sqrt@x+1,___ftmul@f1+1
  6038  001FEC  C0DA  F06A         	movff	sqrt@x+2,___ftmul@f1+2
  6039  001FF0  C0C8  F06B         	movff	sqrt@y,___ftmul@f2
  6040  001FF4  C0C9  F06C         	movff	sqrt@y+1,___ftmul@f2+1
  6041  001FF8  C0CA  F06D         	movff	sqrt@y+2,___ftmul@f2+2
  6042  001FFC  EC08  F010         	call	___ftmul	;wreg free
  6043  002000  C068  F0C8         	movff	?___ftmul,?_sqrt
  6044  002004  C069  F0C9         	movff	?___ftmul+1,?_sqrt+1
  6045  002008  C06A  F0CA         	movff	?___ftmul+2,?_sqrt+2
  6046  00200C  D000               	goto	l1093
  6047  00200E                     l1093:
  6048  00200E  0012               	return		;funcret
  6049  002010                     __end_of_sqrt:
  6050                           	opt stack 0
  6051                           tblptru	equ	0xFF8
  6052                           tblptrh	equ	0xFF7
  6053                           tblptrl	equ	0xFF6
  6054                           tablat	equ	0xFF5
  6055                           intcon	equ	0xFF2
  6056                           intcon2	equ	0xFF1
  6057                           intcon3	equ	0xFF0
  6058                           postinc0	equ	0xFEE
  6059                           plusw0	equ	0xFEB
  6060                           wreg	equ	0xFE8
  6061                           postinc1	equ	0xFE6
  6062                           postdec1	equ	0xFE5
  6063                           plusw1	equ	0xFE3
  6064                           fsr1h	equ	0xFE2
  6065                           fsr1l	equ	0xFE1
  6066                           postinc2	equ	0xFDE
  6067                           postdec2	equ	0xFDD
  6068                           fsr2h	equ	0xFDA
  6069                           fsr2l	equ	0xFD9
  6070                           status	equ	0xFD8
  6071                           
  6072 ;; *************** function ___ftsub *****************
  6073 ;; Defined at:
  6074 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;  f1              3   98[BANK0 ] float 
  6077 ;;  f2              3  101[BANK0 ] float 
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;		None
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  3   98[BANK0 ] float 
  6082 ;; Registers used:
  6083 ;;		wreg, status,2, status,0, cstack
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6089 ;;      Params:         0       6       0       0
  6090 ;;      Locals:         0       0       0       0
  6091 ;;      Temps:          0       0       0       0
  6092 ;;      Totals:         0       6       0       0
  6093 ;;Total ram usage:        6 bytes
  6094 ;; Hardware stack levels used:    1
  6095 ;; Hardware stack levels required when called:    8
  6096 ;; This function calls:
  6097 ;;		___ftadd
  6098 ;; This function is called by:
  6099 ;;		_sqrt
  6100 ;;		_sin
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text27
  6105  0031E0                     __ptext27:
  6106                           	opt stack 0
  6107  0031E0                     ___ftsub:
  6108                           	opt stack 18
  6109                           
  6110                           ;incstack = 0
  6111  0031E0  0100               	movlb	0	; () banked
  6112  0031E2  51C5               	movf	___ftsub@f2& (0+255),w,b
  6113  0031E4  0100               	movlb	0	; () banked
  6114  0031E6  11C6               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  6115  0031E8  0100               	movlb	0	; () banked
  6116  0031EA  11C7               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  6117  0031EC  B4D8               	btfsc	status,2,c
  6118  0031EE  D00A               	goto	l3860
  6119                           
  6120                           ; BSR set to: 0
  6121  0031F0  0E00               	movlw	0
  6122  0031F2  0100               	movlb	0	; () banked
  6123  0031F4  1BC5               	xorwf	___ftsub@f2& (0+255),f,b
  6124  0031F6  0E00               	movlw	0
  6125  0031F8  0100               	movlb	0	; () banked
  6126  0031FA  1BC6               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  6127  0031FC  0E80               	movlw	128
  6128  0031FE  0100               	movlb	0	; () banked
  6129  003200  1BC7               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  6130  003202  D000               	goto	l3860
  6131  003204                     l3860:
  6132                           
  6133                           ; BSR set to: 0
  6134  003204  C0C2  F07A         	movff	___ftsub@f1,___ftadd@f1
  6135  003208  C0C3  F07B         	movff	___ftsub@f1+1,___ftadd@f1+1
  6136  00320C  C0C4  F07C         	movff	___ftsub@f1+2,___ftadd@f1+2
  6137  003210  C0C5  F07D         	movff	___ftsub@f2,___ftadd@f2
  6138  003214  C0C6  F07E         	movff	___ftsub@f2+1,___ftadd@f2+1
  6139  003218  C0C7  F07F         	movff	___ftsub@f2+2,___ftadd@f2+2
  6140  00321C  ECE7  F00D         	call	___ftadd	;wreg free
  6141  003220  C07A  F0C2         	movff	?___ftadd,?___ftsub
  6142  003224  C07B  F0C3         	movff	?___ftadd+1,?___ftsub+1
  6143  003228  C07C  F0C4         	movff	?___ftadd+2,?___ftsub+2
  6144  00322C  D000               	goto	l953
  6145  00322E                     l953:
  6146  00322E  0012               	return		;funcret
  6147  003230                     __end_of___ftsub:
  6148                           	opt stack 0
  6149                           tblptru	equ	0xFF8
  6150                           tblptrh	equ	0xFF7
  6151                           tblptrl	equ	0xFF6
  6152                           tablat	equ	0xFF5
  6153                           intcon	equ	0xFF2
  6154                           intcon2	equ	0xFF1
  6155                           intcon3	equ	0xFF0
  6156                           postinc0	equ	0xFEE
  6157                           plusw0	equ	0xFEB
  6158                           wreg	equ	0xFE8
  6159                           postinc1	equ	0xFE6
  6160                           postdec1	equ	0xFE5
  6161                           plusw1	equ	0xFE3
  6162                           fsr1h	equ	0xFE2
  6163                           fsr1l	equ	0xFE1
  6164                           postinc2	equ	0xFDE
  6165                           postdec2	equ	0xFDD
  6166                           fsr2h	equ	0xFDA
  6167                           fsr2l	equ	0xFD9
  6168                           status	equ	0xFD8
  6169                           
  6170 ;; *************** function ___ftadd *****************
  6171 ;; Defined at:
  6172 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  6173 ;; Parameters:    Size  Location     Type
  6174 ;;  f1              3   26[BANK0 ] float 
  6175 ;;  f2              3   29[BANK0 ] float 
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;  exp1            1   37[BANK0 ] unsigned char 
  6178 ;;  exp2            1   36[BANK0 ] unsigned char 
  6179 ;;  sign            1   35[BANK0 ] unsigned char 
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  3   26[BANK0 ] float 
  6182 ;; Registers used:
  6183 ;;		wreg, status,2, status,0, cstack
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6189 ;;      Params:         0       6       0       0
  6190 ;;      Locals:         0       3       0       0
  6191 ;;      Temps:          0       3       0       0
  6192 ;;      Totals:         0      12       0       0
  6193 ;;Total ram usage:       12 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; Hardware stack levels required when called:    7
  6196 ;; This function calls:
  6197 ;;		___ftpack
  6198 ;; This function is called by:
  6199 ;;		_triangulation
  6200 ;;		_get_distance
  6201 ;;		___ftsub
  6202 ;;		_cos
  6203 ;;		_sin
  6204 ;;		_eval_poly
  6205 ;;		_floor
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           	psect	text28
  6210  001BCE                     __ptext28:
  6211                           	opt stack 0
  6212  001BCE                     ___ftadd:
  6213                           	opt stack 18
  6214                           
  6215                           ;incstack = 0
  6216  001BCE  C07C  F080         	movff	___ftadd@f1+2,??___ftadd
  6217  001BD2  0100               	movlb	0	; () banked
  6218  001BD4  6B81               	clrf	(??___ftadd+1)& (0+255),b
  6219  001BD6  6B82               	clrf	(??___ftadd+2)& (0+255),b
  6220  001BD8  0100               	movlb	0	; () banked
  6221  001BDA  357B               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  6222  001BDC  0100               	movlb	0	; () banked
  6223  001BDE  3780               	rlcf	??___ftadd& (0+255),f,b
  6224  001BE0  E301               	bnc	u3271
  6225  001BE2  8181               	bsf	(??___ftadd+1)& (0+255),0,b
  6226  001BE4                     u3271:
  6227  001BE4  0100               	movlb	0	; () banked
  6228  001BE6  5180               	movf	??___ftadd& (0+255),w,b
  6229  001BE8  0100               	movlb	0	; () banked
  6230  001BEA  6F85               	movwf	___ftadd@exp1& (0+255),b
  6231  001BEC  C07F  F080         	movff	___ftadd@f2+2,??___ftadd
  6232  001BF0  0100               	movlb	0	; () banked
  6233  001BF2  6B81               	clrf	(??___ftadd+1)& (0+255),b
  6234  001BF4  6B82               	clrf	(??___ftadd+2)& (0+255),b
  6235  001BF6  0100               	movlb	0	; () banked
  6236  001BF8  357E               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  6237  001BFA  0100               	movlb	0	; () banked
  6238  001BFC  3780               	rlcf	??___ftadd& (0+255),f,b
  6239  001BFE  E301               	bnc	u3281
  6240  001C00  8181               	bsf	(??___ftadd+1)& (0+255),0,b
  6241  001C02                     u3281:
  6242  001C02  0100               	movlb	0	; () banked
  6243  001C04  5180               	movf	??___ftadd& (0+255),w,b
  6244  001C06  0100               	movlb	0	; () banked
  6245  001C08  6F84               	movwf	___ftadd@exp2& (0+255),b
  6246                           
  6247                           ; BSR set to: 0
  6248  001C0A  0100               	movlb	0	; () banked
  6249  001C0C  5185               	movf	___ftadd@exp1& (0+255),w,b
  6250  001C0E  0100               	movlb	0	; () banked
  6251  001C10  B4D8               	btfsc	status,2,c
  6252  001C12  D011               	goto	l889
  6253                           
  6254                           ; BSR set to: 0
  6255  001C14  0100               	movlb	0	; () banked
  6256  001C16  5184               	movf	___ftadd@exp2& (0+255),w,b
  6257  001C18  0100               	movlb	0	; () banked
  6258  001C1A  5D85               	subwf	___ftadd@exp1& (0+255),w,b
  6259  001C1C  B0D8               	btfsc	status,0,c
  6260  001C1E  D012               	goto	l3620
  6261                           
  6262                           ; BSR set to: 0
  6263  001C20  0100               	movlb	0	; () banked
  6264  001C22  5185               	movf	___ftadd@exp1& (0+255),w,b
  6265  001C24  0800               	sublw	0
  6266  001C26  0100               	movlb	0	; () banked
  6267  001C28  2584               	addwf	___ftadd@exp2& (0+255),w,b
  6268  001C2A  0100               	movlb	0	; () banked
  6269  001C2C  6F80               	movwf	??___ftadd& (0+255),b
  6270  001C2E  0E18               	movlw	24
  6271  001C30  0100               	movlb	0	; () banked
  6272  001C32  6580               	cpfsgt	??___ftadd& (0+255),b
  6273  001C34  D007               	goto	l3620
  6274  001C36                     l889:
  6275                           
  6276                           ; BSR set to: 0
  6277  001C36  C07D  F07A         	movff	___ftadd@f2,?___ftadd
  6278  001C3A  C07E  F07B         	movff	___ftadd@f2+1,?___ftadd+1
  6279  001C3E  C07F  F07C         	movff	___ftadd@f2+2,?___ftadd+2
  6280  001C42  D103               	goto	l890
  6281  001C44                     l3620:
  6282                           
  6283                           ; BSR set to: 0
  6284  001C44  0100               	movlb	0	; () banked
  6285  001C46  5184               	movf	___ftadd@exp2& (0+255),w,b
  6286  001C48  0100               	movlb	0	; () banked
  6287  001C4A  B4D8               	btfsc	status,2,c
  6288  001C4C  D011               	goto	l893
  6289                           
  6290                           ; BSR set to: 0
  6291  001C4E  0100               	movlb	0	; () banked
  6292  001C50  5185               	movf	___ftadd@exp1& (0+255),w,b
  6293  001C52  0100               	movlb	0	; () banked
  6294  001C54  5D84               	subwf	___ftadd@exp2& (0+255),w,b
  6295  001C56  B0D8               	btfsc	status,0,c
  6296  001C58  D012               	goto	l3626
  6297                           
  6298                           ; BSR set to: 0
  6299  001C5A  0100               	movlb	0	; () banked
  6300  001C5C  5184               	movf	___ftadd@exp2& (0+255),w,b
  6301  001C5E  0800               	sublw	0
  6302  001C60  0100               	movlb	0	; () banked
  6303  001C62  2585               	addwf	___ftadd@exp1& (0+255),w,b
  6304  001C64  0100               	movlb	0	; () banked
  6305  001C66  6F80               	movwf	??___ftadd& (0+255),b
  6306  001C68  0E18               	movlw	24
  6307  001C6A  0100               	movlb	0	; () banked
  6308  001C6C  6580               	cpfsgt	??___ftadd& (0+255),b
  6309  001C6E  D007               	goto	l3626
  6310  001C70                     l893:
  6311                           
  6312                           ; BSR set to: 0
  6313  001C70  C07A  F07A         	movff	___ftadd@f1,?___ftadd
  6314  001C74  C07B  F07B         	movff	___ftadd@f1+1,?___ftadd+1
  6315  001C78  C07C  F07C         	movff	___ftadd@f1+2,?___ftadd+2
  6316  001C7C  D0E6               	goto	l890
  6317  001C7E                     l3626:
  6318                           
  6319                           ; BSR set to: 0
  6320  001C7E  0E06               	movlw	6
  6321  001C80  0100               	movlb	0	; () banked
  6322  001C82  6F83               	movwf	___ftadd@sign& (0+255),b
  6323                           
  6324                           ; BSR set to: 0
  6325  001C84  0100               	movlb	0	; () banked
  6326  001C86  AF7C               	btfss	(___ftadd@f1+2)& (0+255),7,b
  6327  001C88  D003               	goto	l3632
  6328                           
  6329                           ; BSR set to: 0
  6330  001C8A  0100               	movlb	0	; () banked
  6331  001C8C  8F83               	bsf	___ftadd@sign& (0+255),7,b
  6332  001C8E  D000               	goto	l3632
  6333  001C90                     l3632:
  6334                           
  6335                           ; BSR set to: 0
  6336  001C90  0100               	movlb	0	; () banked
  6337  001C92  AF7F               	btfss	(___ftadd@f2+2)& (0+255),7,b
  6338  001C94  D002               	goto	l895
  6339                           
  6340                           ; BSR set to: 0
  6341  001C96  0100               	movlb	0	; () banked
  6342  001C98  8D83               	bsf	___ftadd@sign& (0+255),6,b
  6343  001C9A                     l895:
  6344                           
  6345                           ; BSR set to: 0
  6346  001C9A  0100               	movlb	0	; () banked
  6347  001C9C  8F7B               	bsf	(___ftadd@f1+1)& (0+255),7,b
  6348                           
  6349                           ; BSR set to: 0
  6350  001C9E  0EFF               	movlw	255
  6351  001CA0  0100               	movlb	0	; () banked
  6352  001CA2  177A               	andwf	___ftadd@f1& (0+255),f,b
  6353  001CA4  0EFF               	movlw	255
  6354  001CA6  0100               	movlb	0	; () banked
  6355  001CA8  177B               	andwf	(___ftadd@f1+1)& (0+255),f,b
  6356  001CAA  0E00               	movlw	0
  6357  001CAC  0100               	movlb	0	; () banked
  6358  001CAE  177C               	andwf	(___ftadd@f1+2)& (0+255),f,b
  6359  001CB0  0100               	movlb	0	; () banked
  6360  001CB2  8F7E               	bsf	(___ftadd@f2+1)& (0+255),7,b
  6361                           
  6362                           ; BSR set to: 0
  6363  001CB4  0EFF               	movlw	255
  6364  001CB6  0100               	movlb	0	; () banked
  6365  001CB8  177D               	andwf	___ftadd@f2& (0+255),f,b
  6366  001CBA  0EFF               	movlw	255
  6367  001CBC  0100               	movlb	0	; () banked
  6368  001CBE  177E               	andwf	(___ftadd@f2+1)& (0+255),f,b
  6369  001CC0  0E00               	movlw	0
  6370  001CC2  0100               	movlb	0	; () banked
  6371  001CC4  177F               	andwf	(___ftadd@f2+2)& (0+255),f,b
  6372                           
  6373                           ; BSR set to: 0
  6374  001CC6  0100               	movlb	0	; () banked
  6375  001CC8  5184               	movf	___ftadd@exp2& (0+255),w,b
  6376  001CCA  0100               	movlb	0	; () banked
  6377  001CCC  5D85               	subwf	___ftadd@exp1& (0+255),w,b
  6378  001CCE  B0D8               	btfsc	status,0,c
  6379  001CD0  D028               	goto	l3652
  6380  001CD2                     l3642:
  6381                           
  6382                           ; BSR set to: 0
  6383  001CD2  0100               	movlb	0	; () banked
  6384  001CD4  90D8               	bcf	status,0,c
  6385  001CD6  377D               	rlcf	___ftadd@f2& (0+255),f,b
  6386  001CD8  377E               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  6387  001CDA  377F               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  6388  001CDC  0100               	movlb	0	; () banked
  6389  001CDE  0784               	decf	___ftadd@exp2& (0+255),f,b
  6390                           
  6391                           ; BSR set to: 0
  6392  001CE0  0100               	movlb	0	; () banked
  6393  001CE2  5185               	movf	___ftadd@exp1& (0+255),w,b
  6394  001CE4  0100               	movlb	0	; () banked
  6395  001CE6  1984               	xorwf	___ftadd@exp2& (0+255),w,b
  6396  001CE8  B4D8               	btfsc	status,2,c
  6397  001CEA  D013               	goto	l3650
  6398                           
  6399                           ; BSR set to: 0
  6400  001CEC  0100               	movlb	0	; () banked
  6401  001CEE  0783               	decf	___ftadd@sign& (0+255),f,b
  6402  001CF0  C083  F080         	movff	___ftadd@sign,??___ftadd
  6403  001CF4  0E07               	movlw	7
  6404  001CF6  0100               	movlb	0	; () banked
  6405  001CF8  1780               	andwf	??___ftadd& (0+255),f,b
  6406  001CFA  B4D8               	btfsc	status,2,c
  6407  001CFC  D00A               	goto	l3650
  6408  001CFE  D7E9               	goto	l3642
  6409                           
  6410                           ; BSR set to: 0
  6411                           
  6412                           ; BSR set to: 0
  6413  001D00  D008               	goto	l3650
  6414  001D02                     l3648:
  6415                           
  6416                           ; BSR set to: 0
  6417  001D02  0100               	movlb	0	; () banked
  6418  001D04  90D8               	bcf	status,0,c
  6419  001D06  337C               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  6420  001D08  337B               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  6421  001D0A  337A               	rrcf	___ftadd@f1& (0+255),f,b
  6422  001D0C  0100               	movlb	0	; () banked
  6423  001D0E  2B85               	incf	___ftadd@exp1& (0+255),f,b
  6424  001D10  D000               	goto	l3650
  6425  001D12                     l3650:
  6426                           
  6427                           ; BSR set to: 0
  6428  001D12  0100               	movlb	0	; () banked
  6429  001D14  5184               	movf	___ftadd@exp2& (0+255),w,b
  6430  001D16  0100               	movlb	0	; () banked
  6431  001D18  1985               	xorwf	___ftadd@exp1& (0+255),w,b
  6432  001D1A  B4D8               	btfsc	status,2,c
  6433  001D1C  D030               	goto	l904
  6434  001D1E  D7F1               	goto	l3648
  6435                           
  6436                           ; BSR set to: 0
  6437  001D20  D02E               	goto	l904
  6438  001D22                     l3652:
  6439                           
  6440                           ; BSR set to: 0
  6441  001D22  0100               	movlb	0	; () banked
  6442  001D24  5185               	movf	___ftadd@exp1& (0+255),w,b
  6443  001D26  0100               	movlb	0	; () banked
  6444  001D28  5D84               	subwf	___ftadd@exp2& (0+255),w,b
  6445  001D2A  B0D8               	btfsc	status,0,c
  6446  001D2C  D028               	goto	l904
  6447  001D2E                     l3654:
  6448                           
  6449                           ; BSR set to: 0
  6450  001D2E  0100               	movlb	0	; () banked
  6451  001D30  90D8               	bcf	status,0,c
  6452  001D32  377A               	rlcf	___ftadd@f1& (0+255),f,b
  6453  001D34  377B               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  6454  001D36  377C               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  6455  001D38  0100               	movlb	0	; () banked
  6456  001D3A  0785               	decf	___ftadd@exp1& (0+255),f,b
  6457                           
  6458                           ; BSR set to: 0
  6459  001D3C  0100               	movlb	0	; () banked
  6460  001D3E  5185               	movf	___ftadd@exp1& (0+255),w,b
  6461  001D40  0100               	movlb	0	; () banked
  6462  001D42  1984               	xorwf	___ftadd@exp2& (0+255),w,b
  6463  001D44  B4D8               	btfsc	status,2,c
  6464  001D46  D013               	goto	l3662
  6465                           
  6466                           ; BSR set to: 0
  6467  001D48  0100               	movlb	0	; () banked
  6468  001D4A  0783               	decf	___ftadd@sign& (0+255),f,b
  6469  001D4C  C083  F080         	movff	___ftadd@sign,??___ftadd
  6470  001D50  0E07               	movlw	7
  6471  001D52  0100               	movlb	0	; () banked
  6472  001D54  1780               	andwf	??___ftadd& (0+255),f,b
  6473  001D56  B4D8               	btfsc	status,2,c
  6474  001D58  D00A               	goto	l3662
  6475  001D5A  D7E9               	goto	l3654
  6476                           
  6477                           ; BSR set to: 0
  6478                           
  6479                           ; BSR set to: 0
  6480  001D5C  D008               	goto	l3662
  6481  001D5E                     l3660:
  6482                           
  6483                           ; BSR set to: 0
  6484  001D5E  0100               	movlb	0	; () banked
  6485  001D60  90D8               	bcf	status,0,c
  6486  001D62  337F               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  6487  001D64  337E               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  6488  001D66  337D               	rrcf	___ftadd@f2& (0+255),f,b
  6489  001D68  0100               	movlb	0	; () banked
  6490  001D6A  2B84               	incf	___ftadd@exp2& (0+255),f,b
  6491  001D6C  D000               	goto	l3662
  6492  001D6E                     l3662:
  6493                           
  6494                           ; BSR set to: 0
  6495  001D6E  0100               	movlb	0	; () banked
  6496  001D70  5184               	movf	___ftadd@exp2& (0+255),w,b
  6497  001D72  0100               	movlb	0	; () banked
  6498  001D74  1985               	xorwf	___ftadd@exp1& (0+255),w,b
  6499  001D76  B4D8               	btfsc	status,2,c
  6500  001D78  D002               	goto	l904
  6501  001D7A  D7F1               	goto	l3660
  6502                           
  6503                           ; BSR set to: 0
  6504  001D7C  D000               	goto	l904
  6505  001D7E                     l904:
  6506                           
  6507                           ; BSR set to: 0
  6508  001D7E  0100               	movlb	0	; () banked
  6509  001D80  AF83               	btfss	___ftadd@sign& (0+255),7,b
  6510  001D82  D012               	goto	l913
  6511                           
  6512                           ; BSR set to: 0
  6513  001D84  0EFF               	movlw	255
  6514  001D86  0100               	movlb	0	; () banked
  6515  001D88  1B7A               	xorwf	___ftadd@f1& (0+255),f,b
  6516  001D8A  0EFF               	movlw	255
  6517  001D8C  0100               	movlb	0	; () banked
  6518  001D8E  1B7B               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  6519  001D90  0EFF               	movlw	255
  6520  001D92  0100               	movlb	0	; () banked
  6521  001D94  1B7C               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  6522  001D96  0E01               	movlw	1
  6523  001D98  0100               	movlb	0	; () banked
  6524  001D9A  277A               	addwf	___ftadd@f1& (0+255),f,b
  6525  001D9C  0E00               	movlw	0
  6526  001D9E  0100               	movlb	0	; () banked
  6527  001DA0  237B               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  6528  001DA2  0E00               	movlw	0
  6529  001DA4  0100               	movlb	0	; () banked
  6530  001DA6  237C               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  6531  001DA8                     l913:
  6532                           
  6533                           ; BSR set to: 0
  6534  001DA8  0100               	movlb	0	; () banked
  6535  001DAA  AD83               	btfss	___ftadd@sign& (0+255),6,b
  6536  001DAC  D013               	goto	l3668
  6537                           
  6538                           ; BSR set to: 0
  6539  001DAE  0EFF               	movlw	255
  6540  001DB0  0100               	movlb	0	; () banked
  6541  001DB2  1B7D               	xorwf	___ftadd@f2& (0+255),f,b
  6542  001DB4  0EFF               	movlw	255
  6543  001DB6  0100               	movlb	0	; () banked
  6544  001DB8  1B7E               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  6545  001DBA  0EFF               	movlw	255
  6546  001DBC  0100               	movlb	0	; () banked
  6547  001DBE  1B7F               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  6548  001DC0  0E01               	movlw	1
  6549  001DC2  0100               	movlb	0	; () banked
  6550  001DC4  277D               	addwf	___ftadd@f2& (0+255),f,b
  6551  001DC6  0E00               	movlw	0
  6552  001DC8  0100               	movlb	0	; () banked
  6553  001DCA  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6554  001DCC  0E00               	movlw	0
  6555  001DCE  0100               	movlb	0	; () banked
  6556  001DD0  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6557  001DD2  D000               	goto	l3668
  6558  001DD4                     l3668:
  6559                           
  6560                           ; BSR set to: 0
  6561  001DD4  0E00               	movlw	0
  6562  001DD6  0100               	movlb	0	; () banked
  6563  001DD8  6F83               	movwf	___ftadd@sign& (0+255),b
  6564                           
  6565                           ; BSR set to: 0
  6566  001DDA  0100               	movlb	0	; () banked
  6567  001DDC  517A               	movf	___ftadd@f1& (0+255),w,b
  6568  001DDE  0100               	movlb	0	; () banked
  6569  001DE0  277D               	addwf	___ftadd@f2& (0+255),f,b
  6570  001DE2  0100               	movlb	0	; () banked
  6571  001DE4  517B               	movf	(___ftadd@f1+1)& (0+255),w,b
  6572  001DE6  0100               	movlb	0	; () banked
  6573  001DE8  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6574  001DEA  0100               	movlb	0	; () banked
  6575  001DEC  517C               	movf	(___ftadd@f1+2)& (0+255),w,b
  6576  001DEE  0100               	movlb	0	; () banked
  6577  001DF0  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6578                           
  6579                           ; BSR set to: 0
  6580  001DF2  0100               	movlb	0	; () banked
  6581  001DF4  AF7F               	btfss	(___ftadd@f2+2)& (0+255),7,b
  6582  001DF6  D016               	goto	l3678
  6583                           
  6584                           ; BSR set to: 0
  6585  001DF8  0EFF               	movlw	255
  6586  001DFA  0100               	movlb	0	; () banked
  6587  001DFC  1B7D               	xorwf	___ftadd@f2& (0+255),f,b
  6588  001DFE  0EFF               	movlw	255
  6589  001E00  0100               	movlb	0	; () banked
  6590  001E02  1B7E               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  6591  001E04  0EFF               	movlw	255
  6592  001E06  0100               	movlb	0	; () banked
  6593  001E08  1B7F               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  6594  001E0A  0E01               	movlw	1
  6595  001E0C  0100               	movlb	0	; () banked
  6596  001E0E  277D               	addwf	___ftadd@f2& (0+255),f,b
  6597  001E10  0E00               	movlw	0
  6598  001E12  0100               	movlb	0	; () banked
  6599  001E14  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6600  001E16  0E00               	movlw	0
  6601  001E18  0100               	movlb	0	; () banked
  6602  001E1A  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6603                           
  6604                           ; BSR set to: 0
  6605  001E1C  0E01               	movlw	1
  6606  001E1E  0100               	movlb	0	; () banked
  6607  001E20  6F83               	movwf	___ftadd@sign& (0+255),b
  6608  001E22  D000               	goto	l3678
  6609  001E24                     l3678:
  6610                           
  6611                           ; BSR set to: 0
  6612  001E24  C07D  F060         	movff	___ftadd@f2,___ftpack@arg
  6613  001E28  C07E  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
  6614  001E2C  C07F  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
  6615  001E30  C085  F063         	movff	___ftadd@exp1,___ftpack@exp
  6616  001E34  C083  F064         	movff	___ftadd@sign,___ftpack@sign
  6617  001E38  ECF0  F011         	call	___ftpack	;wreg free
  6618  001E3C  C060  F07A         	movff	?___ftpack,?___ftadd
  6619  001E40  C061  F07B         	movff	?___ftpack+1,?___ftadd+1
  6620  001E44  C062  F07C         	movff	?___ftpack+2,?___ftadd+2
  6621  001E48  D000               	goto	l890
  6622  001E4A                     l890:
  6623  001E4A  0012               	return		;funcret
  6624  001E4C                     __end_of___ftadd:
  6625                           	opt stack 0
  6626                           tblptru	equ	0xFF8
  6627                           tblptrh	equ	0xFF7
  6628                           tblptrl	equ	0xFF6
  6629                           tablat	equ	0xFF5
  6630                           intcon	equ	0xFF2
  6631                           intcon2	equ	0xFF1
  6632                           intcon3	equ	0xFF0
  6633                           postinc0	equ	0xFEE
  6634                           plusw0	equ	0xFEB
  6635                           wreg	equ	0xFE8
  6636                           postinc1	equ	0xFE6
  6637                           postdec1	equ	0xFE5
  6638                           plusw1	equ	0xFE3
  6639                           fsr1h	equ	0xFE2
  6640                           fsr1l	equ	0xFE1
  6641                           postinc2	equ	0xFDE
  6642                           postdec2	equ	0xFDD
  6643                           fsr2h	equ	0xFDA
  6644                           fsr2l	equ	0xFD9
  6645                           status	equ	0xFD8
  6646                           
  6647 ;; *************** function _envoit_pwm *****************
  6648 ;; Defined at:
  6649 ;;		line 55 in file "moteur.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;  valeur          3   80[BANK0 ] float 
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;  abs_valeur      3   83[BANK0 ] float 
  6654 ;; Return value:  Size  Location     Type
  6655 ;;		None               void
  6656 ;; Registers used:
  6657 ;;		wreg, status,2, status,0, cstack
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6663 ;;      Params:         0       3       0       0
  6664 ;;      Locals:         0       3       0       0
  6665 ;;      Temps:          0       0       0       0
  6666 ;;      Totals:         0       6       0       0
  6667 ;;Total ram usage:        6 bytes
  6668 ;; Hardware stack levels used:    1
  6669 ;; Hardware stack levels required when called:    8
  6670 ;; This function calls:
  6671 ;;		___ftge
  6672 ;;		___ftmul
  6673 ;;		___ftneg
  6674 ;;		___fttol
  6675 ;; This function is called by:
  6676 ;;		_main
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           	psect	text29
  6681  0027E6                     __ptext29:
  6682                           	opt stack 0
  6683  0027E6                     _envoit_pwm:
  6684                           	opt stack 22
  6685                           
  6686                           ;moteur.c: 57: double abs_valeur;
  6687                           ;moteur.c: 59: if (valeur < 0)
  6688                           
  6689                           ;incstack = 0
  6690  0027E6  0100               	movlb	0	; () banked
  6691  0027E8  AFB2               	btfss	(envoit_pwm@valeur+2)& (0+255),7,b
  6692  0027EA  D00F               	goto	l473
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;moteur.c: 60: abs_valeur = (double) (-valeur);
  6696  0027EC  C0B0  F077         	movff	envoit_pwm@valeur,___ftneg@f1
  6697  0027F0  C0B1  F078         	movff	envoit_pwm@valeur+1,___ftneg@f1+1
  6698  0027F4  C0B2  F079         	movff	envoit_pwm@valeur+2,___ftneg@f1+2
  6699  0027F8  EC63  F01A         	call	___ftneg	;wreg free
  6700  0027FC  C077  F0B3         	movff	?___ftneg,envoit_pwm@abs_valeur
  6701  002800  C078  F0B4         	movff	?___ftneg+1,envoit_pwm@abs_valeur+1
  6702  002804  C079  F0B5         	movff	?___ftneg+2,envoit_pwm@abs_valeur+2
  6703  002808  D007               	goto	l4220
  6704  00280A                     l473:
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;moteur.c: 61: else
  6708                           ;moteur.c: 62: abs_valeur = (double) valeur;
  6709  00280A  C0B0  F0B3         	movff	envoit_pwm@valeur,envoit_pwm@abs_valeur
  6710  00280E  C0B1  F0B4         	movff	envoit_pwm@valeur+1,envoit_pwm@abs_valeur+1
  6711  002812  C0B2  F0B5         	movff	envoit_pwm@valeur+2,envoit_pwm@abs_valeur+2
  6712  002816  D000               	goto	l4220
  6713  002818                     l4220:
  6714                           
  6715                           ;moteur.c: 64: abs_valeur *= (double) 669 / 100;
  6716  002818  C0B3  F068         	movff	envoit_pwm@abs_valeur,___ftmul@f1
  6717  00281C  C0B4  F069         	movff	envoit_pwm@abs_valeur+1,___ftmul@f1+1
  6718  002820  C0B5  F06A         	movff	envoit_pwm@abs_valeur+2,___ftmul@f1+2
  6719  002824  0E14               	movlw	20
  6720  002826  0100               	movlb	0	; () banked
  6721  002828  6F6B               	movwf	___ftmul@f2& (0+255),b
  6722  00282A  0ED6               	movlw	214
  6723  00282C  0100               	movlb	0	; () banked
  6724  00282E  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  6725  002830  0E40               	movlw	64
  6726  002832  0100               	movlb	0	; () banked
  6727  002834  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  6728  002836  EC08  F010         	call	___ftmul	;wreg free
  6729  00283A  C068  F0B3         	movff	?___ftmul,envoit_pwm@abs_valeur
  6730  00283E  C069  F0B4         	movff	?___ftmul+1,envoit_pwm@abs_valeur+1
  6731  002842  C06A  F0B5         	movff	?___ftmul+2,envoit_pwm@abs_valeur+2
  6732                           
  6733                           ;moteur.c: 66: if (abs_valeur > 669)
  6734  002846  0E40               	movlw	64
  6735  002848  0100               	movlb	0	; () banked
  6736  00284A  6F7A               	movwf	___ftge@ff1& (0+255),b
  6737  00284C  0E27               	movlw	39
  6738  00284E  0100               	movlb	0	; () banked
  6739  002850  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  6740  002852  0E44               	movlw	68
  6741  002854  0100               	movlb	0	; () banked
  6742  002856  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  6743  002858  C0B3  F07D         	movff	envoit_pwm@abs_valeur,___ftge@ff2
  6744  00285C  C0B4  F07E         	movff	envoit_pwm@abs_valeur+1,___ftge@ff2+1
  6745  002860  C0B5  F07F         	movff	envoit_pwm@abs_valeur+2,___ftge@ff2+2
  6746  002864  ECCC  F014         	call	___ftge	;wreg free
  6747  002868  0100               	movlb	0	; () banked
  6748  00286A  B0D8               	btfsc	status,0,c
  6749  00286C  D00A               	goto	l4224
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;moteur.c: 67: abs_valeur = 669;
  6753  00286E  0E40               	movlw	64
  6754  002870  0100               	movlb	0	; () banked
  6755  002872  6FB3               	movwf	envoit_pwm@abs_valeur& (0+255),b
  6756  002874  0E27               	movlw	39
  6757  002876  0100               	movlb	0	; () banked
  6758  002878  6FB4               	movwf	(envoit_pwm@abs_valeur+1)& (0+255),b
  6759  00287A  0E44               	movlw	68
  6760  00287C  0100               	movlb	0	; () banked
  6761  00287E  6FB5               	movwf	(envoit_pwm@abs_valeur+2)& (0+255),b
  6762  002880  D000               	goto	l4224
  6763  002882                     l4224:
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;moteur.c: 69: if (valeur < (double) 0.)
  6767  002882  0100               	movlb	0	; () banked
  6768  002884  AFB2               	btfss	(envoit_pwm@valeur+2)& (0+255),7,b
  6769  002886  D002               	goto	l476
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;moteur.c: 70: {
  6773                           ;moteur.c: 71: PORTDbits.RD4 = 1;
  6774  002888  8883               	bsf	3971,4,c	;volatile
  6775                           
  6776                           ;moteur.c: 72: }
  6777  00288A  D002               	goto	l4228
  6778  00288C                     l476:
  6779                           
  6780                           ; BSR set to: 0
  6781                           ;moteur.c: 73: else
  6782                           ;moteur.c: 74: {
  6783                           ;moteur.c: 75: PORTDbits.RD4 = 0;
  6784  00288C  9883               	bcf	3971,4,c	;volatile
  6785  00288E  D000               	goto	l4228
  6786  002890                     l4228:
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;moteur.c: 76: }
  6790                           ;moteur.c: 78: PDC0L = (uint8_t) ((uint16_t) abs_valeur % 256);
  6791  002890  C0B3  F0A1         	movff	envoit_pwm@abs_valeur,___fttol@f1
  6792  002894  C0B4  F0A2         	movff	envoit_pwm@abs_valeur+1,___fttol@f1+1
  6793  002898  C0B5  F0A3         	movff	envoit_pwm@abs_valeur+2,___fttol@f1+2
  6794  00289C  EC57  F011         	call	___fttol	;wreg free
  6795  0028A0  0100               	movlb	0	; () banked
  6796  0028A2  51A1               	movf	?___fttol& (0+255),w,b
  6797  0028A4  6E79               	movwf	3961,c	;volatile
  6798                           
  6799                           ;moteur.c: 79: PDC0H = (uint8_t) ((uint16_t) abs_valeur / 256);
  6800  0028A6  C0B3  F0A1         	movff	envoit_pwm@abs_valeur,___fttol@f1
  6801  0028AA  C0B4  F0A2         	movff	envoit_pwm@abs_valeur+1,___fttol@f1+1
  6802  0028AE  C0B5  F0A3         	movff	envoit_pwm@abs_valeur+2,___fttol@f1+2
  6803  0028B2  EC57  F011         	call	___fttol	;wreg free
  6804  0028B6  0100               	movlb	0	; () banked
  6805  0028B8  C0A2  F0A1         	movff	?___fttol+1,?___fttol
  6806  0028BC  0100               	movlb	0	; () banked
  6807  0028BE  6BA2               	clrf	(?___fttol+1)& (0+255),b
  6808  0028C0  0100               	movlb	0	; () banked
  6809  0028C2  51A1               	movf	?___fttol& (0+255),w,b
  6810  0028C4  6E78               	movwf	3960,c	;volatile
  6811                           
  6812                           ; BSR set to: 0
  6813  0028C6  0012               	return		;funcret
  6814  0028C8                     __end_of_envoit_pwm:
  6815                           	opt stack 0
  6816                           tblptru	equ	0xFF8
  6817                           tblptrh	equ	0xFF7
  6818                           tblptrl	equ	0xFF6
  6819                           tablat	equ	0xFF5
  6820                           intcon	equ	0xFF2
  6821                           intcon2	equ	0xFF1
  6822                           intcon3	equ	0xFF0
  6823                           postinc0	equ	0xFEE
  6824                           plusw0	equ	0xFEB
  6825                           wreg	equ	0xFE8
  6826                           postinc1	equ	0xFE6
  6827                           postdec1	equ	0xFE5
  6828                           plusw1	equ	0xFE3
  6829                           fsr1h	equ	0xFE2
  6830                           fsr1l	equ	0xFE1
  6831                           postinc2	equ	0xFDE
  6832                           postdec2	equ	0xFDD
  6833                           fsr2h	equ	0xFDA
  6834                           fsr2l	equ	0xFD9
  6835                           status	equ	0xFD8
  6836                           
  6837 ;; *************** function ___ftneg *****************
  6838 ;; Defined at:
  6839 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  6840 ;; Parameters:    Size  Location     Type
  6841 ;;  f1              3   23[BANK0 ] float 
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;		None
  6844 ;; Return value:  Size  Location     Type
  6845 ;;                  3   23[BANK0 ] float 
  6846 ;; Registers used:
  6847 ;;		wreg, status,2, status,0
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/0
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6853 ;;      Params:         0       3       0       0
  6854 ;;      Locals:         0       0       0       0
  6855 ;;      Temps:          0       0       0       0
  6856 ;;      Totals:         0       3       0       0
  6857 ;;Total ram usage:        3 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; Hardware stack levels required when called:    6
  6860 ;; This function calls:
  6861 ;;		Nothing
  6862 ;; This function is called by:
  6863 ;;		_envoit_pwm
  6864 ;;		_triangulation
  6865 ;;		_saturation
  6866 ;;		_get_distance
  6867 ;;		_sin
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text30
  6872  0034C6                     __ptext30:
  6873                           	opt stack 0
  6874  0034C6                     ___ftneg:
  6875                           	opt stack 22
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;incstack = 0
  6879  0034C6  0100               	movlb	0	; () banked
  6880  0034C8  5177               	movf	___ftneg@f1& (0+255),w,b
  6881  0034CA  0100               	movlb	0	; () banked
  6882  0034CC  1178               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  6883  0034CE  0100               	movlb	0	; () banked
  6884  0034D0  1179               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  6885  0034D2  B4D8               	btfsc	status,2,c
  6886  0034D4  D009               	goto	l946
  6887                           
  6888                           ; BSR set to: 0
  6889  0034D6  0E00               	movlw	0
  6890  0034D8  0100               	movlb	0	; () banked
  6891  0034DA  1B77               	xorwf	___ftneg@f1& (0+255),f,b
  6892  0034DC  0E00               	movlw	0
  6893  0034DE  0100               	movlb	0	; () banked
  6894  0034E0  1B78               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  6895  0034E2  0E80               	movlw	128
  6896  0034E4  0100               	movlb	0	; () banked
  6897  0034E6  1B79               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  6898  0034E8                     l946:
  6899                           
  6900                           ; BSR set to: 0
  6901  0034E8  C077  F077         	movff	___ftneg@f1,?___ftneg
  6902  0034EC  C078  F078         	movff	___ftneg@f1+1,?___ftneg+1
  6903  0034F0  C079  F079         	movff	___ftneg@f1+2,?___ftneg+2
  6904                           
  6905                           ; BSR set to: 0
  6906  0034F4  0012               	return		;funcret
  6907  0034F6                     __end_of___ftneg:
  6908                           	opt stack 0
  6909                           tblptru	equ	0xFF8
  6910                           tblptrh	equ	0xFF7
  6911                           tblptrl	equ	0xFF6
  6912                           tablat	equ	0xFF5
  6913                           intcon	equ	0xFF2
  6914                           intcon2	equ	0xFF1
  6915                           intcon3	equ	0xFF0
  6916                           postinc0	equ	0xFEE
  6917                           plusw0	equ	0xFEB
  6918                           wreg	equ	0xFE8
  6919                           postinc1	equ	0xFE6
  6920                           postdec1	equ	0xFE5
  6921                           plusw1	equ	0xFE3
  6922                           fsr1h	equ	0xFE2
  6923                           fsr1l	equ	0xFE1
  6924                           postinc2	equ	0xFDE
  6925                           postdec2	equ	0xFDD
  6926                           fsr2h	equ	0xFDA
  6927                           fsr2l	equ	0xFD9
  6928                           status	equ	0xFD8
  6929                           
  6930 ;; *************** function ___ftmul *****************
  6931 ;; Defined at:
  6932 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;  f1              3    8[BANK0 ] float 
  6935 ;;  f2              3   11[BANK0 ] float 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
  6938 ;;  sign            1   22[BANK0 ] unsigned char 
  6939 ;;  cntr            1   21[BANK0 ] unsigned char 
  6940 ;;  exp             1   17[BANK0 ] unsigned char 
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  3    8[BANK0 ] float 
  6943 ;; Registers used:
  6944 ;;		wreg, status,2, status,0, cstack
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6950 ;;      Params:         0       6       0       0
  6951 ;;      Locals:         0       6       0       0
  6952 ;;      Temps:          0       3       0       0
  6953 ;;      Totals:         0      15       0       0
  6954 ;;Total ram usage:       15 bytes
  6955 ;; Hardware stack levels used:    1
  6956 ;; Hardware stack levels required when called:    7
  6957 ;; This function calls:
  6958 ;;		___ftpack
  6959 ;; This function is called by:
  6960 ;;		_envoit_pwm
  6961 ;;		_obtention_angle
  6962 ;;		_triangulation
  6963 ;;		_conversion_degre_radian
  6964 ;;		_get_distance
  6965 ;;		_sqrt
  6966 ;;		_sin
  6967 ;;		_eval_poly
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           	psect	text31
  6972  002010                     __ptext31:
  6973                           	opt stack 0
  6974  002010                     ___ftmul:
  6975                           	opt stack 18
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;incstack = 0
  6979  002010  C06A  F06E         	movff	___ftmul@f1+2,??___ftmul
  6980  002014  0100               	movlb	0	; () banked
  6981  002016  6B6F               	clrf	(??___ftmul+1)& (0+255),b
  6982  002018  6B70               	clrf	(??___ftmul+2)& (0+255),b
  6983  00201A  0100               	movlb	0	; () banked
  6984  00201C  3569               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  6985  00201E  0100               	movlb	0	; () banked
  6986  002020  376E               	rlcf	??___ftmul& (0+255),f,b
  6987  002022  E301               	bnc	u3481
  6988  002024  816F               	bsf	(??___ftmul+1)& (0+255),0,b
  6989  002026                     u3481:
  6990  002026  0100               	movlb	0	; () banked
  6991  002028  516E               	movf	??___ftmul& (0+255),w,b
  6992  00202A  0100               	movlb	0	; () banked
  6993  00202C  6F71               	movwf	___ftmul@exp& (0+255),b
  6994  00202E  0100               	movlb	0	; () banked
  6995  002030  5171               	movf	___ftmul@exp& (0+255),w,b
  6996  002032  A4D8               	btfss	status,2,c
  6997  002034  D002               	goto	l3688
  6998  002036  D014               	goto	l3690
  6999                           
  7000                           ; BSR set to: 0
  7001                           
  7002                           ; BSR set to: 0
  7003  002038  D098               	goto	l936
  7004  00203A                     l3688:
  7005                           
  7006                           ; BSR set to: 0
  7007  00203A  C06D  F06E         	movff	___ftmul@f2+2,??___ftmul
  7008  00203E  0100               	movlb	0	; () banked
  7009  002040  6B6F               	clrf	(??___ftmul+1)& (0+255),b
  7010  002042  6B70               	clrf	(??___ftmul+2)& (0+255),b
  7011  002044  0100               	movlb	0	; () banked
  7012  002046  356C               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  7013  002048  0100               	movlb	0	; () banked
  7014  00204A  376E               	rlcf	??___ftmul& (0+255),f,b
  7015  00204C  E301               	bnc	u3501
  7016  00204E  816F               	bsf	(??___ftmul+1)& (0+255),0,b
  7017  002050                     u3501:
  7018  002050  0100               	movlb	0	; () banked
  7019  002052  516E               	movf	??___ftmul& (0+255),w,b
  7020  002054  0100               	movlb	0	; () banked
  7021  002056  6F76               	movwf	___ftmul@sign& (0+255),b
  7022  002058  0100               	movlb	0	; () banked
  7023  00205A  5176               	movf	___ftmul@sign& (0+255),w,b
  7024  00205C  A4D8               	btfss	status,2,c
  7025  00205E  D00A               	goto	l3694
  7026  002060                     l3690:
  7027                           
  7028                           ; BSR set to: 0
  7029  002060  0E00               	movlw	0
  7030  002062  0100               	movlb	0	; () banked
  7031  002064  6F68               	movwf	?___ftmul& (0+255),b
  7032  002066  0E00               	movlw	0
  7033  002068  0100               	movlb	0	; () banked
  7034  00206A  6F69               	movwf	(?___ftmul+1)& (0+255),b
  7035  00206C  0E00               	movlw	0
  7036  00206E  0100               	movlb	0	; () banked
  7037  002070  6F6A               	movwf	(?___ftmul+2)& (0+255),b
  7038                           
  7039                           ; BSR set to: 0
  7040  002072  D07B               	goto	l936
  7041  002074                     l3694:
  7042                           
  7043                           ; BSR set to: 0
  7044  002074  0100               	movlb	0	; () banked
  7045  002076  5176               	movf	___ftmul@sign& (0+255),w,b
  7046  002078  0F7B               	addlw	123
  7047  00207A  0100               	movlb	0	; () banked
  7048  00207C  2771               	addwf	___ftmul@exp& (0+255),f,b
  7049                           
  7050                           ; BSR set to: 0
  7051  00207E  C06A  F076         	movff	___ftmul@f1+2,___ftmul@sign
  7052  002082  0100               	movlb	0	; () banked
  7053  002084  516D               	movf	(___ftmul@f2+2)& (0+255),w,b
  7054  002086  0100               	movlb	0	; () banked
  7055  002088  1B76               	xorwf	___ftmul@sign& (0+255),f,b
  7056  00208A  0E80               	movlw	128
  7057  00208C  0100               	movlb	0	; () banked
  7058  00208E  1776               	andwf	___ftmul@sign& (0+255),f,b
  7059                           
  7060                           ; BSR set to: 0
  7061  002090  0100               	movlb	0	; () banked
  7062  002092  8F69               	bsf	(___ftmul@f1+1)& (0+255),7,b
  7063                           
  7064                           ; BSR set to: 0
  7065  002094  0100               	movlb	0	; () banked
  7066  002096  8F6C               	bsf	(___ftmul@f2+1)& (0+255),7,b
  7067                           
  7068                           ; BSR set to: 0
  7069  002098  0EFF               	movlw	255
  7070  00209A  0100               	movlb	0	; () banked
  7071  00209C  176B               	andwf	___ftmul@f2& (0+255),f,b
  7072  00209E  0EFF               	movlw	255
  7073  0020A0  0100               	movlb	0	; () banked
  7074  0020A2  176C               	andwf	(___ftmul@f2+1)& (0+255),f,b
  7075  0020A4  0E00               	movlw	0
  7076  0020A6  0100               	movlb	0	; () banked
  7077  0020A8  176D               	andwf	(___ftmul@f2+2)& (0+255),f,b
  7078                           
  7079                           ; BSR set to: 0
  7080  0020AA  0E00               	movlw	0
  7081  0020AC  0100               	movlb	0	; () banked
  7082  0020AE  6F72               	movwf	___ftmul@f3_as_product& (0+255),b
  7083  0020B0  0E00               	movlw	0
  7084  0020B2  0100               	movlb	0	; () banked
  7085  0020B4  6F73               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  7086  0020B6  0E00               	movlw	0
  7087  0020B8  0100               	movlb	0	; () banked
  7088  0020BA  6F74               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  7089                           
  7090                           ; BSR set to: 0
  7091  0020BC  0E07               	movlw	7
  7092  0020BE  0100               	movlb	0	; () banked
  7093  0020C0  6F75               	movwf	___ftmul@cntr& (0+255),b
  7094  0020C2  D000               	goto	l3708
  7095  0020C4                     l3708:
  7096                           
  7097                           ; BSR set to: 0
  7098  0020C4  0100               	movlb	0	; () banked
  7099  0020C6  A168               	btfss	___ftmul@f1& (0+255),0,b
  7100  0020C8  D00D               	goto	l3712
  7101                           
  7102                           ; BSR set to: 0
  7103  0020CA  0100               	movlb	0	; () banked
  7104  0020CC  516B               	movf	___ftmul@f2& (0+255),w,b
  7105  0020CE  0100               	movlb	0	; () banked
  7106  0020D0  2772               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7107  0020D2  0100               	movlb	0	; () banked
  7108  0020D4  516C               	movf	(___ftmul@f2+1)& (0+255),w,b
  7109  0020D6  0100               	movlb	0	; () banked
  7110  0020D8  2373               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7111  0020DA  0100               	movlb	0	; () banked
  7112  0020DC  516D               	movf	(___ftmul@f2+2)& (0+255),w,b
  7113  0020DE  0100               	movlb	0	; () banked
  7114  0020E0  2374               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7115  0020E2  D000               	goto	l3712
  7116  0020E4                     l3712:
  7117                           
  7118                           ; BSR set to: 0
  7119  0020E4  0100               	movlb	0	; () banked
  7120  0020E6  90D8               	bcf	status,0,c
  7121  0020E8  336A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7122  0020EA  3369               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7123  0020EC  3368               	rrcf	___ftmul@f1& (0+255),f,b
  7124  0020EE  0100               	movlb	0	; () banked
  7125  0020F0  90D8               	bcf	status,0,c
  7126  0020F2  376B               	rlcf	___ftmul@f2& (0+255),f,b
  7127  0020F4  376C               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  7128  0020F6  376D               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  7129                           
  7130                           ; BSR set to: 0
  7131  0020F8  0100               	movlb	0	; () banked
  7132  0020FA  2F75               	decfsz	___ftmul@cntr& (0+255),f,b
  7133  0020FC  D7E3               	goto	l3708
  7134  0020FE  D000               	goto	l3716
  7135  002100                     l3716:
  7136                           
  7137                           ; BSR set to: 0
  7138  002100  0E09               	movlw	9
  7139  002102  0100               	movlb	0	; () banked
  7140  002104  6F75               	movwf	___ftmul@cntr& (0+255),b
  7141  002106  D000               	goto	l3718
  7142  002108                     l3718:
  7143                           
  7144                           ; BSR set to: 0
  7145  002108  0100               	movlb	0	; () banked
  7146  00210A  A168               	btfss	___ftmul@f1& (0+255),0,b
  7147  00210C  D00D               	goto	l3722
  7148                           
  7149                           ; BSR set to: 0
  7150  00210E  0100               	movlb	0	; () banked
  7151  002110  516B               	movf	___ftmul@f2& (0+255),w,b
  7152  002112  0100               	movlb	0	; () banked
  7153  002114  2772               	addwf	___ftmul@f3_as_product& (0+255),f,b
  7154  002116  0100               	movlb	0	; () banked
  7155  002118  516C               	movf	(___ftmul@f2+1)& (0+255),w,b
  7156  00211A  0100               	movlb	0	; () banked
  7157  00211C  2373               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  7158  00211E  0100               	movlb	0	; () banked
  7159  002120  516D               	movf	(___ftmul@f2+2)& (0+255),w,b
  7160  002122  0100               	movlb	0	; () banked
  7161  002124  2374               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  7162  002126  D000               	goto	l3722
  7163  002128                     l3722:
  7164                           
  7165                           ; BSR set to: 0
  7166  002128  0100               	movlb	0	; () banked
  7167  00212A  90D8               	bcf	status,0,c
  7168  00212C  336A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  7169  00212E  3369               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  7170  002130  3368               	rrcf	___ftmul@f1& (0+255),f,b
  7171  002132  0100               	movlb	0	; () banked
  7172  002134  90D8               	bcf	status,0,c
  7173  002136  3374               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  7174  002138  3373               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  7175  00213A  3372               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  7176                           
  7177                           ; BSR set to: 0
  7178  00213C  0100               	movlb	0	; () banked
  7179  00213E  2F75               	decfsz	___ftmul@cntr& (0+255),f,b
  7180  002140  D7E3               	goto	l3718
  7181  002142  D000               	goto	l3726
  7182  002144                     l3726:
  7183                           
  7184                           ; BSR set to: 0
  7185  002144  C072  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  7186  002148  C073  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7187  00214C  C074  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7188  002150  C071  F063         	movff	___ftmul@exp,___ftpack@exp
  7189  002154  C076  F064         	movff	___ftmul@sign,___ftpack@sign
  7190  002158  ECF0  F011         	call	___ftpack	;wreg free
  7191  00215C  C060  F068         	movff	?___ftpack,?___ftmul
  7192  002160  C061  F069         	movff	?___ftpack+1,?___ftmul+1
  7193  002164  C062  F06A         	movff	?___ftpack+2,?___ftmul+2
  7194  002168  D000               	goto	l936
  7195  00216A                     l936:
  7196  00216A  0012               	return		;funcret
  7197  00216C                     __end_of___ftmul:
  7198                           	opt stack 0
  7199                           tblptru	equ	0xFF8
  7200                           tblptrh	equ	0xFF7
  7201                           tblptrl	equ	0xFF6
  7202                           tablat	equ	0xFF5
  7203                           intcon	equ	0xFF2
  7204                           intcon2	equ	0xFF1
  7205                           intcon3	equ	0xFF0
  7206                           postinc0	equ	0xFEE
  7207                           plusw0	equ	0xFEB
  7208                           wreg	equ	0xFE8
  7209                           postinc1	equ	0xFE6
  7210                           postdec1	equ	0xFE5
  7211                           plusw1	equ	0xFE3
  7212                           fsr1h	equ	0xFE2
  7213                           fsr1l	equ	0xFE1
  7214                           postinc2	equ	0xFDE
  7215                           postdec2	equ	0xFDD
  7216                           fsr2h	equ	0xFDA
  7217                           fsr2l	equ	0xFD9
  7218                           status	equ	0xFD8
  7219                           
  7220 ;; *************** function ___ftge *****************
  7221 ;; Defined at:
  7222 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;  ff1             3   26[BANK0 ] float 
  7225 ;;  ff2             3   29[BANK0 ] float 
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;		None
  7228 ;; Return value:  Size  Location     Type
  7229 ;;		None               void
  7230 ;; Registers used:
  7231 ;;		wreg, status,2, status,0
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7237 ;;      Params:         0       6       0       0
  7238 ;;      Locals:         0       0       0       0
  7239 ;;      Temps:          0       3       0       0
  7240 ;;      Totals:         0       9       0       0
  7241 ;;Total ram usage:        9 bytes
  7242 ;; Hardware stack levels used:    1
  7243 ;; Hardware stack levels required when called:    6
  7244 ;; This function calls:
  7245 ;;		Nothing
  7246 ;; This function is called by:
  7247 ;;		_main
  7248 ;;		_envoit_pwm
  7249 ;;		_saturation
  7250 ;;		_sqrt
  7251 ;;		_cos
  7252 ;;		_sin
  7253 ;;		_floor
  7254 ;; This function uses a non-reentrant model
  7255 ;;
  7256                           
  7257                           	psect	text32
  7258  002998                     __ptext32:
  7259                           	opt stack 0
  7260  002998                     ___ftge:
  7261                           	opt stack 22
  7262                           
  7263                           ;incstack = 0
  7264  002998  0100               	movlb	0	; () banked
  7265  00299A  AF7C               	btfss	(___ftge@ff1+2)& (0+255),7,b
  7266  00299C  D01E               	goto	l3734
  7267                           
  7268                           ; BSR set to: 0
  7269  00299E  C07A  F080         	movff	___ftge@ff1,??___ftge
  7270  0029A2  C07B  F081         	movff	___ftge@ff1+1,??___ftge+1
  7271  0029A6  C07C  F082         	movff	___ftge@ff1+2,??___ftge+2
  7272  0029AA  0100               	movlb	0	; () banked
  7273  0029AC  1F80               	comf	??___ftge& (0+255),f,b
  7274  0029AE  1F81               	comf	(??___ftge+1)& (0+255),f,b
  7275  0029B0  1F82               	comf	(??___ftge+2)& (0+255),f,b
  7276  0029B2  2B80               	incf	??___ftge& (0+255),f,b
  7277  0029B4  0E00               	movlw	0
  7278  0029B6  2381               	addwfc	(??___ftge+1)& (0+255),f,b
  7279  0029B8  2382               	addwfc	(??___ftge+2)& (0+255),f,b
  7280  0029BA  0E00               	movlw	0
  7281  0029BC  0100               	movlb	0	; () banked
  7282  0029BE  2580               	addwf	??___ftge& (0+255),w,b
  7283  0029C0  0100               	movlb	0	; () banked
  7284  0029C2  6F7A               	movwf	___ftge@ff1& (0+255),b
  7285  0029C4  0E00               	movlw	0
  7286  0029C6  0100               	movlb	0	; () banked
  7287  0029C8  2181               	addwfc	(??___ftge+1)& (0+255),w,b
  7288  0029CA  0100               	movlb	0	; () banked
  7289  0029CC  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  7290  0029CE  0E80               	movlw	128
  7291  0029D0  0100               	movlb	0	; () banked
  7292  0029D2  2182               	addwfc	(??___ftge+2)& (0+255),w,b
  7293  0029D4  0100               	movlb	0	; () banked
  7294  0029D6  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  7295  0029D8  D000               	goto	l3734
  7296  0029DA                     l3734:
  7297                           
  7298                           ; BSR set to: 0
  7299  0029DA  0100               	movlb	0	; () banked
  7300  0029DC  AF7F               	btfss	(___ftge@ff2+2)& (0+255),7,b
  7301  0029DE  D01E               	goto	l3738
  7302                           
  7303                           ; BSR set to: 0
  7304  0029E0  C07D  F080         	movff	___ftge@ff2,??___ftge
  7305  0029E4  C07E  F081         	movff	___ftge@ff2+1,??___ftge+1
  7306  0029E8  C07F  F082         	movff	___ftge@ff2+2,??___ftge+2
  7307  0029EC  0100               	movlb	0	; () banked
  7308  0029EE  1F80               	comf	??___ftge& (0+255),f,b
  7309  0029F0  1F81               	comf	(??___ftge+1)& (0+255),f,b
  7310  0029F2  1F82               	comf	(??___ftge+2)& (0+255),f,b
  7311  0029F4  2B80               	incf	??___ftge& (0+255),f,b
  7312  0029F6  0E00               	movlw	0
  7313  0029F8  2381               	addwfc	(??___ftge+1)& (0+255),f,b
  7314  0029FA  2382               	addwfc	(??___ftge+2)& (0+255),f,b
  7315  0029FC  0E00               	movlw	0
  7316  0029FE  0100               	movlb	0	; () banked
  7317  002A00  2580               	addwf	??___ftge& (0+255),w,b
  7318  002A02  0100               	movlb	0	; () banked
  7319  002A04  6F7D               	movwf	___ftge@ff2& (0+255),b
  7320  002A06  0E00               	movlw	0
  7321  002A08  0100               	movlb	0	; () banked
  7322  002A0A  2181               	addwfc	(??___ftge+1)& (0+255),w,b
  7323  002A0C  0100               	movlb	0	; () banked
  7324  002A0E  6F7E               	movwf	(___ftge@ff2+1)& (0+255),b
  7325  002A10  0E80               	movlw	128
  7326  002A12  0100               	movlb	0	; () banked
  7327  002A14  2182               	addwfc	(??___ftge+2)& (0+255),w,b
  7328  002A16  0100               	movlb	0	; () banked
  7329  002A18  6F7F               	movwf	(___ftge@ff2+2)& (0+255),b
  7330  002A1A  D000               	goto	l3738
  7331  002A1C                     l3738:
  7332                           
  7333                           ; BSR set to: 0
  7334  002A1C  0E00               	movlw	0
  7335  002A1E  0100               	movlb	0	; () banked
  7336  002A20  1B7A               	xorwf	___ftge@ff1& (0+255),f,b
  7337  002A22  0E00               	movlw	0
  7338  002A24  0100               	movlb	0	; () banked
  7339  002A26  1B7B               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  7340  002A28  0E80               	movlw	128
  7341  002A2A  0100               	movlb	0	; () banked
  7342  002A2C  1B7C               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  7343                           
  7344                           ; BSR set to: 0
  7345  002A2E  0E00               	movlw	0
  7346  002A30  0100               	movlb	0	; () banked
  7347  002A32  1B7D               	xorwf	___ftge@ff2& (0+255),f,b
  7348  002A34  0E00               	movlw	0
  7349  002A36  0100               	movlb	0	; () banked
  7350  002A38  1B7E               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  7351  002A3A  0E80               	movlw	128
  7352  002A3C  0100               	movlb	0	; () banked
  7353  002A3E  1B7F               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  7354  002A40  0100               	movlb	0	; () banked
  7355  002A42  517D               	movf	___ftge@ff2& (0+255),w,b
  7356  002A44  0100               	movlb	0	; () banked
  7357  002A46  5D7A               	subwf	___ftge@ff1& (0+255),w,b
  7358  002A48  0100               	movlb	0	; () banked
  7359  002A4A  517E               	movf	(___ftge@ff2+1)& (0+255),w,b
  7360  002A4C  0100               	movlb	0	; () banked
  7361  002A4E  597B               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  7362  002A50  0100               	movlb	0	; () banked
  7363  002A52  517F               	movf	(___ftge@ff2+2)& (0+255),w,b
  7364  002A54  0100               	movlb	0	; () banked
  7365  002A56  597C               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  7366  002A58  B0D8               	btfsc	status,0,c
  7367  002A5A  D002               	goto	l3744
  7368                           
  7369                           ; BSR set to: 0
  7370  002A5C  90D8               	bcf	status,0,c
  7371  002A5E  D002               	goto	l930
  7372  002A60                     l3744:
  7373                           
  7374                           ; BSR set to: 0
  7375  002A60  80D8               	bsf	status,0,c
  7376                           
  7377                           ; BSR set to: 0
  7378  002A62  D000               	goto	l930
  7379  002A64                     l930:
  7380                           
  7381                           ; BSR set to: 0
  7382  002A64  0012               	return		;funcret
  7383  002A66                     __end_of___ftge:
  7384                           	opt stack 0
  7385                           tblptru	equ	0xFF8
  7386                           tblptrh	equ	0xFF7
  7387                           tblptrl	equ	0xFF6
  7388                           tablat	equ	0xFF5
  7389                           intcon	equ	0xFF2
  7390                           intcon2	equ	0xFF1
  7391                           intcon3	equ	0xFF0
  7392                           postinc0	equ	0xFEE
  7393                           plusw0	equ	0xFEB
  7394                           wreg	equ	0xFE8
  7395                           postinc1	equ	0xFE6
  7396                           postdec1	equ	0xFE5
  7397                           plusw1	equ	0xFE3
  7398                           fsr1h	equ	0xFE2
  7399                           fsr1l	equ	0xFE1
  7400                           postinc2	equ	0xFDE
  7401                           postdec2	equ	0xFDD
  7402                           fsr2h	equ	0xFDA
  7403                           fsr2l	equ	0xFD9
  7404                           status	equ	0xFD8
  7405                           
  7406 ;; *************** function _affichage_position *****************
  7407 ;; Defined at:
  7408 ;;		line 94 in file "triangulation.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;		None
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;  _y              2   85[BANK0 ] int 
  7413 ;;  _x              2   83[BANK0 ] int 
  7414 ;;  i               2   89[BANK0 ] int 
  7415 ;;  j               2   87[BANK0 ] int 
  7416 ;; Return value:  Size  Location     Type
  7417 ;;		None               void
  7418 ;; Registers used:
  7419 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7425 ;;      Params:         0       0       0       0
  7426 ;;      Locals:         0       8       0       0
  7427 ;;      Temps:          0       0       0       0
  7428 ;;      Totals:         0       8       0       0
  7429 ;;Total ram usage:        8 bytes
  7430 ;; Hardware stack levels used:    1
  7431 ;; Hardware stack levels required when called:   10
  7432 ;; This function calls:
  7433 ;;		_PutIntUART
  7434 ;;		_PutsUART
  7435 ;;		___ftdiv
  7436 ;;		___fttol
  7437 ;; This function is called by:
  7438 ;;		_main
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text33
  7443  00166E                     __ptext33:
  7444                           	opt stack 0
  7445  00166E                     _affichage_position:
  7446                           	opt stack 20
  7447                           
  7448                           ;triangulation.c: 97: int i, j;
  7449                           ;triangulation.c: 98: static int compteur = 0;
  7450                           ;triangulation.c: 100: if (compteur == 2)
  7451                           
  7452                           ; BSR set to: 0
  7453                           ;incstack = 0
  7454  00166E  0E02               	movlw	2
  7455  001670  0100               	movlb	0	; () banked
  7456  001672  19FB               	xorwf	affichage_position@compteur& (0+255),w,b
  7457  001674  0100               	movlb	0	; () banked
  7458  001676  11FC               	iorwf	(affichage_position@compteur+1)& (0+255),w,b
  7459  001678  A4D8               	btfss	status,2,c
  7460  00167A  D157               	goto	l4368
  7461                           
  7462                           ; BSR set to: 0
  7463                           ;triangulation.c: 101: {
  7464                           ;triangulation.c: 102: int _x = (int)(capteur.c.x / 100.);
  7465  00167C  0E00               	movlw	0
  7466  00167E  0100               	movlb	0	; () banked
  7467  001680  6F95               	movwf	___ftdiv@f2& (0+255),b
  7468  001682  0EC8               	movlw	200
  7469  001684  0100               	movlb	0	; () banked
  7470  001686  6F96               	movwf	(___ftdiv@f2+1)& (0+255),b
  7471  001688  0E42               	movlw	66
  7472  00168A  0100               	movlb	0	; () banked
  7473  00168C  6F97               	movwf	(___ftdiv@f2+2)& (0+255),b
  7474  00168E  C17A  F092         	movff	_capteur+19,___ftdiv@f1
  7475  001692  C17B  F093         	movff	_capteur+20,___ftdiv@f1+1
  7476  001696  C17C  F094         	movff	_capteur+21,___ftdiv@f1+2
  7477  00169A  ECB6  F010         	call	___ftdiv	;wreg free
  7478  00169E  C092  F0A1         	movff	?___ftdiv,___fttol@f1
  7479  0016A2  C093  F0A2         	movff	?___ftdiv+1,___fttol@f1+1
  7480  0016A6  C094  F0A3         	movff	?___ftdiv+2,___fttol@f1+2
  7481  0016AA  EC57  F011         	call	___fttol	;wreg free
  7482  0016AE  C0A1  F0B3         	movff	?___fttol,affichage_position@_x
  7483  0016B2  C0A2  F0B4         	movff	?___fttol+1,affichage_position@_x+1
  7484                           
  7485                           ;triangulation.c: 103: int _y = (int)(capteur.c.y / 100.);
  7486  0016B6  0E00               	movlw	0
  7487  0016B8  0100               	movlb	0	; () banked
  7488  0016BA  6F95               	movwf	___ftdiv@f2& (0+255),b
  7489  0016BC  0EC8               	movlw	200
  7490  0016BE  0100               	movlb	0	; () banked
  7491  0016C0  6F96               	movwf	(___ftdiv@f2+1)& (0+255),b
  7492  0016C2  0E42               	movlw	66
  7493  0016C4  0100               	movlb	0	; () banked
  7494  0016C6  6F97               	movwf	(___ftdiv@f2+2)& (0+255),b
  7495  0016C8  C17D  F092         	movff	_capteur+22,___ftdiv@f1
  7496  0016CC  C17E  F093         	movff	_capteur+23,___ftdiv@f1+1
  7497  0016D0  C17F  F094         	movff	_capteur+24,___ftdiv@f1+2
  7498  0016D4  ECB6  F010         	call	___ftdiv	;wreg free
  7499  0016D8  C092  F0A1         	movff	?___ftdiv,___fttol@f1
  7500  0016DC  C093  F0A2         	movff	?___ftdiv+1,___fttol@f1+1
  7501  0016E0  C094  F0A3         	movff	?___ftdiv+2,___fttol@f1+2
  7502  0016E4  EC57  F011         	call	___fttol	;wreg free
  7503  0016E8  C0A1  F0B5         	movff	?___fttol,affichage_position@_y
  7504  0016EC  C0A2  F0B6         	movff	?___fttol+1,affichage_position@_y+1
  7505                           
  7506                           ;triangulation.c: 105: PutsUART(0, "X ");
  7507  0016F0  0E99               	movlw	low STR_6
  7508  0016F2  0100               	movlb	0	; () banked
  7509  0016F4  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7510  0016F6  0E03               	movlw	high STR_6
  7511  0016F8  0100               	movlb	0	; () banked
  7512  0016FA  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7513  0016FC  0E00               	movlw	0
  7514  0016FE  ECF2  F017         	call	_PutsUART
  7515                           
  7516                           ;triangulation.c: 106: for (i = 0; i < 60; i++)
  7517  001702  0E00               	movlw	0
  7518  001704  0100               	movlb	0	; () banked
  7519  001706  6FBA               	movwf	(affichage_position@i+1)& (0+255),b
  7520  001708  0E00               	movlw	0
  7521  00170A  6FB9               	movwf	affichage_position@i& (0+255),b
  7522  00170C                     l4296:
  7523                           
  7524                           ; BSR set to: 0
  7525  00170C  0100               	movlb	0	; () banked
  7526  00170E  BFBA               	btfsc	(affichage_position@i+1)& (0+255),7,b
  7527  001710  D00A               	goto	l4300
  7528  001712  0100               	movlb	0	; () banked
  7529  001714  51BA               	movf	(affichage_position@i+1)& (0+255),w,b
  7530  001716  E115               	bnz	l4306
  7531  001718  0E3C               	movlw	60
  7532  00171A  0100               	movlb	0	; () banked
  7533  00171C  5DB9               	subwf	affichage_position@i& (0+255),w,b
  7534  00171E  B0D8               	btfsc	status,0,c
  7535  001720  D010               	goto	l4306
  7536  001722  D001               	goto	l4300
  7537                           
  7538                           ; BSR set to: 0
  7539  001724  D00E               	goto	l4306
  7540  001726                     l4300:
  7541                           
  7542                           ; BSR set to: 0
  7543                           ;triangulation.c: 107: PutsUART(0, "~");
  7544  001726  0EA1               	movlw	low STR_7
  7545  001728  0100               	movlb	0	; () banked
  7546  00172A  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7547  00172C  0E03               	movlw	high STR_7
  7548  00172E  0100               	movlb	0	; () banked
  7549  001730  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7550  001732  0E00               	movlw	0
  7551  001734  ECF2  F017         	call	_PutsUART
  7552  001738  0100               	movlb	0	; () banked
  7553  00173A  4BB9               	infsnz	affichage_position@i& (0+255),f,b
  7554  00173C  2BBA               	incf	(affichage_position@i+1)& (0+255),f,b
  7555  00173E  D7E6               	goto	l4296
  7556                           
  7557                           ; BSR set to: 0
  7558  001740  D000               	goto	l4306
  7559  001742                     l4306:
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;triangulation.c: 108: PutsUART(0, "\n\r");
  7563  001742  0E5C               	movlw	low (STR_3+21)
  7564  001744  0100               	movlb	0	; () banked
  7565  001746  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7566  001748  0E03               	movlw	high (STR_3+21)
  7567  00174A  0100               	movlb	0	; () banked
  7568  00174C  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7569  00174E  0E00               	movlw	0
  7570  001750  ECF2  F017         	call	_PutsUART
  7571                           
  7572                           ;triangulation.c: 110: for (i = 0; i < 20; i++)
  7573  001754  0E00               	movlw	0
  7574  001756  0100               	movlb	0	; () banked
  7575  001758  6FBA               	movwf	(affichage_position@i+1)& (0+255),b
  7576  00175A  0E00               	movlw	0
  7577  00175C  6FB9               	movwf	affichage_position@i& (0+255),b
  7578  00175E                     l4310:
  7579                           
  7580                           ; BSR set to: 0
  7581  00175E  0100               	movlb	0	; () banked
  7582  001760  BFBA               	btfsc	(affichage_position@i+1)& (0+255),7,b
  7583  001762  D00A               	goto	l4314
  7584  001764  0100               	movlb	0	; () banked
  7585  001766  51BA               	movf	(affichage_position@i+1)& (0+255),w,b
  7586  001768  E178               	bnz	l4344
  7587  00176A  0E14               	movlw	20
  7588  00176C  0100               	movlb	0	; () banked
  7589  00176E  5DB9               	subwf	affichage_position@i& (0+255),w,b
  7590  001770  B0D8               	btfsc	status,0,c
  7591  001772  D073               	goto	l4344
  7592  001774  D001               	goto	l4314
  7593                           
  7594                           ; BSR set to: 0
  7595  001776  D071               	goto	l4344
  7596  001778                     l4314:
  7597                           
  7598                           ; BSR set to: 0
  7599                           ;triangulation.c: 111: {
  7600                           ;triangulation.c: 112: PutsUART(0, " |");
  7601  001778  0E9C               	movlw	low STR_9
  7602  00177A  0100               	movlb	0	; () banked
  7603  00177C  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7604  00177E  0E03               	movlw	high STR_9
  7605  001780  0100               	movlb	0	; () banked
  7606  001782  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7607  001784  0E00               	movlw	0
  7608  001786  ECF2  F017         	call	_PutsUART
  7609                           
  7610                           ;triangulation.c: 113: for (j = 0; j < 30; j++)
  7611  00178A  0E00               	movlw	0
  7612  00178C  0100               	movlb	0	; () banked
  7613  00178E  6FB8               	movwf	(affichage_position@j+1)& (0+255),b
  7614  001790  0E00               	movlw	0
  7615  001792  6FB7               	movwf	affichage_position@j& (0+255),b
  7616  001794                     l4318:
  7617                           
  7618                           ; BSR set to: 0
  7619  001794  0100               	movlb	0	; () banked
  7620  001796  BFB8               	btfsc	(affichage_position@j+1)& (0+255),7,b
  7621  001798  D00A               	goto	l4322
  7622  00179A  0100               	movlb	0	; () banked
  7623  00179C  51B8               	movf	(affichage_position@j+1)& (0+255),w,b
  7624  00179E  E136               	bnz	l4334
  7625  0017A0  0E1E               	movlw	30
  7626  0017A2  0100               	movlb	0	; () banked
  7627  0017A4  5DB7               	subwf	affichage_position@j& (0+255),w,b
  7628  0017A6  B0D8               	btfsc	status,0,c
  7629  0017A8  D031               	goto	l4334
  7630  0017AA  D001               	goto	l4322
  7631                           
  7632                           ; BSR set to: 0
  7633  0017AC  D02F               	goto	l4334
  7634  0017AE                     l4322:
  7635                           
  7636                           ; BSR set to: 0
  7637                           ;triangulation.c: 114: {
  7638                           ;triangulation.c: 115: if (_x == i && _y == j)
  7639  0017AE  0100               	movlb	0	; () banked
  7640  0017B0  51B9               	movf	affichage_position@i& (0+255),w,b
  7641  0017B2  0100               	movlb	0	; () banked
  7642  0017B4  19B3               	xorwf	affichage_position@_x& (0+255),w,b
  7643  0017B6  E11B               	bnz	l4328
  7644  0017B8  0100               	movlb	0	; () banked
  7645  0017BA  51BA               	movf	(affichage_position@i+1)& (0+255),w,b
  7646  0017BC  0100               	movlb	0	; () banked
  7647  0017BE  19B4               	xorwf	(affichage_position@_x+1)& (0+255),w,b
  7648  0017C0  A4D8               	btfss	status,2,c
  7649  0017C2  D015               	goto	l4328
  7650                           
  7651                           ; BSR set to: 0
  7652  0017C4  0100               	movlb	0	; () banked
  7653  0017C6  51B7               	movf	affichage_position@j& (0+255),w,b
  7654  0017C8  0100               	movlb	0	; () banked
  7655  0017CA  19B5               	xorwf	affichage_position@_y& (0+255),w,b
  7656  0017CC  E110               	bnz	l4328
  7657  0017CE  0100               	movlb	0	; () banked
  7658  0017D0  51B8               	movf	(affichage_position@j+1)& (0+255),w,b
  7659  0017D2  0100               	movlb	0	; () banked
  7660  0017D4  19B6               	xorwf	(affichage_position@_y+1)& (0+255),w,b
  7661  0017D6  A4D8               	btfss	status,2,c
  7662  0017D8  D00A               	goto	l4328
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;triangulation.c: 116: PutsUART(0, "O ");
  7666  0017DA  0E96               	movlw	low STR_10
  7667  0017DC  0100               	movlb	0	; () banked
  7668  0017DE  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7669  0017E0  0E03               	movlw	high STR_10
  7670  0017E2  0100               	movlb	0	; () banked
  7671  0017E4  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7672  0017E6  0E00               	movlw	0
  7673  0017E8  ECF2  F017         	call	_PutsUART
  7674  0017EC  D00A               	goto	l4330
  7675  0017EE                     l4328:
  7676                           
  7677                           ;triangulation.c: 117: else
  7678                           ;triangulation.c: 118: PutsUART(0, "- ");
  7679  0017EE  0E93               	movlw	low STR_11
  7680  0017F0  0100               	movlb	0	; () banked
  7681  0017F2  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7682  0017F4  0E03               	movlw	high STR_11
  7683  0017F6  0100               	movlb	0	; () banked
  7684  0017F8  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7685  0017FA  0E00               	movlw	0
  7686  0017FC  ECF2  F017         	call	_PutsUART
  7687  001800  D000               	goto	l4330
  7688  001802                     l4330:
  7689  001802  0100               	movlb	0	; () banked
  7690  001804  4BB7               	infsnz	affichage_position@j& (0+255),f,b
  7691  001806  2BB8               	incf	(affichage_position@j+1)& (0+255),f,b
  7692  001808  D7C5               	goto	l4318
  7693                           
  7694                           ; BSR set to: 0
  7695  00180A  D000               	goto	l4334
  7696  00180C                     l4334:
  7697                           
  7698                           ; BSR set to: 0
  7699                           ;triangulation.c: 119: }
  7700                           ;triangulation.c: 120: PutsUART(0, "|");
  7701  00180C  0E9D               	movlw	low (STR_9+1)
  7702  00180E  0100               	movlb	0	; () banked
  7703  001810  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7704  001812  0E03               	movlw	high (STR_9+1)
  7705  001814  0100               	movlb	0	; () banked
  7706  001816  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7707  001818  0E00               	movlw	0
  7708  00181A  ECF2  F017         	call	_PutsUART
  7709                           
  7710                           ;triangulation.c: 121: if (i == 10)
  7711  00181E  0E0A               	movlw	10
  7712  001820  0100               	movlb	0	; () banked
  7713  001822  19B9               	xorwf	affichage_position@i& (0+255),w,b
  7714  001824  0100               	movlb	0	; () banked
  7715  001826  11BA               	iorwf	(affichage_position@i+1)& (0+255),w,b
  7716  001828  A4D8               	btfss	status,2,c
  7717  00182A  D009               	goto	l535
  7718                           
  7719                           ; BSR set to: 0
  7720                           ;triangulation.c: 122: PutsUART(0, "X");
  7721  00182C  0E9F               	movlw	low STR_13
  7722  00182E  0100               	movlb	0	; () banked
  7723  001830  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7724  001832  0E03               	movlw	high STR_13
  7725  001834  0100               	movlb	0	; () banked
  7726  001836  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7727  001838  0E00               	movlw	0
  7728  00183A  ECF2  F017         	call	_PutsUART
  7729  00183E                     l535:
  7730                           
  7731                           ;triangulation.c: 123: PutsUART(0, "\n\r");
  7732  00183E  0E5C               	movlw	low (STR_3+21)
  7733  001840  0100               	movlb	0	; () banked
  7734  001842  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7735  001844  0E03               	movlw	high (STR_3+21)
  7736  001846  0100               	movlb	0	; () banked
  7737  001848  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7738  00184A  0E00               	movlw	0
  7739  00184C  ECF2  F017         	call	_PutsUART
  7740  001850  0100               	movlb	0	; () banked
  7741  001852  4BB9               	infsnz	affichage_position@i& (0+255),f,b
  7742  001854  2BBA               	incf	(affichage_position@i+1)& (0+255),f,b
  7743  001856  D783               	goto	l4310
  7744                           
  7745                           ; BSR set to: 0
  7746  001858  D000               	goto	l4344
  7747  00185A                     l4344:
  7748                           
  7749                           ; BSR set to: 0
  7750                           ;triangulation.c: 124: }
  7751                           ;triangulation.c: 126: PutsUART(0, "X ");
  7752  00185A  0E99               	movlw	low STR_6
  7753  00185C  0100               	movlb	0	; () banked
  7754  00185E  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7755  001860  0E03               	movlw	high STR_6
  7756  001862  0100               	movlb	0	; () banked
  7757  001864  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7758  001866  0E00               	movlw	0
  7759  001868  ECF2  F017         	call	_PutsUART
  7760                           
  7761                           ;triangulation.c: 127: for (i = 0; i < 60; i++)
  7762  00186C  0E00               	movlw	0
  7763  00186E  0100               	movlb	0	; () banked
  7764  001870  6FBA               	movwf	(affichage_position@i+1)& (0+255),b
  7765  001872  0E00               	movlw	0
  7766  001874  6FB9               	movwf	affichage_position@i& (0+255),b
  7767  001876                     l4348:
  7768                           
  7769                           ; BSR set to: 0
  7770  001876  0100               	movlb	0	; () banked
  7771  001878  BFBA               	btfsc	(affichage_position@i+1)& (0+255),7,b
  7772  00187A  D00A               	goto	l4352
  7773  00187C  0100               	movlb	0	; () banked
  7774  00187E  51BA               	movf	(affichage_position@i+1)& (0+255),w,b
  7775  001880  E115               	bnz	l4358
  7776  001882  0E3C               	movlw	60
  7777  001884  0100               	movlb	0	; () banked
  7778  001886  5DB9               	subwf	affichage_position@i& (0+255),w,b
  7779  001888  B0D8               	btfsc	status,0,c
  7780  00188A  D010               	goto	l4358
  7781  00188C  D001               	goto	l4352
  7782                           
  7783                           ; BSR set to: 0
  7784  00188E  D00E               	goto	l4358
  7785  001890                     l4352:
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;triangulation.c: 128: PutsUART(0, "~");
  7789  001890  0EA1               	movlw	low STR_7
  7790  001892  0100               	movlb	0	; () banked
  7791  001894  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7792  001896  0E03               	movlw	high STR_7
  7793  001898  0100               	movlb	0	; () banked
  7794  00189A  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7795  00189C  0E00               	movlw	0
  7796  00189E  ECF2  F017         	call	_PutsUART
  7797  0018A2  0100               	movlb	0	; () banked
  7798  0018A4  4BB9               	infsnz	affichage_position@i& (0+255),f,b
  7799  0018A6  2BBA               	incf	(affichage_position@i+1)& (0+255),f,b
  7800  0018A8  D7E6               	goto	l4348
  7801                           
  7802                           ; BSR set to: 0
  7803  0018AA  D000               	goto	l4358
  7804  0018AC                     l4358:
  7805                           
  7806                           ; BSR set to: 0
  7807                           ;triangulation.c: 129: PutsUART(0, "\n\r");
  7808  0018AC  0E5C               	movlw	low (STR_3+21)
  7809  0018AE  0100               	movlb	0	; () banked
  7810  0018B0  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7811  0018B2  0E03               	movlw	high (STR_3+21)
  7812  0018B4  0100               	movlb	0	; () banked
  7813  0018B6  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7814  0018B8  0E00               	movlw	0
  7815  0018BA  ECF2  F017         	call	_PutsUART
  7816                           
  7817                           ;triangulation.c: 132: PutIntUART(0, (int16_t) capteur.c.x);
  7818  0018BE  C17A  F0A1         	movff	_capteur+19,___fttol@f1
  7819  0018C2  C17B  F0A2         	movff	_capteur+20,___fttol@f1+1
  7820  0018C6  C17C  F0A3         	movff	_capteur+21,___fttol@f1+2
  7821  0018CA  EC57  F011         	call	___fttol	;wreg free
  7822  0018CE  C0A1  F0B0         	movff	?___fttol,PutIntUART@nb
  7823  0018D2  C0A2  F0B1         	movff	?___fttol+1,PutIntUART@nb+1
  7824  0018D6  0E00               	movlw	0
  7825  0018D8  ECC8  F01A         	call	_PutIntUART
  7826                           
  7827                           ;triangulation.c: 133: PutsUART(0, "\n\r");
  7828  0018DC  0E5C               	movlw	low (STR_3+21)
  7829  0018DE  0100               	movlb	0	; () banked
  7830  0018E0  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7831  0018E2  0E03               	movlw	high (STR_3+21)
  7832  0018E4  0100               	movlb	0	; () banked
  7833  0018E6  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7834  0018E8  0E00               	movlw	0
  7835  0018EA  ECF2  F017         	call	_PutsUART
  7836                           
  7837                           ;triangulation.c: 134: PutIntUART(0, (int16_t) capteur.c.y);
  7838  0018EE  C17D  F0A1         	movff	_capteur+22,___fttol@f1
  7839  0018F2  C17E  F0A2         	movff	_capteur+23,___fttol@f1+1
  7840  0018F6  C17F  F0A3         	movff	_capteur+24,___fttol@f1+2
  7841  0018FA  EC57  F011         	call	___fttol	;wreg free
  7842  0018FE  C0A1  F0B0         	movff	?___fttol,PutIntUART@nb
  7843  001902  C0A2  F0B1         	movff	?___fttol+1,PutIntUART@nb+1
  7844  001906  0E00               	movlw	0
  7845  001908  ECC8  F01A         	call	_PutIntUART
  7846                           
  7847                           ;triangulation.c: 135: PutsUART(0, "\n\r");
  7848  00190C  0E5C               	movlw	low (STR_3+21)
  7849  00190E  0100               	movlb	0	; () banked
  7850  001910  6F7E               	movwf	PutsUART@chaine& (0+255),b
  7851  001912  0E03               	movlw	high (STR_3+21)
  7852  001914  0100               	movlb	0	; () banked
  7853  001916  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  7854  001918  0E00               	movlw	0
  7855  00191A  ECF2  F017         	call	_PutsUART
  7856                           
  7857                           ;triangulation.c: 137: compteur = 0;
  7858  00191E  0E00               	movlw	0
  7859  001920  0100               	movlb	0	; () banked
  7860  001922  6FFC               	movwf	(affichage_position@compteur+1)& (0+255),b
  7861  001924  0E00               	movlw	0
  7862  001926  6FFB               	movwf	affichage_position@compteur& (0+255),b
  7863  001928  D000               	goto	l4368
  7864  00192A                     l4368:
  7865                           
  7866                           ; BSR set to: 0
  7867                           ;triangulation.c: 138: }
  7868                           ;triangulation.c: 140: compteur++;
  7869  00192A  0100               	movlb	0	; () banked
  7870  00192C  4BFB               	infsnz	affichage_position@compteur& (0+255),f,b
  7871  00192E  2BFC               	incf	(affichage_position@compteur+1)& (0+255),f,b
  7872                           
  7873                           ; BSR set to: 0
  7874  001930  0012               	return		;funcret
  7875  001932                     __end_of_affichage_position:
  7876                           	opt stack 0
  7877                           tblptru	equ	0xFF8
  7878                           tblptrh	equ	0xFF7
  7879                           tblptrl	equ	0xFF6
  7880                           tablat	equ	0xFF5
  7881                           intcon	equ	0xFF2
  7882                           intcon2	equ	0xFF1
  7883                           intcon3	equ	0xFF0
  7884                           postinc0	equ	0xFEE
  7885                           plusw0	equ	0xFEB
  7886                           wreg	equ	0xFE8
  7887                           postinc1	equ	0xFE6
  7888                           postdec1	equ	0xFE5
  7889                           plusw1	equ	0xFE3
  7890                           fsr1h	equ	0xFE2
  7891                           fsr1l	equ	0xFE1
  7892                           postinc2	equ	0xFDE
  7893                           postdec2	equ	0xFDD
  7894                           fsr2h	equ	0xFDA
  7895                           fsr2l	equ	0xFD9
  7896                           status	equ	0xFD8
  7897                           
  7898 ;; *************** function ___fttol *****************
  7899 ;; Defined at:
  7900 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  7901 ;; Parameters:    Size  Location     Type
  7902 ;;  f1              3   65[BANK0 ] float 
  7903 ;; Auto vars:     Size  Location     Type
  7904 ;;  lval            4   75[BANK0 ] unsigned long 
  7905 ;;  exp1            1   79[BANK0 ] unsigned char 
  7906 ;;  sign1           1   74[BANK0 ] unsigned char 
  7907 ;; Return value:  Size  Location     Type
  7908 ;;                  4   65[BANK0 ] long 
  7909 ;; Registers used:
  7910 ;;		wreg, status,2, status,0
  7911 ;; Tracked objects:
  7912 ;;		On entry : 0/0
  7913 ;;		On exit  : 0/0
  7914 ;;		Unchanged: 0/0
  7915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7916 ;;      Params:         0       4       0       0
  7917 ;;      Locals:         0       6       0       0
  7918 ;;      Temps:          0       5       0       0
  7919 ;;      Totals:         0      15       0       0
  7920 ;;Total ram usage:       15 bytes
  7921 ;; Hardware stack levels used:    1
  7922 ;; Hardware stack levels required when called:    6
  7923 ;; This function calls:
  7924 ;;		Nothing
  7925 ;; This function is called by:
  7926 ;;		_envoit_pwm
  7927 ;;		_affichage_position
  7928 ;;		_floor
  7929 ;; This function uses a non-reentrant model
  7930 ;;
  7931                           
  7932                           	psect	text34
  7933  0022AE                     __ptext34:
  7934                           	opt stack 0
  7935  0022AE                     ___fttol:
  7936                           	opt stack 19
  7937                           
  7938                           ; BSR set to: 0
  7939                           ;incstack = 0
  7940  0022AE  C0A3  F0A5         	movff	___fttol@f1+2,??___fttol
  7941  0022B2  0100               	movlb	0	; () banked
  7942  0022B4  6BA6               	clrf	(??___fttol+1)& (0+255),b
  7943  0022B6  6BA7               	clrf	(??___fttol+2)& (0+255),b
  7944  0022B8  0100               	movlb	0	; () banked
  7945  0022BA  35A2               	rlcf	(___fttol@f1+1)& (0+255),w,b
  7946  0022BC  0100               	movlb	0	; () banked
  7947  0022BE  37A5               	rlcf	??___fttol& (0+255),f,b
  7948  0022C0  E301               	bnc	u3571
  7949  0022C2  81A6               	bsf	(??___fttol+1)& (0+255),0,b
  7950  0022C4                     u3571:
  7951  0022C4  0100               	movlb	0	; () banked
  7952  0022C6  51A5               	movf	??___fttol& (0+255),w,b
  7953  0022C8  0100               	movlb	0	; () banked
  7954  0022CA  6FAF               	movwf	___fttol@exp1& (0+255),b
  7955  0022CC  0100               	movlb	0	; () banked
  7956  0022CE  51AF               	movf	___fttol@exp1& (0+255),w,b
  7957  0022D0  A4D8               	btfss	status,2,c
  7958  0022D2  D002               	goto	l3754
  7959  0022D4  D051               	goto	l3778
  7960                           
  7961                           ; BSR set to: 0
  7962                           
  7963                           ; BSR set to: 0
  7964  0022D6  D083               	goto	l957
  7965  0022D8                     l3754:
  7966                           
  7967                           ; BSR set to: 0
  7968  0022D8  0E17               	movlw	23
  7969  0022DA  0100               	movlb	0	; () banked
  7970  0022DC  6FA5               	movwf	??___fttol& (0+255),b
  7971  0022DE  C0A1  F0A6         	movff	___fttol@f1,??___fttol+1
  7972  0022E2  C0A2  F0A7         	movff	___fttol@f1+1,??___fttol+2
  7973  0022E6  C0A3  F0A8         	movff	___fttol@f1+2,??___fttol+3
  7974  0022EA  0100               	movlb	0	; () banked
  7975  0022EC  29A5               	incf	??___fttol& (0+255),w,b
  7976  0022EE  0100               	movlb	0	; () banked
  7977  0022F0  6FA9               	movwf	(??___fttol+4)& (0+255),b
  7978  0022F2  D005               	goto	u3590
  7979  0022F4                     u3595:
  7980  0022F4  0100               	movlb	0	; () banked
  7981  0022F6  90D8               	bcf	status,0,c
  7982  0022F8  33A8               	rrcf	(??___fttol+3)& (0+255),f,b
  7983  0022FA  33A7               	rrcf	(??___fttol+2)& (0+255),f,b
  7984  0022FC  33A6               	rrcf	(??___fttol+1)& (0+255),f,b
  7985  0022FE                     u3590:
  7986  0022FE  0100               	movlb	0	; () banked
  7987  002300  2FA9               	decfsz	(??___fttol+4)& (0+255),f,b
  7988  002302  D7F8               	goto	u3595
  7989  002304  0100               	movlb	0	; () banked
  7990  002306  51A6               	movf	(??___fttol+1)& (0+255),w,b
  7991  002308  0100               	movlb	0	; () banked
  7992  00230A  6FAA               	movwf	___fttol@sign1& (0+255),b
  7993                           
  7994                           ; BSR set to: 0
  7995  00230C  0100               	movlb	0	; () banked
  7996  00230E  8FA2               	bsf	(___fttol@f1+1)& (0+255),7,b
  7997                           
  7998                           ; BSR set to: 0
  7999  002310  0EFF               	movlw	255
  8000  002312  0100               	movlb	0	; () banked
  8001  002314  17A1               	andwf	___fttol@f1& (0+255),f,b
  8002  002316  0EFF               	movlw	255
  8003  002318  0100               	movlb	0	; () banked
  8004  00231A  17A2               	andwf	(___fttol@f1+1)& (0+255),f,b
  8005  00231C  0E00               	movlw	0
  8006  00231E  0100               	movlb	0	; () banked
  8007  002320  17A3               	andwf	(___fttol@f1+2)& (0+255),f,b
  8008                           
  8009                           ; BSR set to: 0
  8010  002322  0100               	movlb	0	; () banked
  8011  002324  51A1               	movf	___fttol@f1& (0+255),w,b
  8012  002326  0100               	movlb	0	; () banked
  8013  002328  6FAB               	movwf	___fttol@lval& (0+255),b
  8014  00232A  0100               	movlb	0	; () banked
  8015  00232C  51A2               	movf	(___fttol@f1+1)& (0+255),w,b
  8016  00232E  0100               	movlb	0	; () banked
  8017  002330  6FAC               	movwf	(___fttol@lval+1)& (0+255),b
  8018  002332  0100               	movlb	0	; () banked
  8019  002334  51A3               	movf	(___fttol@f1+2)& (0+255),w,b
  8020  002336  0100               	movlb	0	; () banked
  8021  002338  6FAD               	movwf	(___fttol@lval+2)& (0+255),b
  8022  00233A  0100               	movlb	0	; () banked
  8023  00233C  6BAE               	clrf	(___fttol@lval+3)& (0+255),b
  8024                           
  8025                           ; BSR set to: 0
  8026  00233E  0E8E               	movlw	142
  8027  002340  0100               	movlb	0	; () banked
  8028  002342  5FAF               	subwf	___fttol@exp1& (0+255),f,b
  8029                           
  8030                           ; BSR set to: 0
  8031  002344  0100               	movlb	0	; () banked
  8032  002346  AFAF               	btfss	___fttol@exp1& (0+255),7,b
  8033  002348  D013               	goto	l3776
  8034                           
  8035                           ; BSR set to: 0
  8036  00234A  0100               	movlb	0	; () banked
  8037  00234C  51AF               	movf	___fttol@exp1& (0+255),w,b
  8038  00234E  0A80               	xorlw	128
  8039  002350  0F8F               	addlw	143
  8040  002352  B0D8               	btfsc	status,0,c
  8041  002354  D003               	goto	l3772
  8042  002356  D010               	goto	l3778
  8043                           
  8044                           ; BSR set to: 0
  8045                           
  8046                           ; BSR set to: 0
  8047  002358  D042               	goto	l957
  8048                           
  8049                           ; BSR set to: 0
  8050  00235A  D000               	goto	l3772
  8051  00235C                     l3772:
  8052                           
  8053                           ; BSR set to: 0
  8054  00235C  0100               	movlb	0	; () banked
  8055  00235E  90D8               	bcf	status,0,c
  8056  002360  33AE               	rrcf	(___fttol@lval+3)& (0+255),f,b
  8057  002362  33AD               	rrcf	(___fttol@lval+2)& (0+255),f,b
  8058  002364  33AC               	rrcf	(___fttol@lval+1)& (0+255),f,b
  8059  002366  33AB               	rrcf	___fttol@lval& (0+255),f,b
  8060                           
  8061                           ; BSR set to: 0
  8062  002368  0100               	movlb	0	; () banked
  8063  00236A  3FAF               	incfsz	___fttol@exp1& (0+255),f,b
  8064  00236C  D7F7               	goto	l3772
  8065                           
  8066                           ; BSR set to: 0
  8067  00236E  D01F               	goto	l3786
  8068  002370                     l3776:
  8069                           
  8070                           ; BSR set to: 0
  8071  002370  0E17               	movlw	23
  8072  002372  0100               	movlb	0	; () banked
  8073  002374  65AF               	cpfsgt	___fttol@exp1& (0+255),b
  8074  002376  D014               	goto	l3784
  8075  002378                     l3778:
  8076                           
  8077                           ; BSR set to: 0
  8078  002378  0E00               	movlw	0
  8079  00237A  0100               	movlb	0	; () banked
  8080  00237C  6FA1               	movwf	?___fttol& (0+255),b
  8081  00237E  0E00               	movlw	0
  8082  002380  6FA2               	movwf	(?___fttol+1)& (0+255),b
  8083  002382  0E00               	movlw	0
  8084  002384  6FA3               	movwf	(?___fttol+2)& (0+255),b
  8085  002386  0E00               	movlw	0
  8086  002388  6FA4               	movwf	(?___fttol+3)& (0+255),b
  8087                           
  8088                           ; BSR set to: 0
  8089  00238A  D029               	goto	l957
  8090                           
  8091                           ; BSR set to: 0
  8092  00238C  D009               	goto	l3784
  8093  00238E                     l3782:
  8094                           
  8095                           ; BSR set to: 0
  8096  00238E  0100               	movlb	0	; () banked
  8097  002390  90D8               	bcf	status,0,c
  8098  002392  37AB               	rlcf	___fttol@lval& (0+255),f,b
  8099  002394  37AC               	rlcf	(___fttol@lval+1)& (0+255),f,b
  8100  002396  37AD               	rlcf	(___fttol@lval+2)& (0+255),f,b
  8101  002398  37AE               	rlcf	(___fttol@lval+3)& (0+255),f,b
  8102  00239A  0100               	movlb	0	; () banked
  8103  00239C  07AF               	decf	___fttol@exp1& (0+255),f,b
  8104  00239E  D000               	goto	l3784
  8105  0023A0                     l3784:
  8106                           
  8107                           ; BSR set to: 0
  8108  0023A0  0100               	movlb	0	; () banked
  8109  0023A2  51AF               	movf	___fttol@exp1& (0+255),w,b
  8110  0023A4  0100               	movlb	0	; () banked
  8111  0023A6  B4D8               	btfsc	status,2,c
  8112  0023A8  D002               	goto	l3786
  8113  0023AA  D7F1               	goto	l3782
  8114                           
  8115                           ; BSR set to: 0
  8116  0023AC  D000               	goto	l3786
  8117  0023AE                     l3786:
  8118                           
  8119                           ; BSR set to: 0
  8120  0023AE  0100               	movlb	0	; () banked
  8121  0023B0  51AA               	movf	___fttol@sign1& (0+255),w,b
  8122  0023B2  0100               	movlb	0	; () banked
  8123  0023B4  B4D8               	btfsc	status,2,c
  8124  0023B6  D00A               	goto	l3790
  8125                           
  8126                           ; BSR set to: 0
  8127  0023B8  0100               	movlb	0	; () banked
  8128  0023BA  1FAE               	comf	(___fttol@lval+3)& (0+255),f,b
  8129  0023BC  1FAD               	comf	(___fttol@lval+2)& (0+255),f,b
  8130  0023BE  1FAC               	comf	(___fttol@lval+1)& (0+255),f,b
  8131  0023C0  6DAB               	negf	___fttol@lval& (0+255),b
  8132  0023C2  0E00               	movlw	0
  8133  0023C4  23AC               	addwfc	(___fttol@lval+1)& (0+255),f,b
  8134  0023C6  23AD               	addwfc	(___fttol@lval+2)& (0+255),f,b
  8135  0023C8  23AE               	addwfc	(___fttol@lval+3)& (0+255),f,b
  8136  0023CA  D000               	goto	l3790
  8137  0023CC                     l3790:
  8138                           
  8139                           ; BSR set to: 0
  8140  0023CC  C0AB  F0A1         	movff	___fttol@lval,?___fttol
  8141  0023D0  C0AC  F0A2         	movff	___fttol@lval+1,?___fttol+1
  8142  0023D4  C0AD  F0A3         	movff	___fttol@lval+2,?___fttol+2
  8143  0023D8  C0AE  F0A4         	movff	___fttol@lval+3,?___fttol+3
  8144  0023DC  D000               	goto	l957
  8145  0023DE                     l957:
  8146                           
  8147                           ; BSR set to: 0
  8148  0023DE  0012               	return		;funcret
  8149  0023E0                     __end_of___fttol:
  8150                           	opt stack 0
  8151                           tblptru	equ	0xFF8
  8152                           tblptrh	equ	0xFF7
  8153                           tblptrl	equ	0xFF6
  8154                           tablat	equ	0xFF5
  8155                           intcon	equ	0xFF2
  8156                           intcon2	equ	0xFF1
  8157                           intcon3	equ	0xFF0
  8158                           postinc0	equ	0xFEE
  8159                           plusw0	equ	0xFEB
  8160                           wreg	equ	0xFE8
  8161                           postinc1	equ	0xFE6
  8162                           postdec1	equ	0xFE5
  8163                           plusw1	equ	0xFE3
  8164                           fsr1h	equ	0xFE2
  8165                           fsr1l	equ	0xFE1
  8166                           postinc2	equ	0xFDE
  8167                           postdec2	equ	0xFDD
  8168                           fsr2h	equ	0xFDA
  8169                           fsr2l	equ	0xFD9
  8170                           status	equ	0xFD8
  8171                           
  8172 ;; *************** function ___ftdiv *****************
  8173 ;; Defined at:
  8174 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;  f1              3   50[BANK0 ] float 
  8177 ;;  f2              3   53[BANK0 ] float 
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;  f3              3   60[BANK0 ] float 
  8180 ;;  sign            1   64[BANK0 ] unsigned char 
  8181 ;;  exp             1   63[BANK0 ] unsigned char 
  8182 ;;  cntr            1   59[BANK0 ] unsigned char 
  8183 ;; Return value:  Size  Location     Type
  8184 ;;                  3   50[BANK0 ] float 
  8185 ;; Registers used:
  8186 ;;		wreg, status,2, status,0, cstack
  8187 ;; Tracked objects:
  8188 ;;		On entry : 0/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8192 ;;      Params:         0       6       0       0
  8193 ;;      Locals:         0       6       0       0
  8194 ;;      Temps:          0       3       0       0
  8195 ;;      Totals:         0      15       0       0
  8196 ;;Total ram usage:       15 bytes
  8197 ;; Hardware stack levels used:    1
  8198 ;; Hardware stack levels required when called:    7
  8199 ;; This function calls:
  8200 ;;		___ftpack
  8201 ;; This function is called by:
  8202 ;;		_obtention_angle
  8203 ;;		_triangulation
  8204 ;;		_cotangeante
  8205 ;;		_conversion_degre_radian
  8206 ;;		_affichage_position
  8207 ;;		_tan
  8208 ;;		_sin
  8209 ;; This function uses a non-reentrant model
  8210 ;;
  8211                           
  8212                           	psect	text35
  8213  00216C                     __ptext35:
  8214                           	opt stack 0
  8215  00216C                     ___ftdiv:
  8216                           	opt stack 19
  8217                           
  8218                           ; BSR set to: 0
  8219                           ;incstack = 0
  8220  00216C  C094  F098         	movff	___ftdiv@f1+2,??___ftdiv
  8221  002170  0100               	movlb	0	; () banked
  8222  002172  6B99               	clrf	(??___ftdiv+1)& (0+255),b
  8223  002174  6B9A               	clrf	(??___ftdiv+2)& (0+255),b
  8224  002176  0100               	movlb	0	; () banked
  8225  002178  3593               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  8226  00217A  0100               	movlb	0	; () banked
  8227  00217C  3798               	rlcf	??___ftdiv& (0+255),f,b
  8228  00217E  E301               	bnc	u3671
  8229  002180  8199               	bsf	(??___ftdiv+1)& (0+255),0,b
  8230  002182                     u3671:
  8231  002182  0100               	movlb	0	; () banked
  8232  002184  5198               	movf	??___ftdiv& (0+255),w,b
  8233  002186  0100               	movlb	0	; () banked
  8234  002188  6F9F               	movwf	___ftdiv@exp& (0+255),b
  8235  00218A  0100               	movlb	0	; () banked
  8236  00218C  519F               	movf	___ftdiv@exp& (0+255),w,b
  8237  00218E  A4D8               	btfss	status,2,c
  8238  002190  D002               	goto	l3816
  8239  002192  D014               	goto	l3818
  8240                           
  8241                           ; BSR set to: 0
  8242                           
  8243                           ; BSR set to: 0
  8244  002194  D08B               	goto	l921
  8245  002196                     l3816:
  8246                           
  8247                           ; BSR set to: 0
  8248  002196  C097  F098         	movff	___ftdiv@f2+2,??___ftdiv
  8249  00219A  0100               	movlb	0	; () banked
  8250  00219C  6B99               	clrf	(??___ftdiv+1)& (0+255),b
  8251  00219E  6B9A               	clrf	(??___ftdiv+2)& (0+255),b
  8252  0021A0  0100               	movlb	0	; () banked
  8253  0021A2  3596               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  8254  0021A4  0100               	movlb	0	; () banked
  8255  0021A6  3798               	rlcf	??___ftdiv& (0+255),f,b
  8256  0021A8  E301               	bnc	u3691
  8257  0021AA  8199               	bsf	(??___ftdiv+1)& (0+255),0,b
  8258  0021AC                     u3691:
  8259  0021AC  0100               	movlb	0	; () banked
  8260  0021AE  5198               	movf	??___ftdiv& (0+255),w,b
  8261  0021B0  0100               	movlb	0	; () banked
  8262  0021B2  6FA0               	movwf	___ftdiv@sign& (0+255),b
  8263  0021B4  0100               	movlb	0	; () banked
  8264  0021B6  51A0               	movf	___ftdiv@sign& (0+255),w,b
  8265  0021B8  A4D8               	btfss	status,2,c
  8266  0021BA  D00A               	goto	l3822
  8267  0021BC                     l3818:
  8268                           
  8269                           ; BSR set to: 0
  8270  0021BC  0E00               	movlw	0
  8271  0021BE  0100               	movlb	0	; () banked
  8272  0021C0  6F92               	movwf	?___ftdiv& (0+255),b
  8273  0021C2  0E00               	movlw	0
  8274  0021C4  0100               	movlb	0	; () banked
  8275  0021C6  6F93               	movwf	(?___ftdiv+1)& (0+255),b
  8276  0021C8  0E00               	movlw	0
  8277  0021CA  0100               	movlb	0	; () banked
  8278  0021CC  6F94               	movwf	(?___ftdiv+2)& (0+255),b
  8279                           
  8280                           ; BSR set to: 0
  8281  0021CE  D06E               	goto	l921
  8282  0021D0                     l3822:
  8283                           
  8284                           ; BSR set to: 0
  8285  0021D0  0E00               	movlw	0
  8286  0021D2  0100               	movlb	0	; () banked
  8287  0021D4  6F9C               	movwf	___ftdiv@f3& (0+255),b
  8288  0021D6  0E00               	movlw	0
  8289  0021D8  0100               	movlb	0	; () banked
  8290  0021DA  6F9D               	movwf	(___ftdiv@f3+1)& (0+255),b
  8291  0021DC  0E00               	movlw	0
  8292  0021DE  0100               	movlb	0	; () banked
  8293  0021E0  6F9E               	movwf	(___ftdiv@f3+2)& (0+255),b
  8294                           
  8295                           ; BSR set to: 0
  8296  0021E2  0100               	movlb	0	; () banked
  8297  0021E4  51A0               	movf	___ftdiv@sign& (0+255),w,b
  8298  0021E6  0F89               	addlw	137
  8299  0021E8  0100               	movlb	0	; () banked
  8300  0021EA  5F9F               	subwf	___ftdiv@exp& (0+255),f,b
  8301                           
  8302                           ; BSR set to: 0
  8303  0021EC  C094  F0A0         	movff	___ftdiv@f1+2,___ftdiv@sign
  8304                           
  8305                           ; BSR set to: 0
  8306  0021F0  0100               	movlb	0	; () banked
  8307  0021F2  5197               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8308  0021F4  0100               	movlb	0	; () banked
  8309  0021F6  1BA0               	xorwf	___ftdiv@sign& (0+255),f,b
  8310                           
  8311                           ; BSR set to: 0
  8312  0021F8  0E80               	movlw	128
  8313  0021FA  0100               	movlb	0	; () banked
  8314  0021FC  17A0               	andwf	___ftdiv@sign& (0+255),f,b
  8315                           
  8316                           ; BSR set to: 0
  8317  0021FE  0100               	movlb	0	; () banked
  8318  002200  8F93               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  8319                           
  8320                           ; BSR set to: 0
  8321  002202  0EFF               	movlw	255
  8322  002204  0100               	movlb	0	; () banked
  8323  002206  1792               	andwf	___ftdiv@f1& (0+255),f,b
  8324  002208  0EFF               	movlw	255
  8325  00220A  0100               	movlb	0	; () banked
  8326  00220C  1793               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  8327  00220E  0E00               	movlw	0
  8328  002210  0100               	movlb	0	; () banked
  8329  002212  1794               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  8330                           
  8331                           ; BSR set to: 0
  8332  002214  0100               	movlb	0	; () banked
  8333  002216  8F96               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  8334                           
  8335                           ; BSR set to: 0
  8336  002218  0EFF               	movlw	255
  8337  00221A  0100               	movlb	0	; () banked
  8338  00221C  1795               	andwf	___ftdiv@f2& (0+255),f,b
  8339  00221E  0EFF               	movlw	255
  8340  002220  0100               	movlb	0	; () banked
  8341  002222  1796               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  8342  002224  0E00               	movlw	0
  8343  002226  0100               	movlb	0	; () banked
  8344  002228  1797               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  8345                           
  8346                           ; BSR set to: 0
  8347  00222A  0E18               	movlw	24
  8348  00222C  0100               	movlb	0	; () banked
  8349  00222E  6F9B               	movwf	___ftdiv@cntr& (0+255),b
  8350  002230  D000               	goto	l3842
  8351  002232                     l3842:
  8352                           
  8353                           ; BSR set to: 0
  8354  002232  0100               	movlb	0	; () banked
  8355  002234  90D8               	bcf	status,0,c
  8356  002236  379C               	rlcf	___ftdiv@f3& (0+255),f,b
  8357  002238  379D               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  8358  00223A  379E               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  8359                           
  8360                           ; BSR set to: 0
  8361  00223C  0100               	movlb	0	; () banked
  8362  00223E  5195               	movf	___ftdiv@f2& (0+255),w,b
  8363  002240  0100               	movlb	0	; () banked
  8364  002242  5D92               	subwf	___ftdiv@f1& (0+255),w,b
  8365  002244  0100               	movlb	0	; () banked
  8366  002246  5196               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8367  002248  0100               	movlb	0	; () banked
  8368  00224A  5993               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  8369  00224C  0100               	movlb	0	; () banked
  8370  00224E  5197               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8371  002250  0100               	movlb	0	; () banked
  8372  002252  5994               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  8373  002254  A0D8               	btfss	status,0,c
  8374  002256  D00E               	goto	l924
  8375                           
  8376                           ; BSR set to: 0
  8377  002258  0100               	movlb	0	; () banked
  8378  00225A  5195               	movf	___ftdiv@f2& (0+255),w,b
  8379  00225C  0100               	movlb	0	; () banked
  8380  00225E  5F92               	subwf	___ftdiv@f1& (0+255),f,b
  8381  002260  0100               	movlb	0	; () banked
  8382  002262  5196               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8383  002264  0100               	movlb	0	; () banked
  8384  002266  5B93               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  8385  002268  0100               	movlb	0	; () banked
  8386  00226A  5197               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8387  00226C  0100               	movlb	0	; () banked
  8388  00226E  5B94               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  8389                           
  8390                           ; BSR set to: 0
  8391  002270  0100               	movlb	0	; () banked
  8392  002272  819C               	bsf	___ftdiv@f3& (0+255),0,b
  8393  002274                     l924:
  8394                           
  8395                           ; BSR set to: 0
  8396  002274  0100               	movlb	0	; () banked
  8397  002276  90D8               	bcf	status,0,c
  8398  002278  3792               	rlcf	___ftdiv@f1& (0+255),f,b
  8399  00227A  3793               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  8400  00227C  3794               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  8401                           
  8402                           ; BSR set to: 0
  8403  00227E  0100               	movlb	0	; () banked
  8404  002280  2F9B               	decfsz	___ftdiv@cntr& (0+255),f,b
  8405  002282  D7D7               	goto	l3842
  8406  002284  D000               	goto	l3852
  8407  002286                     l3852:
  8408                           
  8409                           ; BSR set to: 0
  8410  002286  C09C  F060         	movff	___ftdiv@f3,___ftpack@arg
  8411  00228A  C09D  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8412  00228E  C09E  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8413  002292  C09F  F063         	movff	___ftdiv@exp,___ftpack@exp
  8414  002296  C0A0  F064         	movff	___ftdiv@sign,___ftpack@sign
  8415  00229A  ECF0  F011         	call	___ftpack	;wreg free
  8416  00229E  C060  F092         	movff	?___ftpack,?___ftdiv
  8417  0022A2  C061  F093         	movff	?___ftpack+1,?___ftdiv+1
  8418  0022A6  C062  F094         	movff	?___ftpack+2,?___ftdiv+2
  8419  0022AA  D000               	goto	l921
  8420  0022AC                     l921:
  8421  0022AC  0012               	return		;funcret
  8422  0022AE                     __end_of___ftdiv:
  8423                           	opt stack 0
  8424                           tblptru	equ	0xFF8
  8425                           tblptrh	equ	0xFF7
  8426                           tblptrl	equ	0xFF6
  8427                           tablat	equ	0xFF5
  8428                           intcon	equ	0xFF2
  8429                           intcon2	equ	0xFF1
  8430                           intcon3	equ	0xFF0
  8431                           postinc0	equ	0xFEE
  8432                           plusw0	equ	0xFEB
  8433                           wreg	equ	0xFE8
  8434                           postinc1	equ	0xFE6
  8435                           postdec1	equ	0xFE5
  8436                           plusw1	equ	0xFE3
  8437                           fsr1h	equ	0xFE2
  8438                           fsr1l	equ	0xFE1
  8439                           postinc2	equ	0xFDE
  8440                           postdec2	equ	0xFDD
  8441                           fsr2h	equ	0xFDA
  8442                           fsr2l	equ	0xFD9
  8443                           status	equ	0xFD8
  8444                           
  8445 ;; *************** function ___ftpack *****************
  8446 ;; Defined at:
  8447 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  8448 ;; Parameters:    Size  Location     Type
  8449 ;;  arg             3    0[BANK0 ] unsigned um
  8450 ;;  exp             1    3[BANK0 ] unsigned char 
  8451 ;;  sign            1    4[BANK0 ] unsigned char 
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;		None
  8454 ;; Return value:  Size  Location     Type
  8455 ;;                  3    0[BANK0 ] float 
  8456 ;; Registers used:
  8457 ;;		wreg, status,2, status,0
  8458 ;; Tracked objects:
  8459 ;;		On entry : 0/0
  8460 ;;		On exit  : 0/0
  8461 ;;		Unchanged: 0/0
  8462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8463 ;;      Params:         0       5       0       0
  8464 ;;      Locals:         0       0       0       0
  8465 ;;      Temps:          0       3       0       0
  8466 ;;      Totals:         0       8       0       0
  8467 ;;Total ram usage:        8 bytes
  8468 ;; Hardware stack levels used:    1
  8469 ;; Hardware stack levels required when called:    6
  8470 ;; This function calls:
  8471 ;;		Nothing
  8472 ;; This function is called by:
  8473 ;;		___altoft
  8474 ;;		___ftadd
  8475 ;;		___ftdiv
  8476 ;;		___ftmul
  8477 ;;		___lwtoft
  8478 ;; This function uses a non-reentrant model
  8479 ;;
  8480                           
  8481                           	psect	text36
  8482  0023E0                     __ptext36:
  8483                           	opt stack 0
  8484  0023E0                     ___ftpack:
  8485                           	opt stack 18
  8486                           
  8487                           ;incstack = 0
  8488  0023E0  0100               	movlb	0	; () banked
  8489  0023E2  5163               	movf	___ftpack@exp& (0+255),w,b
  8490  0023E4  0100               	movlb	0	; () banked
  8491  0023E6  B4D8               	btfsc	status,2,c
  8492  0023E8  D008               	goto	l3558
  8493                           
  8494                           ; BSR set to: 0
  8495  0023EA  0100               	movlb	0	; () banked
  8496  0023EC  5160               	movf	___ftpack@arg& (0+255),w,b
  8497  0023EE  0100               	movlb	0	; () banked
  8498  0023F0  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  8499  0023F2  0100               	movlb	0	; () banked
  8500  0023F4  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  8501  0023F6  A4D8               	btfss	status,2,c
  8502  0023F8  D013               	goto	l3564
  8503  0023FA                     l3558:
  8504                           
  8505                           ; BSR set to: 0
  8506  0023FA  0E00               	movlw	0
  8507  0023FC  0100               	movlb	0	; () banked
  8508  0023FE  6F60               	movwf	?___ftpack& (0+255),b
  8509  002400  0E00               	movlw	0
  8510  002402  0100               	movlb	0	; () banked
  8511  002404  6F61               	movwf	(?___ftpack+1)& (0+255),b
  8512  002406  0E00               	movlw	0
  8513  002408  0100               	movlb	0	; () banked
  8514  00240A  6F62               	movwf	(?___ftpack+2)& (0+255),b
  8515                           
  8516                           ; BSR set to: 0
  8517  00240C  D078               	goto	l849
  8518                           
  8519                           ; BSR set to: 0
  8520  00240E  D008               	goto	l3564
  8521  002410                     l3562:
  8522                           
  8523                           ; BSR set to: 0
  8524  002410  0100               	movlb	0	; () banked
  8525  002412  2B63               	incf	___ftpack@exp& (0+255),f,b
  8526  002414  0100               	movlb	0	; () banked
  8527  002416  90D8               	bcf	status,0,c
  8528  002418  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8529  00241A  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8530  00241C  3360               	rrcf	___ftpack@arg& (0+255),f,b
  8531  00241E  D000               	goto	l3564
  8532  002420                     l3564:
  8533                           
  8534                           ; BSR set to: 0
  8535  002420  0E00               	movlw	0
  8536  002422  0100               	movlb	0	; () banked
  8537  002424  1560               	andwf	___ftpack@arg& (0+255),w,b
  8538  002426  0100               	movlb	0	; () banked
  8539  002428  6F65               	movwf	??___ftpack& (0+255),b
  8540  00242A  0E00               	movlw	0
  8541  00242C  0100               	movlb	0	; () banked
  8542  00242E  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8543  002430  0100               	movlb	0	; () banked
  8544  002432  6F66               	movwf	(??___ftpack+1)& (0+255),b
  8545  002434  0EFE               	movlw	254
  8546  002436  0100               	movlb	0	; () banked
  8547  002438  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8548  00243A  0100               	movlb	0	; () banked
  8549  00243C  6F67               	movwf	(??___ftpack+2)& (0+255),b
  8550  00243E  0100               	movlb	0	; () banked
  8551  002440  5165               	movf	??___ftpack& (0+255),w,b
  8552  002442  0100               	movlb	0	; () banked
  8553  002444  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  8554  002446  0100               	movlb	0	; () banked
  8555  002448  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  8556  00244A  B4D8               	btfsc	status,2,c
  8557  00244C  D013               	goto	l3570
  8558  00244E  D7E0               	goto	l3562
  8559                           
  8560                           ; BSR set to: 0
  8561  002450  D011               	goto	l3570
  8562  002452                     l3566:
  8563                           
  8564                           ; BSR set to: 0
  8565  002452  0100               	movlb	0	; () banked
  8566  002454  2B63               	incf	___ftpack@exp& (0+255),f,b
  8567                           
  8568                           ; BSR set to: 0
  8569  002456  0E01               	movlw	1
  8570  002458  0100               	movlb	0	; () banked
  8571  00245A  2760               	addwf	___ftpack@arg& (0+255),f,b
  8572  00245C  0E00               	movlw	0
  8573  00245E  0100               	movlb	0	; () banked
  8574  002460  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  8575  002462  0E00               	movlw	0
  8576  002464  0100               	movlb	0	; () banked
  8577  002466  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  8578  002468  0100               	movlb	0	; () banked
  8579  00246A  90D8               	bcf	status,0,c
  8580  00246C  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  8581  00246E  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  8582  002470  3360               	rrcf	___ftpack@arg& (0+255),f,b
  8583  002472  D000               	goto	l3570
  8584  002474                     l3570:
  8585                           
  8586                           ; BSR set to: 0
  8587  002474  0E00               	movlw	0
  8588  002476  0100               	movlb	0	; () banked
  8589  002478  1560               	andwf	___ftpack@arg& (0+255),w,b
  8590  00247A  0100               	movlb	0	; () banked
  8591  00247C  6F65               	movwf	??___ftpack& (0+255),b
  8592  00247E  0E00               	movlw	0
  8593  002480  0100               	movlb	0	; () banked
  8594  002482  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  8595  002484  0100               	movlb	0	; () banked
  8596  002486  6F66               	movwf	(??___ftpack+1)& (0+255),b
  8597  002488  0EFF               	movlw	255
  8598  00248A  0100               	movlb	0	; () banked
  8599  00248C  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  8600  00248E  0100               	movlb	0	; () banked
  8601  002490  6F67               	movwf	(??___ftpack+2)& (0+255),b
  8602  002492  0100               	movlb	0	; () banked
  8603  002494  5165               	movf	??___ftpack& (0+255),w,b
  8604  002496  0100               	movlb	0	; () banked
  8605  002498  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  8606  00249A  0100               	movlb	0	; () banked
  8607  00249C  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  8608  00249E  B4D8               	btfsc	status,2,c
  8609  0024A0  D00A               	goto	l3574
  8610  0024A2  D7D7               	goto	l3566
  8611                           
  8612                           ; BSR set to: 0
  8613  0024A4  D008               	goto	l3574
  8614  0024A6                     l3572:
  8615                           
  8616                           ; BSR set to: 0
  8617  0024A6  0100               	movlb	0	; () banked
  8618  0024A8  0763               	decf	___ftpack@exp& (0+255),f,b
  8619  0024AA  0100               	movlb	0	; () banked
  8620  0024AC  90D8               	bcf	status,0,c
  8621  0024AE  3760               	rlcf	___ftpack@arg& (0+255),f,b
  8622  0024B0  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  8623  0024B2  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  8624  0024B4  D000               	goto	l3574
  8625  0024B6                     l3574:
  8626                           
  8627                           ; BSR set to: 0
  8628  0024B6  0100               	movlb	0	; () banked
  8629  0024B8  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  8630  0024BA  D005               	goto	l860
  8631                           
  8632                           ; BSR set to: 0
  8633  0024BC  0E02               	movlw	2
  8634  0024BE  0100               	movlb	0	; () banked
  8635  0024C0  6163               	cpfslt	___ftpack@exp& (0+255),b
  8636  0024C2  D7F1               	goto	l3572
  8637  0024C4  D000               	goto	l860
  8638  0024C6                     l860:
  8639                           
  8640                           ; BSR set to: 0
  8641  0024C6  0100               	movlb	0	; () banked
  8642  0024C8  B163               	btfsc	___ftpack@exp& (0+255),0,b
  8643  0024CA  D003               	goto	l3580
  8644                           
  8645                           ; BSR set to: 0
  8646  0024CC  0100               	movlb	0	; () banked
  8647  0024CE  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
  8648  0024D0  D000               	goto	l3580
  8649  0024D2                     l3580:
  8650                           
  8651                           ; BSR set to: 0
  8652  0024D2  0100               	movlb	0	; () banked
  8653  0024D4  90D8               	bcf	status,0,c
  8654  0024D6  3363               	rrcf	___ftpack@exp& (0+255),f,b
  8655  0024D8  0100               	movlb	0	; () banked
  8656  0024DA  5163               	movf	___ftpack@exp& (0+255),w,b
  8657  0024DC  0100               	movlb	0	; () banked
  8658  0024DE  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  8659                           
  8660                           ; BSR set to: 0
  8661  0024E0  0100               	movlb	0	; () banked
  8662  0024E2  5164               	movf	___ftpack@sign& (0+255),w,b
  8663  0024E4  0100               	movlb	0	; () banked
  8664  0024E6  B4D8               	btfsc	status,2,c
  8665  0024E8  D003               	goto	l3586
  8666                           
  8667                           ; BSR set to: 0
  8668  0024EA  0100               	movlb	0	; () banked
  8669  0024EC  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
  8670  0024EE  D000               	goto	l3586
  8671  0024F0                     l3586:
  8672                           
  8673                           ; BSR set to: 0
  8674  0024F0  C060  F060         	movff	___ftpack@arg,?___ftpack
  8675  0024F4  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
  8676  0024F8  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
  8677  0024FC  D000               	goto	l849
  8678  0024FE                     l849:
  8679                           
  8680                           ; BSR set to: 0
  8681  0024FE  0012               	return		;funcret
  8682  002500                     __end_of___ftpack:
  8683                           	opt stack 0
  8684                           tblptru	equ	0xFF8
  8685                           tblptrh	equ	0xFF7
  8686                           tblptrl	equ	0xFF6
  8687                           tablat	equ	0xFF5
  8688                           intcon	equ	0xFF2
  8689                           intcon2	equ	0xFF1
  8690                           intcon3	equ	0xFF0
  8691                           postinc0	equ	0xFEE
  8692                           plusw0	equ	0xFEB
  8693                           wreg	equ	0xFE8
  8694                           postinc1	equ	0xFE6
  8695                           postdec1	equ	0xFE5
  8696                           plusw1	equ	0xFE3
  8697                           fsr1h	equ	0xFE2
  8698                           fsr1l	equ	0xFE1
  8699                           postinc2	equ	0xFDE
  8700                           postdec2	equ	0xFDD
  8701                           fsr2h	equ	0xFDA
  8702                           fsr2l	equ	0xFD9
  8703                           status	equ	0xFD8
  8704                           
  8705 ;; *************** function _PutIntUART *****************
  8706 ;; Defined at:
  8707 ;;		line 248 in file "uart.c"
  8708 ;; Parameters:    Size  Location     Type
  8709 ;;  type_uart       1    wreg     unsigned char 
  8710 ;;  nb              2   80[BANK0 ] int 
  8711 ;; Auto vars:     Size  Location     Type
  8712 ;;  type_uart       1   82[BANK0 ] unsigned char 
  8713 ;; Return value:  Size  Location     Type
  8714 ;;		None               void
  8715 ;; Registers used:
  8716 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8717 ;; Tracked objects:
  8718 ;;		On entry : 0/0
  8719 ;;		On exit  : 0/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8722 ;;      Params:         0       2       0       0
  8723 ;;      Locals:         0       1       0       0
  8724 ;;      Temps:          0       0       0       0
  8725 ;;      Totals:         0       3       0       0
  8726 ;;Total ram usage:        3 bytes
  8727 ;; Hardware stack levels used:    1
  8728 ;; Hardware stack levels required when called:    9
  8729 ;; This function calls:
  8730 ;;		_IntToC
  8731 ;;		_PutsUART
  8732 ;; This function is called by:
  8733 ;;		_main
  8734 ;;		_affichage_position
  8735 ;;		_traitement_reception
  8736 ;; This function uses a non-reentrant model
  8737 ;;
  8738                           
  8739                           	psect	text37
  8740  003590                     __ptext37:
  8741                           	opt stack 0
  8742  003590                     _PutIntUART:
  8743                           	opt stack 20
  8744                           
  8745                           ; BSR set to: 0
  8746                           ;incstack = 0
  8747                           ;PutIntUART@type_uart stored from wreg
  8748  003590  0100               	movlb	0	; () banked
  8749  003592  6FB2               	movwf	PutIntUART@type_uart& (0+255),b
  8750                           
  8751                           ; BSR set to: 0
  8752                           ;uart.c: 250: PutsUART (type_uart, IntToC (nb));
  8753  003594  C0B0  F06E         	movff	PutIntUART@nb,IntToC@nb
  8754  003598  C0B1  F06F         	movff	PutIntUART@nb+1,IntToC@nb+1
  8755  00359C  EC93  F009         	call	_IntToC	;wreg free
  8756  0035A0  C06E  F07E         	movff	?_IntToC,PutsUART@chaine
  8757  0035A4  C06F  F07F         	movff	?_IntToC+1,PutsUART@chaine+1
  8758  0035A8  0100               	movlb	0	; () banked
  8759  0035AA  51B2               	movf	PutIntUART@type_uart& (0+255),w,b
  8760  0035AC  ECF2  F017         	call	_PutsUART
  8761  0035B0  0012               	return		;funcret
  8762  0035B2                     __end_of_PutIntUART:
  8763                           	opt stack 0
  8764                           tblptru	equ	0xFF8
  8765                           tblptrh	equ	0xFF7
  8766                           tblptrl	equ	0xFF6
  8767                           tablat	equ	0xFF5
  8768                           intcon	equ	0xFF2
  8769                           intcon2	equ	0xFF1
  8770                           intcon3	equ	0xFF0
  8771                           postinc0	equ	0xFEE
  8772                           plusw0	equ	0xFEB
  8773                           wreg	equ	0xFE8
  8774                           postinc1	equ	0xFE6
  8775                           postdec1	equ	0xFE5
  8776                           plusw1	equ	0xFE3
  8777                           fsr1h	equ	0xFE2
  8778                           fsr1l	equ	0xFE1
  8779                           postinc2	equ	0xFDE
  8780                           postdec2	equ	0xFDD
  8781                           fsr2h	equ	0xFDA
  8782                           fsr2l	equ	0xFD9
  8783                           status	equ	0xFD8
  8784                           
  8785 ;; *************** function _PutsUART *****************
  8786 ;; Defined at:
  8787 ;;		line 148 in file "uart.c"
  8788 ;; Parameters:    Size  Location     Type
  8789 ;;  type_uart       1    wreg     unsigned char 
  8790 ;;  chaine          2   30[BANK0 ] PTR const unsigned char 
  8791 ;;		 -> STR_19(3), STR_18(3), STR_17(3), STR_16(2), 
  8792 ;;		 -> STR_15(3), STR_14(3), STR_13(2), STR_12(2), 
  8793 ;;		 -> STR_11(3), STR_10(3), STR_9(3), STR_8(3), 
  8794 ;;		 -> STR_7(2), STR_6(3), IntToC@out(8), STR_5(20), 
  8795 ;;		 -> STR_4(8), STR_3(24), STR_2(43), STR_1(24), 
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;  type_uart       1   34[BANK0 ] unsigned char 
  8798 ;; Return value:  Size  Location     Type
  8799 ;;		None               void
  8800 ;; Registers used:
  8801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8802 ;; Tracked objects:
  8803 ;;		On entry : 0/0
  8804 ;;		On exit  : 0/0
  8805 ;;		Unchanged: 0/0
  8806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8807 ;;      Params:         0       2       0       0
  8808 ;;      Locals:         0       1       0       0
  8809 ;;      Temps:          0       2       0       0
  8810 ;;      Totals:         0       5       0       0
  8811 ;;Total ram usage:        5 bytes
  8812 ;; Hardware stack levels used:    1
  8813 ;; Hardware stack levels required when called:    8
  8814 ;; This function calls:
  8815 ;;		_PutcUART
  8816 ;; This function is called by:
  8817 ;;		_main
  8818 ;;		_PutIntUART
  8819 ;;		_affichage_position
  8820 ;;		_traitement_reception
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           	psect	text38
  8825  002FE4                     __ptext38:
  8826                           	opt stack 0
  8827  002FE4                     _PutsUART:
  8828                           	opt stack 21
  8829                           
  8830                           ;incstack = 0
  8831                           ;PutsUART@type_uart stored from wreg
  8832  002FE4  0100               	movlb	0	; () banked
  8833  002FE6  6F82               	movwf	PutsUART@type_uart& (0+255),b
  8834  002FE8                     
  8835                           ;uart.c: 151: {
  8836                           ;uart.c: 152: PutcUART (type_uart, *chaine);
  8837  002FE8  C07E  FFF6         	movff	PutsUART@chaine,tblptrl
  8838  002FEC  C07F  FFF7         	movff	PutsUART@chaine+1,tblptrh
  8839  002FF0  6AF8               	clrf	tblptru,c
  8840  002FF2  0E02               	movlw	(high __ramtop+-1)
  8841  002FF4  64F7               	cpfsgt	tblptrh,c
  8842  002FF6  D003               	bra	u3957
  8843  002FF8  0008               	tblrd		*
  8844  002FFA  50F5               	movf	tablat,w,c
  8845  002FFC  D005               	bra	u3950
  8846  002FFE                     u3957:
  8847  002FFE  CFF6 FFE9          	movff	tblptrl,fsr0l
  8848  003002  CFF7 FFEA          	movff	tblptrh,fsr0h
  8849  003006  50EF               	movf	indf0,w,c
  8850  003008                     u3950:
  8851  003008  0100               	movlb	0	; () banked
  8852  00300A  6F6E               	movwf	PutcUART@octet& (0+255),b
  8853  00300C  0100               	movlb	0	; () banked
  8854  00300E  5182               	movf	PutsUART@type_uart& (0+255),w,b
  8855  003010  ECD4  F007         	call	_PutcUART
  8856                           
  8857                           ;uart.c: 153: }
  8858                           ;uart.c: 154: while (*chaine++);
  8859  003014  0100               	movlb	0	; () banked
  8860  003016  517E               	movf	PutsUART@chaine& (0+255),w,b
  8861  003018  0100               	movlb	0	; () banked
  8862  00301A  6F80               	movwf	??_PutsUART& (0+255),b
  8863  00301C  0100               	movlb	0	; () banked
  8864  00301E  517F               	movf	(PutsUART@chaine+1)& (0+255),w,b
  8865  003020  0100               	movlb	0	; () banked
  8866  003022  6F81               	movwf	(??_PutsUART+1)& (0+255),b
  8867  003024  0100               	movlb	0	; () banked
  8868  003026  4B7E               	infsnz	PutsUART@chaine& (0+255),f,b
  8869  003028  2B7F               	incf	(PutsUART@chaine+1)& (0+255),f,b
  8870  00302A  C080  FFF6         	movff	??_PutsUART,tblptrl
  8871  00302E  C081  FFF7         	movff	??_PutsUART+1,tblptrh
  8872  003032  6AF8               	clrf	tblptru,c
  8873  003034  0E02               	movlw	(high __ramtop+-1)
  8874  003036  64F7               	cpfsgt	tblptrh,c
  8875  003038  D003               	bra	u3967
  8876  00303A  0008               	tblrd		*
  8877  00303C  50F5               	movf	tablat,w,c
  8878  00303E  D005               	bra	u3960
  8879  003040                     u3967:
  8880  003040  CFF6 FFE9          	movff	tblptrl,fsr0l
  8881  003044  CFF7 FFEA          	movff	tblptrh,fsr0h
  8882  003048  50EF               	movf	indf0,w,c
  8883  00304A                     u3960:
  8884  00304A  0900               	iorlw	0
  8885  00304C  A4D8               	btfss	status,2,c
  8886  00304E  D7CC               	goto	l4018
  8887  003050  0012               	return		;funcret
  8888  003052                     __end_of_PutsUART:
  8889                           	opt stack 0
  8890                           tblptru	equ	0xFF8
  8891                           tblptrh	equ	0xFF7
  8892                           tblptrl	equ	0xFF6
  8893                           tablat	equ	0xFF5
  8894                           intcon	equ	0xFF2
  8895                           intcon2	equ	0xFF1
  8896                           intcon3	equ	0xFF0
  8897                           indf0	equ	0xFEF
  8898                           postinc0	equ	0xFEE
  8899                           plusw0	equ	0xFEB
  8900                           fsr0h	equ	0xFEA
  8901                           fsr0l	equ	0xFE9
  8902                           wreg	equ	0xFE8
  8903                           postinc1	equ	0xFE6
  8904                           postdec1	equ	0xFE5
  8905                           plusw1	equ	0xFE3
  8906                           fsr1h	equ	0xFE2
  8907                           fsr1l	equ	0xFE1
  8908                           postinc2	equ	0xFDE
  8909                           postdec2	equ	0xFDD
  8910                           fsr2h	equ	0xFDA
  8911                           fsr2l	equ	0xFD9
  8912                           status	equ	0xFD8
  8913                           
  8914 ;; *************** function _PutcUART *****************
  8915 ;; Defined at:
  8916 ;;		line 122 in file "uart.c"
  8917 ;; Parameters:    Size  Location     Type
  8918 ;;  type_uart       1    wreg     unsigned char 
  8919 ;;  octet           1   14[BANK0 ] unsigned char 
  8920 ;; Auto vars:     Size  Location     Type
  8921 ;;  type_uart       1   21[BANK0 ] unsigned char 
  8922 ;; Return value:  Size  Location     Type
  8923 ;;		None               void
  8924 ;; Registers used:
  8925 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8926 ;; Tracked objects:
  8927 ;;		On entry : 0/0
  8928 ;;		On exit  : 0/0
  8929 ;;		Unchanged: 0/0
  8930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8931 ;;      Params:         0       1       0       0
  8932 ;;      Locals:         0       1       0       0
  8933 ;;      Temps:          0       6       0       0
  8934 ;;      Totals:         0       8       0       0
  8935 ;;Total ram usage:        8 bytes
  8936 ;; Hardware stack levels used:    1
  8937 ;; Hardware stack levels required when called:    7
  8938 ;; This function calls:
  8939 ;;		___awdiv
  8940 ;; This function is called by:
  8941 ;;		_PutsUART
  8942 ;;		_traitement_reception
  8943 ;;		_Puts2UART
  8944 ;; This function uses a non-reentrant model
  8945 ;;
  8946                           
  8947                           	psect	text39
  8948  000FA8                     __ptext39:
  8949                           	opt stack 0
  8950  000FA8                     _PutcUART:
  8951                           	opt stack 21
  8952                           
  8953                           ;incstack = 0
  8954                           ;PutcUART@type_uart stored from wreg
  8955  000FA8  0100               	movlb	0	; () banked
  8956  000FAA  6F75               	movwf	PutcUART@type_uart& (0+255),b
  8957                           
  8958                           ; BSR set to: 0
  8959                           ;uart.c: 124: if (type_uart == 0)
  8960  000FAC  0100               	movlb	0	; () banked
  8961  000FAE  5175               	movf	PutcUART@type_uart& (0+255),w,b
  8962  000FB0  0100               	movlb	0	; () banked
  8963  000FB2  B4D8               	btfsc	status,2,c
  8964  000FB4  D002               	goto	l270
  8965  000FB6  D007               	goto	l3980
  8966                           
  8967                           ; BSR set to: 0
  8968                           ;uart.c: 125: {
  8969                           ;uart.c: 126: while (PIR1bits.TXIF == 0);
  8970  000FB8  D000               	goto	l270
  8971  000FBA                     l270:
  8972                           
  8973                           ; BSR set to: 0
  8974  000FBA  A89E               	btfss	3998,4,c	;volatile
  8975  000FBC  D7FE               	goto	l270
  8976                           
  8977                           ; BSR set to: 0
  8978                           ;uart.c: 127: TXREG = octet;
  8979  000FBE  C06E  FFAD         	movff	PutcUART@octet,4013	;volatile
  8980                           
  8981                           ;uart.c: 128: }
  8982  000FC2  D1B0               	goto	l277
  8983                           
  8984                           ; BSR set to: 0
  8985                           
  8986                           ; BSR set to: 0
  8987                           ;uart.c: 129: else
  8988                           ;uart.c: 130: {
  8989                           ;uart.c: 131: while(uart_logiciel.transmission_en_cours == 1);
  8990  000FC4  D000               	goto	l3980
  8991  000FC6                     l3980:
  8992                           
  8993                           ; BSR set to: 0
  8994  000FC6  0433               	decf	_uart_logiciel+11,w,c
  8995  000FC8  B4D8               	btfsc	status,2,c
  8996  000FCA  D7FD               	goto	l3980
  8997                           
  8998                           ; BSR set to: 0
  8999                           ;uart.c: 132: uart_logiciel.indice = 0;
  9000                           
  9001                           ; BSR set to: 0
  9002  000FCC  0E00               	movlw	0
  9003  000FCE  6E34               	movwf	_uart_logiciel+12,c
  9004                           
  9005                           ;uart.c: 133: uart_logiciel.buffer_uart[10] = 1;
  9006  000FD0  0E01               	movlw	1
  9007  000FD2  6E32               	movwf	_uart_logiciel+10,c
  9008                           
  9009                           ;uart.c: 134: uart_logiciel.buffer_uart[9] = 1;
  9010  000FD4  0E01               	movlw	1
  9011  000FD6  6E31               	movwf	_uart_logiciel+9,c
  9012                           
  9013                           ; BSR set to: 0
  9014                           ;uart.c: 135: uart_logiciel.buffer_uart[8] = octet / 128;
  9015  000FD8  C06E  F066         	movff	PutcUART@octet,___awdiv@dividend
  9016  000FDC  0100               	movlb	0	; () banked
  9017  000FDE  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  9018  000FE0  0E00               	movlw	0
  9019  000FE2  0100               	movlb	0	; () banked
  9020  000FE4  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9021  000FE6  0E80               	movlw	128
  9022  000FE8  6F68               	movwf	___awdiv@divisor& (0+255),b
  9023  000FEA  EC64  F014         	call	___awdiv	;wreg free
  9024  000FEE  0100               	movlb	0	; () banked
  9025  000FF0  5166               	movf	?___awdiv& (0+255),w,b
  9026  000FF2  6E30               	movwf	_uart_logiciel+8,c
  9027                           
  9028                           ; BSR set to: 0
  9029                           ;uart.c: 136: uart_logiciel.buffer_uart[7] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                          ) / 64;
  9030  000FF4  5030               	movf	_uart_logiciel+8,w,c
  9031  000FF6  0D80               	mullw	128
  9032  000FF8  1EF3               	comf	prodl,f,c
  9033  000FFA  1EF4               	comf	prodh,f,c
  9034  000FFC  4AF3               	infsnz	prodl,f,c
  9035  000FFE  2AF4               	incf	prodh,f,c
  9036  001000  0100               	movlb	0	; () banked
  9037  001002  516E               	movf	PutcUART@octet& (0+255),w,b
  9038  001004  24F3               	addwf	prodl,w,c
  9039  001006  0100               	movlb	0	; () banked
  9040  001008  6F66               	movwf	___awdiv@dividend& (0+255),b
  9041  00100A  0E00               	movlw	0
  9042  00100C  20F4               	addwfc	prodh,w,c
  9043  00100E  0100               	movlb	0	; () banked
  9044  001010  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9045  001012  0E00               	movlw	0
  9046  001014  0100               	movlb	0	; () banked
  9047  001016  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9048  001018  0E40               	movlw	64
  9049  00101A  6F68               	movwf	___awdiv@divisor& (0+255),b
  9050  00101C  EC64  F014         	call	___awdiv	;wreg free
  9051  001020  0100               	movlb	0	; () banked
  9052  001022  5166               	movf	?___awdiv& (0+255),w,b
  9053  001024  6E2F               	movwf	_uart_logiciel+7,c
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;uart.c: 137: uart_logiciel.buffer_uart[6] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64) / 32;
  9057  001026  5030               	movf	_uart_logiciel+8,w,c
  9058  001028  0D80               	mullw	128
  9059  00102A  1EF3               	comf	prodl,f,c
  9060  00102C  1EF4               	comf	prodh,f,c
  9061  00102E  4AF3               	infsnz	prodl,f,c
  9062  001030  2AF4               	incf	prodh,f,c
  9063  001032  0100               	movlb	0	; () banked
  9064  001034  516E               	movf	PutcUART@octet& (0+255),w,b
  9065  001036  0100               	movlb	0	; () banked
  9066  001038  6F6F               	movwf	??_PutcUART& (0+255),b
  9067  00103A  6B70               	clrf	(??_PutcUART+1)& (0+255),b
  9068  00103C  50F3               	movf	prodl,w,c
  9069  00103E  0100               	movlb	0	; () banked
  9070  001040  276F               	addwf	??_PutcUART& (0+255),f,b
  9071  001042  50F4               	movf	prodh,w,c
  9072  001044  0100               	movlb	0	; () banked
  9073  001046  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9074  001048  502F               	movf	_uart_logiciel+7,w,c
  9075  00104A  0D40               	mullw	64
  9076  00104C  1EF3               	comf	prodl,f,c
  9077  00104E  1EF4               	comf	prodh,f,c
  9078  001050  4AF3               	infsnz	prodl,f,c
  9079  001052  2AF4               	incf	prodh,f,c
  9080  001054  50F3               	movf	prodl,w,c
  9081  001056  0100               	movlb	0	; () banked
  9082  001058  256F               	addwf	??_PutcUART& (0+255),w,b
  9083  00105A  0100               	movlb	0	; () banked
  9084  00105C  6F66               	movwf	___awdiv@dividend& (0+255),b
  9085  00105E  50F4               	movf	prodh,w,c
  9086  001060  0100               	movlb	0	; () banked
  9087  001062  2170               	addwfc	(??_PutcUART+1)& (0+255),w,b
  9088  001064  0100               	movlb	0	; () banked
  9089  001066  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9090  001068  0E00               	movlw	0
  9091  00106A  0100               	movlb	0	; () banked
  9092  00106C  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9093  00106E  0E20               	movlw	32
  9094  001070  6F68               	movwf	___awdiv@divisor& (0+255),b
  9095  001072  EC64  F014         	call	___awdiv	;wreg free
  9096  001076  0100               	movlb	0	; () banked
  9097  001078  5166               	movf	?___awdiv& (0+255),w,b
  9098  00107A  6E2E               	movwf	_uart_logiciel+6,c
  9099                           
  9100                           ; BSR set to: 0
  9101                           ;uart.c: 138: uart_logiciel.buffer_uart[5] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64 - uart_logiciel.buffer_uart[6] * 32) / 16;
  9102  00107C  5030               	movf	_uart_logiciel+8,w,c
  9103  00107E  0D80               	mullw	128
  9104  001080  1EF3               	comf	prodl,f,c
  9105  001082  1EF4               	comf	prodh,f,c
  9106  001084  4AF3               	infsnz	prodl,f,c
  9107  001086  2AF4               	incf	prodh,f,c
  9108  001088  0100               	movlb	0	; () banked
  9109  00108A  516E               	movf	PutcUART@octet& (0+255),w,b
  9110  00108C  0100               	movlb	0	; () banked
  9111  00108E  6F6F               	movwf	??_PutcUART& (0+255),b
  9112  001090  6B70               	clrf	(??_PutcUART+1)& (0+255),b
  9113  001092  50F3               	movf	prodl,w,c
  9114  001094  0100               	movlb	0	; () banked
  9115  001096  276F               	addwf	??_PutcUART& (0+255),f,b
  9116  001098  50F4               	movf	prodh,w,c
  9117  00109A  0100               	movlb	0	; () banked
  9118  00109C  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9119  00109E  502F               	movf	_uart_logiciel+7,w,c
  9120  0010A0  0D40               	mullw	64
  9121  0010A2  1EF3               	comf	prodl,f,c
  9122  0010A4  1EF4               	comf	prodh,f,c
  9123  0010A6  4AF3               	infsnz	prodl,f,c
  9124  0010A8  2AF4               	incf	prodh,f,c
  9125  0010AA  50F3               	movf	prodl,w,c
  9126  0010AC  0100               	movlb	0	; () banked
  9127  0010AE  276F               	addwf	??_PutcUART& (0+255),f,b
  9128  0010B0  50F4               	movf	prodh,w,c
  9129  0010B2  0100               	movlb	0	; () banked
  9130  0010B4  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9131  0010B6  502E               	movf	_uart_logiciel+6,w,c
  9132  0010B8  0D20               	mullw	32
  9133  0010BA  1EF3               	comf	prodl,f,c
  9134  0010BC  1EF4               	comf	prodh,f,c
  9135  0010BE  4AF3               	infsnz	prodl,f,c
  9136  0010C0  2AF4               	incf	prodh,f,c
  9137  0010C2  50F3               	movf	prodl,w,c
  9138  0010C4  0100               	movlb	0	; () banked
  9139  0010C6  256F               	addwf	??_PutcUART& (0+255),w,b
  9140  0010C8  0100               	movlb	0	; () banked
  9141  0010CA  6F66               	movwf	___awdiv@dividend& (0+255),b
  9142  0010CC  50F4               	movf	prodh,w,c
  9143  0010CE  0100               	movlb	0	; () banked
  9144  0010D0  2170               	addwfc	(??_PutcUART+1)& (0+255),w,b
  9145  0010D2  0100               	movlb	0	; () banked
  9146  0010D4  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9147  0010D6  0E00               	movlw	0
  9148  0010D8  0100               	movlb	0	; () banked
  9149  0010DA  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9150  0010DC  0E10               	movlw	16
  9151  0010DE  6F68               	movwf	___awdiv@divisor& (0+255),b
  9152  0010E0  EC64  F014         	call	___awdiv	;wreg free
  9153  0010E4  0100               	movlb	0	; () banked
  9154  0010E6  5166               	movf	?___awdiv& (0+255),w,b
  9155  0010E8  6E2D               	movwf	_uart_logiciel+5,c
  9156                           
  9157                           ; BSR set to: 0
  9158                           ;uart.c: 139: uart_logiciel.buffer_uart[4] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64 - uart_logiciel.buffer_uart[6] * 32 - uart_logiciel
      +                          .buffer_uart[5] * 16) / 8;
  9159  0010EA  5030               	movf	_uart_logiciel+8,w,c
  9160  0010EC  0D80               	mullw	128
  9161  0010EE  1EF3               	comf	prodl,f,c
  9162  0010F0  1EF4               	comf	prodh,f,c
  9163  0010F2  4AF3               	infsnz	prodl,f,c
  9164  0010F4  2AF4               	incf	prodh,f,c
  9165  0010F6  0100               	movlb	0	; () banked
  9166  0010F8  516E               	movf	PutcUART@octet& (0+255),w,b
  9167  0010FA  0100               	movlb	0	; () banked
  9168  0010FC  6F6F               	movwf	??_PutcUART& (0+255),b
  9169  0010FE  6B70               	clrf	(??_PutcUART+1)& (0+255),b
  9170  001100  50F3               	movf	prodl,w,c
  9171  001102  0100               	movlb	0	; () banked
  9172  001104  276F               	addwf	??_PutcUART& (0+255),f,b
  9173  001106  50F4               	movf	prodh,w,c
  9174  001108  0100               	movlb	0	; () banked
  9175  00110A  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9176  00110C  502F               	movf	_uart_logiciel+7,w,c
  9177  00110E  0D40               	mullw	64
  9178  001110  1EF3               	comf	prodl,f,c
  9179  001112  1EF4               	comf	prodh,f,c
  9180  001114  4AF3               	infsnz	prodl,f,c
  9181  001116  2AF4               	incf	prodh,f,c
  9182  001118  50F3               	movf	prodl,w,c
  9183  00111A  0100               	movlb	0	; () banked
  9184  00111C  276F               	addwf	??_PutcUART& (0+255),f,b
  9185  00111E  50F4               	movf	prodh,w,c
  9186  001120  0100               	movlb	0	; () banked
  9187  001122  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9188  001124  502E               	movf	_uart_logiciel+6,w,c
  9189  001126  0D20               	mullw	32
  9190  001128  1EF3               	comf	prodl,f,c
  9191  00112A  1EF4               	comf	prodh,f,c
  9192  00112C  4AF3               	infsnz	prodl,f,c
  9193  00112E  2AF4               	incf	prodh,f,c
  9194  001130  50F3               	movf	prodl,w,c
  9195  001132  0100               	movlb	0	; () banked
  9196  001134  276F               	addwf	??_PutcUART& (0+255),f,b
  9197  001136  50F4               	movf	prodh,w,c
  9198  001138  0100               	movlb	0	; () banked
  9199  00113A  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9200  00113C  502D               	movf	_uart_logiciel+5,w,c
  9201  00113E  0D10               	mullw	16
  9202  001140  1EF3               	comf	prodl,f,c
  9203  001142  1EF4               	comf	prodh,f,c
  9204  001144  4AF3               	infsnz	prodl,f,c
  9205  001146  2AF4               	incf	prodh,f,c
  9206  001148  50F3               	movf	prodl,w,c
  9207  00114A  0100               	movlb	0	; () banked
  9208  00114C  256F               	addwf	??_PutcUART& (0+255),w,b
  9209  00114E  0100               	movlb	0	; () banked
  9210  001150  6F66               	movwf	___awdiv@dividend& (0+255),b
  9211  001152  50F4               	movf	prodh,w,c
  9212  001154  0100               	movlb	0	; () banked
  9213  001156  2170               	addwfc	(??_PutcUART+1)& (0+255),w,b
  9214  001158  0100               	movlb	0	; () banked
  9215  00115A  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9216  00115C  0E00               	movlw	0
  9217  00115E  0100               	movlb	0	; () banked
  9218  001160  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9219  001162  0E08               	movlw	8
  9220  001164  6F68               	movwf	___awdiv@divisor& (0+255),b
  9221  001166  EC64  F014         	call	___awdiv	;wreg free
  9222  00116A  0100               	movlb	0	; () banked
  9223  00116C  5166               	movf	?___awdiv& (0+255),w,b
  9224  00116E  6E2C               	movwf	_uart_logiciel+4,c
  9225                           
  9226                           ; BSR set to: 0
  9227                           ;uart.c: 140: uart_logiciel.buffer_uart[3] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64 - uart_logiciel.buffer_uart[6] * 32 - uart_logiciel
      +                          .buffer_uart[5] * 16 - uart_logiciel.buffer_uart[4] * 8) / 4;
  9228  001170  5030               	movf	_uart_logiciel+8,w,c
  9229  001172  0D80               	mullw	128
  9230  001174  1EF3               	comf	prodl,f,c
  9231  001176  1EF4               	comf	prodh,f,c
  9232  001178  4AF3               	infsnz	prodl,f,c
  9233  00117A  2AF4               	incf	prodh,f,c
  9234  00117C  0100               	movlb	0	; () banked
  9235  00117E  516E               	movf	PutcUART@octet& (0+255),w,b
  9236  001180  0100               	movlb	0	; () banked
  9237  001182  6F6F               	movwf	??_PutcUART& (0+255),b
  9238  001184  6B70               	clrf	(??_PutcUART+1)& (0+255),b
  9239  001186  50F3               	movf	prodl,w,c
  9240  001188  0100               	movlb	0	; () banked
  9241  00118A  276F               	addwf	??_PutcUART& (0+255),f,b
  9242  00118C  50F4               	movf	prodh,w,c
  9243  00118E  0100               	movlb	0	; () banked
  9244  001190  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9245  001192  502F               	movf	_uart_logiciel+7,w,c
  9246  001194  0D40               	mullw	64
  9247  001196  1EF3               	comf	prodl,f,c
  9248  001198  1EF4               	comf	prodh,f,c
  9249  00119A  4AF3               	infsnz	prodl,f,c
  9250  00119C  2AF4               	incf	prodh,f,c
  9251  00119E  50F3               	movf	prodl,w,c
  9252  0011A0  0100               	movlb	0	; () banked
  9253  0011A2  276F               	addwf	??_PutcUART& (0+255),f,b
  9254  0011A4  50F4               	movf	prodh,w,c
  9255  0011A6  0100               	movlb	0	; () banked
  9256  0011A8  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9257  0011AA  502E               	movf	_uart_logiciel+6,w,c
  9258  0011AC  0D20               	mullw	32
  9259  0011AE  1EF3               	comf	prodl,f,c
  9260  0011B0  1EF4               	comf	prodh,f,c
  9261  0011B2  4AF3               	infsnz	prodl,f,c
  9262  0011B4  2AF4               	incf	prodh,f,c
  9263  0011B6  50F3               	movf	prodl,w,c
  9264  0011B8  0100               	movlb	0	; () banked
  9265  0011BA  276F               	addwf	??_PutcUART& (0+255),f,b
  9266  0011BC  50F4               	movf	prodh,w,c
  9267  0011BE  0100               	movlb	0	; () banked
  9268  0011C0  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9269  0011C2  502D               	movf	_uart_logiciel+5,w,c
  9270  0011C4  0D10               	mullw	16
  9271  0011C6  1EF3               	comf	prodl,f,c
  9272  0011C8  1EF4               	comf	prodh,f,c
  9273  0011CA  4AF3               	infsnz	prodl,f,c
  9274  0011CC  2AF4               	incf	prodh,f,c
  9275  0011CE  50F3               	movf	prodl,w,c
  9276  0011D0  0100               	movlb	0	; () banked
  9277  0011D2  276F               	addwf	??_PutcUART& (0+255),f,b
  9278  0011D4  50F4               	movf	prodh,w,c
  9279  0011D6  0100               	movlb	0	; () banked
  9280  0011D8  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9281  0011DA  502C               	movf	_uart_logiciel+4,w,c
  9282  0011DC  0D08               	mullw	8
  9283  0011DE  1EF3               	comf	prodl,f,c
  9284  0011E0  1EF4               	comf	prodh,f,c
  9285  0011E2  4AF3               	infsnz	prodl,f,c
  9286  0011E4  2AF4               	incf	prodh,f,c
  9287  0011E6  50F3               	movf	prodl,w,c
  9288  0011E8  0100               	movlb	0	; () banked
  9289  0011EA  256F               	addwf	??_PutcUART& (0+255),w,b
  9290  0011EC  0100               	movlb	0	; () banked
  9291  0011EE  6F66               	movwf	___awdiv@dividend& (0+255),b
  9292  0011F0  50F4               	movf	prodh,w,c
  9293  0011F2  0100               	movlb	0	; () banked
  9294  0011F4  2170               	addwfc	(??_PutcUART+1)& (0+255),w,b
  9295  0011F6  0100               	movlb	0	; () banked
  9296  0011F8  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9297  0011FA  0E00               	movlw	0
  9298  0011FC  0100               	movlb	0	; () banked
  9299  0011FE  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9300  001200  0E04               	movlw	4
  9301  001202  6F68               	movwf	___awdiv@divisor& (0+255),b
  9302  001204  EC64  F014         	call	___awdiv	;wreg free
  9303  001208  0100               	movlb	0	; () banked
  9304  00120A  5166               	movf	?___awdiv& (0+255),w,b
  9305  00120C  6E2B               	movwf	_uart_logiciel+3,c
  9306                           
  9307                           ; BSR set to: 0
  9308                           ;uart.c: 141: uart_logiciel.buffer_uart[2] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64 - uart_logiciel.buffer_uart[6] * 32 - uart_logiciel
      +                          .buffer_uart[5] * 16 - uart_logiciel.buffer_uart[4] * 8 - uart_logiciel.buffer_uart[3] *
  9309  00120E  5030               	movf	_uart_logiciel+8,w,c
  9310  001210  0D80               	mullw	128
  9311  001212  1EF3               	comf	prodl,f,c
  9312  001214  1EF4               	comf	prodh,f,c
  9313  001216  4AF3               	infsnz	prodl,f,c
  9314  001218  2AF4               	incf	prodh,f,c
  9315  00121A  0100               	movlb	0	; () banked
  9316  00121C  516E               	movf	PutcUART@octet& (0+255),w,b
  9317  00121E  0100               	movlb	0	; () banked
  9318  001220  6F6F               	movwf	??_PutcUART& (0+255),b
  9319  001222  6B70               	clrf	(??_PutcUART+1)& (0+255),b
  9320  001224  50F3               	movf	prodl,w,c
  9321  001226  0100               	movlb	0	; () banked
  9322  001228  276F               	addwf	??_PutcUART& (0+255),f,b
  9323  00122A  50F4               	movf	prodh,w,c
  9324  00122C  0100               	movlb	0	; () banked
  9325  00122E  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9326  001230  502F               	movf	_uart_logiciel+7,w,c
  9327  001232  0D40               	mullw	64
  9328  001234  1EF3               	comf	prodl,f,c
  9329  001236  1EF4               	comf	prodh,f,c
  9330  001238  4AF3               	infsnz	prodl,f,c
  9331  00123A  2AF4               	incf	prodh,f,c
  9332  00123C  50F3               	movf	prodl,w,c
  9333  00123E  0100               	movlb	0	; () banked
  9334  001240  276F               	addwf	??_PutcUART& (0+255),f,b
  9335  001242  50F4               	movf	prodh,w,c
  9336  001244  0100               	movlb	0	; () banked
  9337  001246  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9338  001248  502E               	movf	_uart_logiciel+6,w,c
  9339  00124A  0D20               	mullw	32
  9340  00124C  1EF3               	comf	prodl,f,c
  9341  00124E  1EF4               	comf	prodh,f,c
  9342  001250  4AF3               	infsnz	prodl,f,c
  9343  001252  2AF4               	incf	prodh,f,c
  9344  001254  50F3               	movf	prodl,w,c
  9345  001256  0100               	movlb	0	; () banked
  9346  001258  276F               	addwf	??_PutcUART& (0+255),f,b
  9347  00125A  50F4               	movf	prodh,w,c
  9348  00125C  0100               	movlb	0	; () banked
  9349  00125E  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9350  001260  502D               	movf	_uart_logiciel+5,w,c
  9351  001262  0D10               	mullw	16
  9352  001264  1EF3               	comf	prodl,f,c
  9353  001266  1EF4               	comf	prodh,f,c
  9354  001268  4AF3               	infsnz	prodl,f,c
  9355  00126A  2AF4               	incf	prodh,f,c
  9356  00126C  50F3               	movf	prodl,w,c
  9357  00126E  0100               	movlb	0	; () banked
  9358  001270  276F               	addwf	??_PutcUART& (0+255),f,b
  9359  001272  50F4               	movf	prodh,w,c
  9360  001274  0100               	movlb	0	; () banked
  9361  001276  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9362  001278  502C               	movf	_uart_logiciel+4,w,c
  9363  00127A  0D08               	mullw	8
  9364  00127C  1EF3               	comf	prodl,f,c
  9365  00127E  1EF4               	comf	prodh,f,c
  9366  001280  4AF3               	infsnz	prodl,f,c
  9367  001282  2AF4               	incf	prodh,f,c
  9368  001284  50F3               	movf	prodl,w,c
  9369  001286  0100               	movlb	0	; () banked
  9370  001288  276F               	addwf	??_PutcUART& (0+255),f,b
  9371  00128A  50F4               	movf	prodh,w,c
  9372  00128C  0100               	movlb	0	; () banked
  9373  00128E  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
  9374  001290  502B               	movf	_uart_logiciel+3,w,c
  9375  001292  0D04               	mullw	4
  9376  001294  1EF3               	comf	prodl,f,c
  9377  001296  1EF4               	comf	prodh,f,c
  9378  001298  4AF3               	infsnz	prodl,f,c
  9379  00129A  2AF4               	incf	prodh,f,c
  9380  00129C  50F3               	movf	prodl,w,c
  9381  00129E  0100               	movlb	0	; () banked
  9382  0012A0  256F               	addwf	??_PutcUART& (0+255),w,b
  9383  0012A2  0100               	movlb	0	; () banked
  9384  0012A4  6F66               	movwf	___awdiv@dividend& (0+255),b
  9385  0012A6  50F4               	movf	prodh,w,c
  9386  0012A8  0100               	movlb	0	; () banked
  9387  0012AA  2170               	addwfc	(??_PutcUART+1)& (0+255),w,b
  9388  0012AC  0100               	movlb	0	; () banked
  9389  0012AE  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9390  0012B0  0E00               	movlw	0
  9391  0012B2  0100               	movlb	0	; () banked
  9392  0012B4  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9393  0012B6  0E02               	movlw	2
  9394  0012B8  6F68               	movwf	___awdiv@divisor& (0+255),b
  9395  0012BA  EC64  F014         	call	___awdiv	;wreg free
  9396  0012BE  0100               	movlb	0	; () banked
  9397  0012C0  5166               	movf	?___awdiv& (0+255),w,b
  9398  0012C2  6E2A               	movwf	_uart_logiciel+2,c
  9399                           
  9400                           ; BSR set to: 0
  9401                           ;uart.c: 142: uart_logiciel.buffer_uart[1] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64 - uart_logiciel.buffer_uart[6] * 32 - uart_logiciel
      +                          .buffer_uart[5] * 16 - uart_logiciel.buffer_uart[4] * 8 - uart_logiciel.buffer_uart[3] *
  9402  0012C4  502A               	movf	_uart_logiciel+2,w,c
  9403  0012C6  0D02               	mullw	2
  9404  0012C8  CFF3 F06F          	movff	prodl,??_PutcUART
  9405  0012CC  502B               	movf	_uart_logiciel+3,w,c
  9406  0012CE  0D04               	mullw	4
  9407  0012D0  CFF3 F070          	movff	prodl,??_PutcUART+1
  9408  0012D4  502C               	movf	_uart_logiciel+4,w,c
  9409  0012D6  0D08               	mullw	8
  9410  0012D8  CFF3 F071          	movff	prodl,??_PutcUART+2
  9411  0012DC  502D               	movf	_uart_logiciel+5,w,c
  9412  0012DE  0D10               	mullw	16
  9413  0012E0  CFF3 F072          	movff	prodl,??_PutcUART+3
  9414  0012E4  502E               	movf	_uart_logiciel+6,w,c
  9415  0012E6  0D20               	mullw	32
  9416  0012E8  CFF3 F073          	movff	prodl,??_PutcUART+4
  9417  0012EC  502F               	movf	_uart_logiciel+7,w,c
  9418  0012EE  0D40               	mullw	64
  9419  0012F0  CFF3 F074          	movff	prodl,??_PutcUART+5
  9420  0012F4  5030               	movf	_uart_logiciel+8,w,c
  9421  0012F6  0D80               	mullw	128
  9422  0012F8  50F3               	movf	prodl,w,c
  9423  0012FA  0100               	movlb	0	; () banked
  9424  0012FC  2574               	addwf	(??_PutcUART+5)& (0+255),w,b
  9425  0012FE  0100               	movlb	0	; () banked
  9426  001300  2573               	addwf	(??_PutcUART+4)& (0+255),w,b
  9427  001302  0100               	movlb	0	; () banked
  9428  001304  2572               	addwf	(??_PutcUART+3)& (0+255),w,b
  9429  001306  0100               	movlb	0	; () banked
  9430  001308  2571               	addwf	(??_PutcUART+2)& (0+255),w,b
  9431  00130A  0100               	movlb	0	; () banked
  9432  00130C  2570               	addwf	(??_PutcUART+1)& (0+255),w,b
  9433  00130E  0100               	movlb	0	; () banked
  9434  001310  256F               	addwf	??_PutcUART& (0+255),w,b
  9435  001312  0800               	sublw	0
  9436  001314  0100               	movlb	0	; () banked
  9437  001316  256E               	addwf	PutcUART@octet& (0+255),w,b
  9438  001318  6E29               	movwf	_uart_logiciel+1,c
  9439                           
  9440                           ; BSR set to: 0
  9441                           ;uart.c: 143: uart_logiciel.buffer_uart[0] = 0;
  9442  00131A  0E00               	movlw	0
  9443  00131C  6E28               	movwf	_uart_logiciel,c
  9444                           
  9445                           ; BSR set to: 0
  9446                           ;uart.c: 144: uart_logiciel.transmission_en_cours = 1;
  9447  00131E  0E01               	movlw	1
  9448  001320  6E33               	movwf	_uart_logiciel+11,c
  9449  001322  D000               	goto	l277
  9450  001324                     l277:
  9451                           
  9452                           ; BSR set to: 0
  9453  001324  0012               	return		;funcret
  9454  001326                     __end_of_PutcUART:
  9455                           	opt stack 0
  9456                           tblptru	equ	0xFF8
  9457                           tblptrh	equ	0xFF7
  9458                           tblptrl	equ	0xFF6
  9459                           tablat	equ	0xFF5
  9460                           prodh	equ	0xFF4
  9461                           prodl	equ	0xFF3
  9462                           intcon	equ	0xFF2
  9463                           intcon2	equ	0xFF1
  9464                           intcon3	equ	0xFF0
  9465                           indf0	equ	0xFEF
  9466                           postinc0	equ	0xFEE
  9467                           plusw0	equ	0xFEB
  9468                           fsr0h	equ	0xFEA
  9469                           fsr0l	equ	0xFE9
  9470                           wreg	equ	0xFE8
  9471                           postinc1	equ	0xFE6
  9472                           postdec1	equ	0xFE5
  9473                           plusw1	equ	0xFE3
  9474                           fsr1h	equ	0xFE2
  9475                           fsr1l	equ	0xFE1
  9476                           postinc2	equ	0xFDE
  9477                           postdec2	equ	0xFDD
  9478                           fsr2h	equ	0xFDA
  9479                           fsr2l	equ	0xFD9
  9480                           status	equ	0xFD8
  9481                           
  9482 ;; *************** function _IntToC *****************
  9483 ;; Defined at:
  9484 ;;		line 167 in file "uart.c"
  9485 ;; Parameters:    Size  Location     Type
  9486 ;;  nb              2   14[BANK0 ] int 
  9487 ;; Auto vars:     Size  Location     Type
  9488 ;;  i              10   18[BANK0 ] int [5]
  9489 ;;  j               2   28[BANK0 ] int 
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  2   14[BANK0 ] PTR unsigned char 
  9492 ;; Registers used:
  9493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9494 ;; Tracked objects:
  9495 ;;		On entry : 0/0
  9496 ;;		On exit  : 0/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9499 ;;      Params:         0       2       0       0
  9500 ;;      Locals:         0      12       0       0
  9501 ;;      Temps:          0       2       0       0
  9502 ;;      Totals:         0      16       0       0
  9503 ;;Total ram usage:       16 bytes
  9504 ;; Hardware stack levels used:    1
  9505 ;; Hardware stack levels required when called:    7
  9506 ;; This function calls:
  9507 ;;		___awdiv
  9508 ;;		___wmul
  9509 ;; This function is called by:
  9510 ;;		_PutIntUART
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514                           	psect	text40
  9515  001326                     __ptext40:
  9516                           	opt stack 0
  9517  001326                     _IntToC:
  9518                           	opt stack 21
  9519                           
  9520                           ;uart.c: 170: int16_t i[5];
  9521                           ;uart.c: 171: int j = 0;
  9522                           
  9523                           ; BSR set to: 0
  9524                           ;incstack = 0
  9525  001326  0E00               	movlw	0
  9526  001328  0100               	movlb	0	; () banked
  9527  00132A  6F7D               	movwf	(IntToC@j+1)& (0+255),b
  9528  00132C  0E00               	movlw	0
  9529  00132E  6F7C               	movwf	IntToC@j& (0+255),b
  9530                           
  9531                           ; BSR set to: 0
  9532                           ;uart.c: 172: static char out[8];
  9533                           ;uart.c: 175: if (nb < 0)
  9534  001330  0100               	movlb	0	; () banked
  9535  001332  AF6F               	btfss	(IntToC@nb+1)& (0+255),7,b
  9536  001334  D01C               	goto	l4038
  9537                           
  9538                           ; BSR set to: 0
  9539                           ;uart.c: 176: {
  9540                           ;uart.c: 177: nb *= (-1);
  9541  001336  C06E  F060         	movff	IntToC@nb,___wmul@multiplier
  9542  00133A  C06F  F061         	movff	IntToC@nb+1,___wmul@multiplier+1
  9543  00133E  0EFF               	movlw	255
  9544  001340  0100               	movlb	0	; () banked
  9545  001342  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9546  001344  6962               	setf	___wmul@multiplicand& (0+255),b
  9547  001346  EC47  F01A         	call	___wmul	;wreg free
  9548  00134A  C060  F06E         	movff	?___wmul,IntToC@nb
  9549  00134E  C061  F06F         	movff	?___wmul+1,IntToC@nb+1
  9550                           
  9551                           ;uart.c: 178: out[j++] = '-';
  9552  001352  0E35               	movlw	low IntToC@out
  9553  001354  0100               	movlb	0	; () banked
  9554  001356  257C               	addwf	IntToC@j& (0+255),w,b
  9555  001358  6ED9               	movwf	fsr2l,c
  9556  00135A  0E00               	movlw	high IntToC@out
  9557  00135C  0100               	movlb	0	; () banked
  9558  00135E  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
  9559  001360  6EDA               	movwf	fsr2h,c
  9560  001362  0E2D               	movlw	45
  9561  001364  6EDF               	movwf	indf2,c
  9562                           
  9563                           ; BSR set to: 0
  9564  001366  0100               	movlb	0	; () banked
  9565  001368  4B7C               	infsnz	IntToC@j& (0+255),f,b
  9566  00136A  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
  9567  00136C  D000               	goto	l4038
  9568  00136E                     l4038:
  9569                           
  9570                           ; BSR set to: 0
  9571                           ;uart.c: 179: }
  9572                           ;uart.c: 183: i[0] = (nb / 10000);
  9573  00136E  C06E  F066         	movff	IntToC@nb,___awdiv@dividend
  9574  001372  C06F  F067         	movff	IntToC@nb+1,___awdiv@dividend+1
  9575  001376  0E27               	movlw	39
  9576  001378  0100               	movlb	0	; () banked
  9577  00137A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9578  00137C  0E10               	movlw	16
  9579  00137E  6F68               	movwf	___awdiv@divisor& (0+255),b
  9580  001380  EC64  F014         	call	___awdiv	;wreg free
  9581  001384  C066  F072         	movff	?___awdiv,IntToC@i
  9582  001388  C067  F073         	movff	?___awdiv+1,IntToC@i+1
  9583                           
  9584                           ;uart.c: 184: i[1] = (nb - i[0] * 10000) / 1000;
  9585  00138C  C072  F060         	movff	IntToC@i,___wmul@multiplier
  9586  001390  C073  F061         	movff	IntToC@i+1,___wmul@multiplier+1
  9587  001394  0E27               	movlw	39
  9588  001396  0100               	movlb	0	; () banked
  9589  001398  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9590  00139A  0E10               	movlw	16
  9591  00139C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9592  00139E  EC47  F01A         	call	___wmul	;wreg free
  9593  0013A2  0100               	movlb	0	; () banked
  9594  0013A4  1F60               	comf	?___wmul& (0+255),f,b
  9595  0013A6  0100               	movlb	0	; () banked
  9596  0013A8  1F61               	comf	(?___wmul+1)& (0+255),f,b
  9597  0013AA  0100               	movlb	0	; () banked
  9598  0013AC  4B60               	infsnz	?___wmul& (0+255),f,b
  9599  0013AE  2B61               	incf	(?___wmul+1)& (0+255),f,b
  9600  0013B0  0100               	movlb	0	; () banked
  9601  0013B2  516E               	movf	IntToC@nb& (0+255),w,b
  9602  0013B4  0100               	movlb	0	; () banked
  9603  0013B6  2560               	addwf	?___wmul& (0+255),w,b
  9604  0013B8  0100               	movlb	0	; () banked
  9605  0013BA  6F66               	movwf	___awdiv@dividend& (0+255),b
  9606  0013BC  0100               	movlb	0	; () banked
  9607  0013BE  516F               	movf	(IntToC@nb+1)& (0+255),w,b
  9608  0013C0  0100               	movlb	0	; () banked
  9609  0013C2  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  9610  0013C4  0100               	movlb	0	; () banked
  9611  0013C6  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9612  0013C8  0E03               	movlw	3
  9613  0013CA  0100               	movlb	0	; () banked
  9614  0013CC  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9615  0013CE  0EE8               	movlw	232
  9616  0013D0  6F68               	movwf	___awdiv@divisor& (0+255),b
  9617  0013D2  EC64  F014         	call	___awdiv	;wreg free
  9618  0013D6  C066  F074         	movff	?___awdiv,IntToC@i+2
  9619  0013DA  C067  F075         	movff	?___awdiv+1,IntToC@i+3
  9620                           
  9621                           ;uart.c: 185: i[2] = (nb - i[0] * 10000 - i[1] * 1000) / 100;
  9622  0013DE  C072  F060         	movff	IntToC@i,___wmul@multiplier
  9623  0013E2  C073  F061         	movff	IntToC@i+1,___wmul@multiplier+1
  9624  0013E6  0E27               	movlw	39
  9625  0013E8  0100               	movlb	0	; () banked
  9626  0013EA  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9627  0013EC  0E10               	movlw	16
  9628  0013EE  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9629  0013F0  EC47  F01A         	call	___wmul	;wreg free
  9630  0013F4  C060  F070         	movff	?___wmul,??_IntToC
  9631  0013F8  C061  F071         	movff	?___wmul+1,??_IntToC+1
  9632  0013FC  C074  F060         	movff	IntToC@i+2,___wmul@multiplier
  9633  001400  C075  F061         	movff	IntToC@i+3,___wmul@multiplier+1
  9634  001404  0E03               	movlw	3
  9635  001406  0100               	movlb	0	; () banked
  9636  001408  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9637  00140A  0EE8               	movlw	232
  9638  00140C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9639  00140E  EC47  F01A         	call	___wmul	;wreg free
  9640  001412  0100               	movlb	0	; () banked
  9641  001414  5160               	movf	?___wmul& (0+255),w,b
  9642  001416  0100               	movlb	0	; () banked
  9643  001418  2770               	addwf	??_IntToC& (0+255),f,b
  9644  00141A  0100               	movlb	0	; () banked
  9645  00141C  5161               	movf	(?___wmul+1)& (0+255),w,b
  9646  00141E  0100               	movlb	0	; () banked
  9647  001420  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
  9648  001422  0100               	movlb	0	; () banked
  9649  001424  1F70               	comf	??_IntToC& (0+255),f,b
  9650  001426  1F71               	comf	(??_IntToC+1)& (0+255),f,b
  9651  001428  4B70               	infsnz	??_IntToC& (0+255),f,b
  9652  00142A  2B71               	incf	(??_IntToC+1)& (0+255),f,b
  9653  00142C  0100               	movlb	0	; () banked
  9654  00142E  516E               	movf	IntToC@nb& (0+255),w,b
  9655  001430  0100               	movlb	0	; () banked
  9656  001432  2570               	addwf	??_IntToC& (0+255),w,b
  9657  001434  0100               	movlb	0	; () banked
  9658  001436  6F66               	movwf	___awdiv@dividend& (0+255),b
  9659  001438  0100               	movlb	0	; () banked
  9660  00143A  516F               	movf	(IntToC@nb+1)& (0+255),w,b
  9661  00143C  0100               	movlb	0	; () banked
  9662  00143E  2171               	addwfc	(??_IntToC+1)& (0+255),w,b
  9663  001440  0100               	movlb	0	; () banked
  9664  001442  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9665  001444  0E00               	movlw	0
  9666  001446  0100               	movlb	0	; () banked
  9667  001448  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9668  00144A  0E64               	movlw	100
  9669  00144C  6F68               	movwf	___awdiv@divisor& (0+255),b
  9670  00144E  EC64  F014         	call	___awdiv	;wreg free
  9671  001452  C066  F076         	movff	?___awdiv,IntToC@i+4
  9672  001456  C067  F077         	movff	?___awdiv+1,IntToC@i+5
  9673                           
  9674                           ;uart.c: 186: i[3] = (nb - i[0] * 10000 - i[1] * 1000 - i[2] * 100) / 10;
  9675  00145A  C072  F060         	movff	IntToC@i,___wmul@multiplier
  9676  00145E  C073  F061         	movff	IntToC@i+1,___wmul@multiplier+1
  9677  001462  0E27               	movlw	39
  9678  001464  0100               	movlb	0	; () banked
  9679  001466  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9680  001468  0E10               	movlw	16
  9681  00146A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9682  00146C  EC47  F01A         	call	___wmul	;wreg free
  9683  001470  C060  F070         	movff	?___wmul,??_IntToC
  9684  001474  C061  F071         	movff	?___wmul+1,??_IntToC+1
  9685  001478  C074  F060         	movff	IntToC@i+2,___wmul@multiplier
  9686  00147C  C075  F061         	movff	IntToC@i+3,___wmul@multiplier+1
  9687  001480  0E03               	movlw	3
  9688  001482  0100               	movlb	0	; () banked
  9689  001484  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9690  001486  0EE8               	movlw	232
  9691  001488  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9692  00148A  EC47  F01A         	call	___wmul	;wreg free
  9693  00148E  0100               	movlb	0	; () banked
  9694  001490  5160               	movf	?___wmul& (0+255),w,b
  9695  001492  0100               	movlb	0	; () banked
  9696  001494  2770               	addwf	??_IntToC& (0+255),f,b
  9697  001496  0100               	movlb	0	; () banked
  9698  001498  5161               	movf	(?___wmul+1)& (0+255),w,b
  9699  00149A  0100               	movlb	0	; () banked
  9700  00149C  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
  9701  00149E  C076  F060         	movff	IntToC@i+4,___wmul@multiplier
  9702  0014A2  C077  F061         	movff	IntToC@i+5,___wmul@multiplier+1
  9703  0014A6  0E00               	movlw	0
  9704  0014A8  0100               	movlb	0	; () banked
  9705  0014AA  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9706  0014AC  0E64               	movlw	100
  9707  0014AE  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9708  0014B0  EC47  F01A         	call	___wmul	;wreg free
  9709  0014B4  0100               	movlb	0	; () banked
  9710  0014B6  5160               	movf	?___wmul& (0+255),w,b
  9711  0014B8  0100               	movlb	0	; () banked
  9712  0014BA  2770               	addwf	??_IntToC& (0+255),f,b
  9713  0014BC  0100               	movlb	0	; () banked
  9714  0014BE  5161               	movf	(?___wmul+1)& (0+255),w,b
  9715  0014C0  0100               	movlb	0	; () banked
  9716  0014C2  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
  9717  0014C4  0100               	movlb	0	; () banked
  9718  0014C6  1F70               	comf	??_IntToC& (0+255),f,b
  9719  0014C8  1F71               	comf	(??_IntToC+1)& (0+255),f,b
  9720  0014CA  4B70               	infsnz	??_IntToC& (0+255),f,b
  9721  0014CC  2B71               	incf	(??_IntToC+1)& (0+255),f,b
  9722  0014CE  0100               	movlb	0	; () banked
  9723  0014D0  516E               	movf	IntToC@nb& (0+255),w,b
  9724  0014D2  0100               	movlb	0	; () banked
  9725  0014D4  2570               	addwf	??_IntToC& (0+255),w,b
  9726  0014D6  0100               	movlb	0	; () banked
  9727  0014D8  6F66               	movwf	___awdiv@dividend& (0+255),b
  9728  0014DA  0100               	movlb	0	; () banked
  9729  0014DC  516F               	movf	(IntToC@nb+1)& (0+255),w,b
  9730  0014DE  0100               	movlb	0	; () banked
  9731  0014E0  2171               	addwfc	(??_IntToC+1)& (0+255),w,b
  9732  0014E2  0100               	movlb	0	; () banked
  9733  0014E4  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
  9734  0014E6  0E00               	movlw	0
  9735  0014E8  0100               	movlb	0	; () banked
  9736  0014EA  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  9737  0014EC  0E0A               	movlw	10
  9738  0014EE  6F68               	movwf	___awdiv@divisor& (0+255),b
  9739  0014F0  EC64  F014         	call	___awdiv	;wreg free
  9740  0014F4  C066  F078         	movff	?___awdiv,IntToC@i+6
  9741  0014F8  C067  F079         	movff	?___awdiv+1,IntToC@i+7
  9742                           
  9743                           ;uart.c: 187: i[4] = (nb - i[0] * 10000 - i[1] * 1000 - i[2] * 100 - i[3] * 10);
  9744  0014FC  C072  F060         	movff	IntToC@i,___wmul@multiplier
  9745  001500  C073  F061         	movff	IntToC@i+1,___wmul@multiplier+1
  9746  001504  0E27               	movlw	39
  9747  001506  0100               	movlb	0	; () banked
  9748  001508  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9749  00150A  0E10               	movlw	16
  9750  00150C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9751  00150E  EC47  F01A         	call	___wmul	;wreg free
  9752  001512  C060  F070         	movff	?___wmul,??_IntToC
  9753  001516  C061  F071         	movff	?___wmul+1,??_IntToC+1
  9754  00151A  C074  F060         	movff	IntToC@i+2,___wmul@multiplier
  9755  00151E  C075  F061         	movff	IntToC@i+3,___wmul@multiplier+1
  9756  001522  0E03               	movlw	3
  9757  001524  0100               	movlb	0	; () banked
  9758  001526  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9759  001528  0EE8               	movlw	232
  9760  00152A  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9761  00152C  EC47  F01A         	call	___wmul	;wreg free
  9762  001530  0100               	movlb	0	; () banked
  9763  001532  5160               	movf	?___wmul& (0+255),w,b
  9764  001534  0100               	movlb	0	; () banked
  9765  001536  2770               	addwf	??_IntToC& (0+255),f,b
  9766  001538  0100               	movlb	0	; () banked
  9767  00153A  5161               	movf	(?___wmul+1)& (0+255),w,b
  9768  00153C  0100               	movlb	0	; () banked
  9769  00153E  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
  9770  001540  C076  F060         	movff	IntToC@i+4,___wmul@multiplier
  9771  001544  C077  F061         	movff	IntToC@i+5,___wmul@multiplier+1
  9772  001548  0E00               	movlw	0
  9773  00154A  0100               	movlb	0	; () banked
  9774  00154C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9775  00154E  0E64               	movlw	100
  9776  001550  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9777  001552  EC47  F01A         	call	___wmul	;wreg free
  9778  001556  0100               	movlb	0	; () banked
  9779  001558  5160               	movf	?___wmul& (0+255),w,b
  9780  00155A  0100               	movlb	0	; () banked
  9781  00155C  2770               	addwf	??_IntToC& (0+255),f,b
  9782  00155E  0100               	movlb	0	; () banked
  9783  001560  5161               	movf	(?___wmul+1)& (0+255),w,b
  9784  001562  0100               	movlb	0	; () banked
  9785  001564  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
  9786  001566  C078  F060         	movff	IntToC@i+6,___wmul@multiplier
  9787  00156A  C079  F061         	movff	IntToC@i+7,___wmul@multiplier+1
  9788  00156E  0E00               	movlw	0
  9789  001570  0100               	movlb	0	; () banked
  9790  001572  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9791  001574  0E0A               	movlw	10
  9792  001576  6F62               	movwf	___wmul@multiplicand& (0+255),b
  9793  001578  EC47  F01A         	call	___wmul	;wreg free
  9794  00157C  0100               	movlb	0	; () banked
  9795  00157E  5160               	movf	?___wmul& (0+255),w,b
  9796  001580  0100               	movlb	0	; () banked
  9797  001582  2770               	addwf	??_IntToC& (0+255),f,b
  9798  001584  0100               	movlb	0	; () banked
  9799  001586  5161               	movf	(?___wmul+1)& (0+255),w,b
  9800  001588  0100               	movlb	0	; () banked
  9801  00158A  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
  9802  00158C  0100               	movlb	0	; () banked
  9803  00158E  1F70               	comf	??_IntToC& (0+255),f,b
  9804  001590  1F71               	comf	(??_IntToC+1)& (0+255),f,b
  9805  001592  4B70               	infsnz	??_IntToC& (0+255),f,b
  9806  001594  2B71               	incf	(??_IntToC+1)& (0+255),f,b
  9807  001596  0100               	movlb	0	; () banked
  9808  001598  516E               	movf	IntToC@nb& (0+255),w,b
  9809  00159A  0100               	movlb	0	; () banked
  9810  00159C  2570               	addwf	??_IntToC& (0+255),w,b
  9811  00159E  0100               	movlb	0	; () banked
  9812  0015A0  6F7A               	movwf	(IntToC@i+8)& (0+255),b
  9813  0015A2  0100               	movlb	0	; () banked
  9814  0015A4  516F               	movf	(IntToC@nb+1)& (0+255),w,b
  9815  0015A6  0100               	movlb	0	; () banked
  9816  0015A8  2171               	addwfc	(??_IntToC+1)& (0+255),w,b
  9817  0015AA  0100               	movlb	0	; () banked
  9818  0015AC  6F7B               	movwf	(IntToC@i+9)& (0+255),b
  9819                           
  9820                           ; BSR set to: 0
  9821                           ;uart.c: 189: out[j++] = (unsigned char)(i[0] + 48);
  9822  0015AE  0E35               	movlw	low IntToC@out
  9823  0015B0  0100               	movlb	0	; () banked
  9824  0015B2  257C               	addwf	IntToC@j& (0+255),w,b
  9825  0015B4  6ED9               	movwf	fsr2l,c
  9826  0015B6  0E00               	movlw	high IntToC@out
  9827  0015B8  0100               	movlb	0	; () banked
  9828  0015BA  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
  9829  0015BC  6EDA               	movwf	fsr2h,c
  9830  0015BE  0100               	movlb	0	; () banked
  9831  0015C0  5172               	movf	IntToC@i& (0+255),w,b
  9832  0015C2  0F30               	addlw	48
  9833  0015C4  6EDF               	movwf	indf2,c
  9834                           
  9835                           ; BSR set to: 0
  9836  0015C6  0100               	movlb	0	; () banked
  9837  0015C8  4B7C               	infsnz	IntToC@j& (0+255),f,b
  9838  0015CA  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
  9839                           
  9840                           ; BSR set to: 0
  9841                           ;uart.c: 190: out[j++] = (unsigned char)(i[1] + 48);
  9842  0015CC  0E35               	movlw	low IntToC@out
  9843  0015CE  0100               	movlb	0	; () banked
  9844  0015D0  257C               	addwf	IntToC@j& (0+255),w,b
  9845  0015D2  6ED9               	movwf	fsr2l,c
  9846  0015D4  0E00               	movlw	high IntToC@out
  9847  0015D6  0100               	movlb	0	; () banked
  9848  0015D8  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
  9849  0015DA  6EDA               	movwf	fsr2h,c
  9850  0015DC  0100               	movlb	0	; () banked
  9851  0015DE  5174               	movf	(IntToC@i+2)& (0+255),w,b
  9852  0015E0  0F30               	addlw	48
  9853  0015E2  6EDF               	movwf	indf2,c
  9854                           
  9855                           ; BSR set to: 0
  9856  0015E4  0100               	movlb	0	; () banked
  9857  0015E6  4B7C               	infsnz	IntToC@j& (0+255),f,b
  9858  0015E8  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
  9859                           
  9860                           ; BSR set to: 0
  9861                           ;uart.c: 191: out[j++] = (unsigned char)(i[2] + 48);
  9862  0015EA  0E35               	movlw	low IntToC@out
  9863  0015EC  0100               	movlb	0	; () banked
  9864  0015EE  257C               	addwf	IntToC@j& (0+255),w,b
  9865  0015F0  6ED9               	movwf	fsr2l,c
  9866  0015F2  0E00               	movlw	high IntToC@out
  9867  0015F4  0100               	movlb	0	; () banked
  9868  0015F6  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
  9869  0015F8  6EDA               	movwf	fsr2h,c
  9870  0015FA  0100               	movlb	0	; () banked
  9871  0015FC  5176               	movf	(IntToC@i+4)& (0+255),w,b
  9872  0015FE  0F30               	addlw	48
  9873  001600  6EDF               	movwf	indf2,c
  9874                           
  9875                           ; BSR set to: 0
  9876  001602  0100               	movlb	0	; () banked
  9877  001604  4B7C               	infsnz	IntToC@j& (0+255),f,b
  9878  001606  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
  9879                           
  9880                           ; BSR set to: 0
  9881                           ;uart.c: 192: out[j++] = (unsigned char)(i[3] + 48);
  9882  001608  0E35               	movlw	low IntToC@out
  9883  00160A  0100               	movlb	0	; () banked
  9884  00160C  257C               	addwf	IntToC@j& (0+255),w,b
  9885  00160E  6ED9               	movwf	fsr2l,c
  9886  001610  0E00               	movlw	high IntToC@out
  9887  001612  0100               	movlb	0	; () banked
  9888  001614  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
  9889  001616  6EDA               	movwf	fsr2h,c
  9890  001618  0100               	movlb	0	; () banked
  9891  00161A  5178               	movf	(IntToC@i+6)& (0+255),w,b
  9892  00161C  0F30               	addlw	48
  9893  00161E  6EDF               	movwf	indf2,c
  9894                           
  9895                           ; BSR set to: 0
  9896  001620  0100               	movlb	0	; () banked
  9897  001622  4B7C               	infsnz	IntToC@j& (0+255),f,b
  9898  001624  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
  9899                           
  9900                           ; BSR set to: 0
  9901                           ;uart.c: 193: out[j++] = (unsigned char)(i[4] + 48);
  9902  001626  0E35               	movlw	low IntToC@out
  9903  001628  0100               	movlb	0	; () banked
  9904  00162A  257C               	addwf	IntToC@j& (0+255),w,b
  9905  00162C  6ED9               	movwf	fsr2l,c
  9906  00162E  0E00               	movlw	high IntToC@out
  9907  001630  0100               	movlb	0	; () banked
  9908  001632  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
  9909  001634  6EDA               	movwf	fsr2h,c
  9910  001636  0100               	movlb	0	; () banked
  9911  001638  517A               	movf	(IntToC@i+8)& (0+255),w,b
  9912  00163A  0F30               	addlw	48
  9913  00163C  6EDF               	movwf	indf2,c
  9914                           
  9915                           ; BSR set to: 0
  9916  00163E  0100               	movlb	0	; () banked
  9917  001640  4B7C               	infsnz	IntToC@j& (0+255),f,b
  9918  001642  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
  9919                           
  9920                           ; BSR set to: 0
  9921                           ;uart.c: 194: out[j++] = '\0';
  9922  001644  0E35               	movlw	low IntToC@out
  9923  001646  0100               	movlb	0	; () banked
  9924  001648  257C               	addwf	IntToC@j& (0+255),w,b
  9925  00164A  6ED9               	movwf	fsr2l,c
  9926  00164C  0E00               	movlw	high IntToC@out
  9927  00164E  0100               	movlb	0	; () banked
  9928  001650  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
  9929  001652  6EDA               	movwf	fsr2h,c
  9930  001654  0E00               	movlw	0
  9931  001656  6EDF               	movwf	indf2,c
  9932                           
  9933                           ; BSR set to: 0
  9934  001658  0100               	movlb	0	; () banked
  9935  00165A  4B7C               	infsnz	IntToC@j& (0+255),f,b
  9936  00165C  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
  9937                           
  9938                           ; BSR set to: 0
  9939                           ;uart.c: 196: return out;
  9940  00165E  0E35               	movlw	low IntToC@out
  9941  001660  0100               	movlb	0	; () banked
  9942  001662  6F6E               	movwf	?_IntToC& (0+255),b
  9943  001664  0E00               	movlw	high IntToC@out
  9944  001666  0100               	movlb	0	; () banked
  9945  001668  6F6F               	movwf	(?_IntToC+1)& (0+255),b
  9946  00166A  D000               	goto	l294
  9947  00166C                     l294:
  9948                           
  9949                           ; BSR set to: 0
  9950  00166C  0012               	return		;funcret
  9951  00166E                     __end_of_IntToC:
  9952                           	opt stack 0
  9953                           tblptru	equ	0xFF8
  9954                           tblptrh	equ	0xFF7
  9955                           tblptrl	equ	0xFF6
  9956                           tablat	equ	0xFF5
  9957                           prodh	equ	0xFF4
  9958                           prodl	equ	0xFF3
  9959                           intcon	equ	0xFF2
  9960                           intcon2	equ	0xFF1
  9961                           intcon3	equ	0xFF0
  9962                           indf0	equ	0xFEF
  9963                           postinc0	equ	0xFEE
  9964                           plusw0	equ	0xFEB
  9965                           fsr0h	equ	0xFEA
  9966                           fsr0l	equ	0xFE9
  9967                           wreg	equ	0xFE8
  9968                           postinc1	equ	0xFE6
  9969                           postdec1	equ	0xFE5
  9970                           plusw1	equ	0xFE3
  9971                           fsr1h	equ	0xFE2
  9972                           fsr1l	equ	0xFE1
  9973                           indf2	equ	0xFDF
  9974                           postinc2	equ	0xFDE
  9975                           postdec2	equ	0xFDD
  9976                           fsr2h	equ	0xFDA
  9977                           fsr2l	equ	0xFD9
  9978                           status	equ	0xFD8
  9979                           
  9980 ;; *************** function ___wmul *****************
  9981 ;; Defined at:
  9982 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  9983 ;; Parameters:    Size  Location     Type
  9984 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9985 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9986 ;; Auto vars:     Size  Location     Type
  9987 ;;  product         2    4[BANK0 ] unsigned int 
  9988 ;; Return value:  Size  Location     Type
  9989 ;;                  2    0[BANK0 ] unsigned int 
  9990 ;; Registers used:
  9991 ;;		wreg, status,2, status,0, prodl, prodh
  9992 ;; Tracked objects:
  9993 ;;		On entry : 0/0
  9994 ;;		On exit  : 0/0
  9995 ;;		Unchanged: 0/0
  9996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9997 ;;      Params:         0       4       0       0
  9998 ;;      Locals:         0       2       0       0
  9999 ;;      Temps:          0       0       0       0
 10000 ;;      Totals:         0       6       0       0
 10001 ;;Total ram usage:        6 bytes
 10002 ;; Hardware stack levels used:    1
 10003 ;; Hardware stack levels required when called:    6
 10004 ;; This function calls:
 10005 ;;		Nothing
 10006 ;; This function is called by:
 10007 ;;		_main
 10008 ;;		_IntToC
 10009 ;;		_eval_poly
 10010 ;; This function uses a non-reentrant model
 10011 ;;
 10012                           
 10013                           	psect	text41
 10014  00348E                     __ptext41:
 10015                           	opt stack 0
 10016  00348E                     ___wmul:
 10017                           	opt stack 19
 10018                           
 10019                           ; BSR set to: 0
 10020                           ;incstack = 0
 10021  00348E  0100               	movlb	0	; () banked
 10022  003490  5160               	movf	___wmul@multiplier& (0+255),w,b
 10023  003492  0100               	movlb	0	; () banked
 10024  003494  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10025  003496  CFF3 F064          	movff	prodl,___wmul@product
 10026  00349A  CFF4 F065          	movff	prodh,___wmul@product+1
 10027  00349E  0100               	movlb	0	; () banked
 10028  0034A0  5160               	movf	___wmul@multiplier& (0+255),w,b
 10029  0034A2  0100               	movlb	0	; () banked
 10030  0034A4  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10031  0034A6  50F3               	movf	prodl,w,c
 10032  0034A8  0100               	movlb	0	; () banked
 10033  0034AA  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10034  0034AC  0100               	movlb	0	; () banked
 10035  0034AE  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10036  0034B0  0100               	movlb	0	; () banked
 10037  0034B2  0362               	mulwf	___wmul@multiplicand& (0+255),b
 10038  0034B4  50F3               	movf	prodl,w,c
 10039  0034B6  0100               	movlb	0	; () banked
 10040  0034B8  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 10041                           
 10042                           ; BSR set to: 0
 10043  0034BA  C064  F060         	movff	___wmul@product,?___wmul
 10044  0034BE  C065  F061         	movff	___wmul@product+1,?___wmul+1
 10045  0034C2  D000               	goto	l541
 10046  0034C4                     l541:
 10047                           
 10048                           ; BSR set to: 0
 10049  0034C4  0012               	return		;funcret
 10050  0034C6                     __end_of___wmul:
 10051                           	opt stack 0
 10052                           tblptru	equ	0xFF8
 10053                           tblptrh	equ	0xFF7
 10054                           tblptrl	equ	0xFF6
 10055                           tablat	equ	0xFF5
 10056                           prodh	equ	0xFF4
 10057                           prodl	equ	0xFF3
 10058                           intcon	equ	0xFF2
 10059                           intcon2	equ	0xFF1
 10060                           intcon3	equ	0xFF0
 10061                           indf0	equ	0xFEF
 10062                           postinc0	equ	0xFEE
 10063                           plusw0	equ	0xFEB
 10064                           fsr0h	equ	0xFEA
 10065                           fsr0l	equ	0xFE9
 10066                           wreg	equ	0xFE8
 10067                           postinc1	equ	0xFE6
 10068                           postdec1	equ	0xFE5
 10069                           plusw1	equ	0xFE3
 10070                           fsr1h	equ	0xFE2
 10071                           fsr1l	equ	0xFE1
 10072                           indf2	equ	0xFDF
 10073                           postinc2	equ	0xFDE
 10074                           postdec2	equ	0xFDD
 10075                           fsr2h	equ	0xFDA
 10076                           fsr2l	equ	0xFD9
 10077                           status	equ	0xFD8
 10078                           
 10079 ;; *************** function ___awdiv *****************
 10080 ;; Defined at:
 10081 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 10082 ;; Parameters:    Size  Location     Type
 10083 ;;  dividend        2    6[BANK0 ] int 
 10084 ;;  divisor         2    8[BANK0 ] int 
 10085 ;; Auto vars:     Size  Location     Type
 10086 ;;  quotient        2   12[BANK0 ] int 
 10087 ;;  sign            1   11[BANK0 ] unsigned char 
 10088 ;;  counter         1   10[BANK0 ] unsigned char 
 10089 ;; Return value:  Size  Location     Type
 10090 ;;                  2    6[BANK0 ] int 
 10091 ;; Registers used:
 10092 ;;		wreg, status,2, status,0
 10093 ;; Tracked objects:
 10094 ;;		On entry : 0/0
 10095 ;;		On exit  : 0/0
 10096 ;;		Unchanged: 0/0
 10097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10098 ;;      Params:         0       4       0       0
 10099 ;;      Locals:         0       4       0       0
 10100 ;;      Temps:          0       0       0       0
 10101 ;;      Totals:         0       8       0       0
 10102 ;;Total ram usage:        8 bytes
 10103 ;; Hardware stack levels used:    1
 10104 ;; Hardware stack levels required when called:    6
 10105 ;; This function calls:
 10106 ;;		Nothing
 10107 ;; This function is called by:
 10108 ;;		_PutcUART
 10109 ;;		_IntToC
 10110 ;; This function uses a non-reentrant model
 10111 ;;
 10112                           
 10113                           	psect	text42
 10114  0028C8                     __ptext42:
 10115                           	opt stack 0
 10116  0028C8                     ___awdiv:
 10117                           	opt stack 21
 10118                           
 10119                           ; BSR set to: 0
 10120                           ;incstack = 0
 10121  0028C8  0E00               	movlw	0
 10122  0028CA  0100               	movlb	0	; () banked
 10123  0028CC  6F6B               	movwf	___awdiv@sign& (0+255),b
 10124                           
 10125                           ; BSR set to: 0
 10126  0028CE  0100               	movlb	0	; () banked
 10127  0028D0  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 10128  0028D2  D009               	goto	l3906
 10129                           
 10130                           ; BSR set to: 0
 10131  0028D4  0100               	movlb	0	; () banked
 10132  0028D6  6D68               	negf	___awdiv@divisor& (0+255),b
 10133  0028D8  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
 10134  0028DA  B0D8               	btfsc	status,0,c
 10135  0028DC  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
 10136                           
 10137                           ; BSR set to: 0
 10138  0028DE  0E01               	movlw	1
 10139  0028E0  0100               	movlb	0	; () banked
 10140  0028E2  6F6B               	movwf	___awdiv@sign& (0+255),b
 10141  0028E4  D000               	goto	l3906
 10142  0028E6                     l3906:
 10143                           
 10144                           ; BSR set to: 0
 10145  0028E6  0100               	movlb	0	; () banked
 10146  0028E8  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 10147  0028EA  D009               	goto	l3912
 10148                           
 10149                           ; BSR set to: 0
 10150  0028EC  0100               	movlb	0	; () banked
 10151  0028EE  6D66               	negf	___awdiv@dividend& (0+255),b
 10152  0028F0  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
 10153  0028F2  B0D8               	btfsc	status,0,c
 10154  0028F4  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
 10155                           
 10156                           ; BSR set to: 0
 10157  0028F6  0E01               	movlw	1
 10158  0028F8  0100               	movlb	0	; () banked
 10159  0028FA  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
 10160  0028FC  D000               	goto	l3912
 10161  0028FE                     l3912:
 10162                           
 10163                           ; BSR set to: 0
 10164  0028FE  0E00               	movlw	0
 10165  002900  0100               	movlb	0	; () banked
 10166  002902  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
 10167  002904  0E00               	movlw	0
 10168  002906  6F6C               	movwf	___awdiv@quotient& (0+255),b
 10169                           
 10170                           ; BSR set to: 0
 10171  002908  0100               	movlb	0	; () banked
 10172  00290A  5168               	movf	___awdiv@divisor& (0+255),w,b
 10173  00290C  0100               	movlb	0	; () banked
 10174  00290E  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 10175  002910  B4D8               	btfsc	status,2,c
 10176  002912  D031               	goto	l3934
 10177                           
 10178                           ; BSR set to: 0
 10179  002914  0E01               	movlw	1
 10180  002916  0100               	movlb	0	; () banked
 10181  002918  6F6A               	movwf	___awdiv@counter& (0+255),b
 10182  00291A  D007               	goto	l3920
 10183  00291C                     l3918:
 10184                           
 10185                           ; BSR set to: 0
 10186  00291C  0100               	movlb	0	; () banked
 10187  00291E  90D8               	bcf	status,0,c
 10188  002920  3768               	rlcf	___awdiv@divisor& (0+255),f,b
 10189  002922  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 10190  002924  0100               	movlb	0	; () banked
 10191  002926  2B6A               	incf	___awdiv@counter& (0+255),f,b
 10192  002928  D000               	goto	l3920
 10193  00292A                     l3920:
 10194                           
 10195                           ; BSR set to: 0
 10196  00292A  0100               	movlb	0	; () banked
 10197  00292C  BF69               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 10198  00292E  D002               	goto	l3922
 10199  002930  D7F5               	goto	l3918
 10200                           
 10201                           ; BSR set to: 0
 10202  002932  D000               	goto	l3922
 10203  002934                     l3922:
 10204                           
 10205                           ; BSR set to: 0
 10206  002934  0100               	movlb	0	; () banked
 10207  002936  90D8               	bcf	status,0,c
 10208  002938  376C               	rlcf	___awdiv@quotient& (0+255),f,b
 10209  00293A  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 10210                           
 10211                           ; BSR set to: 0
 10212  00293C  0100               	movlb	0	; () banked
 10213  00293E  5168               	movf	___awdiv@divisor& (0+255),w,b
 10214  002940  0100               	movlb	0	; () banked
 10215  002942  5D66               	subwf	___awdiv@dividend& (0+255),w,b
 10216  002944  0100               	movlb	0	; () banked
 10217  002946  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10218  002948  0100               	movlb	0	; () banked
 10219  00294A  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 10220  00294C  A0D8               	btfss	status,0,c
 10221  00294E  D00B               	goto	l3930
 10222                           
 10223                           ; BSR set to: 0
 10224  002950  0100               	movlb	0	; () banked
 10225  002952  5168               	movf	___awdiv@divisor& (0+255),w,b
 10226  002954  0100               	movlb	0	; () banked
 10227  002956  5F66               	subwf	___awdiv@dividend& (0+255),f,b
 10228  002958  0100               	movlb	0	; () banked
 10229  00295A  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 10230  00295C  0100               	movlb	0	; () banked
 10231  00295E  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 10232                           
 10233                           ; BSR set to: 0
 10234  002960  0100               	movlb	0	; () banked
 10235  002962  816C               	bsf	___awdiv@quotient& (0+255),0,b
 10236  002964  D000               	goto	l3930
 10237  002966                     l3930:
 10238                           
 10239                           ; BSR set to: 0
 10240  002966  0100               	movlb	0	; () banked
 10241  002968  90D8               	bcf	status,0,c
 10242  00296A  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 10243  00296C  3368               	rrcf	___awdiv@divisor& (0+255),f,b
 10244                           
 10245                           ; BSR set to: 0
 10246  00296E  0100               	movlb	0	; () banked
 10247  002970  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
 10248  002972  D7E0               	goto	l3922
 10249                           
 10250                           ; BSR set to: 0
 10251  002974  D000               	goto	l3934
 10252  002976                     l3934:
 10253                           
 10254                           ; BSR set to: 0
 10255  002976  0100               	movlb	0	; () banked
 10256  002978  516B               	movf	___awdiv@sign& (0+255),w,b
 10257  00297A  0100               	movlb	0	; () banked
 10258  00297C  B4D8               	btfsc	status,2,c
 10259  00297E  D006               	goto	l3938
 10260                           
 10261                           ; BSR set to: 0
 10262  002980  0100               	movlb	0	; () banked
 10263  002982  6D6C               	negf	___awdiv@quotient& (0+255),b
 10264  002984  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 10265  002986  B0D8               	btfsc	status,0,c
 10266  002988  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 10267  00298A  D000               	goto	l3938
 10268  00298C                     l3938:
 10269                           
 10270                           ; BSR set to: 0
 10271  00298C  C06C  F066         	movff	___awdiv@quotient,?___awdiv
 10272  002990  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
 10273  002994  D000               	goto	l734
 10274  002996                     l734:
 10275                           
 10276                           ; BSR set to: 0
 10277  002996  0012               	return		;funcret
 10278  002998                     __end_of___awdiv:
 10279                           	opt stack 0
 10280                           tblptru	equ	0xFF8
 10281                           tblptrh	equ	0xFF7
 10282                           tblptrl	equ	0xFF6
 10283                           tablat	equ	0xFF5
 10284                           prodh	equ	0xFF4
 10285                           prodl	equ	0xFF3
 10286                           intcon	equ	0xFF2
 10287                           intcon2	equ	0xFF1
 10288                           intcon3	equ	0xFF0
 10289                           indf0	equ	0xFEF
 10290                           postinc0	equ	0xFEE
 10291                           plusw0	equ	0xFEB
 10292                           fsr0h	equ	0xFEA
 10293                           fsr0l	equ	0xFE9
 10294                           wreg	equ	0xFE8
 10295                           postinc1	equ	0xFE6
 10296                           postdec1	equ	0xFE5
 10297                           plusw1	equ	0xFE3
 10298                           fsr1h	equ	0xFE2
 10299                           fsr1l	equ	0xFE1
 10300                           indf2	equ	0xFDF
 10301                           postinc2	equ	0xFDE
 10302                           postdec2	equ	0xFDD
 10303                           fsr2h	equ	0xFDA
 10304                           fsr2l	equ	0xFD9
 10305                           status	equ	0xFD8
 10306                           
 10307 ;; *************** function _low_isr *****************
 10308 ;; Defined at:
 10309 ;;		line 33 in file "interruptions.c"
 10310 ;; Parameters:    Size  Location     Type
 10311 ;;		None
 10312 ;; Auto vars:     Size  Location     Type
 10313 ;;		None
 10314 ;; Return value:  Size  Location     Type
 10315 ;;		None               void
 10316 ;; Registers used:
 10317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10318 ;; Tracked objects:
 10319 ;;		On entry : 0/0
 10320 ;;		On exit  : 0/0
 10321 ;;		Unchanged: 0/0
 10322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10323 ;;      Params:         0       0       0       0
 10324 ;;      Locals:         0       0       0       0
 10325 ;;      Temps:         17       0       0       0
 10326 ;;      Totals:        17       0       0       0
 10327 ;;Total ram usage:       17 bytes
 10328 ;; Hardware stack levels used:    1
 10329 ;; Hardware stack levels required when called:    5
 10330 ;; This function calls:
 10331 ;;		_subroutine_interruptions
 10332 ;; This function is called by:
 10333 ;;		Interrupt level 1
 10334 ;; This function uses a non-reentrant model
 10335 ;;
 10336                           
 10337                           	psect	intcodelo
 10338  000018                     __pintcodelo:
 10339                           	opt stack 0
 10340  000018                     _low_isr:
 10341                           	opt stack 17
 10342                           
 10343                           ; BSR set to: 0
 10344                           ;incstack = 0
 10345  000018  CFD8 F004          	movff	status,??_low_isr
 10346  00001C  CFE8 F005          	movff	wreg,??_low_isr+1
 10347  000020  CFE0 F006          	movff	bsr,??_low_isr+2
 10348  000024  CFFA F007          	movff	pclath,??_low_isr+3
 10349  000028  CFFB F008          	movff	pclatu,??_low_isr+4
 10350  00002C  CFE9 F009          	movff	fsr0l,??_low_isr+5
 10351  000030  CFEA F00A          	movff	fsr0h,??_low_isr+6
 10352  000034  CFE1 F00B          	movff	fsr1l,??_low_isr+7
 10353  000038  CFE2 F00C          	movff	fsr1h,??_low_isr+8
 10354  00003C  CFD9 F00D          	movff	fsr2l,??_low_isr+9
 10355  000040  CFDA F00E          	movff	fsr2h,??_low_isr+10
 10356  000044  CFF3 F00F          	movff	prodl,??_low_isr+11
 10357  000048  CFF4 F010          	movff	prodh,??_low_isr+12
 10358  00004C  CFF6 F011          	movff	tblptrl,??_low_isr+13
 10359  000050  CFF7 F012          	movff	tblptrh,??_low_isr+14
 10360  000054  CFF8 F013          	movff	tblptru,??_low_isr+15
 10361  000058  CFF5 F014          	movff	tablat,??_low_isr+16
 10362                           
 10363                           ;interruptions.c: 35: subroutine_interruptions(0b0);
 10364  00005C  0E00               	movlw	0
 10365  00005E  ECFB  F016         	call	_subroutine_interruptions
 10366  000062  C014  FFF5         	movff	??_low_isr+16,tablat
 10367  000066  C013  FFF8         	movff	??_low_isr+15,tblptru
 10368  00006A  C012  FFF7         	movff	??_low_isr+14,tblptrh
 10369  00006E  C011  FFF6         	movff	??_low_isr+13,tblptrl
 10370  000072  C010  FFF4         	movff	??_low_isr+12,prodh
 10371  000076  C00F  FFF3         	movff	??_low_isr+11,prodl
 10372  00007A  C00E  FFDA         	movff	??_low_isr+10,fsr2h
 10373  00007E  C00D  FFD9         	movff	??_low_isr+9,fsr2l
 10374  000082  C00C  FFE2         	movff	??_low_isr+8,fsr1h
 10375  000086  C00B  FFE1         	movff	??_low_isr+7,fsr1l
 10376  00008A  C00A  FFEA         	movff	??_low_isr+6,fsr0h
 10377  00008E  C009  FFE9         	movff	??_low_isr+5,fsr0l
 10378  000092  C008  FFFB         	movff	??_low_isr+4,pclatu
 10379  000096  C007  FFFA         	movff	??_low_isr+3,pclath
 10380  00009A  C006  FFE0         	movff	??_low_isr+2,bsr
 10381  00009E  C005  FFE8         	movff	??_low_isr+1,wreg
 10382  0000A2  C004  FFD8         	movff	??_low_isr,status
 10383  0000A6  0010               	retfie	
 10384  0000A8                     __end_of_low_isr:
 10385                           	opt stack 0
 10386                           pclatu	equ	0xFFB
 10387                           pclath	equ	0xFFA
 10388                           tblptru	equ	0xFF8
 10389                           tblptrh	equ	0xFF7
 10390                           tblptrl	equ	0xFF6
 10391                           tablat	equ	0xFF5
 10392                           prodh	equ	0xFF4
 10393                           prodl	equ	0xFF3
 10394                           intcon	equ	0xFF2
 10395                           intcon2	equ	0xFF1
 10396                           intcon3	equ	0xFF0
 10397                           indf0	equ	0xFEF
 10398                           postinc0	equ	0xFEE
 10399                           plusw0	equ	0xFEB
 10400                           fsr0h	equ	0xFEA
 10401                           fsr0l	equ	0xFE9
 10402                           wreg	equ	0xFE8
 10403                           postinc1	equ	0xFE6
 10404                           postdec1	equ	0xFE5
 10405                           plusw1	equ	0xFE3
 10406                           fsr1h	equ	0xFE2
 10407                           fsr1l	equ	0xFE1
 10408                           bsr	equ	0xFE0
 10409                           indf2	equ	0xFDF
 10410                           postinc2	equ	0xFDE
 10411                           postdec2	equ	0xFDD
 10412                           fsr2h	equ	0xFDA
 10413                           fsr2l	equ	0xFD9
 10414                           status	equ	0xFD8
 10415                           
 10416 ;; *************** function _subroutine_interruptions *****************
 10417 ;; Defined at:
 10418 ;;		line 43 in file "interruptions.c"
 10419 ;; Parameters:    Size  Location     Type
 10420 ;;  priorite        1    wreg     unsigned char 
 10421 ;; Auto vars:     Size  Location     Type
 10422 ;;  priorite        1    2[COMRAM] unsigned char 
 10423 ;; Return value:  Size  Location     Type
 10424 ;;		None               void
 10425 ;; Registers used:
 10426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10427 ;; Tracked objects:
 10428 ;;		On entry : 0/0
 10429 ;;		On exit  : 0/0
 10430 ;;		Unchanged: 0/0
 10431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10432 ;;      Params:         0       0       0       0
 10433 ;;      Locals:         1       0       0       0
 10434 ;;      Temps:          0       0       0       0
 10435 ;;      Totals:         1       0       0       0
 10436 ;;Total ram usage:        1 bytes
 10437 ;; Hardware stack levels used:    1
 10438 ;; Hardware stack levels required when called:    4
 10439 ;; This function calls:
 10440 ;;		_interrupt_RX
 10441 ;;		_interrupt_TX
 10442 ;;		_interruption_INT0
 10443 ;;		_interruption_QEI
 10444 ;;		_interruption_timer0
 10445 ;;		_interruption_timer1
 10446 ;;		_interruption_timer2
 10447 ;;		_interuption_QEI_sens
 10448 ;; This function is called by:
 10449 ;;		_low_isr
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           	psect	text44
 10454  002DF6                     __ptext44:
 10455                           	opt stack 0
 10456  002DF6                     _subroutine_interruptions:
 10457                           	opt stack 17
 10458                           
 10459                           ;incstack = 0
 10460                           ;subroutine_interruptions@priorite stored from wreg
 10461  002DF6  6E03               	movwf	subroutine_interruptions@priorite,c
 10462                           
 10463                           ;interruptions.c: 45: if ( PIR3bits.IC2QEIF == 1 && 0b1 == 1 && priorite == 0b1)
 10464  002DF8  A4A4               	btfss	4004,2,c	;volatile
 10465  002DFA  D006               	goto	i1l356
 10466  002DFC  0403               	decf	subroutine_interruptions@priorite,w,c
 10467  002DFE  A4D8               	btfss	status,2,c
 10468  002E00  D003               	goto	i1l356
 10469                           
 10470                           ;interruptions.c: 46: {
 10471                           ;interruptions.c: 47: interruption_QEI();
 10472  002E02  ECA4  F01A         	call	_interruption_QEI	;wreg free
 10473                           
 10474                           ;interruptions.c: 48: }
 10475  002E06  D038               	goto	i1l371
 10476  002E08                     i1l356:
 10477                           
 10478                           ;interruptions.c: 49: else if ( PIR3bits.IC3DRIF == 1 && 0b0 == 1 && priorite == 0b1)
 10479  002E08  50A4               	movf	4004,w,c	;volatile
 10480  002E0A  D006               	goto	i1l358
 10481  002E0C  0403               	decf	subroutine_interruptions@priorite,w,c
 10482  002E0E  A4D8               	btfss	status,2,c
 10483  002E10  D003               	goto	i1l358
 10484                           
 10485                           ;interruptions.c: 50: {
 10486                           ;interruptions.c: 51: interuption_QEI_sens();
 10487  002E12  EC1D  F01B         	call	_interuption_QEI_sens	;wreg free
 10488                           
 10489                           ;interruptions.c: 52: }
 10490  002E16  D030               	goto	i1l371
 10491  002E18                     i1l358:
 10492                           
 10493                           ;interruptions.c: 53: else if ( INTCONbits.TMR0IF == 1 && 0b1 == 1 && priorite == 0b0)
 10494  002E18  A4F2               	btfss	intcon,2,c	;volatile
 10495  002E1A  D006               	goto	i1l360
 10496  002E1C  5003               	movf	subroutine_interruptions@priorite,w,c
 10497  002E1E  A4D8               	btfss	status,2,c
 10498  002E20  D003               	goto	i1l360
 10499                           
 10500                           ;interruptions.c: 54: {
 10501                           ;interruptions.c: 55: interruption_timer0();
 10502  002E22  EC11  F01B         	call	_interruption_timer0	;wreg free
 10503                           
 10504                           ;interruptions.c: 56: }
 10505  002E26  D028               	goto	i1l371
 10506  002E28                     i1l360:
 10507                           
 10508                           ;interruptions.c: 57: else if ( PIR1bits.TMR1IF == 1 && 0b1 == 1 && priorite == 0b1)
 10509  002E28  A09E               	btfss	3998,0,c	;volatile
 10510  002E2A  D006               	goto	i1l362
 10511  002E2C  0403               	decf	subroutine_interruptions@priorite,w,c
 10512  002E2E  A4D8               	btfss	status,2,c
 10513  002E30  D003               	goto	i1l362
 10514                           
 10515                           ;interruptions.c: 58: {
 10516                           ;interruptions.c: 59: interruption_timer1();
 10517  002E32  ECA9  F019         	call	_interruption_timer1	;wreg free
 10518                           
 10519                           ;interruptions.c: 60: }
 10520  002E36  D020               	goto	i1l371
 10521  002E38                     i1l362:
 10522                           
 10523                           ;interruptions.c: 61: else if ( PIR1bits.TMR2IF == 1 && 0b0 == 1 && priorite == 0b0)
 10524  002E38  509E               	movf	3998,w,c	;volatile
 10525  002E3A  D006               	goto	i1l364
 10526  002E3C  5003               	movf	subroutine_interruptions@priorite,w,c
 10527  002E3E  A4D8               	btfss	status,2,c
 10528  002E40  D003               	goto	i1l364
 10529                           
 10530                           ;interruptions.c: 62: {
 10531                           ;interruptions.c: 63: interruption_timer2();
 10532  002E42  EC1F  F01B         	call	_interruption_timer2	;wreg free
 10533                           
 10534                           ;interruptions.c: 64: }
 10535  002E46  D018               	goto	i1l371
 10536  002E48                     i1l364:
 10537                           
 10538                           ;interruptions.c: 65: else if (INTCONbits.INT0IF == 1 && 0b1 == 1 && priorite == 0b1)
 10539  002E48  A2F2               	btfss	intcon,1,c	;volatile
 10540  002E4A  D006               	goto	i1l366
 10541  002E4C  0403               	decf	subroutine_interruptions@priorite,w,c
 10542  002E4E  A4D8               	btfss	status,2,c
 10543  002E50  D003               	goto	i1l366
 10544                           
 10545                           ;interruptions.c: 66: {
 10546                           ;interruptions.c: 67: interruption_INT0();
 10547  002E52  EC18  F019         	call	_interruption_INT0	;wreg free
 10548                           
 10549                           ;interruptions.c: 68: }
 10550  002E56  D010               	goto	i1l371
 10551  002E58                     i1l366:
 10552                           
 10553                           ;interruptions.c: 85: else if ( PIR1bits.RCIF == 1 && 0b1 == 1 && priorite == 0b1)
 10554  002E58  AA9E               	btfss	3998,5,c	;volatile
 10555  002E5A  D006               	goto	i1l368
 10556  002E5C  0403               	decf	subroutine_interruptions@priorite,w,c
 10557  002E5E  A4D8               	btfss	status,2,c
 10558  002E60  D003               	goto	i1l368
 10559                           
 10560                           ;interruptions.c: 86: {
 10561                           ;interruptions.c: 87: interrupt_RX();
 10562  002E62  ECEF  F019         	call	_interrupt_RX	;wreg free
 10563                           
 10564                           ;interruptions.c: 88: }
 10565  002E66  D008               	goto	i1l371
 10566  002E68                     i1l368:
 10567                           
 10568                           ;interruptions.c: 89: else if (PIR1bits.TXIF == 1 && 0b0 == 1 && priorite == 0b0)
 10569  002E68  509E               	movf	3998,w,c	;volatile
 10570  002E6A  D006               	goto	i1l371
 10571  002E6C  5003               	movf	subroutine_interruptions@priorite,w,c
 10572  002E6E  A4D8               	btfss	status,2,c
 10573  002E70  D003               	goto	i1l371
 10574                           
 10575                           ;interruptions.c: 90: {
 10576                           ;interruptions.c: 91: interrupt_TX();
 10577  002E72  EC21  F01B         	call	_interrupt_TX	;wreg free
 10578  002E76  D000               	goto	i1l371
 10579  002E78                     i1l371:
 10580  002E78  0012               	return		;funcret
 10581  002E7A                     __end_of_subroutine_interruptions:
 10582                           	opt stack 0
 10583                           pclatu	equ	0xFFB
 10584                           pclath	equ	0xFFA
 10585                           tblptru	equ	0xFF8
 10586                           tblptrh	equ	0xFF7
 10587                           tblptrl	equ	0xFF6
 10588                           tablat	equ	0xFF5
 10589                           prodh	equ	0xFF4
 10590                           prodl	equ	0xFF3
 10591                           intcon	equ	0xFF2
 10592                           intcon2	equ	0xFF1
 10593                           intcon3	equ	0xFF0
 10594                           indf0	equ	0xFEF
 10595                           postinc0	equ	0xFEE
 10596                           plusw0	equ	0xFEB
 10597                           fsr0h	equ	0xFEA
 10598                           fsr0l	equ	0xFE9
 10599                           wreg	equ	0xFE8
 10600                           postinc1	equ	0xFE6
 10601                           postdec1	equ	0xFE5
 10602                           plusw1	equ	0xFE3
 10603                           fsr1h	equ	0xFE2
 10604                           fsr1l	equ	0xFE1
 10605                           bsr	equ	0xFE0
 10606                           indf2	equ	0xFDF
 10607                           postinc2	equ	0xFDE
 10608                           postdec2	equ	0xFDD
 10609                           fsr2h	equ	0xFDA
 10610                           fsr2l	equ	0xFD9
 10611                           status	equ	0xFD8
 10612                           
 10613 ;; *************** function _interuption_QEI_sens *****************
 10614 ;; Defined at:
 10615 ;;		line 196 in file "interruptions.c"
 10616 ;; Parameters:    Size  Location     Type
 10617 ;;		None
 10618 ;; Auto vars:     Size  Location     Type
 10619 ;;		None
 10620 ;; Return value:  Size  Location     Type
 10621 ;;		None               void
 10622 ;; Registers used:
 10623 ;;		None
 10624 ;; Tracked objects:
 10625 ;;		On entry : 0/0
 10626 ;;		On exit  : 0/0
 10627 ;;		Unchanged: 0/0
 10628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10629 ;;      Params:         0       0       0       0
 10630 ;;      Locals:         0       0       0       0
 10631 ;;      Temps:          0       0       0       0
 10632 ;;      Totals:         0       0       0       0
 10633 ;;Total ram usage:        0 bytes
 10634 ;; Hardware stack levels used:    1
 10635 ;; Hardware stack levels required when called:    3
 10636 ;; This function calls:
 10637 ;;		Nothing
 10638 ;; This function is called by:
 10639 ;;		_subroutine_interruptions
 10640 ;; This function uses a non-reentrant model
 10641 ;;
 10642                           
 10643                           	psect	text45
 10644  00363A                     __ptext45:
 10645                           	opt stack 0
 10646  00363A                     _interuption_QEI_sens:
 10647                           	opt stack 17
 10648                           
 10649                           ;interruptions.c: 198: PIR3bits.IC3DRIF = 0;
 10650                           
 10651                           ;incstack = 0
 10652  00363A  96A4               	bcf	4004,3,c	;volatile
 10653  00363C  0012               	return		;funcret
 10654  00363E                     __end_of_interuption_QEI_sens:
 10655                           	opt stack 0
 10656                           pclatu	equ	0xFFB
 10657                           pclath	equ	0xFFA
 10658                           tblptru	equ	0xFF8
 10659                           tblptrh	equ	0xFF7
 10660                           tblptrl	equ	0xFF6
 10661                           tablat	equ	0xFF5
 10662                           prodh	equ	0xFF4
 10663                           prodl	equ	0xFF3
 10664                           intcon	equ	0xFF2
 10665                           intcon2	equ	0xFF1
 10666                           intcon3	equ	0xFF0
 10667                           indf0	equ	0xFEF
 10668                           postinc0	equ	0xFEE
 10669                           plusw0	equ	0xFEB
 10670                           fsr0h	equ	0xFEA
 10671                           fsr0l	equ	0xFE9
 10672                           wreg	equ	0xFE8
 10673                           postinc1	equ	0xFE6
 10674                           postdec1	equ	0xFE5
 10675                           plusw1	equ	0xFE3
 10676                           fsr1h	equ	0xFE2
 10677                           fsr1l	equ	0xFE1
 10678                           bsr	equ	0xFE0
 10679                           indf2	equ	0xFDF
 10680                           postinc2	equ	0xFDE
 10681                           postdec2	equ	0xFDD
 10682                           fsr2h	equ	0xFDA
 10683                           fsr2l	equ	0xFD9
 10684                           status	equ	0xFD8
 10685                           
 10686 ;; *************** function _interruption_timer2 *****************
 10687 ;; Defined at:
 10688 ;;		line 132 in file "interruptions.c"
 10689 ;; Parameters:    Size  Location     Type
 10690 ;;		None
 10691 ;; Auto vars:     Size  Location     Type
 10692 ;;		None
 10693 ;; Return value:  Size  Location     Type
 10694 ;;		None               void
 10695 ;; Registers used:
 10696 ;;		None
 10697 ;; Tracked objects:
 10698 ;;		On entry : 0/0
 10699 ;;		On exit  : 0/0
 10700 ;;		Unchanged: 0/0
 10701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10702 ;;      Params:         0       0       0       0
 10703 ;;      Locals:         0       0       0       0
 10704 ;;      Temps:          0       0       0       0
 10705 ;;      Totals:         0       0       0       0
 10706 ;;Total ram usage:        0 bytes
 10707 ;; Hardware stack levels used:    1
 10708 ;; Hardware stack levels required when called:    3
 10709 ;; This function calls:
 10710 ;;		Nothing
 10711 ;; This function is called by:
 10712 ;;		_subroutine_interruptions
 10713 ;; This function uses a non-reentrant model
 10714 ;;
 10715                           
 10716                           	psect	text46
 10717  00363E                     __ptext46:
 10718                           	opt stack 0
 10719  00363E                     _interruption_timer2:
 10720                           	opt stack 17
 10721                           
 10722                           ;interruptions.c: 134: PIR1bits.TMR2IF = 0;
 10723                           
 10724                           ;incstack = 0
 10725  00363E  929E               	bcf	3998,1,c	;volatile
 10726  003640  0012               	return		;funcret
 10727  003642                     __end_of_interruption_timer2:
 10728                           	opt stack 0
 10729                           pclatu	equ	0xFFB
 10730                           pclath	equ	0xFFA
 10731                           tblptru	equ	0xFF8
 10732                           tblptrh	equ	0xFF7
 10733                           tblptrl	equ	0xFF6
 10734                           tablat	equ	0xFF5
 10735                           prodh	equ	0xFF4
 10736                           prodl	equ	0xFF3
 10737                           intcon	equ	0xFF2
 10738                           intcon2	equ	0xFF1
 10739                           intcon3	equ	0xFF0
 10740                           indf0	equ	0xFEF
 10741                           postinc0	equ	0xFEE
 10742                           plusw0	equ	0xFEB
 10743                           fsr0h	equ	0xFEA
 10744                           fsr0l	equ	0xFE9
 10745                           wreg	equ	0xFE8
 10746                           postinc1	equ	0xFE6
 10747                           postdec1	equ	0xFE5
 10748                           plusw1	equ	0xFE3
 10749                           fsr1h	equ	0xFE2
 10750                           fsr1l	equ	0xFE1
 10751                           bsr	equ	0xFE0
 10752                           indf2	equ	0xFDF
 10753                           postinc2	equ	0xFDE
 10754                           postdec2	equ	0xFDD
 10755                           fsr2h	equ	0xFDA
 10756                           fsr2l	equ	0xFD9
 10757                           status	equ	0xFD8
 10758                           
 10759 ;; *************** function _interruption_timer1 *****************
 10760 ;; Defined at:
 10761 ;;		line 115 in file "interruptions.c"
 10762 ;; Parameters:    Size  Location     Type
 10763 ;;		None
 10764 ;; Auto vars:     Size  Location     Type
 10765 ;;		None
 10766 ;; Return value:  Size  Location     Type
 10767 ;;		None               void
 10768 ;; Registers used:
 10769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10770 ;; Tracked objects:
 10771 ;;		On entry : 0/0
 10772 ;;		On exit  : 0/0
 10773 ;;		Unchanged: 0/0
 10774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10775 ;;      Params:         0       0       0       0
 10776 ;;      Locals:         0       0       0       0
 10777 ;;      Temps:          1       0       0       0
 10778 ;;      Totals:         1       0       0       0
 10779 ;;Total ram usage:        1 bytes
 10780 ;; Hardware stack levels used:    1
 10781 ;; Hardware stack levels required when called:    3
 10782 ;; This function calls:
 10783 ;;		Nothing
 10784 ;; This function is called by:
 10785 ;;		_subroutine_interruptions
 10786 ;; This function uses a non-reentrant model
 10787 ;;
 10788                           
 10789                           	psect	text47
 10790  003352                     __ptext47:
 10791                           	opt stack 0
 10792  003352                     _interruption_timer1:
 10793                           	opt stack 17
 10794                           
 10795                           ;interruptions.c: 117: PIR1bits.TMR1IF = 0;
 10796                           
 10797                           ;incstack = 0
 10798  003352  909E               	bcf	3998,0,c	;volatile
 10799                           
 10800                           ;interruptions.c: 118: TMR1 = 65535 - 810;
 10801  003354  0EFC               	movlw	252
 10802  003356  6ECF               	movwf	4047,c	;volatile
 10803  003358  0ED5               	movlw	213
 10804  00335A  6ECE               	movwf	4046,c	;volatile
 10805                           
 10806                           ;interruptions.c: 120: if (uart_logiciel.transmission_en_cours == 1)
 10807  00335C  0433               	decf	_uart_logiciel+11,w,c
 10808  00335E  A4D8               	btfss	status,2,c
 10809  003360  D018               	goto	i1l377
 10810                           
 10811                           ;interruptions.c: 121: {
 10812                           ;interruptions.c: 122: PORTCbits.RC5 = uart_logiciel.buffer_uart[uart_logiciel.indice];
 10813  003362  5034               	movf	_uart_logiciel+12,w,c
 10814  003364  0D01               	mullw	1
 10815  003366  0E28               	movlw	low _uart_logiciel
 10816  003368  24F3               	addwf	prodl,w,c
 10817  00336A  6ED9               	movwf	fsr2l,c
 10818  00336C  0E00               	movlw	high _uart_logiciel
 10819  00336E  20F4               	addwfc	prodh,w,c
 10820  003370  6EDA               	movwf	fsr2h,c
 10821  003372  50DF               	movf	indf2,w,c
 10822  003374  6E01               	movwf	??_interruption_timer1& (0+255),c
 10823  003376  3A01               	swapf	??_interruption_timer1,f,c
 10824  003378  4601               	rlncf	??_interruption_timer1,f,c
 10825  00337A  5082               	movf	3970,w,c	;volatile
 10826  00337C  1801               	xorwf	??_interruption_timer1,w,c
 10827  00337E  0BDF               	andlw	-33
 10828  003380  1801               	xorwf	??_interruption_timer1,w,c
 10829  003382  6E82               	movwf	3970,c	;volatile
 10830                           
 10831                           ;interruptions.c: 123: uart_logiciel.indice++;
 10832  003384  2A34               	incf	_uart_logiciel+12,f,c
 10833                           
 10834                           ;interruptions.c: 125: if (uart_logiciel.indice > 10)
 10835  003386  0E0A               	movlw	10
 10836  003388  6434               	cpfsgt	_uart_logiciel+12,c
 10837  00338A  D005               	goto	i1l380
 10838                           
 10839                           ;interruptions.c: 126: uart_logiciel.transmission_en_cours = 0;
 10840  00338C  0E00               	movlw	0
 10841  00338E  6E33               	movwf	_uart_logiciel+11,c
 10842                           
 10843                           ;interruptions.c: 127: }
 10844  003390  D002               	goto	i1l380
 10845  003392                     i1l377:
 10846                           
 10847                           ;interruptions.c: 128: else
 10848                           ;interruptions.c: 129: PORTCbits.RC5 = 1;
 10849  003392  8A82               	bsf	3970,5,c	;volatile
 10850  003394  D000               	goto	i1l380
 10851  003396                     i1l380:
 10852  003396  0012               	return		;funcret
 10853  003398                     __end_of_interruption_timer1:
 10854                           	opt stack 0
 10855                           pclatu	equ	0xFFB
 10856                           pclath	equ	0xFFA
 10857                           tblptru	equ	0xFF8
 10858                           tblptrh	equ	0xFF7
 10859                           tblptrl	equ	0xFF6
 10860                           tablat	equ	0xFF5
 10861                           prodh	equ	0xFF4
 10862                           prodl	equ	0xFF3
 10863                           intcon	equ	0xFF2
 10864                           intcon2	equ	0xFF1
 10865                           intcon3	equ	0xFF0
 10866                           indf0	equ	0xFEF
 10867                           postinc0	equ	0xFEE
 10868                           plusw0	equ	0xFEB
 10869                           fsr0h	equ	0xFEA
 10870                           fsr0l	equ	0xFE9
 10871                           wreg	equ	0xFE8
 10872                           postinc1	equ	0xFE6
 10873                           postdec1	equ	0xFE5
 10874                           plusw1	equ	0xFE3
 10875                           fsr1h	equ	0xFE2
 10876                           fsr1l	equ	0xFE1
 10877                           bsr	equ	0xFE0
 10878                           indf2	equ	0xFDF
 10879                           postinc2	equ	0xFDE
 10880                           postdec2	equ	0xFDD
 10881                           fsr2h	equ	0xFDA
 10882                           fsr2l	equ	0xFD9
 10883                           status	equ	0xFD8
 10884                           
 10885 ;; *************** function _interruption_timer0 *****************
 10886 ;; Defined at:
 10887 ;;		line 104 in file "interruptions.c"
 10888 ;; Parameters:    Size  Location     Type
 10889 ;;		None
 10890 ;; Auto vars:     Size  Location     Type
 10891 ;;		None
 10892 ;; Return value:  Size  Location     Type
 10893 ;;		None               void
 10894 ;; Registers used:
 10895 ;;		wreg, status,2
 10896 ;; Tracked objects:
 10897 ;;		On entry : 0/0
 10898 ;;		On exit  : 0/0
 10899 ;;		Unchanged: 0/0
 10900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10901 ;;      Params:         0       0       0       0
 10902 ;;      Locals:         0       0       0       0
 10903 ;;      Temps:          0       0       0       0
 10904 ;;      Totals:         0       0       0       0
 10905 ;;Total ram usage:        0 bytes
 10906 ;; Hardware stack levels used:    1
 10907 ;; Hardware stack levels required when called:    3
 10908 ;; This function calls:
 10909 ;;		Nothing
 10910 ;; This function is called by:
 10911 ;;		_subroutine_interruptions
 10912 ;; This function uses a non-reentrant model
 10913 ;;
 10914                           
 10915                           	psect	text48
 10916  003622                     __ptext48:
 10917                           	opt stack 0
 10918  003622                     _interruption_timer0:
 10919                           	opt stack 17
 10920                           
 10921                           ;interruptions.c: 106: INTCONbits.TMR0IF = 0;
 10922                           
 10923                           ;incstack = 0
 10924  003622  94F2               	bcf	intcon,2,c	;volatile
 10925                           
 10926                           ;interruptions.c: 110: TMR0 = 32750;
 10927  003624  0E7F               	movlw	127
 10928  003626  6ED7               	movwf	4055,c	;volatile
 10929  003628  0EEE               	movlw	238
 10930  00362A  6ED6               	movwf	4054,c	;volatile
 10931  00362C  0012               	return		;funcret
 10932  00362E                     __end_of_interruption_timer0:
 10933                           	opt stack 0
 10934                           pclatu	equ	0xFFB
 10935                           pclath	equ	0xFFA
 10936                           tblptru	equ	0xFF8
 10937                           tblptrh	equ	0xFF7
 10938                           tblptrl	equ	0xFF6
 10939                           tablat	equ	0xFF5
 10940                           prodh	equ	0xFF4
 10941                           prodl	equ	0xFF3
 10942                           intcon	equ	0xFF2
 10943                           intcon2	equ	0xFF1
 10944                           intcon3	equ	0xFF0
 10945                           indf0	equ	0xFEF
 10946                           postinc0	equ	0xFEE
 10947                           plusw0	equ	0xFEB
 10948                           fsr0h	equ	0xFEA
 10949                           fsr0l	equ	0xFE9
 10950                           wreg	equ	0xFE8
 10951                           postinc1	equ	0xFE6
 10952                           postdec1	equ	0xFE5
 10953                           plusw1	equ	0xFE3
 10954                           fsr1h	equ	0xFE2
 10955                           fsr1l	equ	0xFE1
 10956                           bsr	equ	0xFE0
 10957                           indf2	equ	0xFDF
 10958                           postinc2	equ	0xFDE
 10959                           postdec2	equ	0xFDD
 10960                           fsr2h	equ	0xFDA
 10961                           fsr2l	equ	0xFD9
 10962                           status	equ	0xFD8
 10963                           
 10964 ;; *************** function _interruption_QEI *****************
 10965 ;; Defined at:
 10966 ;;		line 171 in file "interruptions.c"
 10967 ;; Parameters:    Size  Location     Type
 10968 ;;		None
 10969 ;; Auto vars:     Size  Location     Type
 10970 ;;		None
 10971 ;; Return value:  Size  Location     Type
 10972 ;;		None               void
 10973 ;; Registers used:
 10974 ;;		wreg, status,2, status,0
 10975 ;; Tracked objects:
 10976 ;;		On entry : 0/0
 10977 ;;		On exit  : 0/0
 10978 ;;		Unchanged: 0/0
 10979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10980 ;;      Params:         0       0       0       0
 10981 ;;      Locals:         0       0       0       0
 10982 ;;      Temps:          0       0       0       0
 10983 ;;      Totals:         0       0       0       0
 10984 ;;Total ram usage:        0 bytes
 10985 ;; Hardware stack levels used:    1
 10986 ;; Hardware stack levels required when called:    3
 10987 ;; This function calls:
 10988 ;;		Nothing
 10989 ;; This function is called by:
 10990 ;;		_subroutine_interruptions
 10991 ;; This function uses a non-reentrant model
 10992 ;;
 10993                           
 10994                           	psect	text49
 10995  003548                     __ptext49:
 10996                           	opt stack 0
 10997  003548                     _interruption_QEI:
 10998                           	opt stack 17
 10999                           
 11000                           ;interruptions.c: 173: PIR3bits.IC2QEIF = 0;
 11001                           
 11002                           ;incstack = 0
 11003  003548  94A4               	bcf	4004,2,c	;volatile
 11004                           
 11005                           ;interruptions.c: 174: QEICONbits.QERR = 0;
 11006  00354A  9CB6               	bcf	4022,6,c	;volatile
 11007                           
 11008                           ;interruptions.c: 176: if (capteur.synchro_debut_tour == 1)
 11009  00354C  0101               	movlb	1	; () banked
 11010  00354E  0568               	decf	(_capteur+1)& (0+255),w,b
 11011  003550  A4D8               	btfss	status,2,c
 11012  003552  D007               	goto	i1l2992
 11013                           
 11014                           ; BSR set to: 1
 11015                           ;interruptions.c: 177: {
 11016                           ;interruptions.c: 178: capteur.tour_en_cours = 1;
 11017  003554  0E01               	movlw	1
 11018  003556  0101               	movlb	1	; () banked
 11019  003558  6F67               	movwf	_capteur& (0+255),b
 11020                           
 11021                           ;interruptions.c: 179: capteur.synchro_debut_tour = 0;
 11022  00355A  0E00               	movlw	0
 11023  00355C  0101               	movlb	1	; () banked
 11024  00355E  6F68               	movwf	(_capteur+1)& (0+255),b
 11025                           
 11026                           ;interruptions.c: 180: }
 11027  003560  D004               	goto	i1l403
 11028  003562                     i1l2992:
 11029                           
 11030                           ; BSR set to: 1
 11031                           ;interruptions.c: 181: else
 11032                           ;interruptions.c: 182: capteur.tour_en_cours = 0;
 11033  003562  0E00               	movlw	0
 11034  003564  0101               	movlb	1	; () banked
 11035  003566  6F67               	movwf	_capteur& (0+255),b
 11036  003568  D000               	goto	i1l403
 11037  00356A                     i1l403:
 11038                           
 11039                           ; BSR set to: 1
 11040  00356A  0012               	return		;funcret
 11041  00356C                     __end_of_interruption_QEI:
 11042                           	opt stack 0
 11043                           pclatu	equ	0xFFB
 11044                           pclath	equ	0xFFA
 11045                           tblptru	equ	0xFF8
 11046                           tblptrh	equ	0xFF7
 11047                           tblptrl	equ	0xFF6
 11048                           tablat	equ	0xFF5
 11049                           prodh	equ	0xFF4
 11050                           prodl	equ	0xFF3
 11051                           intcon	equ	0xFF2
 11052                           intcon2	equ	0xFF1
 11053                           intcon3	equ	0xFF0
 11054                           indf0	equ	0xFEF
 11055                           postinc0	equ	0xFEE
 11056                           plusw0	equ	0xFEB
 11057                           fsr0h	equ	0xFEA
 11058                           fsr0l	equ	0xFE9
 11059                           wreg	equ	0xFE8
 11060                           postinc1	equ	0xFE6
 11061                           postdec1	equ	0xFE5
 11062                           plusw1	equ	0xFE3
 11063                           fsr1h	equ	0xFE2
 11064                           fsr1l	equ	0xFE1
 11065                           bsr	equ	0xFE0
 11066                           indf2	equ	0xFDF
 11067                           postinc2	equ	0xFDE
 11068                           postdec2	equ	0xFDD
 11069                           fsr2h	equ	0xFDA
 11070                           fsr2l	equ	0xFD9
 11071                           status	equ	0xFD8
 11072                           
 11073 ;; *************** function _interruption_INT0 *****************
 11074 ;; Defined at:
 11075 ;;		line 144 in file "interruptions.c"
 11076 ;; Parameters:    Size  Location     Type
 11077 ;;		None
 11078 ;; Auto vars:     Size  Location     Type
 11079 ;;		None
 11080 ;; Return value:  Size  Location     Type
 11081 ;;		None               void
 11082 ;; Registers used:
 11083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11084 ;; Tracked objects:
 11085 ;;		On entry : 0/0
 11086 ;;		On exit  : 0/0
 11087 ;;		Unchanged: 0/0
 11088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11089 ;;      Params:         0       0       0       0
 11090 ;;      Locals:         0       0       0       0
 11091 ;;      Temps:          2       0       0       0
 11092 ;;      Totals:         2       0       0       0
 11093 ;;Total ram usage:        2 bytes
 11094 ;; Hardware stack levels used:    1
 11095 ;; Hardware stack levels required when called:    3
 11096 ;; This function calls:
 11097 ;;		Nothing
 11098 ;; This function is called by:
 11099 ;;		_subroutine_interruptions
 11100 ;; This function uses a non-reentrant model
 11101 ;;
 11102                           
 11103                           	psect	text50
 11104  003230                     __ptext50:
 11105                           	opt stack 0
 11106  003230                     _interruption_INT0:
 11107                           	opt stack 17
 11108                           
 11109                           ;interruptions.c: 146: if (capteur.tour_en_cours == 1)
 11110                           
 11111                           ; BSR set to: 1
 11112                           ;incstack = 0
 11113  003230  0101               	movlb	1	; () banked
 11114  003232  0567               	decf	_capteur& (0+255),w,b
 11115  003234  A4D8               	btfss	status,2,c
 11116  003236  D01F               	goto	i1l3004
 11117                           
 11118                           ; BSR set to: 1
 11119                           ;interruptions.c: 147: {
 11120                           ;interruptions.c: 148: if (capteur.indice < 3)
 11121  003238  0E03               	movlw	3
 11122  00323A  0101               	movlb	1	; () banked
 11123  00323C  6179               	cpfslt	(_capteur+18)& (0+255),b
 11124  00323E  D018               	goto	i1l3002
 11125                           
 11126                           ; BSR set to: 1
 11127                           ;interruptions.c: 149: {
 11128                           ;interruptions.c: 150: capteur.position[capteur.indice++] = POSCNTH * 256 + POSCNTL;
 11129  003240  5066               	movf	3942,w,c	;volatile
 11130  003242  CF67 F001          	movff	3943,??_interruption_INT0	;volatile
 11131  003246  6A02               	clrf	(??_interruption_INT0+1)& (0+255),c
 11132  003248  C001  F002         	movff	??_interruption_INT0,??_interruption_INT0+1
 11133  00324C  6A01               	clrf	??_interruption_INT0,c
 11134  00324E  2601               	addwf	??_interruption_INT0,f,c
 11135  003250  0E00               	movlw	0
 11136  003252  2202               	addwfc	??_interruption_INT0+1,f,c
 11137  003254  0101               	movlb	1	; () banked
 11138  003256  5179               	movf	(_capteur+18)& (0+255),w,b
 11139  003258  0D02               	mullw	2
 11140  00325A  0E73               	movlw	low (_capteur+12)
 11141  00325C  24F3               	addwf	prodl,w,c
 11142  00325E  6ED9               	movwf	fsr2l,c
 11143  003260  0E01               	movlw	high (_capteur+12)
 11144  003262  20F4               	addwfc	prodh,w,c
 11145  003264  6EDA               	movwf	fsr2h,c
 11146  003266  C001  FFDE         	movff	??_interruption_INT0,postinc2
 11147  00326A  C002  FFDD         	movff	??_interruption_INT0+1,postdec2
 11148  00326E  D000               	goto	i1l3002
 11149  003270                     i1l3002:
 11150                           
 11151                           ; BSR set to: 1
 11152                           ;interruptions.c: 152: else
 11153                           ;interruptions.c: 153: capteur.indice++;
 11154  003270  0101               	movlb	1	; () banked
 11155  003272  2B79               	incf	(_capteur+18)& (0+255),f,b
 11156                           
 11157                           ; BSR set to: 1
 11158  003274  D000               	goto	i1l3004
 11159  003276                     i1l3004:
 11160                           
 11161                           ; BSR set to: 1
 11162                           ;interruptions.c: 154: }
 11163                           ;interruptions.c: 155: INTCONbits.INT0IF = 0;
 11164  003276  92F2               	bcf	intcon,1,c	;volatile
 11165                           
 11166                           ; BSR set to: 1
 11167  003278  0012               	return		;funcret
 11168  00327A                     __end_of_interruption_INT0:
 11169                           	opt stack 0
 11170                           pclatu	equ	0xFFB
 11171                           pclath	equ	0xFFA
 11172                           tblptru	equ	0xFF8
 11173                           tblptrh	equ	0xFF7
 11174                           tblptrl	equ	0xFF6
 11175                           tablat	equ	0xFF5
 11176                           prodh	equ	0xFF4
 11177                           prodl	equ	0xFF3
 11178                           intcon	equ	0xFF2
 11179                           intcon2	equ	0xFF1
 11180                           intcon3	equ	0xFF0
 11181                           indf0	equ	0xFEF
 11182                           postinc0	equ	0xFEE
 11183                           plusw0	equ	0xFEB
 11184                           fsr0h	equ	0xFEA
 11185                           fsr0l	equ	0xFE9
 11186                           wreg	equ	0xFE8
 11187                           postinc1	equ	0xFE6
 11188                           postdec1	equ	0xFE5
 11189                           plusw1	equ	0xFE3
 11190                           fsr1h	equ	0xFE2
 11191                           fsr1l	equ	0xFE1
 11192                           bsr	equ	0xFE0
 11193                           indf2	equ	0xFDF
 11194                           postinc2	equ	0xFDE
 11195                           postdec2	equ	0xFDD
 11196                           fsr2h	equ	0xFDA
 11197                           fsr2l	equ	0xFD9
 11198                           status	equ	0xFD8
 11199                           
 11200 ;; *************** function _interrupt_TX *****************
 11201 ;; Defined at:
 11202 ;;		line 229 in file "interruptions.c"
 11203 ;; Parameters:    Size  Location     Type
 11204 ;;		None
 11205 ;; Auto vars:     Size  Location     Type
 11206 ;;		None
 11207 ;; Return value:  Size  Location     Type
 11208 ;;		None               void
 11209 ;; Registers used:
 11210 ;;		None
 11211 ;; Tracked objects:
 11212 ;;		On entry : 0/0
 11213 ;;		On exit  : 0/0
 11214 ;;		Unchanged: 0/0
 11215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11216 ;;      Params:         0       0       0       0
 11217 ;;      Locals:         0       0       0       0
 11218 ;;      Temps:          0       0       0       0
 11219 ;;      Totals:         0       0       0       0
 11220 ;;Total ram usage:        0 bytes
 11221 ;; Hardware stack levels used:    1
 11222 ;; Hardware stack levels required when called:    3
 11223 ;; This function calls:
 11224 ;;		Nothing
 11225 ;; This function is called by:
 11226 ;;		_subroutine_interruptions
 11227 ;; This function uses a non-reentrant model
 11228 ;;
 11229                           
 11230                           	psect	text51
 11231  003642                     __ptext51:
 11232                           	opt stack 0
 11233  003642                     _interrupt_TX:
 11234                           	opt stack 17
 11235                           
 11236                           ;interruptions.c: 231: PIR1bits.TXIF = 0;
 11237                           
 11238                           ; BSR set to: 1
 11239                           ;incstack = 0
 11240  003642  989E               	bcf	3998,4,c	;volatile
 11241  003644  0012               	return		;funcret
 11242  003646                     __end_of_interrupt_TX:
 11243                           	opt stack 0
 11244                           pclatu	equ	0xFFB
 11245                           pclath	equ	0xFFA
 11246                           tblptru	equ	0xFF8
 11247                           tblptrh	equ	0xFF7
 11248                           tblptrl	equ	0xFF6
 11249                           tablat	equ	0xFF5
 11250                           prodh	equ	0xFF4
 11251                           prodl	equ	0xFF3
 11252                           intcon	equ	0xFF2
 11253                           intcon2	equ	0xFF1
 11254                           intcon3	equ	0xFF0
 11255                           indf0	equ	0xFEF
 11256                           postinc0	equ	0xFEE
 11257                           plusw0	equ	0xFEB
 11258                           fsr0h	equ	0xFEA
 11259                           fsr0l	equ	0xFE9
 11260                           wreg	equ	0xFE8
 11261                           postinc1	equ	0xFE6
 11262                           postdec1	equ	0xFE5
 11263                           plusw1	equ	0xFE3
 11264                           fsr1h	equ	0xFE2
 11265                           fsr1l	equ	0xFE1
 11266                           bsr	equ	0xFE0
 11267                           indf2	equ	0xFDF
 11268                           postinc2	equ	0xFDE
 11269                           postdec2	equ	0xFDD
 11270                           fsr2h	equ	0xFDA
 11271                           fsr2l	equ	0xFD9
 11272                           status	equ	0xFD8
 11273                           
 11274 ;; *************** function _interrupt_RX *****************
 11275 ;; Defined at:
 11276 ;;		line 210 in file "interruptions.c"
 11277 ;; Parameters:    Size  Location     Type
 11278 ;;		None
 11279 ;; Auto vars:     Size  Location     Type
 11280 ;;  temp            1    0[COMRAM] unsigned char 
 11281 ;; Return value:  Size  Location     Type
 11282 ;;		None               void
 11283 ;; Registers used:
 11284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11285 ;; Tracked objects:
 11286 ;;		On entry : 0/0
 11287 ;;		On exit  : 0/0
 11288 ;;		Unchanged: 0/0
 11289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11290 ;;      Params:         0       0       0       0
 11291 ;;      Locals:         1       0       0       0
 11292 ;;      Temps:          0       0       0       0
 11293 ;;      Totals:         1       0       0       0
 11294 ;;Total ram usage:        1 bytes
 11295 ;; Hardware stack levels used:    1
 11296 ;; Hardware stack levels required when called:    3
 11297 ;; This function calls:
 11298 ;;		Nothing
 11299 ;; This function is called by:
 11300 ;;		_subroutine_interruptions
 11301 ;; This function uses a non-reentrant model
 11302 ;;
 11303                           
 11304                           	psect	text52
 11305  0033DE                     __ptext52:
 11306                           	opt stack 0
 11307  0033DE                     _interrupt_RX:
 11308                           	opt stack 17
 11309                           
 11310                           ;interruptions.c: 212: PIR1bits.RCIF = 0;
 11311                           
 11312                           ;incstack = 0
 11313  0033DE  9A9E               	bcf	3998,5,c	;volatile
 11314                           
 11315                           ;interruptions.c: 213: PORTBbits.RB0 = 1;
 11316  0033E0  8081               	bsf	3969,0,c	;volatile
 11317                           
 11318                           ;interruptions.c: 215: if (uart_reception.indice < 100)
 11319  0033E2  0E64               	movlw	100
 11320  0033E4  0101               	movlb	1	; () banked
 11321  0033E6  6164               	cpfslt	(_uart_reception+100)& (0+255),b
 11322  0033E8  D011               	goto	i1l3016
 11323                           
 11324                           ; BSR set to: 1
 11325                           ;interruptions.c: 216: {
 11326                           ;interruptions.c: 217: uart_reception.buffer_reeption[uart_reception.indice] = RCREG;
 11327  0033EA  0101               	movlb	1	; () banked
 11328  0033EC  5164               	movf	(_uart_reception+100)& (0+255),w,b
 11329  0033EE  0D01               	mullw	1
 11330  0033F0  0E00               	movlw	low _uart_reception
 11331  0033F2  24F3               	addwf	prodl,w,c
 11332  0033F4  6ED9               	movwf	fsr2l,c
 11333  0033F6  0E01               	movlw	high _uart_reception
 11334  0033F8  20F4               	addwfc	prodh,w,c
 11335  0033FA  6EDA               	movwf	fsr2h,c
 11336  0033FC  CFAE FFDF          	movff	4014,indf2	;volatile
 11337                           
 11338                           ; BSR set to: 1
 11339                           ;interruptions.c: 218: uart_reception.buffer_vide = 0;
 11340  003400  0E00               	movlw	0
 11341  003402  0101               	movlb	1	; () banked
 11342  003404  6F66               	movwf	(_uart_reception+102)& (0+255),b
 11343                           
 11344                           ; BSR set to: 1
 11345                           ;interruptions.c: 219: uart_reception.indice++;
 11346  003406  0101               	movlb	1	; () banked
 11347  003408  2B64               	incf	(_uart_reception+100)& (0+255),f,b
 11348                           
 11349                           ;interruptions.c: 220: }
 11350  00340A  D006               	goto	i1l414
 11351  00340C                     i1l3016:
 11352                           
 11353                           ; BSR set to: 1
 11354                           ;interruptions.c: 221: else
 11355                           ;interruptions.c: 222: {
 11356                           ;interruptions.c: 223: uart_reception.buffer_plein = 1;
 11357  00340C  0E01               	movlw	1
 11358  00340E  0101               	movlb	1	; () banked
 11359  003410  6F65               	movwf	(_uart_reception+101)& (0+255),b
 11360                           
 11361                           ; BSR set to: 1
 11362                           ;interruptions.c: 224: uint8_t temp = RCREG;
 11363  003412  CFAE F001          	movff	4014,interrupt_RX@temp	;volatile
 11364  003416  D000               	goto	i1l414
 11365  003418                     i1l414:
 11366                           
 11367                           ; BSR set to: 1
 11368  003418  0012               	return		;funcret
 11369  00341A                     __end_of_interrupt_RX:
 11370                           	opt stack 0
 11371                           pclatu	equ	0xFFB
 11372                           pclath	equ	0xFFA
 11373                           tblptru	equ	0xFF8
 11374                           tblptrh	equ	0xFF7
 11375                           tblptrl	equ	0xFF6
 11376                           tablat	equ	0xFF5
 11377                           prodh	equ	0xFF4
 11378                           prodl	equ	0xFF3
 11379                           intcon	equ	0xFF2
 11380                           intcon2	equ	0xFF1
 11381                           intcon3	equ	0xFF0
 11382                           indf0	equ	0xFEF
 11383                           postinc0	equ	0xFEE
 11384                           plusw0	equ	0xFEB
 11385                           fsr0h	equ	0xFEA
 11386                           fsr0l	equ	0xFE9
 11387                           wreg	equ	0xFE8
 11388                           postinc1	equ	0xFE6
 11389                           postdec1	equ	0xFE5
 11390                           plusw1	equ	0xFE3
 11391                           fsr1h	equ	0xFE2
 11392                           fsr1l	equ	0xFE1
 11393                           bsr	equ	0xFE0
 11394                           indf2	equ	0xFDF
 11395                           postinc2	equ	0xFDE
 11396                           postdec2	equ	0xFDD
 11397                           fsr2h	equ	0xFDA
 11398                           fsr2l	equ	0xFD9
 11399                           status	equ	0xFD8
 11400                           
 11401 ;; *************** function _high_isr *****************
 11402 ;; Defined at:
 11403 ;;		line 27 in file "interruptions.c"
 11404 ;; Parameters:    Size  Location     Type
 11405 ;;		None
 11406 ;; Auto vars:     Size  Location     Type
 11407 ;;		None
 11408 ;; Return value:  Size  Location     Type
 11409 ;;		None               void
 11410 ;; Registers used:
 11411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11412 ;; Tracked objects:
 11413 ;;		On entry : 0/0
 11414 ;;		On exit  : 0/0
 11415 ;;		Unchanged: 0/0
 11416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11417 ;;      Params:         0       0       0       0
 11418 ;;      Locals:         0       0       0       0
 11419 ;;      Temps:         14       0       0       0
 11420 ;;      Totals:        14       0       0       0
 11421 ;;Total ram usage:       14 bytes
 11422 ;; Hardware stack levels used:    1
 11423 ;; Hardware stack levels required when called:    2
 11424 ;; This function calls:
 11425 ;;		i2_subroutine_interruptions
 11426 ;; This function is called by:
 11427 ;;		Interrupt level 2
 11428 ;; This function uses a non-reentrant model
 11429 ;;
 11430                           
 11431                           	psect	intcode
 11432  000008                     __pintcode:
 11433                           	opt stack 0
 11434  000008                     _high_isr:
 11435                           	opt stack 17
 11436                           
 11437                           ; BSR set to: 1
 11438                           ;incstack = 0
 11439  000008  CFFA F018          	movff	pclath,??_high_isr
 11440  00000C  CFFB F019          	movff	pclatu,??_high_isr+1
 11441  000010  CFE9 F01A          	movff	fsr0l,??_high_isr+2
 11442  000014  EF29  F018         	goto	int_func
 11443                           pclatu	equ	0xFFB
 11444                           pclath	equ	0xFFA
 11445                           tblptru	equ	0xFF8
 11446                           tblptrh	equ	0xFF7
 11447                           tblptrl	equ	0xFF6
 11448                           tablat	equ	0xFF5
 11449                           prodh	equ	0xFF4
 11450                           prodl	equ	0xFF3
 11451                           intcon	equ	0xFF2
 11452                           intcon2	equ	0xFF1
 11453                           intcon3	equ	0xFF0
 11454                           indf0	equ	0xFEF
 11455                           postinc0	equ	0xFEE
 11456                           plusw0	equ	0xFEB
 11457                           fsr0h	equ	0xFEA
 11458                           fsr0l	equ	0xFE9
 11459                           wreg	equ	0xFE8
 11460                           postinc1	equ	0xFE6
 11461                           postdec1	equ	0xFE5
 11462                           plusw1	equ	0xFE3
 11463                           fsr1h	equ	0xFE2
 11464                           fsr1l	equ	0xFE1
 11465                           bsr	equ	0xFE0
 11466                           indf2	equ	0xFDF
 11467                           postinc2	equ	0xFDE
 11468                           postdec2	equ	0xFDD
 11469                           fsr2h	equ	0xFDA
 11470                           fsr2l	equ	0xFD9
 11471                           status	equ	0xFD8
 11472                           
 11473                           	psect	intcode_body
 11474  003052                     __pintcode_body:
 11475                           	opt stack 17
 11476  003052                     int_func:
 11477                           	opt stack 17
 11478  003052  CFEA F01B          	movff	fsr0h,??_high_isr+3
 11479  003056  CFE1 F01C          	movff	fsr1l,??_high_isr+4
 11480  00305A  CFE2 F01D          	movff	fsr1h,??_high_isr+5
 11481  00305E  CFD9 F01E          	movff	fsr2l,??_high_isr+6
 11482  003062  CFDA F01F          	movff	fsr2h,??_high_isr+7
 11483  003066  CFF3 F020          	movff	prodl,??_high_isr+8
 11484  00306A  CFF4 F021          	movff	prodh,??_high_isr+9
 11485  00306E  CFF6 F022          	movff	tblptrl,??_high_isr+10
 11486  003072  CFF7 F023          	movff	tblptrh,??_high_isr+11
 11487  003076  CFF8 F024          	movff	tblptru,??_high_isr+12
 11488  00307A  CFF5 F025          	movff	tablat,??_high_isr+13
 11489                           
 11490                           ;interruptions.c: 29: subroutine_interruptions(0b1);
 11491  00307E  0E01               	movlw	1
 11492  003080  EC3D  F017         	call	i2_subroutine_interruptions
 11493  003084  C025  FFF5         	movff	??_high_isr+13,tablat
 11494  003088  C024  FFF8         	movff	??_high_isr+12,tblptru
 11495  00308C  C023  FFF7         	movff	??_high_isr+11,tblptrh
 11496  003090  C022  FFF6         	movff	??_high_isr+10,tblptrl
 11497  003094  C021  FFF4         	movff	??_high_isr+9,prodh
 11498  003098  C020  FFF3         	movff	??_high_isr+8,prodl
 11499  00309C  C01F  FFDA         	movff	??_high_isr+7,fsr2h
 11500  0030A0  C01E  FFD9         	movff	??_high_isr+6,fsr2l
 11501  0030A4  C01D  FFE2         	movff	??_high_isr+5,fsr1h
 11502  0030A8  C01C  FFE1         	movff	??_high_isr+4,fsr1l
 11503  0030AC  C01B  FFEA         	movff	??_high_isr+3,fsr0h
 11504  0030B0  C01A  FFE9         	movff	??_high_isr+2,fsr0l
 11505  0030B4  C019  FFFB         	movff	??_high_isr+1,pclatu
 11506  0030B8  C018  FFFA         	movff	??_high_isr,pclath
 11507  0030BC  0011               	retfie		f
 11508  0030BE                     __end_of_high_isr:
 11509                           	opt stack 0
 11510                           pclatu	equ	0xFFB
 11511                           pclath	equ	0xFFA
 11512                           tblptru	equ	0xFF8
 11513                           tblptrh	equ	0xFF7
 11514                           tblptrl	equ	0xFF6
 11515                           tablat	equ	0xFF5
 11516                           prodh	equ	0xFF4
 11517                           prodl	equ	0xFF3
 11518                           intcon	equ	0xFF2
 11519                           intcon2	equ	0xFF1
 11520                           intcon3	equ	0xFF0
 11521                           indf0	equ	0xFEF
 11522                           postinc0	equ	0xFEE
 11523                           plusw0	equ	0xFEB
 11524                           fsr0h	equ	0xFEA
 11525                           fsr0l	equ	0xFE9
 11526                           wreg	equ	0xFE8
 11527                           postinc1	equ	0xFE6
 11528                           postdec1	equ	0xFE5
 11529                           plusw1	equ	0xFE3
 11530                           fsr1h	equ	0xFE2
 11531                           fsr1l	equ	0xFE1
 11532                           bsr	equ	0xFE0
 11533                           indf2	equ	0xFDF
 11534                           postinc2	equ	0xFDE
 11535                           postdec2	equ	0xFDD
 11536                           fsr2h	equ	0xFDA
 11537                           fsr2l	equ	0xFD9
 11538                           status	equ	0xFD8
 11539                           
 11540 ;; *************** function i2_subroutine_interruptions *****************
 11541 ;; Defined at:
 11542 ;;		line 43 in file "interruptions.c"
 11543 ;; Parameters:    Size  Location     Type
 11544 ;;  priorite        1    wreg     unsigned char 
 11545 ;; Auto vars:     Size  Location     Type
 11546 ;;  priorite        1   22[COMRAM] unsigned char 
 11547 ;; Return value:  Size  Location     Type
 11548 ;;		None               void
 11549 ;; Registers used:
 11550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11551 ;; Tracked objects:
 11552 ;;		On entry : 0/0
 11553 ;;		On exit  : 0/0
 11554 ;;		Unchanged: 0/0
 11555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11556 ;;      Params:         0       0       0       0
 11557 ;;      Locals:         1       0       0       0
 11558 ;;      Temps:          0       0       0       0
 11559 ;;      Totals:         1       0       0       0
 11560 ;;Total ram usage:        1 bytes
 11561 ;; Hardware stack levels used:    1
 11562 ;; Hardware stack levels required when called:    1
 11563 ;; This function calls:
 11564 ;;		i2_interrupt_RX
 11565 ;;		i2_interrupt_TX
 11566 ;;		i2_interruption_INT0
 11567 ;;		i2_interruption_QEI
 11568 ;;		i2_interruption_timer0
 11569 ;;		i2_interruption_timer1
 11570 ;;		i2_interruption_timer2
 11571 ;;		i2_interuption_QEI_sens
 11572 ;; This function is called by:
 11573 ;;		_high_isr
 11574 ;; This function uses a non-reentrant model
 11575 ;;
 11576                           
 11577                           	psect	text54
 11578  002E7A                     __ptext54:
 11579                           	opt stack 0
 11580  002E7A                     i2_subroutine_interruptions:
 11581                           	opt stack 17
 11582                           
 11583                           ;incstack = 0
 11584                           ;i2subroutine_interruptions@priorite stored from wreg
 11585  002E7A  6E17               	movwf	i2subroutine_interruptions@priorite,c
 11586                           
 11587                           ;interruptions.c: 45: if ( PIR3bits.IC2QEIF == 1 && 0b1 == 1 && priorite == 0b1)
 11588  002E7C  A4A4               	btfss	4004,2,c	;volatile
 11589  002E7E  D006               	goto	i2l356
 11590  002E80  0417               	decf	i2subroutine_interruptions@priorite,w,c
 11591  002E82  A4D8               	btfss	status,2,c
 11592  002E84  D003               	goto	i2l356
 11593                           
 11594                           ;interruptions.c: 46: {
 11595                           ;interruptions.c: 47: interruption_QEI();
 11596  002E86  ECB6  F01A         	call	i2_interruption_QEI	;wreg free
 11597                           
 11598                           ;interruptions.c: 48: }
 11599  002E8A  D038               	goto	i2l371
 11600  002E8C                     i2l356:
 11601                           
 11602                           ;interruptions.c: 49: else if ( PIR3bits.IC3DRIF == 1 && 0b0 == 1 && priorite == 0b1)
 11603  002E8C  50A4               	movf	4004,w,c	;volatile
 11604  002E8E  D006               	goto	i2l358
 11605  002E90  0417               	decf	i2subroutine_interruptions@priorite,w,c
 11606  002E92  A4D8               	btfss	status,2,c
 11607  002E94  D003               	goto	i2l358
 11608                           
 11609                           ;interruptions.c: 50: {
 11610                           ;interruptions.c: 51: interuption_QEI_sens();
 11611  002E96  EC23  F01B         	call	i2_interuption_QEI_sens	;wreg free
 11612                           
 11613                           ;interruptions.c: 52: }
 11614  002E9A  D030               	goto	i2l371
 11615  002E9C                     i2l358:
 11616                           
 11617                           ;interruptions.c: 53: else if ( INTCONbits.TMR0IF == 1 && 0b1 == 1 && priorite == 0b0)
 11618  002E9C  A4F2               	btfss	intcon,2,c	;volatile
 11619  002E9E  D006               	goto	i2l360
 11620  002EA0  5017               	movf	i2subroutine_interruptions@priorite,w,c
 11621  002EA2  A4D8               	btfss	status,2,c
 11622  002EA4  D003               	goto	i2l360
 11623                           
 11624                           ;interruptions.c: 54: {
 11625                           ;interruptions.c: 55: interruption_timer0();
 11626  002EA6  EC17  F01B         	call	i2_interruption_timer0	;wreg free
 11627                           
 11628                           ;interruptions.c: 56: }
 11629  002EAA  D028               	goto	i2l371
 11630  002EAC                     i2l360:
 11631                           
 11632                           ;interruptions.c: 57: else if ( PIR1bits.TMR1IF == 1 && 0b1 == 1 && priorite == 0b1)
 11633  002EAC  A09E               	btfss	3998,0,c	;volatile
 11634  002EAE  D006               	goto	i2l362
 11635  002EB0  0417               	decf	i2subroutine_interruptions@priorite,w,c
 11636  002EB2  A4D8               	btfss	status,2,c
 11637  002EB4  D003               	goto	i2l362
 11638                           
 11639                           ;interruptions.c: 58: {
 11640                           ;interruptions.c: 59: interruption_timer1();
 11641  002EB6  ECCC  F019         	call	i2_interruption_timer1	;wreg free
 11642                           
 11643                           ;interruptions.c: 60: }
 11644  002EBA  D020               	goto	i2l371
 11645  002EBC                     i2l362:
 11646                           
 11647                           ;interruptions.c: 61: else if ( PIR1bits.TMR2IF == 1 && 0b0 == 1 && priorite == 0b0)
 11648  002EBC  509E               	movf	3998,w,c	;volatile
 11649  002EBE  D006               	goto	i2l364
 11650  002EC0  5017               	movf	i2subroutine_interruptions@priorite,w,c
 11651  002EC2  A4D8               	btfss	status,2,c
 11652  002EC4  D003               	goto	i2l364
 11653                           
 11654                           ;interruptions.c: 62: {
 11655                           ;interruptions.c: 63: interruption_timer2();
 11656  002EC6  EC25  F01B         	call	i2_interruption_timer2	;wreg free
 11657                           
 11658                           ;interruptions.c: 64: }
 11659  002ECA  D018               	goto	i2l371
 11660  002ECC                     i2l364:
 11661                           
 11662                           ;interruptions.c: 65: else if (INTCONbits.INT0IF == 1 && 0b1 == 1 && priorite == 0b1)
 11663  002ECC  A2F2               	btfss	intcon,1,c	;volatile
 11664  002ECE  D006               	goto	i2l366
 11665  002ED0  0417               	decf	i2subroutine_interruptions@priorite,w,c
 11666  002ED2  A4D8               	btfss	status,2,c
 11667  002ED4  D003               	goto	i2l366
 11668                           
 11669                           ;interruptions.c: 66: {
 11670                           ;interruptions.c: 67: interruption_INT0();
 11671  002ED6  EC3D  F019         	call	i2_interruption_INT0	;wreg free
 11672                           
 11673                           ;interruptions.c: 68: }
 11674  002EDA  D010               	goto	i2l371
 11675  002EDC                     i2l366:
 11676                           
 11677                           ;interruptions.c: 85: else if ( PIR1bits.RCIF == 1 && 0b1 == 1 && priorite == 0b1)
 11678  002EDC  AA9E               	btfss	3998,5,c	;volatile
 11679  002EDE  D006               	goto	i2l368
 11680  002EE0  0417               	decf	i2subroutine_interruptions@priorite,w,c
 11681  002EE2  A4D8               	btfss	status,2,c
 11682  002EE4  D003               	goto	i2l368
 11683                           
 11684                           ;interruptions.c: 86: {
 11685                           ;interruptions.c: 87: interrupt_RX();
 11686  002EE6  EC0D  F01A         	call	i2_interrupt_RX	;wreg free
 11687                           
 11688                           ;interruptions.c: 88: }
 11689  002EEA  D008               	goto	i2l371
 11690  002EEC                     i2l368:
 11691                           
 11692                           ;interruptions.c: 89: else if (PIR1bits.TXIF == 1 && 0b0 == 1 && priorite == 0b0)
 11693  002EEC  509E               	movf	3998,w,c	;volatile
 11694  002EEE  D006               	goto	i2l371
 11695  002EF0  5017               	movf	i2subroutine_interruptions@priorite,w,c
 11696  002EF2  A4D8               	btfss	status,2,c
 11697  002EF4  D003               	goto	i2l371
 11698                           
 11699                           ;interruptions.c: 90: {
 11700                           ;interruptions.c: 91: interrupt_TX();
 11701  002EF6  EC27  F01B         	call	i2_interrupt_TX	;wreg free
 11702  002EFA  D000               	goto	i2l371
 11703  002EFC                     i2l371:
 11704  002EFC  0012               	return		;funcret
 11705  002EFE                     __end_ofi2_subroutine_interruptions:
 11706                           	opt stack 0
 11707                           pclatu	equ	0xFFB
 11708                           pclath	equ	0xFFA
 11709                           tblptru	equ	0xFF8
 11710                           tblptrh	equ	0xFF7
 11711                           tblptrl	equ	0xFF6
 11712                           tablat	equ	0xFF5
 11713                           prodh	equ	0xFF4
 11714                           prodl	equ	0xFF3
 11715                           intcon	equ	0xFF2
 11716                           intcon2	equ	0xFF1
 11717                           intcon3	equ	0xFF0
 11718                           indf0	equ	0xFEF
 11719                           postinc0	equ	0xFEE
 11720                           plusw0	equ	0xFEB
 11721                           fsr0h	equ	0xFEA
 11722                           fsr0l	equ	0xFE9
 11723                           wreg	equ	0xFE8
 11724                           postinc1	equ	0xFE6
 11725                           postdec1	equ	0xFE5
 11726                           plusw1	equ	0xFE3
 11727                           fsr1h	equ	0xFE2
 11728                           fsr1l	equ	0xFE1
 11729                           bsr	equ	0xFE0
 11730                           indf2	equ	0xFDF
 11731                           postinc2	equ	0xFDE
 11732                           postdec2	equ	0xFDD
 11733                           fsr2h	equ	0xFDA
 11734                           fsr2l	equ	0xFD9
 11735                           status	equ	0xFD8
 11736                           
 11737 ;; *************** function i2_interuption_QEI_sens *****************
 11738 ;; Defined at:
 11739 ;;		line 196 in file "interruptions.c"
 11740 ;; Parameters:    Size  Location     Type
 11741 ;;		None
 11742 ;; Auto vars:     Size  Location     Type
 11743 ;;		None
 11744 ;; Return value:  Size  Location     Type
 11745 ;;		None               void
 11746 ;; Registers used:
 11747 ;;		None
 11748 ;; Tracked objects:
 11749 ;;		On entry : 0/0
 11750 ;;		On exit  : 0/0
 11751 ;;		Unchanged: 0/0
 11752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11753 ;;      Params:         0       0       0       0
 11754 ;;      Locals:         0       0       0       0
 11755 ;;      Temps:          0       0       0       0
 11756 ;;      Totals:         0       0       0       0
 11757 ;;Total ram usage:        0 bytes
 11758 ;; Hardware stack levels used:    1
 11759 ;; This function calls:
 11760 ;;		Nothing
 11761 ;; This function is called by:
 11762 ;;		i2_subroutine_interruptions
 11763 ;; This function uses a non-reentrant model
 11764 ;;
 11765                           
 11766                           	psect	text55
 11767  003646                     __ptext55:
 11768                           	opt stack 0
 11769  003646                     i2_interuption_QEI_sens:
 11770                           	opt stack 17
 11771                           
 11772                           ;interruptions.c: 198: PIR3bits.IC3DRIF = 0;
 11773                           
 11774                           ;incstack = 0
 11775  003646  96A4               	bcf	4004,3,c	;volatile
 11776  003648  0012               	return		;funcret
 11777  00364A                     __end_ofi2_interuption_QEI_sens:
 11778                           	opt stack 0
 11779                           pclatu	equ	0xFFB
 11780                           pclath	equ	0xFFA
 11781                           tblptru	equ	0xFF8
 11782                           tblptrh	equ	0xFF7
 11783                           tblptrl	equ	0xFF6
 11784                           tablat	equ	0xFF5
 11785                           prodh	equ	0xFF4
 11786                           prodl	equ	0xFF3
 11787                           intcon	equ	0xFF2
 11788                           intcon2	equ	0xFF1
 11789                           intcon3	equ	0xFF0
 11790                           indf0	equ	0xFEF
 11791                           postinc0	equ	0xFEE
 11792                           plusw0	equ	0xFEB
 11793                           fsr0h	equ	0xFEA
 11794                           fsr0l	equ	0xFE9
 11795                           wreg	equ	0xFE8
 11796                           postinc1	equ	0xFE6
 11797                           postdec1	equ	0xFE5
 11798                           plusw1	equ	0xFE3
 11799                           fsr1h	equ	0xFE2
 11800                           fsr1l	equ	0xFE1
 11801                           bsr	equ	0xFE0
 11802                           indf2	equ	0xFDF
 11803                           postinc2	equ	0xFDE
 11804                           postdec2	equ	0xFDD
 11805                           fsr2h	equ	0xFDA
 11806                           fsr2l	equ	0xFD9
 11807                           status	equ	0xFD8
 11808                           
 11809 ;; *************** function i2_interruption_timer2 *****************
 11810 ;; Defined at:
 11811 ;;		line 132 in file "interruptions.c"
 11812 ;; Parameters:    Size  Location     Type
 11813 ;;		None
 11814 ;; Auto vars:     Size  Location     Type
 11815 ;;		None
 11816 ;; Return value:  Size  Location     Type
 11817 ;;		None               void
 11818 ;; Registers used:
 11819 ;;		None
 11820 ;; Tracked objects:
 11821 ;;		On entry : 0/0
 11822 ;;		On exit  : 0/0
 11823 ;;		Unchanged: 0/0
 11824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11825 ;;      Params:         0       0       0       0
 11826 ;;      Locals:         0       0       0       0
 11827 ;;      Temps:          0       0       0       0
 11828 ;;      Totals:         0       0       0       0
 11829 ;;Total ram usage:        0 bytes
 11830 ;; Hardware stack levels used:    1
 11831 ;; This function calls:
 11832 ;;		Nothing
 11833 ;; This function is called by:
 11834 ;;		i2_subroutine_interruptions
 11835 ;; This function uses a non-reentrant model
 11836 ;;
 11837                           
 11838                           	psect	text56
 11839  00364A                     __ptext56:
 11840                           	opt stack 0
 11841  00364A                     i2_interruption_timer2:
 11842                           	opt stack 17
 11843                           
 11844                           ;interruptions.c: 134: PIR1bits.TMR2IF = 0;
 11845                           
 11846                           ;incstack = 0
 11847  00364A  929E               	bcf	3998,1,c	;volatile
 11848  00364C  0012               	return		;funcret
 11849  00364E                     __end_ofi2_interruption_timer2:
 11850                           	opt stack 0
 11851                           pclatu	equ	0xFFB
 11852                           pclath	equ	0xFFA
 11853                           tblptru	equ	0xFF8
 11854                           tblptrh	equ	0xFF7
 11855                           tblptrl	equ	0xFF6
 11856                           tablat	equ	0xFF5
 11857                           prodh	equ	0xFF4
 11858                           prodl	equ	0xFF3
 11859                           intcon	equ	0xFF2
 11860                           intcon2	equ	0xFF1
 11861                           intcon3	equ	0xFF0
 11862                           indf0	equ	0xFEF
 11863                           postinc0	equ	0xFEE
 11864                           plusw0	equ	0xFEB
 11865                           fsr0h	equ	0xFEA
 11866                           fsr0l	equ	0xFE9
 11867                           wreg	equ	0xFE8
 11868                           postinc1	equ	0xFE6
 11869                           postdec1	equ	0xFE5
 11870                           plusw1	equ	0xFE3
 11871                           fsr1h	equ	0xFE2
 11872                           fsr1l	equ	0xFE1
 11873                           bsr	equ	0xFE0
 11874                           indf2	equ	0xFDF
 11875                           postinc2	equ	0xFDE
 11876                           postdec2	equ	0xFDD
 11877                           fsr2h	equ	0xFDA
 11878                           fsr2l	equ	0xFD9
 11879                           status	equ	0xFD8
 11880                           
 11881 ;; *************** function i2_interruption_timer1 *****************
 11882 ;; Defined at:
 11883 ;;		line 115 in file "interruptions.c"
 11884 ;; Parameters:    Size  Location     Type
 11885 ;;		None
 11886 ;; Auto vars:     Size  Location     Type
 11887 ;;		None
 11888 ;; Return value:  Size  Location     Type
 11889 ;;		None               void
 11890 ;; Registers used:
 11891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11892 ;; Tracked objects:
 11893 ;;		On entry : 0/0
 11894 ;;		On exit  : 0/0
 11895 ;;		Unchanged: 0/0
 11896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11897 ;;      Params:         0       0       0       0
 11898 ;;      Locals:         0       0       0       0
 11899 ;;      Temps:          1       0       0       0
 11900 ;;      Totals:         1       0       0       0
 11901 ;;Total ram usage:        1 bytes
 11902 ;; Hardware stack levels used:    1
 11903 ;; This function calls:
 11904 ;;		Nothing
 11905 ;; This function is called by:
 11906 ;;		i2_subroutine_interruptions
 11907 ;; This function uses a non-reentrant model
 11908 ;;
 11909                           
 11910                           	psect	text57
 11911  003398                     __ptext57:
 11912                           	opt stack 0
 11913  003398                     i2_interruption_timer1:
 11914                           	opt stack 17
 11915                           
 11916                           ;interruptions.c: 117: PIR1bits.TMR1IF = 0;
 11917                           
 11918                           ;incstack = 0
 11919  003398  909E               	bcf	3998,0,c	;volatile
 11920                           
 11921                           ;interruptions.c: 118: TMR1 = 65535 - 810;
 11922  00339A  0EFC               	movlw	252
 11923  00339C  6ECF               	movwf	4047,c	;volatile
 11924  00339E  0ED5               	movlw	213
 11925  0033A0  6ECE               	movwf	4046,c	;volatile
 11926                           
 11927                           ;interruptions.c: 120: if (uart_logiciel.transmission_en_cours == 1)
 11928  0033A2  0433               	decf	_uart_logiciel+11,w,c
 11929  0033A4  A4D8               	btfss	status,2,c
 11930  0033A6  D018               	goto	i2l377
 11931                           
 11932                           ;interruptions.c: 121: {
 11933                           ;interruptions.c: 122: PORTCbits.RC5 = uart_logiciel.buffer_uart[uart_logiciel.indice];
 11934  0033A8  5034               	movf	_uart_logiciel+12,w,c
 11935  0033AA  0D01               	mullw	1
 11936  0033AC  0E28               	movlw	low _uart_logiciel
 11937  0033AE  24F3               	addwf	prodl,w,c
 11938  0033B0  6ED9               	movwf	fsr2l,c
 11939  0033B2  0E00               	movlw	high _uart_logiciel
 11940  0033B4  20F4               	addwfc	prodh,w,c
 11941  0033B6  6EDA               	movwf	fsr2h,c
 11942  0033B8  50DF               	movf	indf2,w,c
 11943  0033BA  6E15               	movwf	??i2_interruption_timer1& (0+255),c
 11944  0033BC  3A15               	swapf	??i2_interruption_timer1,f,c
 11945  0033BE  4615               	rlncf	??i2_interruption_timer1,f,c
 11946  0033C0  5082               	movf	3970,w,c	;volatile
 11947  0033C2  1815               	xorwf	??i2_interruption_timer1,w,c
 11948  0033C4  0BDF               	andlw	-33
 11949  0033C6  1815               	xorwf	??i2_interruption_timer1,w,c
 11950  0033C8  6E82               	movwf	3970,c	;volatile
 11951                           
 11952                           ;interruptions.c: 123: uart_logiciel.indice++;
 11953  0033CA  2A34               	incf	_uart_logiciel+12,f,c
 11954                           
 11955                           ;interruptions.c: 125: if (uart_logiciel.indice > 10)
 11956  0033CC  0E0A               	movlw	10
 11957  0033CE  6434               	cpfsgt	_uart_logiciel+12,c
 11958  0033D0  D005               	goto	i2l380
 11959                           
 11960                           ;interruptions.c: 126: uart_logiciel.transmission_en_cours = 0;
 11961  0033D2  0E00               	movlw	0
 11962  0033D4  6E33               	movwf	_uart_logiciel+11,c
 11963                           
 11964                           ;interruptions.c: 127: }
 11965  0033D6  D002               	goto	i2l380
 11966  0033D8                     i2l377:
 11967                           
 11968                           ;interruptions.c: 128: else
 11969                           ;interruptions.c: 129: PORTCbits.RC5 = 1;
 11970  0033D8  8A82               	bsf	3970,5,c	;volatile
 11971  0033DA  D000               	goto	i2l380
 11972  0033DC                     i2l380:
 11973  0033DC  0012               	return		;funcret
 11974  0033DE                     __end_ofi2_interruption_timer1:
 11975                           	opt stack 0
 11976                           pclatu	equ	0xFFB
 11977                           pclath	equ	0xFFA
 11978                           tblptru	equ	0xFF8
 11979                           tblptrh	equ	0xFF7
 11980                           tblptrl	equ	0xFF6
 11981                           tablat	equ	0xFF5
 11982                           prodh	equ	0xFF4
 11983                           prodl	equ	0xFF3
 11984                           intcon	equ	0xFF2
 11985                           intcon2	equ	0xFF1
 11986                           intcon3	equ	0xFF0
 11987                           indf0	equ	0xFEF
 11988                           postinc0	equ	0xFEE
 11989                           plusw0	equ	0xFEB
 11990                           fsr0h	equ	0xFEA
 11991                           fsr0l	equ	0xFE9
 11992                           wreg	equ	0xFE8
 11993                           postinc1	equ	0xFE6
 11994                           postdec1	equ	0xFE5
 11995                           plusw1	equ	0xFE3
 11996                           fsr1h	equ	0xFE2
 11997                           fsr1l	equ	0xFE1
 11998                           bsr	equ	0xFE0
 11999                           indf2	equ	0xFDF
 12000                           postinc2	equ	0xFDE
 12001                           postdec2	equ	0xFDD
 12002                           fsr2h	equ	0xFDA
 12003                           fsr2l	equ	0xFD9
 12004                           status	equ	0xFD8
 12005                           
 12006 ;; *************** function i2_interruption_timer0 *****************
 12007 ;; Defined at:
 12008 ;;		line 104 in file "interruptions.c"
 12009 ;; Parameters:    Size  Location     Type
 12010 ;;		None
 12011 ;; Auto vars:     Size  Location     Type
 12012 ;;		None
 12013 ;; Return value:  Size  Location     Type
 12014 ;;		None               void
 12015 ;; Registers used:
 12016 ;;		wreg, status,2
 12017 ;; Tracked objects:
 12018 ;;		On entry : 0/0
 12019 ;;		On exit  : 0/0
 12020 ;;		Unchanged: 0/0
 12021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12022 ;;      Params:         0       0       0       0
 12023 ;;      Locals:         0       0       0       0
 12024 ;;      Temps:          0       0       0       0
 12025 ;;      Totals:         0       0       0       0
 12026 ;;Total ram usage:        0 bytes
 12027 ;; Hardware stack levels used:    1
 12028 ;; This function calls:
 12029 ;;		Nothing
 12030 ;; This function is called by:
 12031 ;;		i2_subroutine_interruptions
 12032 ;; This function uses a non-reentrant model
 12033 ;;
 12034                           
 12035                           	psect	text58
 12036  00362E                     __ptext58:
 12037                           	opt stack 0
 12038  00362E                     i2_interruption_timer0:
 12039                           	opt stack 17
 12040                           
 12041                           ;interruptions.c: 106: INTCONbits.TMR0IF = 0;
 12042                           
 12043                           ;incstack = 0
 12044  00362E  94F2               	bcf	intcon,2,c	;volatile
 12045                           
 12046                           ;interruptions.c: 110: TMR0 = 32750;
 12047  003630  0E7F               	movlw	127
 12048  003632  6ED7               	movwf	4055,c	;volatile
 12049  003634  0EEE               	movlw	238
 12050  003636  6ED6               	movwf	4054,c	;volatile
 12051  003638  0012               	return		;funcret
 12052  00363A                     __end_ofi2_interruption_timer0:
 12053                           	opt stack 0
 12054                           pclatu	equ	0xFFB
 12055                           pclath	equ	0xFFA
 12056                           tblptru	equ	0xFF8
 12057                           tblptrh	equ	0xFF7
 12058                           tblptrl	equ	0xFF6
 12059                           tablat	equ	0xFF5
 12060                           prodh	equ	0xFF4
 12061                           prodl	equ	0xFF3
 12062                           intcon	equ	0xFF2
 12063                           intcon2	equ	0xFF1
 12064                           intcon3	equ	0xFF0
 12065                           indf0	equ	0xFEF
 12066                           postinc0	equ	0xFEE
 12067                           plusw0	equ	0xFEB
 12068                           fsr0h	equ	0xFEA
 12069                           fsr0l	equ	0xFE9
 12070                           wreg	equ	0xFE8
 12071                           postinc1	equ	0xFE6
 12072                           postdec1	equ	0xFE5
 12073                           plusw1	equ	0xFE3
 12074                           fsr1h	equ	0xFE2
 12075                           fsr1l	equ	0xFE1
 12076                           bsr	equ	0xFE0
 12077                           indf2	equ	0xFDF
 12078                           postinc2	equ	0xFDE
 12079                           postdec2	equ	0xFDD
 12080                           fsr2h	equ	0xFDA
 12081                           fsr2l	equ	0xFD9
 12082                           status	equ	0xFD8
 12083                           
 12084 ;; *************** function i2_interruption_QEI *****************
 12085 ;; Defined at:
 12086 ;;		line 171 in file "interruptions.c"
 12087 ;; Parameters:    Size  Location     Type
 12088 ;;		None
 12089 ;; Auto vars:     Size  Location     Type
 12090 ;;		None
 12091 ;; Return value:  Size  Location     Type
 12092 ;;		None               void
 12093 ;; Registers used:
 12094 ;;		wreg, status,2, status,0
 12095 ;; Tracked objects:
 12096 ;;		On entry : 0/0
 12097 ;;		On exit  : 0/0
 12098 ;;		Unchanged: 0/0
 12099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12100 ;;      Params:         0       0       0       0
 12101 ;;      Locals:         0       0       0       0
 12102 ;;      Temps:          0       0       0       0
 12103 ;;      Totals:         0       0       0       0
 12104 ;;Total ram usage:        0 bytes
 12105 ;; Hardware stack levels used:    1
 12106 ;; This function calls:
 12107 ;;		Nothing
 12108 ;; This function is called by:
 12109 ;;		i2_subroutine_interruptions
 12110 ;; This function uses a non-reentrant model
 12111 ;;
 12112                           
 12113                           	psect	text59
 12114  00356C                     __ptext59:
 12115                           	opt stack 0
 12116  00356C                     i2_interruption_QEI:
 12117                           	opt stack 17
 12118                           
 12119                           ;interruptions.c: 173: PIR3bits.IC2QEIF = 0;
 12120                           
 12121                           ;incstack = 0
 12122  00356C  94A4               	bcf	4004,2,c	;volatile
 12123                           
 12124                           ;interruptions.c: 174: QEICONbits.QERR = 0;
 12125  00356E  9CB6               	bcf	4022,6,c	;volatile
 12126                           
 12127                           ;interruptions.c: 176: if (capteur.synchro_debut_tour == 1)
 12128  003570  0101               	movlb	1	; () banked
 12129  003572  0568               	decf	(_capteur+1)& (0+255),w,b
 12130  003574  A4D8               	btfss	status,2,c
 12131  003576  D007               	goto	i2l3116
 12132                           
 12133                           ; BSR set to: 1
 12134                           ;interruptions.c: 177: {
 12135                           ;interruptions.c: 178: capteur.tour_en_cours = 1;
 12136  003578  0E01               	movlw	1
 12137  00357A  0101               	movlb	1	; () banked
 12138  00357C  6F67               	movwf	_capteur& (0+255),b
 12139                           
 12140                           ;interruptions.c: 179: capteur.synchro_debut_tour = 0;
 12141  00357E  0E00               	movlw	0
 12142  003580  0101               	movlb	1	; () banked
 12143  003582  6F68               	movwf	(_capteur+1)& (0+255),b
 12144                           
 12145                           ;interruptions.c: 180: }
 12146  003584  D004               	goto	i2l403
 12147  003586                     i2l3116:
 12148                           
 12149                           ; BSR set to: 1
 12150                           ;interruptions.c: 181: else
 12151                           ;interruptions.c: 182: capteur.tour_en_cours = 0;
 12152  003586  0E00               	movlw	0
 12153  003588  0101               	movlb	1	; () banked
 12154  00358A  6F67               	movwf	_capteur& (0+255),b
 12155  00358C  D000               	goto	i2l403
 12156  00358E                     i2l403:
 12157                           
 12158                           ; BSR set to: 1
 12159  00358E  0012               	return		;funcret
 12160  003590                     __end_ofi2_interruption_QEI:
 12161                           	opt stack 0
 12162                           pclatu	equ	0xFFB
 12163                           pclath	equ	0xFFA
 12164                           tblptru	equ	0xFF8
 12165                           tblptrh	equ	0xFF7
 12166                           tblptrl	equ	0xFF6
 12167                           tablat	equ	0xFF5
 12168                           prodh	equ	0xFF4
 12169                           prodl	equ	0xFF3
 12170                           intcon	equ	0xFF2
 12171                           intcon2	equ	0xFF1
 12172                           intcon3	equ	0xFF0
 12173                           indf0	equ	0xFEF
 12174                           postinc0	equ	0xFEE
 12175                           plusw0	equ	0xFEB
 12176                           fsr0h	equ	0xFEA
 12177                           fsr0l	equ	0xFE9
 12178                           wreg	equ	0xFE8
 12179                           postinc1	equ	0xFE6
 12180                           postdec1	equ	0xFE5
 12181                           plusw1	equ	0xFE3
 12182                           fsr1h	equ	0xFE2
 12183                           fsr1l	equ	0xFE1
 12184                           bsr	equ	0xFE0
 12185                           indf2	equ	0xFDF
 12186                           postinc2	equ	0xFDE
 12187                           postdec2	equ	0xFDD
 12188                           fsr2h	equ	0xFDA
 12189                           fsr2l	equ	0xFD9
 12190                           status	equ	0xFD8
 12191                           
 12192 ;; *************** function i2_interruption_INT0 *****************
 12193 ;; Defined at:
 12194 ;;		line 144 in file "interruptions.c"
 12195 ;; Parameters:    Size  Location     Type
 12196 ;;		None
 12197 ;; Auto vars:     Size  Location     Type
 12198 ;;		None
 12199 ;; Return value:  Size  Location     Type
 12200 ;;		None               void
 12201 ;; Registers used:
 12202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12203 ;; Tracked objects:
 12204 ;;		On entry : 0/0
 12205 ;;		On exit  : 0/0
 12206 ;;		Unchanged: 0/0
 12207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12208 ;;      Params:         0       0       0       0
 12209 ;;      Locals:         0       0       0       0
 12210 ;;      Temps:          2       0       0       0
 12211 ;;      Totals:         2       0       0       0
 12212 ;;Total ram usage:        2 bytes
 12213 ;; Hardware stack levels used:    1
 12214 ;; This function calls:
 12215 ;;		Nothing
 12216 ;; This function is called by:
 12217 ;;		i2_subroutine_interruptions
 12218 ;; This function uses a non-reentrant model
 12219 ;;
 12220                           
 12221                           	psect	text60
 12222  00327A                     __ptext60:
 12223                           	opt stack 0
 12224  00327A                     i2_interruption_INT0:
 12225                           	opt stack 17
 12226                           
 12227                           ;interruptions.c: 146: if (capteur.tour_en_cours == 1)
 12228                           
 12229                           ; BSR set to: 1
 12230                           ;incstack = 0
 12231  00327A  0101               	movlb	1	; () banked
 12232  00327C  0567               	decf	_capteur& (0+255),w,b
 12233  00327E  A4D8               	btfss	status,2,c
 12234  003280  D01F               	goto	i2l3108
 12235                           
 12236                           ; BSR set to: 1
 12237                           ;interruptions.c: 147: {
 12238                           ;interruptions.c: 148: if (capteur.indice < 3)
 12239  003282  0E03               	movlw	3
 12240  003284  0101               	movlb	1	; () banked
 12241  003286  6179               	cpfslt	(_capteur+18)& (0+255),b
 12242  003288  D018               	goto	i2l3106
 12243                           
 12244                           ; BSR set to: 1
 12245                           ;interruptions.c: 149: {
 12246                           ;interruptions.c: 150: capteur.position[capteur.indice++] = POSCNTH * 256 + POSCNTL;
 12247  00328A  5066               	movf	3942,w,c	;volatile
 12248  00328C  CF67 F015          	movff	3943,??i2_interruption_INT0	;volatile
 12249  003290  6A16               	clrf	(??i2_interruption_INT0+1)& (0+255),c
 12250  003292  C015  F016         	movff	??i2_interruption_INT0,??i2_interruption_INT0+1
 12251  003296  6A15               	clrf	??i2_interruption_INT0,c
 12252  003298  2615               	addwf	??i2_interruption_INT0,f,c
 12253  00329A  0E00               	movlw	0
 12254  00329C  2216               	addwfc	??i2_interruption_INT0+1,f,c
 12255  00329E  0101               	movlb	1	; () banked
 12256  0032A0  5179               	movf	(_capteur+18)& (0+255),w,b
 12257  0032A2  0D02               	mullw	2
 12258  0032A4  0E73               	movlw	low (_capteur+12)
 12259  0032A6  24F3               	addwf	prodl,w,c
 12260  0032A8  6ED9               	movwf	fsr2l,c
 12261  0032AA  0E01               	movlw	high (_capteur+12)
 12262  0032AC  20F4               	addwfc	prodh,w,c
 12263  0032AE  6EDA               	movwf	fsr2h,c
 12264  0032B0  C015  FFDE         	movff	??i2_interruption_INT0,postinc2
 12265  0032B4  C016  FFDD         	movff	??i2_interruption_INT0+1,postdec2
 12266  0032B8  D000               	goto	i2l3106
 12267  0032BA                     i2l3106:
 12268                           
 12269                           ; BSR set to: 1
 12270                           ;interruptions.c: 152: else
 12271                           ;interruptions.c: 153: capteur.indice++;
 12272  0032BA  0101               	movlb	1	; () banked
 12273  0032BC  2B79               	incf	(_capteur+18)& (0+255),f,b
 12274                           
 12275                           ; BSR set to: 1
 12276  0032BE  D000               	goto	i2l3108
 12277  0032C0                     i2l3108:
 12278                           
 12279                           ; BSR set to: 1
 12280                           ;interruptions.c: 154: }
 12281                           ;interruptions.c: 155: INTCONbits.INT0IF = 0;
 12282  0032C0  92F2               	bcf	intcon,1,c	;volatile
 12283                           
 12284                           ; BSR set to: 1
 12285  0032C2  0012               	return		;funcret
 12286  0032C4                     __end_ofi2_interruption_INT0:
 12287                           	opt stack 0
 12288                           pclatu	equ	0xFFB
 12289                           pclath	equ	0xFFA
 12290                           tblptru	equ	0xFF8
 12291                           tblptrh	equ	0xFF7
 12292                           tblptrl	equ	0xFF6
 12293                           tablat	equ	0xFF5
 12294                           prodh	equ	0xFF4
 12295                           prodl	equ	0xFF3
 12296                           intcon	equ	0xFF2
 12297                           intcon2	equ	0xFF1
 12298                           intcon3	equ	0xFF0
 12299                           indf0	equ	0xFEF
 12300                           postinc0	equ	0xFEE
 12301                           plusw0	equ	0xFEB
 12302                           fsr0h	equ	0xFEA
 12303                           fsr0l	equ	0xFE9
 12304                           wreg	equ	0xFE8
 12305                           postinc1	equ	0xFE6
 12306                           postdec1	equ	0xFE5
 12307                           plusw1	equ	0xFE3
 12308                           fsr1h	equ	0xFE2
 12309                           fsr1l	equ	0xFE1
 12310                           bsr	equ	0xFE0
 12311                           indf2	equ	0xFDF
 12312                           postinc2	equ	0xFDE
 12313                           postdec2	equ	0xFDD
 12314                           fsr2h	equ	0xFDA
 12315                           fsr2l	equ	0xFD9
 12316                           status	equ	0xFD8
 12317                           
 12318 ;; *************** function i2_interrupt_TX *****************
 12319 ;; Defined at:
 12320 ;;		line 229 in file "interruptions.c"
 12321 ;; Parameters:    Size  Location     Type
 12322 ;;		None
 12323 ;; Auto vars:     Size  Location     Type
 12324 ;;		None
 12325 ;; Return value:  Size  Location     Type
 12326 ;;		None               void
 12327 ;; Registers used:
 12328 ;;		None
 12329 ;; Tracked objects:
 12330 ;;		On entry : 0/0
 12331 ;;		On exit  : 0/0
 12332 ;;		Unchanged: 0/0
 12333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12334 ;;      Params:         0       0       0       0
 12335 ;;      Locals:         0       0       0       0
 12336 ;;      Temps:          0       0       0       0
 12337 ;;      Totals:         0       0       0       0
 12338 ;;Total ram usage:        0 bytes
 12339 ;; Hardware stack levels used:    1
 12340 ;; This function calls:
 12341 ;;		Nothing
 12342 ;; This function is called by:
 12343 ;;		i2_subroutine_interruptions
 12344 ;; This function uses a non-reentrant model
 12345 ;;
 12346                           
 12347                           	psect	text61
 12348  00364E                     __ptext61:
 12349                           	opt stack 0
 12350  00364E                     i2_interrupt_TX:
 12351                           	opt stack 17
 12352                           
 12353                           ;interruptions.c: 231: PIR1bits.TXIF = 0;
 12354                           
 12355                           ; BSR set to: 1
 12356                           ;incstack = 0
 12357  00364E  989E               	bcf	3998,4,c	;volatile
 12358  003650  0012               	return		;funcret
 12359  003652                     __end_ofi2_interrupt_TX:
 12360                           	opt stack 0
 12361                           pclatu	equ	0xFFB
 12362                           pclath	equ	0xFFA
 12363                           tblptru	equ	0xFF8
 12364                           tblptrh	equ	0xFF7
 12365                           tblptrl	equ	0xFF6
 12366                           tablat	equ	0xFF5
 12367                           prodh	equ	0xFF4
 12368                           prodl	equ	0xFF3
 12369                           intcon	equ	0xFF2
 12370                           intcon2	equ	0xFF1
 12371                           intcon3	equ	0xFF0
 12372                           indf0	equ	0xFEF
 12373                           postinc0	equ	0xFEE
 12374                           plusw0	equ	0xFEB
 12375                           fsr0h	equ	0xFEA
 12376                           fsr0l	equ	0xFE9
 12377                           wreg	equ	0xFE8
 12378                           postinc1	equ	0xFE6
 12379                           postdec1	equ	0xFE5
 12380                           plusw1	equ	0xFE3
 12381                           fsr1h	equ	0xFE2
 12382                           fsr1l	equ	0xFE1
 12383                           bsr	equ	0xFE0
 12384                           indf2	equ	0xFDF
 12385                           postinc2	equ	0xFDE
 12386                           postdec2	equ	0xFDD
 12387                           fsr2h	equ	0xFDA
 12388                           fsr2l	equ	0xFD9
 12389                           status	equ	0xFD8
 12390                           
 12391 ;; *************** function i2_interrupt_RX *****************
 12392 ;; Defined at:
 12393 ;;		line 210 in file "interruptions.c"
 12394 ;; Parameters:    Size  Location     Type
 12395 ;;		None
 12396 ;; Auto vars:     Size  Location     Type
 12397 ;;  interrupt_RX    1   20[COMRAM] unsigned char 
 12398 ;; Return value:  Size  Location     Type
 12399 ;;		None               void
 12400 ;; Registers used:
 12401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12402 ;; Tracked objects:
 12403 ;;		On entry : 0/0
 12404 ;;		On exit  : 0/0
 12405 ;;		Unchanged: 0/0
 12406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12407 ;;      Params:         0       0       0       0
 12408 ;;      Locals:         1       0       0       0
 12409 ;;      Temps:          0       0       0       0
 12410 ;;      Totals:         1       0       0       0
 12411 ;;Total ram usage:        1 bytes
 12412 ;; Hardware stack levels used:    1
 12413 ;; This function calls:
 12414 ;;		Nothing
 12415 ;; This function is called by:
 12416 ;;		i2_subroutine_interruptions
 12417 ;; This function uses a non-reentrant model
 12418 ;;
 12419                           
 12420                           	psect	text62
 12421  00341A                     __ptext62:
 12422                           	opt stack 0
 12423  00341A                     i2_interrupt_RX:
 12424                           	opt stack 17
 12425                           
 12426                           ;interruptions.c: 212: PIR1bits.RCIF = 0;
 12427                           
 12428                           ;incstack = 0
 12429  00341A  9A9E               	bcf	3998,5,c	;volatile
 12430                           
 12431                           ;interruptions.c: 213: PORTBbits.RB0 = 1;
 12432  00341C  8081               	bsf	3969,0,c	;volatile
 12433                           
 12434                           ;interruptions.c: 215: if (uart_reception.indice < 100)
 12435  00341E  0E64               	movlw	100
 12436  003420  0101               	movlb	1	; () banked
 12437  003422  6164               	cpfslt	(_uart_reception+100)& (0+255),b
 12438  003424  D011               	goto	i2l3130
 12439                           
 12440                           ; BSR set to: 1
 12441                           ;interruptions.c: 216: {
 12442                           ;interruptions.c: 217: uart_reception.buffer_reeption[uart_reception.indice] = RCREG;
 12443  003426  0101               	movlb	1	; () banked
 12444  003428  5164               	movf	(_uart_reception+100)& (0+255),w,b
 12445  00342A  0D01               	mullw	1
 12446  00342C  0E00               	movlw	low _uart_reception
 12447  00342E  24F3               	addwf	prodl,w,c
 12448  003430  6ED9               	movwf	fsr2l,c
 12449  003432  0E01               	movlw	high _uart_reception
 12450  003434  20F4               	addwfc	prodh,w,c
 12451  003436  6EDA               	movwf	fsr2h,c
 12452  003438  CFAE FFDF          	movff	4014,indf2	;volatile
 12453                           
 12454                           ; BSR set to: 1
 12455                           ;interruptions.c: 218: uart_reception.buffer_vide = 0;
 12456  00343C  0E00               	movlw	0
 12457  00343E  0101               	movlb	1	; () banked
 12458  003440  6F66               	movwf	(_uart_reception+102)& (0+255),b
 12459                           
 12460                           ; BSR set to: 1
 12461                           ;interruptions.c: 219: uart_reception.indice++;
 12462  003442  0101               	movlb	1	; () banked
 12463  003444  2B64               	incf	(_uart_reception+100)& (0+255),f,b
 12464                           
 12465                           ;interruptions.c: 220: }
 12466  003446  D006               	goto	i2l414
 12467  003448                     i2l3130:
 12468                           
 12469                           ; BSR set to: 1
 12470                           ;interruptions.c: 221: else
 12471                           ;interruptions.c: 222: {
 12472                           ;interruptions.c: 223: uart_reception.buffer_plein = 1;
 12473  003448  0E01               	movlw	1
 12474  00344A  0101               	movlb	1	; () banked
 12475  00344C  6F65               	movwf	(_uart_reception+101)& (0+255),b
 12476                           
 12477                           ; BSR set to: 1
 12478                           ;interruptions.c: 224: uint8_t temp = RCREG;
 12479  00344E  CFAE F015          	movff	4014,i2interrupt_RX@temp	;volatile
 12480  003452  D000               	goto	i2l414
 12481  003454                     i2l414:
 12482                           
 12483                           ; BSR set to: 1
 12484  003454  0012               	return		;funcret
 12485  003456                     __end_ofi2_interrupt_RX:
 12486                           	opt stack 0
 12487                           pclatu	equ	0xFFB
 12488                           pclath	equ	0xFFA
 12489                           tblptru	equ	0xFF8
 12490                           tblptrh	equ	0xFF7
 12491                           tblptrl	equ	0xFF6
 12492                           tablat	equ	0xFF5
 12493                           prodh	equ	0xFF4
 12494                           prodl	equ	0xFF3
 12495                           intcon	equ	0xFF2
 12496                           intcon2	equ	0xFF1
 12497                           intcon3	equ	0xFF0
 12498                           indf0	equ	0xFEF
 12499                           postinc0	equ	0xFEE
 12500                           plusw0	equ	0xFEB
 12501                           fsr0h	equ	0xFEA
 12502                           fsr0l	equ	0xFE9
 12503                           wreg	equ	0xFE8
 12504                           postinc1	equ	0xFE6
 12505                           postdec1	equ	0xFE5
 12506                           plusw1	equ	0xFE3
 12507                           fsr1h	equ	0xFE2
 12508                           fsr1l	equ	0xFE1
 12509                           bsr	equ	0xFE0
 12510                           indf2	equ	0xFDF
 12511                           postinc2	equ	0xFDE
 12512                           postdec2	equ	0xFDD
 12513                           fsr2h	equ	0xFDA
 12514                           fsr2l	equ	0xFD9
 12515                           status	equ	0xFD8
 12516                           pclatu	equ	0xFFB
 12517                           pclath	equ	0xFFA
 12518                           tblptru	equ	0xFF8
 12519                           tblptrh	equ	0xFF7
 12520                           tblptrl	equ	0xFF6
 12521                           tablat	equ	0xFF5
 12522                           prodh	equ	0xFF4
 12523                           prodl	equ	0xFF3
 12524                           intcon	equ	0xFF2
 12525                           intcon2	equ	0xFF1
 12526                           intcon3	equ	0xFF0
 12527                           indf0	equ	0xFEF
 12528                           postinc0	equ	0xFEE
 12529                           plusw0	equ	0xFEB
 12530                           fsr0h	equ	0xFEA
 12531                           fsr0l	equ	0xFE9
 12532                           wreg	equ	0xFE8
 12533                           postinc1	equ	0xFE6
 12534                           postdec1	equ	0xFE5
 12535                           plusw1	equ	0xFE3
 12536                           fsr1h	equ	0xFE2
 12537                           fsr1l	equ	0xFE1
 12538                           bsr	equ	0xFE0
 12539                           indf2	equ	0xFDF
 12540                           postinc2	equ	0xFDE
 12541                           postdec2	equ	0xFDD
 12542                           fsr2h	equ	0xFDA
 12543                           fsr2l	equ	0xFD9
 12544                           status	equ	0xFD8
 12545                           
 12546                           	psect	rparam
 12547  0000                     pclatu	equ	0xFFB
 12548                           pclath	equ	0xFFA
 12549                           tblptru	equ	0xFF8
 12550                           tblptrh	equ	0xFF7
 12551                           tblptrl	equ	0xFF6
 12552                           tablat	equ	0xFF5
 12553                           prodh	equ	0xFF4
 12554                           prodl	equ	0xFF3
 12555                           intcon	equ	0xFF2
 12556                           intcon2	equ	0xFF1
 12557                           intcon3	equ	0xFF0
 12558                           indf0	equ	0xFEF
 12559                           postinc0	equ	0xFEE
 12560                           plusw0	equ	0xFEB
 12561                           fsr0h	equ	0xFEA
 12562                           fsr0l	equ	0xFE9
 12563                           wreg	equ	0xFE8
 12564                           postinc1	equ	0xFE6
 12565                           postdec1	equ	0xFE5
 12566                           plusw1	equ	0xFE3
 12567                           fsr1h	equ	0xFE2
 12568                           fsr1l	equ	0xFE1
 12569                           bsr	equ	0xFE0
 12570                           indf2	equ	0xFDF
 12571                           postinc2	equ	0xFDE
 12572                           postdec2	equ	0xFDD
 12573                           fsr2h	equ	0xFDA
 12574                           fsr2l	equ	0xFD9
 12575                           status	equ	0xFD8


Data Sizes:
    Strings     135
    Constant    27
    Data        2
    BSS         182
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      60
    BANK0           160    144     159
    BANK1           256     58     204
    BANK2           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 15
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), 

    triangulation@c	PTR struct . size(2) Largest target is 18
		 -> main@c(BANK1[18]), 

    sp__IntToC	PTR unsigned char  size(2) Largest target is 8
		 -> IntToC@out(COMRAM[8]), 

    PutsUART@chaine	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[2]), 
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[2]), STR_6(CODE[3]), IntToC@out(COMRAM[8]), STR_5(CODE[20]), 
		 -> STR_4(CODE[8]), STR_3(CODE[24]), STR_2(CODE[43]), STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_subroutine_interruptions
    i2_subroutine_interruptions->i2_interruption_INT0

Critical Paths under _low_isr in COMRAM

    _low_isr->_subroutine_interruptions
    _subroutine_interruptions->_interruption_INT0

Critical Paths under _main in BANK0

    _triangulation->_cotangeante
    _saturation->___ftge
    _cotangeante->_tan
    _tan->_cos
    _cos->_sin
    _sin->___ftsub
    _floor->___altoft
    ___altoft->___fttol
    _eval_poly->___ftadd
    _conversion_degre_radian->___ftdiv
    _obtention_angle->___ftdiv
    ___lwtoft->___ftpack
    _get_distance->_sqrt
    _sqrt->___ftsub
    ___ftsub->_floor
    ___ftadd->___ftneg
    _envoit_pwm->___fttol
    ___ftneg->___ftmul
    ___ftmul->___ftpack
    ___ftge->___ftneg
    _affichage_position->_PutIntUART
    ___fttol->___ftdiv
    ___ftdiv->_eval_poly
    _PutIntUART->___fttol
    _PutsUART->_IntToC
    _PutcUART->___awdiv
    _IntToC->___awdiv
    ___awdiv->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_triangulation

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     3      5  301730
                                            138 BANK0      6     1      5
                                             56 BANK1      2     2      0
                         _PutIntUART
                           _PutsUART
                             ___ftge
                             ___wmul
                 _affichage_position
                         _envoit_pwm
                       _get_distance
                        _init_system
                    _obtention_angle
                      _triangulation
 ---------------------------------------------------------------------------------
 (1) _triangulation                                       65    54     11  197522
                                              0 BANK1     56    45     11
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                        _cotangeante
                         _saturation
 ---------------------------------------------------------------------------------
 (2) _saturation                                           6     0      6    4259
                                             35 BANK0      6     0      6
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (2) _cotangeante                                          6     3      3  167919
                                            132 BANK0      6     3      3
                            ___ftdiv
            _conversion_degre_radian
                                _tan
 ---------------------------------------------------------------------------------
 (3) _tan                                                  9     6      3  151386
                                            123 BANK0      9     6      3
                            ___ftdiv
                                _cos
                                _sin
 ---------------------------------------------------------------------------------
 (4) _cos                                                  9     6      3   78708
                                            117 BANK0      6     3      3
                            ___ftadd
                             ___ftge
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 13    10      3   68027
                                            104 BANK0     13    10      3
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                                8     5      3   14987
                                             90 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                7     2      5     452
                                              0 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (6) ___altoft                                            10     6      4    2805
                                             80 BANK0     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           12     5      7   19179
                                             38 BANK0     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _conversion_degre_radian                              3     0      3   11836
                                             65 BANK0      3     0      3
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (1) _obtention_angle                                      6     3      3   14536
                                             65 BANK0      6     3      3
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2632
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _init_system                                          0     0      0       0
                    _ConfigInterrupt
                        _ConfigPorts
                         _config_QEI
                         _config_pwm
                        _config_uart
                       _init_capteur
                       _init_timer_0
                 _init_uart_logiciel
                _init_uart_reception
 ---------------------------------------------------------------------------------
 (2) _init_uart_reception                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_uart_logiciel                                   0     0      0       0
                       _init_timer_1
 ---------------------------------------------------------------------------------
 (3) _init_timer_1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_capteur                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_uart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_pwm                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_QEI                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ConfigPorts                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ConfigInterrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_distance                                        24    12     12   36899
                                            123 BANK0     12     0     12
                                              0 BANK1     12    12      0
                            ___ftadd
                            ___ftmul
                            ___ftneg
                             ___wmul (ARG)
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _sqrt                                                19    16      3   18968
                                            104 BANK0     19    16      3
                             ___ftge
                            ___ftmul
                            ___ftsub
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    9155
                                             98 BANK0      6     0      6
                            ___ftadd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftadd                                             12     6      6    8483
                                             26 BANK0     12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _envoit_pwm                                           6     3      3   12105
                                             80 BANK0      6     3      3
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3    1682
                                             23 BANK0      3     0      3
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftmul                                             15     9      6    7284
                                              8 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1892
                                             26 BANK0      9     3      6
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (1) _affichage_position                                   8     8      0   20802
                                             83 BANK0      8     8      0
                         _PutIntUART
                           _PutsUART
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             15    11      4     910
                                             65 BANK0     15    11      4
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             15     9      6    4444
                                             50 BANK0     15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2524
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _PutIntUART                                           3     1      2   10702
                                             80 BANK0      3     1      2
                             _IntToC
                           _PutsUART
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _PutsUART                                             5     3      2    4313
                                             30 BANK0      5     3      2
                             _IntToC (ARG)
                           _PutcUART
 ---------------------------------------------------------------------------------
 (3) _PutcUART                                             8     7      1    2680
                                             14 BANK0      8     7      1
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _IntToC                                              16    14      2    6019
                                             14 BANK0     16    14      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    2696
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    2139
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                             17    17      0     177
                                              3 COMRAM    17    17      0
           _subroutine_interruptions
 ---------------------------------------------------------------------------------
 (10) _subroutine_interruptions                            1     1      0     177
                                              2 COMRAM     1     1      0
                       _interrupt_RX
                       _interrupt_TX
                  _interruption_INT0
                   _interruption_QEI
                _interruption_timer0
                _interruption_timer1
                _interruption_timer2
               _interuption_QEI_sens
 ---------------------------------------------------------------------------------
 (11) _interuption_QEI_sens                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _interruption_timer2                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _interruption_timer1                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _interruption_timer0                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _interruption_QEI                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _interruption_INT0                                   2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _interrupt_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _interrupt_RX                                        1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _high_isr                                           14    14      0     177
                                             23 COMRAM    14    14      0
         i2_subroutine_interruptions
 ---------------------------------------------------------------------------------
 (13) i2_subroutine_interruptions                          1     1      0     177
                                             22 COMRAM     1     1      0
                     i2_interrupt_RX
                     i2_interrupt_TX
                i2_interruption_INT0
                 i2_interruption_QEI
              i2_interruption_timer0
              i2_interruption_timer1
              i2_interruption_timer2
             i2_interuption_QEI_sens
 ---------------------------------------------------------------------------------
 (14) i2_interuption_QEI_sens                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_interruption_timer2                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_interruption_timer1                               1     1      0       0
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) i2_interruption_timer0                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_interruption_QEI                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_interruption_INT0                                 2     2      0       0
                                             20 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (14) i2_interrupt_TX                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_interrupt_RX                                      1     1      0       1
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PutIntUART
     _IntToC
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _PutsUART
       _IntToC (ARG)
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _PutcUART (ARG)
         ___awdiv
           ___wmul (ARG)
     ___fttol (ARG)
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _eval_poly (ARG)
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___wmul
   _PutsUART
     _IntToC (ARG)
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _PutcUART (ARG)
       ___awdiv
         ___wmul (ARG)
   ___ftge
     ___ftneg (ARG)
       ___ftmul (ARG)
         ___ftpack
   ___wmul
   _affichage_position
     _PutIntUART
       _IntToC
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _PutsUART
         _IntToC (ARG)
           ___awdiv
             ___wmul (ARG)
           ___wmul
         _PutcUART (ARG)
           ___awdiv
             ___wmul (ARG)
       ___fttol (ARG)
         ___ftdiv (ARG)
           ___ftadd (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _eval_poly (ARG)
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul
               ___ftpack
             ___wmul
     _PutsUART
       _IntToC (ARG)
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _PutcUART (ARG)
         ___awdiv
           ___wmul (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _eval_poly (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul
           ___ftpack
         ___wmul
     ___fttol
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _eval_poly (ARG)
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___wmul
   _envoit_pwm
     ___ftge
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftmul (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _eval_poly (ARG)
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___wmul
   _get_distance
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftmul (ARG)
         ___ftpack
     ___wmul (ARG)
     _sqrt (ARG)
       ___ftge
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftmul
         ___ftpack
       ___ftsub
         ___ftadd
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___ftadd (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _eval_poly (ARG)
                   ___ftadd
                     ___ftmul (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftmul
                     ___ftpack
                   ___wmul
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftge
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___fttol
             ___ftdiv (ARG)
               ___ftadd (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _eval_poly (ARG)
                 ___ftadd
                   ___ftmul (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___ftpack
                 ___wmul
           _frexp
   _init_system
     _ConfigInterrupt
     _ConfigPorts
     _config_QEI
     _config_pwm
     _config_uart
     _init_capteur
     _init_timer_0
     _init_uart_logiciel
       _init_timer_1
     _init_uart_reception
   _obtention_angle
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _eval_poly (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul
           ___ftpack
         ___wmul
     ___ftmul
       ___ftpack
     ___lwtoft
       ___ftpack
   _triangulation
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _eval_poly (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul
           ___ftpack
         ___wmul
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftmul (ARG)
         ___ftpack
     _cotangeante
       ___ftdiv
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _eval_poly (ARG)
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___wmul
       _conversion_degre_radian
         ___ftdiv
           ___ftadd (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _eval_poly (ARG)
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul
               ___ftpack
             ___wmul
         ___ftmul
           ___ftpack
       _tan
         ___ftdiv
           ___ftadd (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _eval_poly (ARG)
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul
               ___ftpack
             ___wmul
         _cos
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftge
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
           _sin
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftdiv
               ___ftadd (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _eval_poly (ARG)
                 ___ftadd
                   ___ftmul (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___ftpack
                 ___wmul
             ___ftge
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
             ___ftmul
               ___ftpack
             ___ftneg
               ___ftmul (ARG)
                 ___ftpack
             ___ftsub
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               _floor (ARG)
                 ___altoft
                   ___ftpack
                   ___fttol (ARG)
                     ___ftdiv (ARG)
                       ___ftadd (ARG)
                         ___ftmul (ARG)
                           ___ftpack
                         ___ftneg (ARG)
                           ___ftmul (ARG)
                             ___ftpack
                         ___ftpack (ARG)
                         ___wmul (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                       ___ftneg (ARG)
                         ___ftmul (ARG)
                           ___ftpack
                       ___ftpack (ARG)
                       ___lwtoft (ARG)
                         ___ftpack
                       _eval_poly (ARG)
                         ___ftadd
                           ___ftmul (ARG)
                             ___ftpack
                           ___ftneg (ARG)
                             ___ftmul (ARG)
                               ___ftpack
                           ___ftpack (ARG)
                           ___wmul (ARG)
                         ___ftmul
                           ___ftpack
                         ___wmul
                 ___ftadd
                   ___ftmul (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftge
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                 ___fttol
                   ___ftdiv (ARG)
                     ___ftadd (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                       ___ftneg (ARG)
                         ___ftmul (ARG)
                           ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                     _eval_poly (ARG)
                       ___ftadd
                         ___ftmul (ARG)
                           ___ftpack
                         ___ftneg (ARG)
                           ___ftmul (ARG)
                             ___ftpack
                         ___ftpack (ARG)
                         ___wmul (ARG)
                       ___ftmul
                         ___ftpack
                       ___wmul
                 _frexp
             _eval_poly
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___ftpack
               ___wmul
             _floor
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
                   ___ftdiv (ARG)
                     ___ftadd (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                       ___ftneg (ARG)
                         ___ftmul (ARG)
                           ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                     _eval_poly (ARG)
                       ___ftadd
                         ___ftmul (ARG)
                           ___ftpack
                         ___ftneg (ARG)
                           ___ftmul (ARG)
                             ___ftpack
                         ___ftpack (ARG)
                         ___wmul (ARG)
                       ___ftmul
                         ___ftpack
                       ___wmul
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftge
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
               ___fttol
                 ___ftdiv (ARG)
                   ___ftadd (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   _eval_poly (ARG)
                     ___ftadd
                       ___ftmul (ARG)
                         ___ftpack
                       ___ftneg (ARG)
                         ___ftmul (ARG)
                           ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                     ___ftmul
                       ___ftpack
                     ___wmul
               _frexp
         _sin
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftdiv
             ___ftadd (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _eval_poly (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___ftpack
               ___wmul
           ___ftge
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___ftmul
             ___ftpack
           ___ftneg
             ___ftmul (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             _floor (ARG)
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
                   ___ftdiv (ARG)
                     ___ftadd (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                       ___ftneg (ARG)
                         ___ftmul (ARG)
                           ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                     _eval_poly (ARG)
                       ___ftadd
                         ___ftmul (ARG)
                           ___ftpack
                         ___ftneg (ARG)
                           ___ftmul (ARG)
                             ___ftpack
                         ___ftpack (ARG)
                         ___wmul (ARG)
                       ___ftmul
                         ___ftpack
                       ___wmul
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftge
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
               ___fttol
                 ___ftdiv (ARG)
                   ___ftadd (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   _eval_poly (ARG)
                     ___ftadd
                       ___ftmul (ARG)
                         ___ftpack
                       ___ftneg (ARG)
                         ___ftmul (ARG)
                           ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                     ___ftmul
                       ___ftpack
                     ___wmul
               _frexp
           _eval_poly
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul
               ___ftpack
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___ftdiv (ARG)
                   ___ftadd (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                   _eval_poly (ARG)
                     ___ftadd
                       ___ftmul (ARG)
                         ___ftpack
                       ___ftneg (ARG)
                         ___ftmul (ARG)
                           ___ftpack
                       ___ftpack (ARG)
                       ___wmul (ARG)
                     ___ftmul
                       ___ftpack
                     ___wmul
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftge
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
             ___fttol
               ___ftdiv (ARG)
                 ___ftadd (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                 _eval_poly (ARG)
                   ___ftadd
                     ___ftmul (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___ftmul (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___wmul (ARG)
                   ___ftmul
                     ___ftpack
                   ___wmul
             _frexp
     _saturation
       ___ftge
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftneg
         ___ftmul (ARG)
           ___ftpack

 _low_isr (ROOT)
   _subroutine_interruptions
     _interrupt_RX
     _interrupt_TX
     _interruption_INT0
     _interruption_QEI
     _interruption_timer0
     _interruption_timer1
     _interruption_timer2
     _interuption_QEI_sens

 _high_isr (ROOT)
   i2_subroutine_interruptions
     i2_interrupt_RX
     i2_interrupt_TX
     i2_interruption_INT0
     i2_interruption_QEI
     i2_interruption_timer0
     i2_interruption_timer1
     i2_interruption_timer2
     i2_interuption_QEI_sens

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3A      CC       7       79.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     25      3C       1       63.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A7       3        0.0%
DATA                 0      0     1A7      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed May 20 13:29:59 2015

                       ___altoft@exp 00B8               __end_ofi2_interrupt_RX 3456  
             __end_ofi2_interrupt_TX 3652                        ___altoft@sign 00B9  
                                 l31 0A9A                                   l61 0F82  
                                 l66 0FA2                                   l58 0F2C  
                       ___awdiv@sign 006B                                   bsr 000FE0  
               ?_init_uart_reception 0001                  ___wmul@multiplicand 0062  
                       __CFG_CP0$OFF 000000                         __CFG_CP1$OFF 000000  
                       ?_cotangeante 00E4                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                         ___ftadd@exp1 0085  
                       ___ftadd@exp2 0084                         ___ftadd@sign 0083  
                                l270 0FBA                                  l521 26F6  
                                l515 2C4E                                  l541 34C4  
                                l277 1324                                  l509 3126  
                                l294 166C                                  l518 31DE  
                                l535 183E                                  l473 280A  
                                l476 288C                                  l484 2F74  
                                l734 2996                                  l638 2BBE  
                                l904 1D7E                                  l921 22AC  
                                l913 1DA8                                  l930 2A64  
                                l860 24C6                                  l924 2274  
                                l936 216A                                  l849 24FE  
                                l953 322E                                  l946 34E8  
                                l890 1E4A                                  l957 23DE  
                                l893 1C70                                  l895 1C9A  
                                l889 1C36                         __CFG_CPB$OFF 000000  
                       __CFG_CPD$OFF 000000                                  _cos 2A66  
                                _tan 3128                                  _sin 1932  
                                prod 000FF3                                  wreg 000FE8  
__size_ofi2_subroutine_interruptions 0084                         __CFG_LVP$OFF 000000  
                       ___ftdiv@cntr 009B                         ___ftdiv@sign 00A0  
                               l1102 318A                                 l1123 1AC8  
                               l1140 25EE                                 l1124 1BC0  
                               l1108 2B1C                                 l1125 1BCC  
                               l1146 2CDE                                 l1138 25FA  
                               l1091 1E98                                 l1092 1E84  
                               l1093 200E                                 l1086 3520  
                               l4012 2AD0                                 l4018 2FE8  
                               l4300 1726                                 l4220 2818  
                               l4038 136E                                 l4310 175E  
                               l4224 2882                                 l4330 1802  
                               l4322 17AE                                 l4314 1778  
                               l4306 1742                                 l4154 2BF0  
                               l4228 2890                                 l3620 1C44  
                               l3604 2B4A                                 ?_cos 00D5  
                               l4334 180C                                 l4318 1794  
                               l3606 2B5C                                 l4158 2C40  
                               l4430 0C2A                                 l4352 1890  
                               l4328 17EE                                 l4344 185A  
                               l3712 20E4                                 l3632 1C90  
                               l4192 1FE4                                 l3800 2C72  
                               l4440 0C64                                 l3570 2474  
                               l3562 2410                                 l3722 2128  
                               l3650 1D12                                 l3642 1CD2  
                               l3626 1C7E                                 l4178 1F02  
                               l4450 0CAA                                 l3580 24D2  
                               l3572 24A6                                 l3564 2420  
                               l4348 1876                                 l3716 2100  
                               l3708 20C4                                 l3660 1D5E  
                               l3652 1D22                                 l4452 0CB4  
                               l3574 24B6                                 l3566 2452  
                               l3558 23FA                                 l3822 21D0  
                               l4358 18AC                                 l3734 29DA  
                               l3726 2144                                 l3718 2108  
                               l3662 1D6E                                 l3654 1D2E  
                               l4462 0D2C                                 l4438 0C58  
                               l3920 292A                                 l3912 28FE  
                               l3816 2196                                 l4296 170C  
                               l4368 192A                                 l3744 2A60  
                               l3648 1D02                                 l4480 0E48  
                               l4472 0D88                                 l4456 0CCE  
                               l3930 2966                                 l3922 2934  
                               l3906 28E6                                 l3586 24F0  
                               l3842 2232                                 l3818 21BC  
                               l3754 22D8                                 l3738 2A1C  
                               l3690 2060                                 l3852 2286  
                               l3772 235C                                 l3668 1DD4  
                               l3860 3204                                 l4492 0F46  
                               l4476 0E2E                                 l3918 291C  
                               l3934 2976                                 l3790 23CC  
                               l3782 238E                                 l3694 2074  
                               l3678 1E24                                 l3950 1962  
                               l4486 0ECE                                 l3784 23A0  
                               l3776 2370                                 l3688 203A  
                               l4496 0F9C                                 l3938 298C  
                               l3778 2378                                 l3786 23AE  
                               l3882 254E                                 l3962 1A62  
                               l3980 0FC6                                 l3894 2742  
                               l3886 256C                                 l3878 253A  
                               l3896 27CC                                 ?_tan 00DB  
                               ?_sin 00C8                                 STR_1 035F  
                               STR_2 031C                                 STR_3 0347  
                               STR_4 038B                                 STR_5 0377  
                               STR_6 0399                                 STR_7 03A1  
                               STR_8 035C                                 STR_9 039C  
                               u4200 0C3A                                 u3501 2050  
                               u4301 0EAC                                 u3271 1BE4  
                               u4215 0C48                                 u4216 0C4A  
                               u3281 1C02                                 u4190 0C38  
                               u4407 0AE0                                 u3481 2026  
                               u4417 0AF0                                 u3571 22C4  
                               u4291 0E78                                 u4507 0B80  
                               u4427 0B00                                 u3660 2CA4  
                               u4517 0B90                                 u4437 0B10  
                               u3590 22FE                                 u3671 2182  
                               u4607 0C20                                 u4527 0BA0  
                               u4447 0B20                                 u3760 255E  
                               u4537 0BB0                                 u4457 0B30  
                               u3691 21AC                                 u3595 22F4  
                               u4547 0BC0                                 u4467 0B40  
                               u4387 0AC0                                 u3668 2CA8  
                               u4557 0BD0                                 u4477 0B50  
                               u4397 0AD0                                 u3950 3008  
                               u3870 1A5A                                 u4567 0BE0  
                               u4487 0B60                                 u3960 304A  
                               u3880 1A5C                                 u4577 0BF0  
                               u4497 0B70                                 u4587 0C00  
                               u3957 2FFE                                 u4597 0C10  
                               u3967 3040                                 _TMR0 000FD6  
                               _TMR1 000FCE                       ??_get_distance 00E7  
                   _cotangeante$3140 00E7                                 _main 0A72  
                       ___ftpack@arg 0060                                 cos@f 00D5  
                       ___ftpack@exp 0063                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 indf0 000FEF  
                               fsr0l 000FE9                                 fsr2h 000FDA  
                               fsr1l 000FE1                                 indf2 000FDF  
                               fsr2l 000FD9                                 _sqrt 1E4C  
                               tan@x 00DB                                 pclat 000FFA  
                               sin@f 00C8                                 sin@y 00CB  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00A8                        __CFG_IESO$OFF 000000  
                   ?_obtention_angle 00A1                   _triangulation$3136 01A3  
                 _triangulation$3137 01A6                   _triangulation$3138 019D  
                 _triangulation$3139 01A0                        __CFG_MCLRE$ON 000000  
                       ___ftmul@cntr 0075                         ___param_bank 000010  
                       ___ftmul@sign 0076                  __end_of_ConfigPorts 2D6E  
            ??i2_interruption_timer0 0015              ??i2_interruption_timer1 0015  
            ??i2_interruption_timer2 0015                      ?i2_interrupt_RX 0001  
                    ?i2_interrupt_TX 0001                         ___fttol@exp1 00AF  
                              ??_cos 00D8                         ___fttol@lval 00AB  
                              ??_tan 00DE                                ??_sin 00CB  
              ??_init_uart_reception 0060              __end_of_ConfigInterrupt 2DF6  
                       main@distance 00F0                                ?_main 00EA  
                    __end_of___awdiv 2998                      __end_of___ftadd 1E4C  
                              STR_10 0396                                STR_11 0393  
                              STR_12 039D                                STR_13 039F  
                              STR_14 035C                                STR_15 0399  
                              STR_16 03A1                                STR_17 035C  
                              STR_18 035C                                STR_19 035C  
                    __end_of___ftdiv 22AE                      __end_of___ftneg 34F6  
                              ?_sqrt 00C8                      __end_of___ftmul 216C  
                    ___awdiv@divisor 0068                      __end_of___ftsub 3230  
                    __end_of___fttol 23E0                                _LATA0 007C48  
                              _LATA1 007C49                                _LATB0 007C50  
                              _LATA2 007C4A                                _LATB1 007C51  
                              _LATA3 007C4B                                _LATC0 007C58  
                              _LATB2 007C52                                _LATA4 007C4C  
                              _LATC1 007C59                                _LATB3 007C53  
                              _LATA5 007C4D                                _LATD0 007C60  
                              _LATC2 007C5A                                _LATB4 007C54  
                              _LATA6 007C4E                                _LATD1 007C61  
                              _LATC3 007C5B                                _LATB5 007C55  
                              _LATA7 007C4F                                _LATE0 007C68  
                              _LATD2 007C62                                _LATC4 007C5C  
                              _LATB6 007C56                                _LATE1 007C69  
                              _LATD3 007C63                                _LATC5 007C5D  
                              _LATB7 007C57                                _LATE2 007C6A  
                              _LATD4 007C64                                _LATC6 007C5E  
                              _PDC0H 000F78                                _LATD5 007C65  
                              _LATC7 007C5F                                _LATD6 007C66  
                              _PDC1H 000F76                                _LATD7 007C67  
                              _PDC2H 000F74                                _PDC0L 000F79  
                              _PDC3H 000F72                                _PDC1L 000F77  
                              _PDC2L 000F75                                _PDC3L 000F73  
                              i1l403 356A                                i1l414 3418  
                              i1l360 2E28                                i1l362 2E38  
                              i1l371 2E78                                i1l380 3396  
                              i1l364 2E48                                i1l356 2E08  
                              i1l366 2E58                                i1l358 2E18  
                              i1l368 2E68                                i1l377 3392  
                              i2l403 358E                                i2l414 3454  
                              i2l360 2EAC                                i2l362 2EBC  
                              i2l371 2EFC                                i2l380 33DC  
                              i2l364 2ECC                                i2l356 2E8C  
                              i2l366 2EDC                                i2l358 2E9C  
                              i2l368 2EEC                                i2l377 33D8  
                    ___awdiv@counter 006A      __end_of_conversion_degre_radian 31E0  
                              _RCREG 000FAE             __end_of_interruption_QEI 356C  
                              _SPBRG 000FAF                   __end_ofsin@coeff_a 0310  
                 __end_ofsin@coeff_b 031C                                _TXREG 000FAD  
                      _triangulation 03A4                        __CFG_WRT0$OFF 000000  
                      __CFG_WRT1$OFF 000000                        __CFG_WRT2$OFF 000000  
                      __CFG_WRT3$OFF 000000                       __CFG_EBTR0$OFF 000000  
                     __CFG_FCMEN$OFF 000000                       __CFG_EBTR1$OFF 000000  
            obtention_angle@position 00A1                       __CFG_EBTR2$OFF 000000  
                     __CFG_EBTR3$OFF 000000                        __CFG_WRTB$OFF 000000  
                      __CFG_WRTC$OFF 000000                        __CFG_WRTD$OFF 000000  
                       ?_init_system 0001                       __CFG_EBTRB$OFF 000000  
         ??_subroutine_interruptions 0003                                _floor 2500  
                              _frexp 2C50                                _errno 00F9  
                      ___ftpack@sign 0064                                main@c 0180  
                              main@i 01CA             ??i2_interuption_QEI_sens 0015  
                    __end_of_low_isr 00A8                       __CFG_BOREN$OFF 000000  
                              sin@x2 00D1                                tablat 000FF5  
                              plusw0 000FEB                                plusw1 000FE3  
                              sqrt@i 00D4                                sqrt@q 00D5  
                              sqrt@x 00D8                                sqrt@y 00C8  
                              sqrt@z 00D1                                status 000FD8  
                   saturation@valeur 0083                      __initialization 330C  
                     __CFG_HPOL$HIGH 000000                         __end_of_main 0FA8  
                       __end_of_sqrt 2010                       __CFG_OSC$HSPLL 000000  
                     __CFG_LPOL$HIGH 000000                               ??_main 00EF  
                      ___fttol@sign1 00AA                               ??_sqrt 00CB  
         affichage_position@compteur 00FB                        __activetblptr 000002  
                     ?_triangulation 0192                   i2interrupt_RX@temp 0015  
                   __end_of_PutcUART 1326                     __end_of_PutsUART 3052  
                             ?_floor 00BA                               ?_frexp 0060  
                   __end_of___altoft 2BC0                     ___awdiv@dividend 0066  
                             _ANSEL0 000FB8                     __end_of___ftpack 2500  
                      ?_init_capteur 0001                               i1l3002 3270  
                             i1l3004 3276                               i1l3016 340C  
       __size_ofi2_interruption_INT0 004A                               i2l3130 3448  
                             i2l3106 32BA                               i2l3108 32C0  
                             i2l3116 3586                               i1l2992 3562  
                     __CFG_WDTEN$OFF 000000                     __end_of___lwtoft 3522  
                     __CFG_WINEN$OFF 000000                               _TMR0ON 007EAF  
                             _TMR1ON 007E68                               _PTPERH 000F7A  
                             _PTPERL 000F7B                          _ConfigPorts 2CE0  
                      ?_init_timer_0 0001                        ?_init_timer_1 0001  
                             _IntToC 1326           __end_of_init_uart_logiciel 3622  
                     __CFG_SSPMX$RC7 000000                     __end_of_high_isr 30BE  
                             ___ftge 2998                               ___wmul 348E  
                          ??___awdiv 006A                            ??___ftadd 0080  
                 i2_interruption_QEI 356C                            ??___ftdiv 0098  
                          ??___ftneg 007A                 __size_of_config_uart 001C  
                          ??___ftmul 006E                            ??___ftsub 00C8  
                          ??___fttol 00A5                           _PutIntUART 3590  
                             clear_0 3312                               clear_1 331E  
                             clear_2 332A                     ___awdiv@quotient 006C  
                   ?_ConfigInterrupt 0001                 __end_of_get_distance 26F8  
                             floor@i 00BD                               floor@x 00BA  
              ___ftmul@f3_as_product 0072                  ?i2_interruption_QEI 0001  
               __size_of_cotangeante 006A                               sin@sgn 00D4  
                       __mediumconst 0000                            ??_low_isr 0004  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                               sqrt@og 00CE  
                     ??_init_capteur 0060      __size_ofi2_interuption_QEI_sens 0004  
                 _affichage_position 166E                           __accesstop 0060  
            __end_of__initialization 3348                           ___altoft@c 00B0  
                         ___ftadd@f1 007A                           ___ftadd@f2 007D  
                    __CFG_FLTAMX$RC1 000000                 ??i2_interruption_QEI 0015  
                         ___ftge@ff1 007A                           ___ftge@ff2 007D  
                     ??_init_timer_0 0060                       ??_init_timer_1 0060  
                       eval_poly@res 008F                        ___rparam_used 000001  
                         ___ftdiv@f1 0092                           ___ftdiv@f2 0095  
                         ___ftdiv@f3 009C                           ___ftneg@f1 0077  
                  saturation@maximum 0086                           ___ftmul@f1 0068  
                         ___ftmul@f2 006B                  ?_affichage_position 0001  
                         ___ftsub@f1 00C2                           ___ftsub@f2 00C5  
                         ___fttol@f1 00A1                       __pcstackCOMRAM 0001  
                      ?_interrupt_RX 0001                        ?_interrupt_TX 0001  
                       __pidataBANK0 3652                        __end_of_floor 25FC  
                      __end_of_frexp 2CE0        __size_of_interuption_QEI_sens 0004  
                affichage_position@i 00B9                  affichage_position@j 00B7  
                    ??_triangulation 00EA                           ___lwtoft@c 0068  
               ??_affichage_position 00B3     __end_of_subroutine_interruptions 2E7A  
                   cotangeante@angle 00E4          __end_of_interruption_timer0 362E  
        __end_of_interruption_timer1 3398          __end_of_interruption_timer2 3642  
                            ??_floor 00BD                              ??_frexp 0065  
                         __pbssBANK0 00F0                           __pbssBANK1 0100  
               __size_of_init_system 0026                   __size_of_eval_poly 00EE  
                   ??i2_interrupt_RX 0015                     ??i2_interrupt_TX 0015  
                            ?_IntToC 006E         conversion_degre_radian@angle 00A1  
                     ??_interrupt_RX 0001                       ??_interrupt_TX 0001  
                            ?___ftge 007A                            ?_PutcUART 006E  
                            ?___wmul 0060                            ?_PutsUART 007E  
                    __CFG_WDPS$32768 000000               i2_interuption_QEI_sens 3646  
     __size_ofi2_interruption_timer0 000C       __size_ofi2_interruption_timer1 0046  
     __size_ofi2_interruption_timer2 0004                          ?_PutIntUART 00B0  
                          ?___altoft 00B0        __end_ofi2_interruption_timer0 363A  
      __end_ofi2_interruption_timer1 33DE        __end_ofi2_interruption_timer2 364E  
                          ?___ftpack 0060                            ?___lwtoft 0068  
                    __CFG_PWM4MX$RB5 000000                              _MAXCNTH 000F65  
                            _MAXCNTL 000F64                    ?_interruption_QEI 0001  
                         _config_QEI 3456                    PutcUART@type_uart 0075  
                         _config_pwm 32C4                              _POSCNTH 000F67  
                            _POSCNTL 000F66                   ??_interruption_QEI 0001  
                          ?_high_isr 0001                              IntToC@i 0072  
                            IntToC@j 007C             ?_conversion_degre_radian 00A1  
                    __CFG_PWMPIN$OFF 000000                         _flag_cpateur 0027  
                    __CFG_PWRTEN$OFF 000000         ??i2_subroutine_interruptions 0017  
                            __Hparam 0000          __end_of_init_uart_reception 3614  
                    __size_of_IntToC 0348                              __Lparam 0000  
                         ??_PutcUART 006F                __size_of_get_distance 00FC  
                    __size_of___ftge 00CE                              ___awdiv 28C8  
                            ___ftadd 1BCE                              ___ftdiv 216C  
                         ??_PutsUART 0080                              ___ftneg 34C6  
                    __size_of___wmul 0038                              ___ftmul 2010  
                            ___ftsub 31E0                              ___fttol 22AE  
                         _envoit_pwm 27E6                 __end_of_init_capteur 2FE4  
                       __psmallconst 0300                           ??___altoft 00B4  
                i2_interruption_INT0 327A                      __CFG_STVREN$OFF 000000  
                            __pcinit 330C                           ??___ftpack 0065  
                  __end_of_eval_poly 27E6                              _capteur 0167  
                            __ramtop 0300             __size_of_obtention_angle 0078  
                            __ptext0 0A72                              __ptext1 03A4  
                            __ptext2 2BC0                              __ptext3 30BE  
                            __ptext4 3128                              __ptext5 2A66  
                            __ptext6 1932                              __ptext7 2500  
                            __ptext8 2C50                              __ptext9 2B1E  
                         ??___lwtoft 006B                            _T0CONbits 000FD5  
                PutIntUART@type_uart 00B2                            _T1CONbits 000FCD  
                       __size_of_cos 00B8                         __size_of_tan 0064  
                       __size_of_sin 029C                 __end_of_init_timer_0 35E8  
               __end_of_init_timer_1 3600                  get_distance@delta_x 0198  
                get_distance@delta_y 019B                              _low_isr 0018  
                            main@led 00FD                           ??_high_isr 0018  
                     __pintcode_body 3052                 end_of_initialization 3348  
               ?i2_interruption_INT0 0001                  __size_of_PutIntUART 0022  
                      __Lmediumconst 0000                              int_func 3052  
                       ?_ConfigPorts 0001                         _get_distance 25FC  
  __size_of_subroutine_interruptions 0084                            _RCSTAbits 000FAB  
          ?_subroutine_interruptions 0001                              postdec1 000FE5  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc1 000FE6                              postinc2 000FDE  
                    _OVERFLOW_CODEUR 0026                           _saturation 2BC0  
                          _PORTBbits 000F81                            _PORTCbits 000F82  
                          _PORTDbits 000F83                   _init_uart_logiciel 3614  
                        ?_config_QEI 0001                    _get_distance$3141 0195  
                          _TRISAbits 000F92                            _TRISBbits 000F93  
                          _TRISCbits 000F94                          ?_config_pwm 0001  
                          _TRISDbits 000F95                            _TRISEbits 000F96  
                        _CAP1CONbits 000F63                 __end_of_interrupt_RX 341A  
               __end_of_interrupt_TX 3646                  ?_init_uart_logiciel 0001  
                   envoit_pwm@valeur 00B0                 obtention_angle@angle 00A4  
              ??i2_interruption_INT0 0015                            IntToC@out 0035  
                        ___ftdiv@exp 009F                            _TXSTAbits 000FAC  
                   __CFG_T1OSCMX$OFF 000000                        ??_config_uart 0060  
                        ___ftmul@exp 0071                       __end_of_IntToC 166E  
               ??_init_uart_logiciel 0060                          ?_envoit_pwm 00B0  
                     __end_of___ftge 2A66                     __CFG_EXCLKMX$RC3 000000  
                     __end_of___wmul 34C6                          _BAUDCONbits 000FAA  
                      ??_cotangeante 00E7                    main@premiere_fois 00FE  
                         floor@expon 00C0                  start_initialization 330C  
                         eval_poly@d 0089                           eval_poly@n 008B  
                         eval_poly@x 0086                    ??_obtention_angle 00A4  
               affichage_position@_x 00B3                 affichage_position@_y 00B5  
                        __end_of_cos 2B1E                          __end_of_tan 318C  
                        __end_of_sin 1BCE             __size_of_ConfigInterrupt 0088  
       __end_of_interuption_QEI_sens 363E                           frexp@value 0060  
 __end_ofi2_subroutine_interruptions 2EFE           i2_subroutine_interruptions 2E7A  
        __size_ofi2_interruption_QEI 0024                             ??_IntToC 0070  
              __size_of_init_capteur 006E                  __size_of_config_QEI 0038  
            ?i2_interuption_QEI_sens 0001                             ??___ftge 0080  
                __size_of_config_pwm 0048                             ??___wmul 0064  
                        ?_saturation 0083                          __pdataBANK0 00FD  
                       ??_PutIntUART 00B2                    __size_of_PutcUART 037E  
              __size_of_init_timer_0 001A                __size_of_init_timer_1 0018  
                __end_of_config_uart 35CE                    __size_of_PutsUART 006E  
                        _DFLTCONbits 000F60                  triangulation@angle1 0194  
                triangulation@angle2 0197                  triangulation@angle3 019A  
                  __size_of___altoft 00A2                    __size_of___ftpack 0120  
              __end_of_triangulation 0A72                          __pbssCOMRAM 0026  
                  __size_of___lwtoft 002C                        __pcstackBANK0 0060  
                      __pcstackBANK1 0192          __size_of_affichage_position 02C4  
                      ??_init_system 0060                  __end_of_cotangeante 3128  
                       _init_capteur 2F76                  __size_of_envoit_pwm 00E2  
                  __size_of_high_isr 30B6                           sin@coeff_a 0301  
                         sin@coeff_b 0310                   __end_of_PutIntUART 35B2  
 i2subroutine_interruptions@priorite 0017     subroutine_interruptions@priorite 0003  
       __size_of_interruption_timer0 000C         __size_of_interruption_timer1 0046  
       __size_of_interruption_timer2 0004            __size_of_interruption_QEI 0024  
     __end_ofi2_interuption_QEI_sens 364A                 __size_of_ConfigPorts 008E  
                       _init_timer_0 35CE                         _init_timer_1 35E8  
                          __pintcode 0008                             ?___awdiv 0066  
                           ?___ftadd 007A                             ?___ftdiv 0092  
                           ?___ftneg 0077     __size_of_conversion_degre_radian 0054  
                           ?___ftmul 0068                             ?___ftsub 00C2  
                           ?___fttol 00A1                     get_distance@actu 00E1  
                        __pintcodelo 0018                       _uart_reception 0100  
              i2_interruption_timer0 362E                i2_interruption_timer1 3398  
              i2_interruption_timer2 364A                __size_of_interrupt_RX 003C  
              __size_of_interrupt_TX 0004                          __smallconst 0300  
                          _eval_poly 26F8                    PutsUART@type_uart 0082  
                           ?_low_isr 0001                        PutcUART@octet 006E  
                     __size_of_floor 00FC                       __size_of_frexp 0090  
                  _interruption_INT0 3230                   get_distance@ancien 00DB  
                __size_of_saturation 0090                  __end_of_init_system 3548  
                     ___wmul@product 0064                             _LATCbits 000F8B  
                 ?_interruption_INT0 0001                    ??_ConfigInterrupt 0060  
                           _IPR1bits 000F9F                             _IPR2bits 000FA2  
                           _PIE1bits 000F9D                             _IPR3bits 000FA5  
                           _PIE2bits 000FA0                             _PIE3bits 000FA3  
                           _PIR1bits 000F9E                             _PIR2bits 000FA1  
                           _PIR3bits 000FA4                          _config_uart 35B2  
                           _RCONbits 000FD0                  ??_interruption_INT0 0001  
                       _interrupt_RX 33DE                         _interrupt_TX 3642  
               _interuption_QEI_sens 363A         __size_of_init_uart_reception 0014  
            __size_ofi2_interrupt_RX 003C              __size_ofi2_interrupt_TX 0004  
                        _cotangeante 30BE                    ___wmul@multiplier 0060  
                           IntToC@nb 006E                         ??_config_QEI 0060  
                         ?_eval_poly 0086                         ??_config_pwm 0060  
          __end_of_interruption_INT0 327A                          _INTCON2bits 000FF1  
                        _INTCON3bits 000FF0                            frexp@eptr 0063  
                           __Hrparam 0000                             __Lrparam 0000  
                 __end_of_config_QEI 348E                             _PutcUART 0FA8  
                 __end_of_config_pwm 330C                         ??_envoit_pwm 00B3  
                           _PutsUART 2FE4                     __size_of___awdiv 00D0  
                   interrupt_RX@temp 0001                      _obtention_angle 2EFE  
                   __size_of___ftadd 027E                ?_interuption_QEI_sens 0001  
                   __size_of___ftdiv 0142                     __size_of___ftneg 0030  
                           ___altoft 2B1E                     __size_of___ftmul 015C  
                           _cos$3144 00D8                     __size_of___ftsub 0050  
                   __size_of___fttol 0132                             ___ftpack 23E0  
             ?i2_interruption_timer0 0001               ?i2_interruption_timer1 0001  
             ?i2_interruption_timer2 0001                             ___lwtoft 34F6  
        __end_ofi2_interruption_INT0 32C4                             _tan$3142 00DE  
                           _tan$3143 00E1                     __size_of_low_isr 0090  
                           __ptext10 26F8                             __ptext11 318C  
                           __ptext20 35B2                             __ptext12 2EFE  
                           __ptext21 32C4                             __ptext13 34F6  
                           __ptext30 34C6                             __ptext22 3456  
                           __ptext14 3522                             __ptext31 2010  
                           __ptext23 2CE0                             __ptext15 3600  
                           __ptext40 1326                             __ptext32 2998  
                           __ptext24 2D6E                             __ptext16 3614  
                           __ptext41 348E                             __ptext33 166E  
                           __ptext25 25FC                             __ptext17 35E8  
                           __ptext50 3230                             __ptext42 28C8  
                           __ptext34 22AE                             __ptext26 1E4C  
                           __ptext18 35CE                             __ptext51 3642  
                           __ptext35 216C                             __ptext27 31E0  
                           __ptext19 2F76                             __ptext60 327A  
                           __ptext52 33DE                             __ptext44 2DF6  
                           __ptext36 23E0                             __ptext28 1BCE  
                           __ptext61 364E                             __ptext45 363A  
                           __ptext37 3590                             __ptext29 27E6  
                           __ptext62 341A                             __ptext54 2E7A  
                           __ptext46 363E                             __ptext38 2FE4  
                           __ptext55 3646                             __ptext47 3352  
                           __ptext39 0FA8                             __ptext56 364A  
                           __ptext48 3622                             __ptext57 3398  
                           __ptext49 3548                          _init_system 3522  
                           __ptext58 362E                             __ptext59 356C  
                           _sin$3145 00CE                         PutIntUART@nb 00B0  
                      _uart_logiciel 0028                             _high_isr 0008  
                 __end_of_envoit_pwm 28C8                        __size_of_main 0536  
                      __size_of_sqrt 01C4                     _interruption_QEI 3548  
        ?i2_subroutine_interruptions 0001             _subroutine_interruptions 2DF6  
               get_distance@distance 0192              _conversion_degre_radian 318C  
        __size_of_init_uart_logiciel 000E                         ??_saturation 0089  
                           main@argc 00EA                             main@argv 00EC  
                _interruption_timer0 3622                  _interruption_timer1 3352  
                _interruption_timer2 363E                           _INTCONbits 000FF2  
                        ??_eval_poly 008D                           _QEICONbits 000FB6  
         __size_of_interruption_INT0 004A                             intlevel1 0000  
                           intlevel2 0000           __end_ofi2_interruption_QEI 3590  
                 __end_of_saturation 2C50                 ?_interruption_timer0 0001  
               ?_interruption_timer1 0001                 ?_interruption_timer2 0001  
                     triangulation@c 0192                       triangulation@t 01A9  
            __end_of_obtention_angle 2F76                          _PWMCON0bits 000F6F  
                        _PWMCON1bits 000F6E               ??_interuption_QEI_sens 0001  
               envoit_pwm@abs_valeur 00B3                           _PTCON0bits 000F7F  
                     PutsUART@chaine 007E                           _PTCON1bits 000F7E  
                     i2_interrupt_RX 341A                       i2_interrupt_TX 364E  
         __end_of_affichage_position 1932                      _ConfigInterrupt 2D6E  
                _init_uart_reception 3600                        ??_ConfigPorts 0060  
                      ?_get_distance 00DB                ??_interruption_timer0 0001  
              ??_interruption_timer1 0001                ??_interruption_timer2 0001  
          ??_conversion_degre_radian 00A4               __size_of_triangulation 06CE  
                       ?_config_uart 0001  
