

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon May 04 00:04:01 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4431
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    75                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    86                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    87  0000                     
    88                           	psect	idataCOMRAM
    89  0038EA                     __pidataCOMRAM:
    90                           	opt stack 0
    91                           
    92                           ;initializer for main@premiere_fois
    93  0038EA  01                 	db	1
    94                           
    95                           	psect	mediumconst
    96  003E00                     __pmediumconst:
    97                           	opt stack 0
    98  003E00  00                 	db	0
    99  003E01                     sin@coeff_a:
   100                           	opt stack 0
   101  003E01  F4                 	db	244
   102  003E02  4A                 	db	74
   103  003E03  48                 	db	72
   104  003E04  95                 	db	149
   105  003E05  95                 	db	149
   106  003E06  C7                 	db	199
   107  003E07  C1                 	db	193
   108  003E08  DC                 	db	220
   109  003E09  45                 	db	69
   110  003E0A  DC                 	db	220
   111  003E0B  6D                 	db	109
   112  003E0C  C3                 	db	195
   113  003E0D  B3                 	db	179
   114  003E0E  33                 	db	51
   115  003E0F  40                 	db	64
   116  003E10                     __end_ofsin@coeff_a:
   117                           	opt stack 0
   118  003E10                     sin@coeff_b:
   119                           	opt stack 0
   120  003E10  34                 	db	52
   121  003E11  01                 	db	1
   122  003E12  48                 	db	72
   123  003E13  9D                 	db	157
   124  003E14  B0                 	db	176
   125  003E15  45                 	db	69
   126  003E16  00                 	db	0
   127  003E17  DA                 	db	218
   128  003E18  42                 	db	66
   129  003E19  00                 	db	0
   130  003E1A  80                 	db	128
   131  003E1B  3F                 	db	63
   132  003E1C                     __end_ofsin@coeff_b:
   133                           	opt stack 0
   134  0000                     _TMR1	set	4046
   135  0000                     _ANSEL0	set	4024
   136  0000                     _BAUDCONbits	set	4010
   137  0000                     _CAP1CONbits	set	3939
   138  0000                     _DFLTCONbits	set	3936
   139  0000                     _INTCON2bits	set	4081
   140  0000                     _INTCON3bits	set	4080
   141  0000                     _INTCONbits	set	4082
   142  0000                     _IPR1bits	set	3999
   143  0000                     _IPR2bits	set	4002
   144  0000                     _IPR3bits	set	4005
   145  0000                     _LATCbits	set	3979
   146  0000                     _MAXCNTH	set	3941
   147  0000                     _MAXCNTL	set	3940
   148  0000                     _PDC0H	set	3960
   149  0000                     _PDC0L	set	3961
   150  0000                     _PDC1H	set	3958
   151  0000                     _PDC1L	set	3959
   152  0000                     _PDC2H	set	3956
   153  0000                     _PDC2L	set	3957
   154  0000                     _PDC3H	set	3954
   155  0000                     _PDC3L	set	3955
   156  0000                     _PIE1bits	set	3997
   157  0000                     _PIE2bits	set	4000
   158  0000                     _PIE3bits	set	4003
   159  0000                     _PIR1bits	set	3998
   160  0000                     _PIR2bits	set	4001
   161  0000                     _PIR3bits	set	4004
   162  0000                     _PORTBbits	set	3969
   163  0000                     _PORTCbits	set	3970
   164  0000                     _PORTDbits	set	3971
   165  0000                     _POSCNTH	set	3943
   166  0000                     _POSCNTL	set	3942
   167  0000                     _PTCON0bits	set	3967
   168  0000                     _PTCON1bits	set	3966
   169  0000                     _PTPERH	set	3962
   170  0000                     _PTPERL	set	3963
   171  0000                     _PWMCON0bits	set	3951
   172  0000                     _PWMCON1bits	set	3950
   173  0000                     _QEICONbits	set	4022
   174  0000                     _RCONbits	set	4048
   175  0000                     _RCREG	set	4014
   176  0000                     _RCSTAbits	set	4011
   177  0000                     _SPBRG	set	4015
   178  0000                     _T0CONbits	set	4053
   179  0000                     _T1CONbits	set	4045
   180  0000                     _TMR0L	set	4054
   181  0000                     _TRISAbits	set	3986
   182  0000                     _TRISBbits	set	3987
   183  0000                     _TRISCbits	set	3988
   184  0000                     _TRISDbits	set	3989
   185  0000                     _TRISEbits	set	3990
   186  0000                     _TXREG	set	4013
   187  0000                     _TXSTAbits	set	4012
   188  0000                     _LATA0	set	31816
   189  0000                     _LATA1	set	31817
   190  0000                     _LATA2	set	31818
   191  0000                     _LATA3	set	31819
   192  0000                     _LATA4	set	31820
   193  0000                     _LATA5	set	31821
   194  0000                     _LATA6	set	31822
   195  0000                     _LATA7	set	31823
   196  0000                     _LATB0	set	31824
   197  0000                     _LATB1	set	31825
   198  0000                     _LATB2	set	31826
   199  0000                     _LATB3	set	31827
   200  0000                     _LATB4	set	31828
   201  0000                     _LATB5	set	31829
   202  0000                     _LATB6	set	31830
   203  0000                     _LATB7	set	31831
   204  0000                     _LATC0	set	31832
   205  0000                     _LATC1	set	31833
   206  0000                     _LATC2	set	31834
   207  0000                     _LATC3	set	31835
   208  0000                     _LATC4	set	31836
   209  0000                     _LATC5	set	31837
   210  0000                     _LATC6	set	31838
   211  0000                     _LATC7	set	31839
   212  0000                     _LATD0	set	31840
   213  0000                     _LATD1	set	31841
   214  0000                     _LATD2	set	31842
   215  0000                     _LATD3	set	31843
   216  0000                     _LATD4	set	31844
   217  0000                     _LATD5	set	31845
   218  0000                     _LATD6	set	31846
   219  0000                     _LATD7	set	31847
   220  0000                     _LATE0	set	31848
   221  0000                     _LATE1	set	31849
   222  0000                     _LATE2	set	31850
   223  0000                     _TMR0ON	set	32431
   224  0000                     _TMR1ON	set	32360
   225  003E1C                     STR_12:
   226                           
   227                           ; BSR set to: 1
   228  003E1C  0A                 	db	10
   229  003E1D  0D                 	db	13
   230  003E1E  2F                 	db	47
   231  003E1F  21                 	db	33
   232  003E20  5C                 	db	92	;'\'
   233  003E21  2F                 	db	47
   234  003E22  21                 	db	33
   235  003E23  5C                 	db	92	;'\'
   236  003E24  20                 	db	32
   237  003E25  42                 	db	66	;'B'
   238  003E26  41                 	db	65	;'A'
   239  003E27  4C                 	db	76	;'L'
   240  003E28  49                 	db	73	;'I'
   241  003E29  53                 	db	83	;'S'
   242  003E2A  45                 	db	69	;'E'
   243  003E2B  20                 	db	32
   244  003E2C  4D                 	db	77	;'M'
   245  003E2D  45                 	db	69	;'E'
   246  003E2E  52                 	db	82	;'R'
   247  003E2F  45                 	db	69	;'E'
   248  003E30  20                 	db	32
   249  003E31  4E                 	db	78	;'N'
   250  003E32  4F                 	db	79	;'O'
   251  003E33  4E                 	db	78	;'N'
   252  003E34  20                 	db	32
   253  003E35  52                 	db	82	;'R'
   254  003E36  45                 	db	69	;'E'
   255  003E37  54                 	db	84	;'T'
   256  003E38  52                 	db	82	;'R'
   257  003E39  4F                 	db	79	;'O'
   258  003E3A  55                 	db	85	;'U'
   259  003E3B  56                 	db	86	;'V'
   260  003E3C  45                 	db	69	;'E'
   261  003E3D  20                 	db	32
   262  003E3E  20                 	db	32
   263  003E3F  21                 	db	33
   264  003E40  21                 	db	33
   265  003E41  21                 	db	33
   266  003E42  21                 	db	33
   267  003E43  21                 	db	33
   268  003E44  21                 	db	33
   269  003E45  20                 	db	32
   270  003E46  2F                 	db	47
   271  003E47  21                 	db	33
   272  003E48  5C                 	db	92	;'\'
   273  003E49  2F                 	db	47
   274  003E4A  21                 	db	33
   275  003E4B  5C                 	db	92	;'\'
   276  003E4C  0A                 	db	10
   277  003E4D  0D                 	db	13
   278  003E4E  00                 	db	0
   279  003E4F                     STR_2:
   280                           
   281                           ; BSR set to: 1
   282  003E4F  0A                 	db	10
   283  003E50  0A                 	db	10
   284  003E51  50                 	db	80	;'P'
   285  003E52  72                 	db	114	;'r'
   286  003E53  6F                 	db	111	;'o'
   287  003E54  62                 	db	98	;'b'
   288  003E55  6C                 	db	108	;'l'
   289  003E56  65                 	db	101	;'e'
   290  003E57  6D                 	db	109	;'m'
   291  003E58  65                 	db	101	;'e'
   292  003E59  20                 	db	32
   293  003E5A  64                 	db	100	;'d'
   294  003E5B  65                 	db	101	;'e'
   295  003E5C  20                 	db	32
   296  003E5D  64                 	db	100	;'d'
   297  003E5E  65                 	db	101	;'e'
   298  003E5F  74                 	db	116	;'t'
   299  003E60  65                 	db	101	;'e'
   300  003E61  63                 	db	99	;'c'
   301  003E62  74                 	db	116	;'t'
   302  003E63  69                 	db	105	;'i'
   303  003E64  6F                 	db	111	;'o'
   304  003E65  6E                 	db	110	;'n'
   305  003E66  20                 	db	32
   306  003E67  64                 	db	100	;'d'
   307  003E68  65                 	db	101	;'e'
   308  003E69  20                 	db	32
   309  003E6A  62                 	db	98	;'b'
   310  003E6B  61                 	db	97	;'a'
   311  003E6C  6C                 	db	108	;'l'
   312  003E6D  69                 	db	105	;'i'
   313  003E6E  73                 	db	115	;'s'
   314  003E6F  65                 	db	101	;'e'
   315  003E70  73                 	db	115	;'s'
   316  003E71  20                 	db	32
   317  003E72  2E                 	db	46
   318  003E73  2E                 	db	46
   319  003E74  2E                 	db	46
   320  003E75  2E                 	db	46
   321  003E76  20                 	db	32
   322  003E77  3A                 	db	58	;':'
   323  003E78  20                 	db	32
   324  003E79  00                 	db	0
   325  003E7A                     STR_9:
   326                           
   327                           ; BSR set to: 1
   328  003E7A  0A                 	db	10
   329  003E7B  0A                 	db	10
   330  003E7C  0A                 	db	10
   331  003E7D  0D                 	db	13
   332  003E7E  20                 	db	32
   333  003E7F  42                 	db	66	;'B'
   334  003E80  41                 	db	65	;'A'
   335  003E81  4C                 	db	76	;'L'
   336  003E82  49                 	db	73	;'I'
   337  003E83  53                 	db	83	;'S'
   338  003E84  45                 	db	69	;'E'
   339  003E85  20                 	db	32
   340  003E86  4D                 	db	77	;'M'
   341  003E87  45                 	db	69	;'E'
   342  003E88  52                 	db	82	;'R'
   343  003E89  45                 	db	69	;'E'
   344  003E8A  20                 	db	32
   345  003E8B  52                 	db	82	;'R'
   346  003E8C  45                 	db	69	;'E'
   347  003E8D  54                 	db	84	;'T'
   348  003E8E  52                 	db	82	;'R'
   349  003E8F  4F                 	db	79	;'O'
   350  003E90  55                 	db	85	;'U'
   351  003E91  56                 	db	86	;'V'
   352  003E92  45                 	db	69	;'E'
   353  003E93  45                 	db	69	;'E'
   354  003E94  20                 	db	32
   355  003E95  31                 	db	49	;'1'
   356  003E96  20                 	db	32
   357  003E97  21                 	db	33
   358  003E98  21                 	db	33
   359  003E99  21                 	db	33
   360  003E9A  21                 	db	33
   361  003E9B  21                 	db	33
   362  003E9C  21                 	db	33
   363  003E9D  20                 	db	32
   364  003E9E  0A                 	db	10
   365  003E9F  0D                 	db	13
   366  003EA0  00                 	db	0
   367  003EA1                     STR_11:
   368                           
   369                           ; BSR set to: 1
   370  003EA1  0A                 	db	10
   371  003EA2  0A                 	db	10
   372  003EA3  0A                 	db	10
   373  003EA4  0D                 	db	13
   374  003EA5  20                 	db	32
   375  003EA6  42                 	db	66	;'B'
   376  003EA7  41                 	db	65	;'A'
   377  003EA8  4C                 	db	76	;'L'
   378  003EA9  49                 	db	73	;'I'
   379  003EAA  53                 	db	83	;'S'
   380  003EAB  45                 	db	69	;'E'
   381  003EAC  20                 	db	32
   382  003EAD  4D                 	db	77	;'M'
   383  003EAE  45                 	db	69	;'E'
   384  003EAF  52                 	db	82	;'R'
   385  003EB0  45                 	db	69	;'E'
   386  003EB1  20                 	db	32
   387  003EB2  52                 	db	82	;'R'
   388  003EB3  45                 	db	69	;'E'
   389  003EB4  54                 	db	84	;'T'
   390  003EB5  52                 	db	82	;'R'
   391  003EB6  4F                 	db	79	;'O'
   392  003EB7  55                 	db	85	;'U'
   393  003EB8  56                 	db	86	;'V'
   394  003EB9  45                 	db	69	;'E'
   395  003EBA  45                 	db	69	;'E'
   396  003EBB  20                 	db	32
   397  003EBC  32                 	db	50	;'2'
   398  003EBD  20                 	db	32
   399  003EBE  21                 	db	33
   400  003EBF  21                 	db	33
   401  003EC0  21                 	db	33
   402  003EC1  21                 	db	33
   403  003EC2  21                 	db	33
   404  003EC3  21                 	db	33
   405  003EC4  20                 	db	32
   406  003EC5  0A                 	db	10
   407  003EC6  0D                 	db	13
   408  003EC7  00                 	db	0
   409  003EC8                     STR_7:
   410                           
   411                           ; BSR set to: 1
   412  003EC8  0A                 	db	10
   413  003EC9  0A                 	db	10
   414  003ECA  0A                 	db	10
   415  003ECB  0D                 	db	13
   416  003ECC  20                 	db	32
   417  003ECD  42                 	db	66	;'B'
   418  003ECE  41                 	db	65	;'A'
   419  003ECF  4C                 	db	76	;'L'
   420  003ED0  49                 	db	73	;'I'
   421  003ED1  53                 	db	83	;'S'
   422  003ED2  45                 	db	69	;'E'
   423  003ED3  20                 	db	32
   424  003ED4  4D                 	db	77	;'M'
   425  003ED5  45                 	db	69	;'E'
   426  003ED6  52                 	db	82	;'R'
   427  003ED7  45                 	db	69	;'E'
   428  003ED8  20                 	db	32
   429  003ED9  49                 	db	73	;'I'
   430  003EDA  4E                 	db	78	;'N'
   431  003EDB  43                 	db	67	;'C'
   432  003EDC  48                 	db	72	;'H'
   433  003EDD  41                 	db	65	;'A'
   434  003EDE  4E                 	db	78	;'N'
   435  003EDF  47                 	db	71	;'G'
   436  003EE0  45                 	db	69	;'E'
   437  003EE1  45                 	db	69	;'E'
   438  003EE2  20                 	db	32
   439  003EE3  21                 	db	33
   440  003EE4  21                 	db	33
   441  003EE5  21                 	db	33
   442  003EE6  21                 	db	33
   443  003EE7  21                 	db	33
   444  003EE8  21                 	db	33
   445  003EE9  20                 	db	32
   446  003EEA  0A                 	db	10
   447  003EEB  0D                 	db	13
   448  003EEC  00                 	db	0
   449  003EED                     STR_4:
   450                           
   451                           ; BSR set to: 1
   452  003EED  0A                 	db	10
   453  003EEE  0A                 	db	10
   454  003EEF  0A                 	db	10
   455  003EF0  0D                 	db	13
   456  003EF1  20                 	db	32
   457  003EF2  42                 	db	66	;'B'
   458  003EF3  41                 	db	65	;'A'
   459  003EF4  4C                 	db	76	;'L'
   460  003EF5  49                 	db	73	;'I'
   461  003EF6  53                 	db	83	;'S'
   462  003EF7  45                 	db	69	;'E'
   463  003EF8  20                 	db	32
   464  003EF9  4D                 	db	77	;'M'
   465  003EFA  45                 	db	69	;'E'
   466  003EFB  52                 	db	82	;'R'
   467  003EFC  45                 	db	69	;'E'
   468  003EFD  20                 	db	32
   469  003EFE  50                 	db	80	;'P'
   470  003EFF  45                 	db	69	;'E'
   471  003F00  52                 	db	82	;'R'
   472  003F01  44                 	db	68	;'D'
   473  003F02  55                 	db	85	;'U'
   474  003F03  45                 	db	69	;'E'
   475  003F04  20                 	db	32
   476  003F05  21                 	db	33
   477  003F06  21                 	db	33
   478  003F07  21                 	db	33
   479  003F08  21                 	db	33
   480  003F09  21                 	db	33
   481  003F0A  21                 	db	33
   482  003F0B  20                 	db	32
   483  003F0C  0A                 	db	10
   484  003F0D  0D                 	db	13
   485  003F0E  00                 	db	0
   486  003F0F                     STR_5:
   487                           
   488                           ; BSR set to: 1
   489  003F0F  41                 	db	65	;'A'
   490  003F10  6E                 	db	110	;'n'
   491  003F11  63                 	db	99	;'c'
   492  003F12  69                 	db	105	;'i'
   493  003F13  65                 	db	101	;'e'
   494  003F14  6E                 	db	110	;'n'
   495  003F15  6E                 	db	110	;'n'
   496  003F16  65                 	db	101	;'e'
   497  003F17  20                 	db	32
   498  003F18  70                 	db	112	;'p'
   499  003F19  6F                 	db	111	;'o'
   500  003F1A  73                 	db	115	;'s'
   501  003F1B  69                 	db	105	;'i'
   502  003F1C  74                 	db	116	;'t'
   503  003F1D  69                 	db	105	;'i'
   504  003F1E  6F                 	db	111	;'o'
   505  003F1F  6E                 	db	110	;'n'
   506  003F20  20                 	db	32
   507  003F21  63                 	db	99	;'c'
   508  003F22  6F                 	db	111	;'o'
   509  003F23  6E                 	db	110	;'n'
   510  003F24  6E                 	db	110	;'n'
   511  003F25  75                 	db	117	;'u'
   512  003F26  65                 	db	101	;'e'
   513  003F27  20                 	db	32
   514  003F28  3A                 	db	58	;':'
   515  003F29  20                 	db	32
   516  003F2A  0A                 	db	10
   517  003F2B  0D                 	db	13
   518  003F2C  00                 	db	0
   519  003F2D                     STR_6:
   520                           
   521                           ; BSR set to: 1
   522  003F2D  0A                 	db	10
   523  003F2E  0D                 	db	13
   524  003F2F  54                 	db	84	;'T'
   525  003F30  65                 	db	101	;'e'
   526  003F31  6E                 	db	110	;'n'
   527  003F32  61                 	db	97	;'a'
   528  003F33  74                 	db	116	;'t'
   529  003F34  69                 	db	105	;'i'
   530  003F35  76                 	db	118	;'v'
   531  003F36  65                 	db	101	;'e'
   532  003F37  20                 	db	32
   533  003F38  64                 	db	100	;'d'
   534  003F39  65                 	db	101	;'e'
   535  003F3A  20                 	db	32
   536  003F3B  62                 	db	98	;'b'
   537  003F3C  61                 	db	97	;'a'
   538  003F3D  73                 	db	115	;'s'
   539  003F3E  65                 	db	101	;'e'
   540  003F3F  20                 	db	32
   541  003F40  3A                 	db	58	;':'
   542  003F41  20                 	db	32
   543  003F42  20                 	db	32
   544  003F43  0A                 	db	10
   545  003F44  0D                 	db	13
   546  003F45  00                 	db	0
   547  003F46                     STR_15:
   548                           
   549                           ; BSR set to: 1
   550  003F46  0A                 	db	10
   551  003F47  0D                 	db	13
   552  003F48  20                 	db	32
   553  003F49  52                 	db	82	;'R'
   554  003F4A  4F                 	db	79	;'O'
   555  003F4B  54                 	db	84	;'T'
   556  003F4C  41                 	db	65	;'A'
   557  003F4D  54                 	db	84	;'T'
   558  003F4E  49                 	db	73	;'I'
   559  003F4F  4F                 	db	79	;'O'
   560  003F50  4E                 	db	78	;'N'
   561  003F51  20                 	db	32
   562  003F52  41                 	db	65	;'A'
   563  003F53  20                 	db	32
   564  003F54  47                 	db	71	;'G'
   565  003F55  41                 	db	65	;'A'
   566  003F56  55                 	db	85	;'U'
   567  003F57  43                 	db	67	;'C'
   568  003F58  48                 	db	72	;'H'
   569  003F59  45                 	db	69	;'E'
   570  003F5A  20                 	db	32
   571  003F5B  0A                 	db	10
   572  003F5C  0D                 	db	13
   573  003F5D  00                 	db	0
   574  003F5E                     STR_16:
   575                           
   576                           ; BSR set to: 1
   577  003F5E  0A                 	db	10
   578  003F5F  0D                 	db	13
   579  003F60  20                 	db	32
   580  003F61  52                 	db	82	;'R'
   581  003F62  4F                 	db	79	;'O'
   582  003F63  54                 	db	84	;'T'
   583  003F64  41                 	db	65	;'A'
   584  003F65  54                 	db	84	;'T'
   585  003F66  49                 	db	73	;'I'
   586  003F67  4F                 	db	79	;'O'
   587  003F68  4E                 	db	78	;'N'
   588  003F69  20                 	db	32
   589  003F6A  41                 	db	65	;'A'
   590  003F6B  20                 	db	32
   591  003F6C  44                 	db	68	;'D'
   592  003F6D  52                 	db	82	;'R'
   593  003F6E  4F                 	db	79	;'O'
   594  003F6F  49                 	db	73	;'I'
   595  003F70  54                 	db	84	;'T'
   596  003F71  45                 	db	69	;'E'
   597  003F72  20                 	db	32
   598  003F73  0A                 	db	10
   599  003F74  0D                 	db	13
   600  003F75  00                 	db	0
   601  003F76                     STR_3:
   602                           
   603                           ; BSR set to: 1
   604  003F76  20                 	db	32
   605  003F77  42                 	db	66	;'B'
   606  003F78  61                 	db	97	;'a'
   607  003F79  6C                 	db	108	;'l'
   608  003F7A  69                 	db	105	;'i'
   609  003F7B  73                 	db	115	;'s'
   610  003F7C  65                 	db	101	;'e'
   611  003F7D  73                 	db	115	;'s'
   612  003F7E  20                 	db	32
   613  003F7F  64                 	db	100	;'d'
   614  003F80  65                 	db	101	;'e'
   615  003F81  74                 	db	116	;'t'
   616  003F82  65                 	db	101	;'e'
   617  003F83  63                 	db	99	;'c'
   618  003F84  74                 	db	116	;'t'
   619  003F85  65                 	db	101	;'e'
   620  003F86  65                 	db	101	;'e'
   621  003F87  73                 	db	115	;'s'
   622  003F88  20                 	db	32
   623  003F89  0A                 	db	10
   624  003F8A  0A                 	db	10
   625  003F8B  0A                 	db	10
   626  003F8C  0D                 	db	13
   627  003F8D  00                 	db	0
   628  003F8E                     STR_1:
   629                           
   630                           ; BSR set to: 1
   631  003F8E  42                 	db	66	;'B'
   632  003F8F  6F                 	db	111	;'o'
   633  003F90  6E                 	db	110	;'n'
   634  003F91  6A                 	db	106	;'j'
   635  003F92  6F                 	db	111	;'o'
   636  003F93  75                 	db	117	;'u'
   637  003F94  72                 	db	114	;'r'
   638  003F95  20                 	db	32
   639  003F96  6C                 	db	108	;'l'
   640  003F97  65                 	db	101	;'e'
   641  003F98  73                 	db	115	;'s'
   642  003F99  20                 	db	32
   643  003F9A  61                 	db	97	;'a'
   644  003F9B  6D                 	db	109	;'m'
   645  003F9C  69                 	db	105	;'i'
   646  003F9D  73                 	db	115	;'s'
   647  003F9E  20                 	db	32
   648  003F9F  21                 	db	33
   649  003FA0  21                 	db	33
   650  003FA1  21                 	db	33
   651  003FA2  20                 	db	32
   652  003FA3  3D                 	db	61	;'='
   653  003FA4  29                 	db	41
   654  003FA5  00                 	db	0
   655  003FA6                     
   656                           ; BSR set to: 1
   657  003FA6  20                 	db	32
   658  003FA7  64                 	db	100	;'d'
   659  003FA8  61                 	db	97	;'a'
   660  003FA9  6E                 	db	110	;'n'
   661  003FAA  73                 	db	115	;'s'
   662  003FAB  20                 	db	32
   663  003FAC  6C                 	db	108	;'l'
   664  003FAD  65                 	db	101	;'e'
   665  003FAE  20                 	db	32
   666  003FAF  62                 	db	98	;'b'
   667  003FB0  75                 	db	117	;'u'
   668  003FB1  66                 	db	102	;'f'
   669  003FB2  66                 	db	102	;'f'
   670  003FB3  65                 	db	101	;'e'
   671  003FB4  72                 	db	114	;'r'
   672  003FB5  20                 	db	32
   673  003FB6  0A                 	db	10
   674  003FB7  0A                 	db	10
   675  003FB8  0D                 	db	13
   676  003FB9  00                 	db	0
   677  003FBA                     STR_10:
   678                           
   679                           ; BSR set to: 1
   680  003FBA  0A                 	db	10
   681  003FBB  0D                 	db	13
   682  003FBC  20                 	db	32
   683  003FBD  54                 	db	84	;'T'
   684  003FBE  65                 	db	101	;'e'
   685  003FBF  6E                 	db	110	;'n'
   686  003FC0  61                 	db	97	;'a'
   687  003FC1  74                 	db	116	;'t'
   688  003FC2  69                 	db	105	;'i'
   689  003FC3  76                 	db	118	;'v'
   690  003FC4  65                 	db	101	;'e'
   691  003FC5  20                 	db	32
   692  003FC6  32                 	db	50	;'2'
   693  003FC7  20                 	db	32
   694  003FC8  3A                 	db	58	;':'
   695  003FC9  20                 	db	32
   696  003FCA  20                 	db	32
   697  003FCB  0A                 	db	10
   698  003FCC  0D                 	db	13
   699  003FCD  00                 	db	0
   700  003FCE                     STR_8:
   701                           
   702                           ; BSR set to: 1
   703  003FCE  0A                 	db	10
   704  003FCF  0D                 	db	13
   705  003FD0  54                 	db	84	;'T'
   706  003FD1  65                 	db	101	;'e'
   707  003FD2  6E                 	db	110	;'n'
   708  003FD3  61                 	db	97	;'a'
   709  003FD4  74                 	db	116	;'t'
   710  003FD5  69                 	db	105	;'i'
   711  003FD6  76                 	db	118	;'v'
   712  003FD7  65                 	db	101	;'e'
   713  003FD8  20                 	db	32
   714  003FD9  31                 	db	49	;'1'
   715  003FDA  20                 	db	32
   716  003FDB  3A                 	db	58	;':'
   717  003FDC  20                 	db	32
   718  003FDD  20                 	db	32
   719  003FDE  0A                 	db	10
   720  003FDF  0D                 	db	13
   721  003FE0  00                 	db	0
   722  003FE1                     STR_17:
   723                           
   724                           ; BSR set to: 1
   725  003FE1  50                 	db	80	;'P'
   726  003FE2  6F                 	db	111	;'o'
   727  003FE3  73                 	db	115	;'s'
   728  003FE4  69                 	db	105	;'i'
   729  003FE5  74                 	db	116	;'t'
   730  003FE6  69                 	db	105	;'i'
   731  003FE7  6F                 	db	111	;'o'
   732  003FE8  6E                 	db	110	;'n'
   733  003FE9  20                 	db	32
   734  003FEA  3A                 	db	58	;':'
   735  003FEB  20                 	db	32
   736  003FEC  58                 	db	88	;'X'
   737  003FED  20                 	db	32
   738  003FEE  3A                 	db	58	;':'
   739  003FEF  20                 	db	32
   740  003FF0  00                 	db	0
   741  003FF1                     
   742                           ; BSR set to: 1
   743  003FF1  49                 	db	73	;'I'
   744  003FF2  4C                 	db	76	;'L'
   745  003FF3  20                 	db	32
   746  003FF4  79                 	db	121	;'y'
   747  003FF5  20                 	db	32
   748  003FF6  61                 	db	97	;'a'
   749  003FF7  20                 	db	32
   750  003FF8  00                 	db	0
   751  003FF9                     STR_18:
   752                           
   753                           ; BSR set to: 1
   754  003FF9  20                 	db	32
   755  003FFA  59                 	db	89	;'Y'
   756  003FFB  20                 	db	32
   757  003FFC  3A                 	db	58	;':'
   758  003FFD  20                 	db	32
   759  003FFE  00                 	db	0
   760  0000                     
   761                           ; #config settings
   762  003FFF  00                 	db	0	; dummy byte at the end
   763  0000                     
   764                           	psect	cinit
   765  00361E                     __pcinit:
   766                           	opt stack 0
   767  00361E                     start_initialization:
   768                           	opt stack 0
   769  00361E                     __initialization:
   770                           	opt stack 0
   771                           
   772                           ; Clear objects allocated to BANK1 (126 bytes)
   773  00361E  EE01  F000         	lfsr	0,__pbssBANK1
   774  003622  0E7E               	movlw	126
   775  003624                     clear_0:
   776  003624  6AEE               	clrf	postinc0,c
   777  003626  06E8               	decf	wreg,f,c
   778  003628  E1FD               	bnz	clear_0
   779                           
   780                           ; Clear objects allocated to BANK0 (53 bytes)
   781  00362A  EE00  F0C9         	lfsr	0,__pbssBANK0
   782  00362E  0E35               	movlw	53
   783  003630                     clear_1:
   784  003630  6AEE               	clrf	postinc0,c
   785  003632  06E8               	decf	wreg,f,c
   786  003634  E1FD               	bnz	clear_1
   787                           
   788                           ; Clear objects allocated to COMRAM (35 bytes)
   789  003636  EE00  F026         	lfsr	0,__pbssCOMRAM
   790  00363A  0E23               	movlw	35
   791  00363C                     clear_2:
   792  00363C  6AEE               	clrf	postinc0,c
   793  00363E  06E8               	decf	wreg,f,c
   794  003640  E1FD               	bnz	clear_2
   795                           
   796                           ; Initialize objects allocated to COMRAM (1 bytes)
   797                           ; load TBLPTR registers with __pidataCOMRAM
   798  003642  0EEA               	movlw	low __pidataCOMRAM
   799  003644  6EF6               	movwf	tblptrl,c
   800  003646  0E38               	movlw	high __pidataCOMRAM
   801  003648  6EF7               	movwf	tblptrh,c
   802  00364A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   803  00364C  6EF8               	movwf	tblptru,c
   804  00364E  0009               	tblrd		*+	;fetch initializer
   805  003650  CFF5 F049          	movff	tablat,__pdataCOMRAM
   806  003654                     end_of_initialization:
   807                           	opt stack 0
   808  003654                     __end_of__initialization:
   809                           	opt stack 0
   810  003654  0E00               	movlw	low (__Lmediumconst shr (0+16))
   811  003656  6EF8               	movwf	tblptru,c
   812  003658  0100               	movlb	0
   813  00365A  EFF8  F004         	goto	_main	;jump to C main() function
   814                           tblptru	equ	0xFF8
   815                           tblptrh	equ	0xFF7
   816                           tblptrl	equ	0xFF6
   817                           tablat	equ	0xFF5
   818                           postinc0	equ	0xFEE
   819                           wreg	equ	0xFE8
   820                           
   821                           	psect	bssCOMRAM
   822  000026                     __pbssCOMRAM:
   823                           	opt stack 0
   824  000026                     _position:
   825                           	opt stack 0
   826  000026                     	ds	11
   827  000031                     _VITESSE:
   828                           	opt stack 0
   829  000031                     	ds	6
   830  000037                     fonction_PID@commande:
   831                           	opt stack 0
   832  000037                     	ds	3
   833  00003A                     _OVERFLOW_CODEUR:
   834                           	opt stack 0
   835  00003A                     	ds	1
   836  00003B                     _flag_cpateur:
   837                           	opt stack 0
   838  00003B                     	ds	1
   839  00003C                     _uart_logiciel:
   840                           	opt stack 0
   841  00003C                     	ds	13
   842                           tblptru	equ	0xFF8
   843                           tblptrh	equ	0xFF7
   844                           tblptrl	equ	0xFF6
   845                           tablat	equ	0xFF5
   846                           postinc0	equ	0xFEE
   847                           wreg	equ	0xFE8
   848                           
   849                           	psect	dataCOMRAM
   850  000049                     __pdataCOMRAM:
   851                           	opt stack 0
   852  000049                     	ds	1
   853                           tblptru	equ	0xFF8
   854                           tblptrh	equ	0xFF7
   855                           tblptrl	equ	0xFF6
   856                           tablat	equ	0xFF5
   857                           postinc0	equ	0xFEE
   858                           wreg	equ	0xFE8
   859                           
   860                           	psect	bssBANK0
   861  0000C9                     __pbssBANK0:
   862                           	opt stack 0
   863  0000C9                     _ERREUR_VITESSE:
   864                           	opt stack 0
   865  0000C9                     	ds	9
   866  0000D2                     main@ancien_x:
   867                           	opt stack 0
   868  0000D2                     	ds	3
   869  0000D5                     main@ancien_y:
   870                           	opt stack 0
   871  0000D5                     	ds	3
   872  0000D8                     _capteur:
   873                           	opt stack 0
   874  0000D8                     	ds	29
   875  0000F5                     asserv@commande:
   876                           	opt stack 0
   877  0000F5                     	ds	3
   878  0000F8                     main@x:
   879                           	opt stack 0
   880  0000F8                     	ds	3
   881  0000FB                     main@y:
   882                           	opt stack 0
   883  0000FB                     	ds	3
   884                           tblptru	equ	0xFF8
   885                           tblptrh	equ	0xFF7
   886                           tblptrl	equ	0xFF6
   887                           tablat	equ	0xFF5
   888                           postinc0	equ	0xFEE
   889                           wreg	equ	0xFE8
   890                           
   891                           	psect	bssBANK1
   892  000100                     __pbssBANK1:
   893                           	opt stack 0
   894  000100                     _PID:
   895                           	opt stack 0
   896  000100                     	ds	9
   897  000109                     get_valeur_codeur@res:
   898                           	opt stack 0
   899  000109                     	ds	4
   900  00010D                     _errno:
   901                           	opt stack 0
   902  00010D                     	ds	2
   903  00010F                     _uart_reception:
   904                           	opt stack 0
   905  00010F                     	ds	103
   906  000176                     IntToC@out:
   907                           	opt stack 0
   908  000176                     	ds	8
   909                           tblptru	equ	0xFF8
   910                           tblptrh	equ	0xFF7
   911                           tblptrl	equ	0xFF6
   912                           tablat	equ	0xFF5
   913                           postinc0	equ	0xFEE
   914                           wreg	equ	0xFE8
   915                           
   916                           	psect	cstackBANK1
   917  00017E                     __pcstackBANK1:
   918                           	opt stack 0
   919  00017E                     triangulation@x:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x0
   923  00017E                     	ds	2
   924  000180                     triangulation@y:
   925                           	opt stack 0
   926                           
   927                           ; 2 bytes @ 0x2
   928  000180                     	ds	2
   929  000182                     triangulation@angle1:
   930                           	opt stack 0
   931                           
   932                           ; 3 bytes @ 0x4
   933  000182                     	ds	3
   934  000185                     triangulation@angle2:
   935                           	opt stack 0
   936                           
   937                           ; 3 bytes @ 0x7
   938  000185                     	ds	3
   939  000188                     triangulation@angle3:
   940                           	opt stack 0
   941                           
   942                           ; 3 bytes @ 0xA
   943  000188                     	ds	3
   944  00018B                     triangulation@x1:
   945                           	opt stack 0
   946                           
   947                           ; 3 bytes @ 0xD
   948  00018B                     	ds	3
   949  00018E                     triangulation@y1:
   950                           	opt stack 0
   951                           
   952                           ; 3 bytes @ 0x10
   953  00018E                     	ds	3
   954  000191                     triangulation@x3:
   955                           	opt stack 0
   956                           
   957                           ; 3 bytes @ 0x13
   958  000191                     	ds	3
   959  000194                     triangulation@y3:
   960                           	opt stack 0
   961                           
   962                           ; 3 bytes @ 0x16
   963  000194                     	ds	3
   964  000197                     triangulation@c31x:
   965                           	opt stack 0
   966                           
   967                           ; 3 bytes @ 0x19
   968  000197                     	ds	3
   969  00019A                     triangulation@c31y:
   970                           	opt stack 0
   971                           
   972                           ; 3 bytes @ 0x1C
   973  00019A                     	ds	3
   974  00019D                     triangulation@k31:
   975                           	opt stack 0
   976                           
   977                           ; 3 bytes @ 0x1F
   978  00019D                     	ds	3
   979  0001A0                     triangulation@D:
   980                           	opt stack 0
   981                           
   982                           ; 3 bytes @ 0x22
   983  0001A0                     	ds	3
   984  0001A3                     triangulation@invD:
   985                           	opt stack 0
   986                           
   987                           ; 3 bytes @ 0x25
   988  0001A3                     	ds	3
   989  0001A6                     _triangulation$3249:
   990                           	opt stack 0
   991                           
   992                           ; 3 bytes @ 0x28
   993  0001A6                     	ds	3
   994  0001A9                     triangulation@c12x:
   995                           	opt stack 0
   996                           
   997                           ; 3 bytes @ 0x2B
   998  0001A9                     	ds	3
   999  0001AC                     triangulation@c12y:
  1000                           	opt stack 0
  1001                           
  1002                           ; 3 bytes @ 0x2E
  1003  0001AC                     	ds	3
  1004  0001AF                     triangulation@K:
  1005                           	opt stack 0
  1006                           
  1007                           ; 3 bytes @ 0x31
  1008  0001AF                     	ds	3
  1009  0001B2                     _triangulation$3245:
  1010                           	opt stack 0
  1011                           
  1012                           ; 3 bytes @ 0x34
  1013  0001B2                     	ds	3
  1014  0001B5                     _triangulation$3248:
  1015                           	opt stack 0
  1016                           
  1017                           ; 3 bytes @ 0x37
  1018  0001B5                     	ds	3
  1019  0001B8                     triangulation@x2:
  1020                           	opt stack 0
  1021                           
  1022                           ; 3 bytes @ 0x3A
  1023  0001B8                     	ds	3
  1024  0001BB                     triangulation@y2:
  1025                           	opt stack 0
  1026                           
  1027                           ; 3 bytes @ 0x3D
  1028  0001BB                     	ds	3
  1029  0001BE                     triangulation@c23x:
  1030                           	opt stack 0
  1031                           
  1032                           ; 3 bytes @ 0x40
  1033  0001BE                     	ds	3
  1034  0001C1                     triangulation@c23y:
  1035                           	opt stack 0
  1036                           
  1037                           ; 3 bytes @ 0x43
  1038  0001C1                     	ds	3
  1039  0001C4                     _triangulation$3246:
  1040                           	opt stack 0
  1041                           
  1042                           ; 3 bytes @ 0x46
  1043  0001C4                     	ds	3
  1044  0001C7                     triangulation@cot_31:
  1045                           	opt stack 0
  1046                           
  1047                           ; 3 bytes @ 0x49
  1048  0001C7                     	ds	3
  1049  0001CA                     _triangulation$3247:
  1050                           	opt stack 0
  1051                           
  1052                           ; 3 bytes @ 0x4C
  1053  0001CA                     	ds	3
  1054  0001CD                     triangulation@cot_12:
  1055                           	opt stack 0
  1056                           
  1057                           ; 3 bytes @ 0x4F
  1058  0001CD                     	ds	3
  1059  0001D0                     triangulation@cot_23:
  1060                           	opt stack 0
  1061                           
  1062                           ; 3 bytes @ 0x52
  1063  0001D0                     	ds	3
  1064  0001D3                     triangulation@x1_:
  1065                           	opt stack 0
  1066                           
  1067                           ; 3 bytes @ 0x55
  1068  0001D3                     	ds	3
  1069  0001D6                     triangulation@y1_:
  1070                           	opt stack 0
  1071                           
  1072                           ; 3 bytes @ 0x58
  1073  0001D6                     	ds	3
  1074  0001D9                     triangulation@x3_:
  1075                           	opt stack 0
  1076                           
  1077                           ; 3 bytes @ 0x5B
  1078  0001D9                     	ds	3
  1079  0001DC                     triangulation@y3_:
  1080                           	opt stack 0
  1081                           
  1082                           ; 3 bytes @ 0x5E
  1083  0001DC                     	ds	3
  1084  0001DF                     main@i:
  1085                           	opt stack 0
  1086                           
  1087                           ; 2 bytes @ 0x61
  1088  0001DF                     	ds	2
  1089  0001E1                     main@x_temp:
  1090                           	opt stack 0
  1091                           
  1092                           ; 3 bytes @ 0x63
  1093  0001E1                     	ds	3
  1094  0001E4                     main@y_temp:
  1095                           	opt stack 0
  1096                           
  1097                           ; 3 bytes @ 0x66
  1098  0001E4                     	ds	3
  1099                           tblptru	equ	0xFF8
  1100                           tblptrh	equ	0xFF7
  1101                           tblptrl	equ	0xFF6
  1102                           tablat	equ	0xFF5
  1103                           postinc0	equ	0xFEE
  1104                           wreg	equ	0xFE8
  1105                           
  1106                           	psect	cstackBANK0
  1107  000060                     __pcstackBANK0:
  1108                           	opt stack 0
  1109  000060                     ?___wmul:
  1110                           	opt stack 0
  1111  000060                     ?___ftpack:
  1112                           	opt stack 0
  1113  000060                     ?___fttol:
  1114                           	opt stack 0
  1115  000060                     inversion_balises@id_balise_mere:
  1116                           	opt stack 0
  1117  000060                     ___wmul@multiplier:
  1118                           	opt stack 0
  1119  000060                     ___ftpack@arg:
  1120                           	opt stack 0
  1121  000060                     ___fttol@f1:
  1122                           	opt stack 0
  1123  000060                     frexp@value:
  1124                           	opt stack 0
  1125                           
  1126                           ; 3 bytes @ 0x0
  1127  000060                     	ds	1
  1128  000061                     inversion_balises@temp:
  1129                           	opt stack 0
  1130                           
  1131                           ; 3 bytes @ 0x1
  1132  000061                     	ds	1
  1133  000062                     ___wmul@multiplicand:
  1134                           	opt stack 0
  1135                           
  1136                           ; 2 bytes @ 0x2
  1137  000062                     	ds	1
  1138  000063                     ___ftpack@exp:
  1139                           	opt stack 0
  1140  000063                     frexp@eptr:
  1141                           	opt stack 0
  1142                           
  1143                           ; 2 bytes @ 0x3
  1144  000063                     	ds	1
  1145  000064                     ??___fttol:
  1146  000064                     ___ftpack@sign:
  1147                           	opt stack 0
  1148  000064                     ___wmul@product:
  1149                           	opt stack 0
  1150                           
  1151                           ; 2 bytes @ 0x4
  1152  000064                     	ds	1
  1153  000065                     ??___ftpack:
  1154  000065                     ??_frexp:
  1155                           
  1156                           ; 0 bytes @ 0x5
  1157  000065                     	ds	1
  1158  000066                     ?___awdiv:
  1159                           	opt stack 0
  1160  000066                     ___awdiv@dividend:
  1161                           	opt stack 0
  1162                           
  1163                           ; 2 bytes @ 0x6
  1164  000066                     	ds	2
  1165  000068                     ?___ftmul:
  1166                           	opt stack 0
  1167  000068                     ?___lwtoft:
  1168                           	opt stack 0
  1169  000068                     ___awdiv@divisor:
  1170                           	opt stack 0
  1171  000068                     ___lwtoft@c:
  1172                           	opt stack 0
  1173  000068                     ___ftmul@f1:
  1174                           	opt stack 0
  1175                           
  1176                           ; 3 bytes @ 0x8
  1177  000068                     	ds	1
  1178  000069                     ___fttol@sign1:
  1179                           	opt stack 0
  1180                           
  1181                           ; 1 bytes @ 0x9
  1182  000069                     	ds	1
  1183  00006A                     ___awdiv@counter:
  1184                           	opt stack 0
  1185  00006A                     ___fttol@lval:
  1186                           	opt stack 0
  1187                           
  1188                           ; 4 bytes @ 0xA
  1189  00006A                     	ds	1
  1190  00006B                     ___awdiv@sign:
  1191                           	opt stack 0
  1192  00006B                     ___ftmul@f2:
  1193                           	opt stack 0
  1194                           
  1195                           ; 3 bytes @ 0xB
  1196  00006B                     	ds	1
  1197  00006C                     ___awdiv@quotient:
  1198                           	opt stack 0
  1199                           
  1200                           ; 2 bytes @ 0xC
  1201  00006C                     	ds	2
  1202  00006E                     ??___ftmul:
  1203  00006E                     ?_IntToC:
  1204                           	opt stack 0
  1205  00006E                     PutcUART@octet:
  1206                           	opt stack 0
  1207  00006E                     ___fttol@exp1:
  1208                           	opt stack 0
  1209  00006E                     IntToC@nb:
  1210                           	opt stack 0
  1211                           
  1212                           ; 2 bytes @ 0xE
  1213  00006E                     	ds	1
  1214  00006F                     ??_PutcUART:
  1215  00006F                     ?___altoft:
  1216                           	opt stack 0
  1217  00006F                     ___altoft@c:
  1218                           	opt stack 0
  1219                           
  1220                           ; 4 bytes @ 0xF
  1221  00006F                     	ds	1
  1222  000070                     ??_IntToC:
  1223                           
  1224                           ; 0 bytes @ 0x10
  1225  000070                     	ds	1
  1226  000071                     ___ftmul@exp:
  1227                           	opt stack 0
  1228                           
  1229                           ; 1 bytes @ 0x11
  1230  000071                     	ds	1
  1231  000072                     ___ftmul@f3_as_product:
  1232                           	opt stack 0
  1233  000072                     IntToC@i:
  1234                           	opt stack 0
  1235                           
  1236                           ; 10 bytes @ 0x12
  1237  000072                     	ds	1
  1238  000073                     ??___altoft:
  1239                           
  1240                           ; 0 bytes @ 0x13
  1241  000073                     	ds	2
  1242  000075                     PutcUART@type_uart:
  1243                           	opt stack 0
  1244  000075                     ___ftmul@cntr:
  1245                           	opt stack 0
  1246                           
  1247                           ; 1 bytes @ 0x15
  1248  000075                     	ds	1
  1249  000076                     ___ftmul@sign:
  1250                           	opt stack 0
  1251                           
  1252                           ; 1 bytes @ 0x16
  1253  000076                     	ds	1
  1254  000077                     ?___ftneg:
  1255                           	opt stack 0
  1256  000077                     ___altoft@exp:
  1257                           	opt stack 0
  1258  000077                     ___ftneg@f1:
  1259                           	opt stack 0
  1260                           
  1261                           ; 3 bytes @ 0x17
  1262  000077                     	ds	1
  1263  000078                     ___altoft@sign:
  1264                           	opt stack 0
  1265                           
  1266                           ; 1 bytes @ 0x18
  1267  000078                     	ds	2
  1268  00007A                     ?___ftadd:
  1269                           	opt stack 0
  1270  00007A                     ___ftadd@f1:
  1271                           	opt stack 0
  1272  00007A                     ___ftge@ff1:
  1273                           	opt stack 0
  1274                           
  1275                           ; 3 bytes @ 0x1A
  1276  00007A                     	ds	2
  1277  00007C                     IntToC@j:
  1278                           	opt stack 0
  1279                           
  1280                           ; 2 bytes @ 0x1C
  1281  00007C                     	ds	1
  1282  00007D                     ___ftadd@f2:
  1283                           	opt stack 0
  1284  00007D                     ___ftge@ff2:
  1285                           	opt stack 0
  1286                           
  1287                           ; 3 bytes @ 0x1D
  1288  00007D                     	ds	1
  1289  00007E                     PutsUART@chaine:
  1290                           	opt stack 0
  1291                           
  1292                           ; 2 bytes @ 0x1E
  1293  00007E                     	ds	2
  1294  000080                     ??_PutsUART:
  1295  000080                     ??___ftadd:
  1296  000080                     ??___ftge:
  1297                           
  1298                           ; 0 bytes @ 0x20
  1299  000080                     	ds	2
  1300  000082                     PutsUART@type_uart:
  1301                           	opt stack 0
  1302                           
  1303                           ; 1 bytes @ 0x22
  1304  000082                     	ds	1
  1305  000083                     ?_saturation:
  1306                           	opt stack 0
  1307  000083                     ___ftadd@sign:
  1308                           	opt stack 0
  1309  000083                     PutIntUART@nb:
  1310                           	opt stack 0
  1311  000083                     envoit_pwm@valeur:
  1312                           	opt stack 0
  1313  000083                     saturation@valeur:
  1314                           	opt stack 0
  1315                           
  1316                           ; 3 bytes @ 0x23
  1317  000083                     	ds	1
  1318  000084                     ___ftadd@exp2:
  1319                           	opt stack 0
  1320                           
  1321                           ; 1 bytes @ 0x24
  1322  000084                     	ds	1
  1323  000085                     PutIntUART@type_uart:
  1324                           	opt stack 0
  1325  000085                     ___ftadd@exp1:
  1326                           	opt stack 0
  1327                           
  1328                           ; 1 bytes @ 0x25
  1329  000085                     	ds	1
  1330  000086                     ?_floor:
  1331                           	opt stack 0
  1332  000086                     ?_eval_poly:
  1333                           	opt stack 0
  1334  000086                     envoit_pwm@abs_valeur:
  1335                           	opt stack 0
  1336  000086                     saturation@maximum:
  1337                           	opt stack 0
  1338  000086                     affichage_position@x:
  1339                           	opt stack 0
  1340  000086                     eval_poly@x:
  1341                           	opt stack 0
  1342  000086                     floor@x:
  1343                           	opt stack 0
  1344                           
  1345                           ; 3 bytes @ 0x26
  1346  000086                     	ds	3
  1347  000089                     eval_poly@d:
  1348                           	opt stack 0
  1349  000089                     affichage_position@y:
  1350                           	opt stack 0
  1351  000089                     floor@i:
  1352                           	opt stack 0
  1353                           
  1354                           ; 3 bytes @ 0x29
  1355  000089                     	ds	2
  1356  00008B                     eval_poly@n:
  1357                           	opt stack 0
  1358                           
  1359                           ; 2 bytes @ 0x2B
  1360  00008B                     	ds	1
  1361  00008C                     floor@expon:
  1362                           	opt stack 0
  1363                           
  1364                           ; 2 bytes @ 0x2C
  1365  00008C                     	ds	1
  1366  00008D                     ??_eval_poly:
  1367                           
  1368                           ; 0 bytes @ 0x2D
  1369  00008D                     	ds	1
  1370  00008E                     ?___ftsub:
  1371                           	opt stack 0
  1372  00008E                     ___ftsub@f1:
  1373                           	opt stack 0
  1374                           
  1375                           ; 3 bytes @ 0x2E
  1376  00008E                     	ds	1
  1377  00008F                     eval_poly@res:
  1378                           	opt stack 0
  1379                           
  1380                           ; 3 bytes @ 0x2F
  1381  00008F                     	ds	2
  1382  000091                     ___ftsub@f2:
  1383                           	opt stack 0
  1384                           
  1385                           ; 3 bytes @ 0x31
  1386  000091                     	ds	1
  1387  000092                     ?___ftdiv:
  1388                           	opt stack 0
  1389  000092                     ___ftdiv@f1:
  1390                           	opt stack 0
  1391                           
  1392                           ; 3 bytes @ 0x32
  1393  000092                     	ds	2
  1394  000094                     ?_modulo_angle:
  1395                           	opt stack 0
  1396  000094                     ?_sqrt:
  1397                           	opt stack 0
  1398  000094                     modulo_angle@angle:
  1399                           	opt stack 0
  1400  000094                     sqrt@y:
  1401                           	opt stack 0
  1402                           
  1403                           ; 3 bytes @ 0x34
  1404  000094                     	ds	1
  1405  000095                     ___ftdiv@f2:
  1406                           	opt stack 0
  1407                           
  1408                           ; 3 bytes @ 0x35
  1409  000095                     	ds	2
  1410  000097                     ??_sqrt:
  1411  000097                     check_divergence_angle@ancien_angle:
  1412                           	opt stack 0
  1413                           
  1414                           ; 3 bytes @ 0x37
  1415  000097                     	ds	1
  1416  000098                     ??___ftdiv:
  1417                           
  1418                           ; 0 bytes @ 0x38
  1419  000098                     	ds	2
  1420  00009A                     check_divergence_angle@nouvel_angle:
  1421                           	opt stack 0
  1422  00009A                     sqrt@og:
  1423                           	opt stack 0
  1424                           
  1425                           ; 3 bytes @ 0x3A
  1426  00009A                     	ds	1
  1427  00009B                     ___ftdiv@cntr:
  1428                           	opt stack 0
  1429                           
  1430                           ; 1 bytes @ 0x3B
  1431  00009B                     	ds	1
  1432  00009C                     ___ftdiv@f3:
  1433                           	opt stack 0
  1434                           
  1435                           ; 3 bytes @ 0x3C
  1436  00009C                     	ds	1
  1437  00009D                     sqrt@z:
  1438                           	opt stack 0
  1439  00009D                     _check_divergence_angle$3251:
  1440                           	opt stack 0
  1441                           
  1442                           ; 3 bytes @ 0x3D
  1443  00009D                     	ds	2
  1444  00009F                     ___ftdiv@exp:
  1445                           	opt stack 0
  1446                           
  1447                           ; 1 bytes @ 0x3F
  1448  00009F                     	ds	1
  1449  0000A0                     ___ftdiv@sign:
  1450                           	opt stack 0
  1451  0000A0                     sqrt@i:
  1452                           	opt stack 0
  1453  0000A0                     check_divergence_angle@derive:
  1454                           	opt stack 0
  1455                           
  1456                           ; 3 bytes @ 0x40
  1457  0000A0                     	ds	1
  1458  0000A1                     ?_obtention_angle:
  1459                           	opt stack 0
  1460  0000A1                     ?_conversion_degre_radian:
  1461                           	opt stack 0
  1462  0000A1                     ?_sin:
  1463                           	opt stack 0
  1464  0000A1                     obtention_angle@position:
  1465                           	opt stack 0
  1466  0000A1                     conversion_degre_radian@angle:
  1467                           	opt stack 0
  1468  0000A1                     sqrt@q:
  1469                           	opt stack 0
  1470  0000A1                     sin@f:
  1471                           	opt stack 0
  1472                           
  1473                           ; 3 bytes @ 0x41
  1474  0000A1                     	ds	2
  1475  0000A3                     
  1476                           ; 0 bytes @ 0x43
  1477  0000A3                     	ds	1
  1478  0000A4                     obtention_angle@angle:
  1479                           	opt stack 0
  1480  0000A4                     sqrt@x:
  1481                           	opt stack 0
  1482  0000A4                     sin@y:
  1483                           	opt stack 0
  1484                           
  1485                           ; 3 bytes @ 0x44
  1486  0000A4                     	ds	3
  1487  0000A7                     ?_check_divergence_position:
  1488                           	opt stack 0
  1489  0000A7                     check_divergence_position@ancien_x:
  1490                           	opt stack 0
  1491  0000A7                     _sin$3256:
  1492                           	opt stack 0
  1493                           
  1494                           ; 3 bytes @ 0x47
  1495  0000A7                     	ds	3
  1496  0000AA                     check_divergence_position@ancien_y:
  1497                           	opt stack 0
  1498  0000AA                     sin@x2:
  1499                           	opt stack 0
  1500                           
  1501                           ; 3 bytes @ 0x4A
  1502  0000AA                     	ds	3
  1503  0000AD                     sin@sgn:
  1504                           	opt stack 0
  1505  0000AD                     check_divergence_position@x:
  1506                           	opt stack 0
  1507                           
  1508                           ; 3 bytes @ 0x4D
  1509  0000AD                     	ds	1
  1510  0000AE                     ?_cos:
  1511                           	opt stack 0
  1512  0000AE                     cos@f:
  1513                           	opt stack 0
  1514                           
  1515                           ; 3 bytes @ 0x4E
  1516  0000AE                     	ds	2
  1517  0000B0                     check_divergence_position@y:
  1518                           	opt stack 0
  1519                           
  1520                           ; 3 bytes @ 0x50
  1521  0000B0                     	ds	1
  1522  0000B1                     _cos$3255:
  1523                           	opt stack 0
  1524                           
  1525                           ; 3 bytes @ 0x51
  1526  0000B1                     	ds	2
  1527  0000B3                     check_divergence_position@distance:
  1528                           	opt stack 0
  1529                           
  1530                           ; 3 bytes @ 0x53
  1531  0000B3                     	ds	1
  1532  0000B4                     ?_tan:
  1533                           	opt stack 0
  1534  0000B4                     tan@x:
  1535                           	opt stack 0
  1536                           
  1537                           ; 3 bytes @ 0x54
  1538  0000B4                     	ds	2
  1539  0000B6                     _check_divergence_position$3252:
  1540                           	opt stack 0
  1541                           
  1542                           ; 3 bytes @ 0x56
  1543  0000B6                     	ds	1
  1544  0000B7                     _tan$3253:
  1545                           	opt stack 0
  1546                           
  1547                           ; 3 bytes @ 0x57
  1548  0000B7                     	ds	2
  1549  0000B9                     check_divergence_position@delta_x:
  1550                           	opt stack 0
  1551                           
  1552                           ; 3 bytes @ 0x59
  1553  0000B9                     	ds	1
  1554  0000BA                     _tan$3254:
  1555                           	opt stack 0
  1556                           
  1557                           ; 3 bytes @ 0x5A
  1558  0000BA                     	ds	2
  1559  0000BC                     check_divergence_position@delta_y:
  1560                           	opt stack 0
  1561                           
  1562                           ; 3 bytes @ 0x5C
  1563  0000BC                     	ds	1
  1564  0000BD                     ?_Cot:
  1565                           	opt stack 0
  1566  0000BD                     Cot@angle:
  1567                           	opt stack 0
  1568                           
  1569                           ; 3 bytes @ 0x5D
  1570  0000BD                     	ds	3
  1571  0000C0                     _Cot$3250:
  1572                           	opt stack 0
  1573                           
  1574                           ; 3 bytes @ 0x60
  1575  0000C0                     	ds	3
  1576  0000C3                     
  1577                           ; 2 bytes @ 0x63
  1578  0000C3                     	ds	2
  1579  0000C5                     
  1580                           ; 3 bytes @ 0x65
  1581  0000C5                     	ds	3
  1582  0000C8                     ??_main:
  1583                           
  1584                           ; 0 bytes @ 0x68
  1585  0000C8                     	ds	1
  1586                           tblptru	equ	0xFF8
  1587                           tblptrh	equ	0xFF7
  1588                           tblptrl	equ	0xFF6
  1589                           tablat	equ	0xFF5
  1590                           postinc0	equ	0xFEE
  1591                           wreg	equ	0xFE8
  1592                           
  1593                           	psect	cstackCOMRAM
  1594  000001                     __pcstackCOMRAM:
  1595                           	opt stack 0
  1596  000001                     ??_interruption_timer1:
  1597  000001                     ??_interruption_INT0:
  1598  000001                     interrupt_RX@temp:
  1599                           	opt stack 0
  1600                           
  1601                           ; 1 bytes @ 0x0
  1602  000001                     	ds	2
  1603  000003                     subroutine_interruptions@priorite:
  1604                           	opt stack 0
  1605                           
  1606                           ; 1 bytes @ 0x2
  1607  000003                     	ds	1
  1608  000004                     ??_low_isr:
  1609                           
  1610                           ; 0 bytes @ 0x3
  1611  000004                     	ds	17
  1612  000015                     ??i2_interruption_timer1:
  1613  000015                     ??i2_interruption_INT0:
  1614  000015                     i2interrupt_RX@temp:
  1615                           	opt stack 0
  1616                           
  1617                           ; 1 bytes @ 0x14
  1618  000015                     	ds	2
  1619  000017                     i2subroutine_interruptions@priorite:
  1620                           	opt stack 0
  1621                           
  1622                           ; 1 bytes @ 0x16
  1623  000017                     	ds	1
  1624  000018                     ??_high_isr:
  1625                           
  1626                           ; 0 bytes @ 0x17
  1627  000018                     	ds	14
  1628                           tblptru	equ	0xFF8
  1629                           tblptrh	equ	0xFF7
  1630                           tblptrl	equ	0xFF6
  1631                           tablat	equ	0xFF5
  1632                           postinc0	equ	0xFEE
  1633                           wreg	equ	0xFE8
  1634                           
  1635 ;;
  1636 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1637 ;;
  1638 ;; *************** function _main *****************
  1639 ;; Defined at:
  1640 ;;		line 83 in file "main.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  argc            2   99[BANK0 ] int 
  1643 ;;  argv            3  101[BANK0 ] PTR PTR unsigned char 
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  y_temp          3  102[BANK1 ] PTR PTR unsigned char 
  1646 ;;  x_temp          3   99[BANK1 ] PTR PTR unsigned char 
  1647 ;;  i               2   97[BANK1 ] int 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  2   99[BANK0 ] int 
  1650 ;; Registers used:
  1651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1657 ;;      Params:         0       5       0       0
  1658 ;;      Locals:         0       0       8       0
  1659 ;;      Temps:          0       1       0       0
  1660 ;;      Totals:         0       6       8       0
  1661 ;;Total ram usage:       14 bytes
  1662 ;; Hardware stack levels required when called:   14
  1663 ;; This function calls:
  1664 ;;		_PutIntUART
  1665 ;;		_PutsUART
  1666 ;;		___wmul
  1667 ;;		_affichage_position
  1668 ;;		_check_divergence_position
  1669 ;;		_envoit_pwm
  1670 ;;		_init_system
  1671 ;;		_inversion_balises
  1672 ;;		_modulo_id_balise_mere
  1673 ;;		_obtention_angle
  1674 ;;		_retrouver_balise_mere
  1675 ;;		_triangulation
  1676 ;; This function is called by:
  1677 ;;		Startup code after reset
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           	psect	text0
  1682  0009F0                     __ptext0:
  1683                           	opt stack 0
  1684  0009F0                     _main:
  1685                           	opt stack 17
  1686                           
  1687                           ;main.c: 86: init_system ();
  1688                           
  1689                           ; BSR set to: 1
  1690                           ;incstack = 0
  1691  0009F0  ECD1  F01B         	call	_init_system	;wreg free
  1692                           
  1693                           ;main.c: 87: int i = 0;
  1694  0009F4  0E00               	movlw	0
  1695  0009F6  0101               	movlb	1	; () banked
  1696  0009F8  6FE0               	movwf	(main@i+1)& (0+255),b
  1697  0009FA  0E00               	movlw	0
  1698  0009FC  6FDF               	movwf	main@i& (0+255),b
  1699                           
  1700                           ; BSR set to: 1
  1701                           ;main.c: 89: PORTDbits.RD1 = 1;
  1702  0009FE  8283               	bsf	3971,1,c	;volatile
  1703                           
  1704                           ; BSR set to: 1
  1705                           ;main.c: 90: LATCbits.LATC2 = 1;
  1706  000A00  848B               	bsf	3979,2,c	;volatile
  1707                           
  1708                           ; BSR set to: 1
  1709                           ;main.c: 91: PORTBbits.RB0 = 1;
  1710  000A02  8081               	bsf	3969,0,c	;volatile
  1711                           
  1712                           ; BSR set to: 1
  1713                           ;main.c: 93: PutsUART(0, "Bonjour les amis !!! =)");
  1714  000A04  0E8E               	movlw	low STR_1
  1715  000A06  0100               	movlb	0	; () banked
  1716  000A08  6F7E               	movwf	PutsUART@chaine& (0+255),b
  1717  000A0A  0E3F               	movlw	high STR_1
  1718  000A0C  0100               	movlb	0	; () banked
  1719  000A0E  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  1720  000A10  0E00               	movlw	0
  1721  000A12  EC09  F019         	call	_PutsUART
  1722                           
  1723                           ;main.c: 95: while(PORTCbits.RC4 == 0);
  1724  000A16  D000               	goto	l37
  1725  000A18                     l37:
  1726  000A18  A882               	btfss	3970,4,c	;volatile
  1727  000A1A  D7FE               	goto	l37
  1728                           
  1729                           ;main.c: 96: PORTBbits.RB0= 0;
  1730  000A1C  9081               	bcf	3969,0,c	;volatile
  1731                           
  1732                           ;main.c: 97: PORTBbits.RB4 =1;
  1733  000A1E  8881               	bsf	3969,4,c	;volatile
  1734                           
  1735                           ;main.c: 98: envoit_pwm(60);
  1736  000A20  0E00               	movlw	0
  1737  000A22  0100               	movlb	0	; () banked
  1738  000A24  6F83               	movwf	envoit_pwm@valeur& (0+255),b
  1739  000A26  0E70               	movlw	112
  1740  000A28  0100               	movlb	0	; () banked
  1741  000A2A  6F84               	movwf	(envoit_pwm@valeur+1)& (0+255),b
  1742  000A2C  0E42               	movlw	66
  1743  000A2E  0100               	movlb	0	; () banked
  1744  000A30  6F85               	movwf	(envoit_pwm@valeur+2)& (0+255),b
  1745  000A32  EC48  F013         	call	_envoit_pwm	;wreg free
  1746                           
  1747                           ;main.c: 101: _delay((unsigned long)((10)*(40000000/4000.0)));
  1748  000A36  0E82               	movlw	130
  1749  000A38  0100               	movlb	0	; () banked
  1750  000A3A  6FC8               	movwf	??_main& (0+255),b
  1751  000A3C  0EDE               	movlw	222
  1752  000A3E                     u4417:
  1753  000A3E  2EE8               	decfsz	wreg,f,c
  1754  000A40  D7FE               	goto	u4417
  1755  000A42  2FC8               	decfsz	??_main& (0+255),f,b
  1756  000A44  D7FC               	goto	u4417
  1757                           
  1758                           ;main.c: 102: _delay((unsigned long)((10)*(40000000/4000.0)));
  1759  000A46  0E82               	movlw	130
  1760  000A48  0100               	movlb	0	; () banked
  1761  000A4A  6FC8               	movwf	??_main& (0+255),b
  1762  000A4C  0EDE               	movlw	222
  1763  000A4E                     u4427:
  1764  000A4E  2EE8               	decfsz	wreg,f,c
  1765  000A50  D7FE               	goto	u4427
  1766  000A52  2FC8               	decfsz	??_main& (0+255),f,b
  1767  000A54  D7FC               	goto	u4427
  1768                           
  1769                           ;main.c: 103: _delay((unsigned long)((10)*(40000000/4000.0)));
  1770  000A56  0E82               	movlw	130
  1771  000A58  0100               	movlb	0	; () banked
  1772  000A5A  6FC8               	movwf	??_main& (0+255),b
  1773  000A5C  0EDE               	movlw	222
  1774  000A5E                     u4437:
  1775  000A5E  2EE8               	decfsz	wreg,f,c
  1776  000A60  D7FE               	goto	u4437
  1777  000A62  2FC8               	decfsz	??_main& (0+255),f,b
  1778  000A64  D7FC               	goto	u4437
  1779                           
  1780                           ;main.c: 104: _delay((unsigned long)((10)*(40000000/4000.0)));
  1781  000A66  0E82               	movlw	130
  1782  000A68  0100               	movlb	0	; () banked
  1783  000A6A  6FC8               	movwf	??_main& (0+255),b
  1784  000A6C  0EDE               	movlw	222
  1785  000A6E                     u4447:
  1786  000A6E  2EE8               	decfsz	wreg,f,c
  1787  000A70  D7FE               	goto	u4447
  1788  000A72  2FC8               	decfsz	??_main& (0+255),f,b
  1789  000A74  D7FC               	goto	u4447
  1790                           
  1791                           ;main.c: 105: _delay((unsigned long)((10)*(40000000/4000.0)));
  1792  000A76  0E82               	movlw	130
  1793  000A78  0100               	movlb	0	; () banked
  1794  000A7A  6FC8               	movwf	??_main& (0+255),b
  1795  000A7C  0EDE               	movlw	222
  1796  000A7E                     u4457:
  1797  000A7E  2EE8               	decfsz	wreg,f,c
  1798  000A80  D7FE               	goto	u4457
  1799  000A82  2FC8               	decfsz	??_main& (0+255),f,b
  1800  000A84  D7FC               	goto	u4457
  1801                           
  1802                           ;main.c: 106: _delay((unsigned long)((10)*(40000000/4000.0)));
  1803  000A86  0E82               	movlw	130
  1804  000A88  0100               	movlb	0	; () banked
  1805  000A8A  6FC8               	movwf	??_main& (0+255),b
  1806  000A8C  0EDE               	movlw	222
  1807  000A8E                     u4467:
  1808  000A8E  2EE8               	decfsz	wreg,f,c
  1809  000A90  D7FE               	goto	u4467
  1810  000A92  2FC8               	decfsz	??_main& (0+255),f,b
  1811  000A94  D7FC               	goto	u4467
  1812                           
  1813                           ;main.c: 107: _delay((unsigned long)((10)*(40000000/4000.0)));
  1814  000A96  0E82               	movlw	130
  1815  000A98  0100               	movlb	0	; () banked
  1816  000A9A  6FC8               	movwf	??_main& (0+255),b
  1817  000A9C  0EDE               	movlw	222
  1818  000A9E                     u4477:
  1819  000A9E  2EE8               	decfsz	wreg,f,c
  1820  000AA0  D7FE               	goto	u4477
  1821  000AA2  2FC8               	decfsz	??_main& (0+255),f,b
  1822  000AA4  D7FC               	goto	u4477
  1823                           
  1824                           ;main.c: 108: _delay((unsigned long)((10)*(40000000/4000.0)));
  1825  000AA6  0E82               	movlw	130
  1826  000AA8  0100               	movlb	0	; () banked
  1827  000AAA  6FC8               	movwf	??_main& (0+255),b
  1828  000AAC  0EDE               	movlw	222
  1829  000AAE                     u4487:
  1830  000AAE  2EE8               	decfsz	wreg,f,c
  1831  000AB0  D7FE               	goto	u4487
  1832  000AB2  2FC8               	decfsz	??_main& (0+255),f,b
  1833  000AB4  D7FC               	goto	u4487
  1834                           
  1835                           ;main.c: 109: _delay((unsigned long)((10)*(40000000/4000.0)));
  1836  000AB6  0E82               	movlw	130
  1837  000AB8  0100               	movlb	0	; () banked
  1838  000ABA  6FC8               	movwf	??_main& (0+255),b
  1839  000ABC  0EDE               	movlw	222
  1840  000ABE                     u4497:
  1841  000ABE  2EE8               	decfsz	wreg,f,c
  1842  000AC0  D7FE               	goto	u4497
  1843  000AC2  2FC8               	decfsz	??_main& (0+255),f,b
  1844  000AC4  D7FC               	goto	u4497
  1845                           
  1846                           ;main.c: 110: _delay((unsigned long)((10)*(40000000/4000.0)));
  1847  000AC6  0E82               	movlw	130
  1848  000AC8  0100               	movlb	0	; () banked
  1849  000ACA  6FC8               	movwf	??_main& (0+255),b
  1850  000ACC  0EDE               	movlw	222
  1851  000ACE                     u4507:
  1852  000ACE  2EE8               	decfsz	wreg,f,c
  1853  000AD0  D7FE               	goto	u4507
  1854  000AD2  2FC8               	decfsz	??_main& (0+255),f,b
  1855  000AD4  D7FC               	goto	u4507
  1856                           
  1857                           ;main.c: 111: _delay((unsigned long)((10)*(40000000/4000.0)));
  1858  000AD6  0E82               	movlw	130
  1859  000AD8  0100               	movlb	0	; () banked
  1860  000ADA  6FC8               	movwf	??_main& (0+255),b
  1861  000ADC  0EDE               	movlw	222
  1862  000ADE                     u4517:
  1863  000ADE  2EE8               	decfsz	wreg,f,c
  1864  000AE0  D7FE               	goto	u4517
  1865  000AE2  2FC8               	decfsz	??_main& (0+255),f,b
  1866  000AE4  D7FC               	goto	u4517
  1867                           
  1868                           ;main.c: 112: _delay((unsigned long)((10)*(40000000/4000.0)));
  1869  000AE6  0E82               	movlw	130
  1870  000AE8  0100               	movlb	0	; () banked
  1871  000AEA  6FC8               	movwf	??_main& (0+255),b
  1872  000AEC  0EDE               	movlw	222
  1873  000AEE                     u4527:
  1874  000AEE  2EE8               	decfsz	wreg,f,c
  1875  000AF0  D7FE               	goto	u4527
  1876  000AF2  2FC8               	decfsz	??_main& (0+255),f,b
  1877  000AF4  D7FC               	goto	u4527
  1878                           
  1879                           ;main.c: 113: _delay((unsigned long)((10)*(40000000/4000.0)));
  1880  000AF6  0E82               	movlw	130
  1881  000AF8  0100               	movlb	0	; () banked
  1882  000AFA  6FC8               	movwf	??_main& (0+255),b
  1883  000AFC  0EDE               	movlw	222
  1884  000AFE                     u4537:
  1885  000AFE  2EE8               	decfsz	wreg,f,c
  1886  000B00  D7FE               	goto	u4537
  1887  000B02  2FC8               	decfsz	??_main& (0+255),f,b
  1888  000B04  D7FC               	goto	u4537
  1889                           
  1890                           ;main.c: 114: _delay((unsigned long)((10)*(40000000/4000.0)));
  1891  000B06  0E82               	movlw	130
  1892  000B08  0100               	movlb	0	; () banked
  1893  000B0A  6FC8               	movwf	??_main& (0+255),b
  1894  000B0C  0EDE               	movlw	222
  1895  000B0E                     u4547:
  1896  000B0E  2EE8               	decfsz	wreg,f,c
  1897  000B10  D7FE               	goto	u4547
  1898  000B12  2FC8               	decfsz	??_main& (0+255),f,b
  1899  000B14  D7FC               	goto	u4547
  1900                           
  1901                           ;main.c: 115: _delay((unsigned long)((10)*(40000000/4000.0)));
  1902  000B16  0E82               	movlw	130
  1903  000B18  0100               	movlb	0	; () banked
  1904  000B1A  6FC8               	movwf	??_main& (0+255),b
  1905  000B1C  0EDE               	movlw	222
  1906  000B1E                     u4557:
  1907  000B1E  2EE8               	decfsz	wreg,f,c
  1908  000B20  D7FE               	goto	u4557
  1909  000B22  2FC8               	decfsz	??_main& (0+255),f,b
  1910  000B24  D7FC               	goto	u4557
  1911                           
  1912                           ;main.c: 116: _delay((unsigned long)((10)*(40000000/4000.0)));
  1913  000B26  0E82               	movlw	130
  1914  000B28  0100               	movlb	0	; () banked
  1915  000B2A  6FC8               	movwf	??_main& (0+255),b
  1916  000B2C  0EDE               	movlw	222
  1917  000B2E                     u4567:
  1918  000B2E  2EE8               	decfsz	wreg,f,c
  1919  000B30  D7FE               	goto	u4567
  1920  000B32  2FC8               	decfsz	??_main& (0+255),f,b
  1921  000B34  D7FC               	goto	u4567
  1922                           
  1923                           ;main.c: 117: _delay((unsigned long)((10)*(40000000/4000.0)));
  1924  000B36  0E82               	movlw	130
  1925  000B38  0100               	movlb	0	; () banked
  1926  000B3A  6FC8               	movwf	??_main& (0+255),b
  1927  000B3C  0EDE               	movlw	222
  1928  000B3E                     u4577:
  1929  000B3E  2EE8               	decfsz	wreg,f,c
  1930  000B40  D7FE               	goto	u4577
  1931  000B42  2FC8               	decfsz	??_main& (0+255),f,b
  1932  000B44  D7FC               	goto	u4577
  1933                           
  1934                           ;main.c: 118: _delay((unsigned long)((10)*(40000000/4000.0)));
  1935  000B46  0E82               	movlw	130
  1936  000B48  0100               	movlb	0	; () banked
  1937  000B4A  6FC8               	movwf	??_main& (0+255),b
  1938  000B4C  0EDE               	movlw	222
  1939  000B4E                     u4587:
  1940  000B4E  2EE8               	decfsz	wreg,f,c
  1941  000B50  D7FE               	goto	u4587
  1942  000B52  2FC8               	decfsz	??_main& (0+255),f,b
  1943  000B54  D7FC               	goto	u4587
  1944                           
  1945                           ;main.c: 119: _delay((unsigned long)((10)*(40000000/4000.0)));
  1946  000B56  0E82               	movlw	130
  1947  000B58  0100               	movlb	0	; () banked
  1948  000B5A  6FC8               	movwf	??_main& (0+255),b
  1949  000B5C  0EDE               	movlw	222
  1950  000B5E                     u4597:
  1951  000B5E  2EE8               	decfsz	wreg,f,c
  1952  000B60  D7FE               	goto	u4597
  1953  000B62  2FC8               	decfsz	??_main& (0+255),f,b
  1954  000B64  D7FC               	goto	u4597
  1955                           
  1956                           ;main.c: 120: _delay((unsigned long)((10)*(40000000/4000.0)));
  1957  000B66  0E82               	movlw	130
  1958  000B68  0100               	movlb	0	; () banked
  1959  000B6A  6FC8               	movwf	??_main& (0+255),b
  1960  000B6C  0EDE               	movlw	222
  1961  000B6E                     u4607:
  1962  000B6E  2EE8               	decfsz	wreg,f,c
  1963  000B70  D7FE               	goto	u4607
  1964  000B72  2FC8               	decfsz	??_main& (0+255),f,b
  1965  000B74  D7FC               	goto	u4607
  1966                           
  1967                           ;main.c: 121: _delay((unsigned long)((10)*(40000000/4000.0)));
  1968  000B76  0E82               	movlw	130
  1969  000B78  0100               	movlb	0	; () banked
  1970  000B7A  6FC8               	movwf	??_main& (0+255),b
  1971  000B7C  0EDE               	movlw	222
  1972  000B7E                     u4617:
  1973  000B7E  2EE8               	decfsz	wreg,f,c
  1974  000B80  D7FE               	goto	u4617
  1975  000B82  2FC8               	decfsz	??_main& (0+255),f,b
  1976  000B84  D7FC               	goto	u4617
  1977                           
  1978                           ;main.c: 122: _delay((unsigned long)((10)*(40000000/4000.0)));
  1979  000B86  0E82               	movlw	130
  1980  000B88  0100               	movlb	0	; () banked
  1981  000B8A  6FC8               	movwf	??_main& (0+255),b
  1982  000B8C  0EDE               	movlw	222
  1983  000B8E                     u4627:
  1984  000B8E  2EE8               	decfsz	wreg,f,c
  1985  000B90  D7FE               	goto	u4627
  1986  000B92  2FC8               	decfsz	??_main& (0+255),f,b
  1987  000B94  D7FC               	goto	u4627
  1988                           
  1989                           ;main.c: 123: _delay((unsigned long)((10)*(40000000/4000.0)));
  1990  000B96  0E82               	movlw	130
  1991  000B98  0100               	movlb	0	; () banked
  1992  000B9A  6FC8               	movwf	??_main& (0+255),b
  1993  000B9C  0EDE               	movlw	222
  1994  000B9E                     u4637:
  1995  000B9E  2EE8               	decfsz	wreg,f,c
  1996  000BA0  D7FE               	goto	u4637
  1997  000BA2  2FC8               	decfsz	??_main& (0+255),f,b
  1998  000BA4  D7FC               	goto	u4637
  1999  000BA6  D000               	goto	l4928
  2000  000BA8                     l4928:
  2001                           
  2002                           ;main.c: 126: {
  2003                           ;main.c: 127: static double x, y, ancien_x = 0, ancien_y = 0;
  2004                           ;main.c: 128: static bool premiere_fois = 1;
  2005                           ;main.c: 130: capteur.indice = 0;
  2006  000BA8  0E00               	movlw	0
  2007  000BAA  0100               	movlb	0	; () banked
  2008  000BAC  6FF3               	movwf	(_capteur+27)& (0+255),b
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;main.c: 131: capteur.synchro_debut_tour = 1;
  2012  000BAE  0E01               	movlw	1
  2013  000BB0  0100               	movlb	0	; () banked
  2014  000BB2  6FD9               	movwf	(_capteur+1)& (0+255),b
  2015                           
  2016                           ; BSR set to: 0
  2017                           
  2018                           ;main.c: 133: while(capteur.synchro_debut_tour == 1);
  2019  000BB4  D000               	goto	l4932
  2020  000BB6                     l4932:
  2021                           
  2022                           ; BSR set to: 0
  2023  000BB6  0100               	movlb	0	; () banked
  2024  000BB8  05D9               	decf	(_capteur+1)& (0+255),w,b
  2025  000BBA  A4D8               	btfss	status,2,c
  2026  000BBC  D002               	goto	l4934
  2027  000BBE  D7FB               	goto	l4932
  2028                           
  2029                           ; BSR set to: 0
  2030                           
  2031                           ; BSR set to: 0
  2032                           ;main.c: 134: while(capteur.tour_en_cours == 1);
  2033  000BC0  D000               	goto	l4934
  2034  000BC2                     l4934:
  2035                           
  2036                           ; BSR set to: 0
  2037  000BC2  0100               	movlb	0	; () banked
  2038  000BC4  05D8               	decf	_capteur& (0+255),w,b
  2039  000BC6  B4D8               	btfsc	status,2,c
  2040  000BC8  D7FC               	goto	l4934
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;main.c: 136: if (capteur.indice != 3)
  2044                           
  2045                           ; BSR set to: 0
  2046  000BCA  0E03               	movlw	3
  2047  000BCC  0100               	movlb	0	; () banked
  2048  000BCE  19F3               	xorwf	(_capteur+27)& (0+255),w,b
  2049  000BD0  B4D8               	btfsc	status,2,c
  2050  000BD2  D01A               	goto	l4944
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;main.c: 137: {
  2054                           ;main.c: 138: PutsUART(0, "\n\nProbleme de detection de balises .... : ");
  2055  000BD4  0E4F               	movlw	low STR_2
  2056  000BD6  0100               	movlb	0	; () banked
  2057  000BD8  6F7E               	movwf	PutsUART@chaine& (0+255),b
  2058  000BDA  0E3E               	movlw	high STR_2
  2059  000BDC  0100               	movlb	0	; () banked
  2060  000BDE  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  2061  000BE0  0E00               	movlw	0
  2062  000BE2  EC09  F019         	call	_PutsUART
  2063                           
  2064                           ;main.c: 139: PutIntUART(0, (uint16_t) capteur.indice);
  2065  000BE6  C0F3  F083         	movff	_capteur+27,PutIntUART@nb
  2066  000BEA  0100               	movlb	0	; () banked
  2067  000BEC  6B84               	clrf	(PutIntUART@nb+1)& (0+255),b
  2068  000BEE  0E00               	movlw	0
  2069  000BF0  EC0A  F01C         	call	_PutIntUART
  2070                           
  2071                           ;main.c: 140: PutsUART(0, " Balises detectees \n\n\n\r");
  2072  000BF4  0E76               	movlw	low STR_3
  2073  000BF6  0100               	movlb	0	; () banked
  2074  000BF8  6F7E               	movwf	PutsUART@chaine& (0+255),b
  2075  000BFA  0E3F               	movlw	high STR_3
  2076  000BFC  0100               	movlb	0	; () banked
  2077  000BFE  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  2078  000C00  0E00               	movlw	0
  2079  000C02  EC09  F019         	call	_PutsUART
  2080                           
  2081                           ;main.c: 141: }
  2082  000C06  D7D0               	goto	l4928
  2083  000C08                     l4944:
  2084                           
  2085                           ;main.c: 142: else
  2086                           ;main.c: 143: {
  2087                           ;main.c: 144: for (i = 0; i < 3 ; i++)
  2088  000C08  0E00               	movlw	0
  2089  000C0A  0101               	movlb	1	; () banked
  2090  000C0C  6FE0               	movwf	(main@i+1)& (0+255),b
  2091  000C0E  0E00               	movlw	0
  2092  000C10  6FDF               	movwf	main@i& (0+255),b
  2093  000C12                     l4946:
  2094                           
  2095                           ; BSR set to: 1
  2096  000C12  0101               	movlb	1	; () banked
  2097  000C14  BFE0               	btfsc	(main@i+1)& (0+255),7,b
  2098  000C16  D00A               	goto	l4950
  2099  000C18  0101               	movlb	1	; () banked
  2100  000C1A  51E0               	movf	(main@i+1)& (0+255),w,b
  2101  000C1C  E136               	bnz	l4956
  2102  000C1E  0E03               	movlw	3
  2103  000C20  0101               	movlb	1	; () banked
  2104  000C22  5DDF               	subwf	main@i& (0+255),w,b
  2105  000C24  B0D8               	btfsc	status,0,c
  2106  000C26  D031               	goto	l4956
  2107  000C28  D001               	goto	l4950
  2108                           
  2109                           ; BSR set to: 1
  2110  000C2A  D02F               	goto	l4956
  2111  000C2C                     l4950:
  2112                           
  2113                           ; BSR set to: 1
  2114                           ;main.c: 145: capteur.angle[i] = obtention_angle(capteur.position[i]);
  2115  000C2C  C1DF  F060         	movff	main@i,___wmul@multiplier
  2116  000C30  C1E0  F061         	movff	main@i+1,___wmul@multiplier+1
  2117  000C34  0E00               	movlw	0
  2118  000C36  0100               	movlb	0	; () banked
  2119  000C38  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2120  000C3A  0E03               	movlw	3
  2121  000C3C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2122  000C3E  EC87  F01B         	call	___wmul	;wreg free
  2123  000C42  0EDB               	movlw	low (_capteur+3)
  2124  000C44  0100               	movlb	0	; () banked
  2125  000C46  2560               	addwf	?___wmul& (0+255),w,b
  2126  000C48  6ED9               	movwf	fsr2l,c
  2127  000C4A  0E00               	movlw	high (_capteur+3)
  2128  000C4C  0100               	movlb	0	; () banked
  2129  000C4E  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2130  000C50  6EDA               	movwf	fsr2h,c
  2131  000C52  90D8               	bcf	status,0,c
  2132  000C54  0101               	movlb	1	; () banked
  2133  000C56  35DF               	rlcf	main@i& (0+255),w,b
  2134  000C58  6EE1               	movwf	fsr1l,c
  2135  000C5A  0101               	movlb	1	; () banked
  2136  000C5C  35E0               	rlcf	(main@i+1)& (0+255),w,b
  2137  000C5E  6EE2               	movwf	fsr1h,c
  2138  000C60  0EED               	movlw	low (_capteur+21)
  2139  000C62  26E1               	addwf	fsr1l,f,c
  2140  000C64  0E00               	movlw	high (_capteur+21)
  2141  000C66  22E2               	addwfc	fsr1h,f,c
  2142  000C68  CFE6 F0A1          	movff	postinc1,obtention_angle@position
  2143  000C6C  CFE5 F0A2          	movff	postdec1,obtention_angle@position+1
  2144  000C70  EC93  F018         	call	_obtention_angle	;wreg free
  2145  000C74  C0A1  FFDE         	movff	?_obtention_angle,postinc2
  2146  000C78  C0A2  FFDE         	movff	?_obtention_angle+1,postinc2
  2147  000C7C  C0A3  FFDE         	movff	?_obtention_angle+2,postinc2
  2148  000C80  0101               	movlb	1	; () banked
  2149  000C82  4BDF               	infsnz	main@i& (0+255),f,b
  2150  000C84  2BE0               	incf	(main@i+1)& (0+255),f,b
  2151  000C86  D7C5               	goto	l4946
  2152                           
  2153                           ; BSR set to: 1
  2154  000C88  D000               	goto	l4956
  2155  000C8A                     l4956:
  2156                           
  2157                           ; BSR set to: 1
  2158                           ;main.c: 148: inversion_balises(capteur.id_balise_mere);
  2159  000C8A  0100               	movlb	0	; () banked
  2160  000C8C  51F4               	movf	(_capteur+28)& (0+255),w,b
  2161  000C8E  EC55  F018         	call	_inversion_balises
  2162                           
  2163                           ;main.c: 151: if (retrouver_balise_mere() == 0)
  2164  000C92  ECB4  F015         	call	_retrouver_balise_mere	;wreg free
  2165  000C96  0900               	iorlw	0
  2166  000C98  A4D8               	btfss	status,2,c
  2167  000C9A  D03B               	goto	l4968
  2168                           
  2169                           ;main.c: 152: {
  2170                           ;main.c: 153: triangulation(&x, &y, capteur.angle[0], capteur.angle[1], capteur.angle[2]
      +                          );
  2171  000C9C  0EF8               	movlw	low main@x
  2172  000C9E  0101               	movlb	1	; () banked
  2173  000CA0  6F7E               	movwf	triangulation@x& (0+255),b
  2174  000CA2  0E00               	movlw	high main@x
  2175  000CA4  0101               	movlb	1	; () banked
  2176  000CA6  6F7F               	movwf	(triangulation@x+1)& (0+255),b
  2177  000CA8  0EFB               	movlw	low main@y
  2178  000CAA  0101               	movlb	1	; () banked
  2179  000CAC  6F80               	movwf	triangulation@y& (0+255),b
  2180  000CAE  0E00               	movlw	high main@y
  2181  000CB0  0101               	movlb	1	; () banked
  2182  000CB2  6F81               	movwf	(triangulation@y+1)& (0+255),b
  2183  000CB4  C0DB  F182         	movff	_capteur+3,triangulation@angle1
  2184  000CB8  C0DC  F183         	movff	_capteur+4,triangulation@angle1+1
  2185  000CBC  C0DD  F184         	movff	_capteur+5,triangulation@angle1+2
  2186  000CC0  C0DE  F185         	movff	_capteur+6,triangulation@angle2
  2187  000CC4  C0DF  F186         	movff	_capteur+7,triangulation@angle2+1
  2188  000CC8  C0E0  F187         	movff	_capteur+8,triangulation@angle2+2
  2189  000CCC  C0E1  F188         	movff	_capteur+9,triangulation@angle3
  2190  000CD0  C0E2  F189         	movff	_capteur+10,triangulation@angle3+1
  2191  000CD4  C0E3  F18A         	movff	_capteur+11,triangulation@angle3+2
  2192  000CD8  EC56  F000         	call	_triangulation	;wreg free
  2193                           
  2194                           ;main.c: 154: affichage_position(x, y);
  2195  000CDC  C0F8  F086         	movff	main@x,affichage_position@x
  2196  000CE0  C0F9  F087         	movff	main@x+1,affichage_position@x+1
  2197  000CE4  C0FA  F088         	movff	main@x+2,affichage_position@x+2
  2198  000CE8  C0FB  F089         	movff	main@y,affichage_position@y
  2199  000CEC  C0FC  F08A         	movff	main@y+1,affichage_position@y+1
  2200  000CF0  C0FD  F08B         	movff	main@y+2,affichage_position@y+2
  2201  000CF4  ECCF  F018         	call	_affichage_position	;wreg free
  2202                           
  2203                           ;main.c: 155: ancien_x = x;
  2204  000CF8  C0F8  F0D2         	movff	main@x,main@ancien_x
  2205  000CFC  C0F9  F0D3         	movff	main@x+1,main@ancien_x+1
  2206  000D00  C0FA  F0D4         	movff	main@x+2,main@ancien_x+2
  2207                           
  2208                           ;main.c: 156: ancien_y = y;
  2209  000D04  C0FB  F0D5         	movff	main@y,main@ancien_y
  2210  000D08  C0FC  F0D6         	movff	main@y+1,main@ancien_y+1
  2211  000D0C  C0FD  F0D7         	movff	main@y+2,main@ancien_y+2
  2212                           
  2213                           ;main.c: 157: }
  2214  000D10  D19F               	goto	l5034
  2215  000D12                     l4968:
  2216                           
  2217                           ;main.c: 159: else
  2218                           ;main.c: 160: {
  2219                           ;main.c: 161: double x_temp = 0, y_temp = 0;
  2220  000D12  0E00               	movlw	0
  2221  000D14  0101               	movlb	1	; () banked
  2222  000D16  6FE1               	movwf	main@x_temp& (0+255),b
  2223  000D18  0E00               	movlw	0
  2224  000D1A  0101               	movlb	1	; () banked
  2225  000D1C  6FE2               	movwf	(main@x_temp+1)& (0+255),b
  2226  000D1E  0E00               	movlw	0
  2227  000D20  0101               	movlb	1	; () banked
  2228  000D22  6FE3               	movwf	(main@x_temp+2)& (0+255),b
  2229  000D24  0E00               	movlw	0
  2230  000D26  0101               	movlb	1	; () banked
  2231  000D28  6FE4               	movwf	main@y_temp& (0+255),b
  2232  000D2A  0E00               	movlw	0
  2233  000D2C  0101               	movlb	1	; () banked
  2234  000D2E  6FE5               	movwf	(main@y_temp+1)& (0+255),b
  2235  000D30  0E00               	movlw	0
  2236  000D32  0101               	movlb	1	; () banked
  2237  000D34  6FE6               	movwf	(main@y_temp+2)& (0+255),b
  2238                           
  2239                           ; BSR set to: 1
  2240                           ;main.c: 162: PutsUART(0, "\n\n\n\r BALISE MERE PERDUE !!!!!! \n\r");
  2241  000D36  0EED               	movlw	low STR_4
  2242  000D38  0100               	movlb	0	; () banked
  2243  000D3A  6F7E               	movwf	PutsUART@chaine& (0+255),b
  2244  000D3C  0E3E               	movlw	high STR_4
  2245  000D3E  0100               	movlb	0	; () banked
  2246  000D40  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  2247  000D42  0E00               	movlw	0
  2248  000D44  EC09  F019         	call	_PutsUART
  2249                           
  2250                           ;main.c: 163: PutsUART(0, "Ancienne position connue : \n\r");
  2251  000D48  0E0F               	movlw	low STR_5
  2252  000D4A  0100               	movlb	0	; () banked
  2253  000D4C  6F7E               	movwf	PutsUART@chaine& (0+255),b
  2254  000D4E  0E3F               	movlw	high STR_5
  2255  000D50  0100               	movlb	0	; () banked
  2256  000D52  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  2257  000D54  0E00               	movlw	0
  2258  000D56  EC09  F019         	call	_PutsUART
  2259                           
  2260                           ;main.c: 164: affichage_position(ancien_x, ancien_y);
  2261  000D5A  C0D2  F086         	movff	main@ancien_x,affichage_position@x
  2262  000D5E  C0D3  F087         	movff	main@ancien_x+1,affichage_position@x+1
  2263  000D62  C0D4  F088         	movff	main@ancien_x+2,affichage_position@x+2
  2264  000D66  C0D5  F089         	movff	main@ancien_y,affichage_position@y
  2265  000D6A  C0D6  F08A         	movff	main@ancien_y+1,affichage_position@y+1
  2266  000D6E  C0D7  F08B         	movff	main@ancien_y+2,affichage_position@y+2
  2267  000D72  ECCF  F018         	call	_affichage_position	;wreg free
  2268                           
  2269                           ;main.c: 166: triangulation(&x_temp, &y_temp, capteur.angle[0], capteur.angle[1], capteu
      +                          r.angle[2]);
  2270  000D76  0EE1               	movlw	low main@x_temp
  2271  000D78  0101               	movlb	1	; () banked
  2272  000D7A  6F7E               	movwf	triangulation@x& (0+255),b
  2273  000D7C  0E01               	movlw	high main@x_temp
  2274  000D7E  0101               	movlb	1	; () banked
  2275  000D80  6F7F               	movwf	(triangulation@x+1)& (0+255),b
  2276  000D82  0EE4               	movlw	low main@y_temp
  2277  000D84  0101               	movlb	1	; () banked
  2278  000D86  6F80               	movwf	triangulation@y& (0+255),b
  2279  000D88  0E01               	movlw	high main@y_temp
  2280  000D8A  0101               	movlb	1	; () banked
  2281  000D8C  6F81               	movwf	(triangulation@y+1)& (0+255),b
  2282  000D8E  C0DB  F182         	movff	_capteur+3,triangulation@angle1
  2283  000D92  C0DC  F183         	movff	_capteur+4,triangulation@angle1+1
  2284  000D96  C0DD  F184         	movff	_capteur+5,triangulation@angle1+2
  2285  000D9A  C0DE  F185         	movff	_capteur+6,triangulation@angle2
  2286  000D9E  C0DF  F186         	movff	_capteur+7,triangulation@angle2+1
  2287  000DA2  C0E0  F187         	movff	_capteur+8,triangulation@angle2+2
  2288  000DA6  C0E1  F188         	movff	_capteur+9,triangulation@angle3
  2289  000DAA  C0E2  F189         	movff	_capteur+10,triangulation@angle3+1
  2290  000DAE  C0E3  F18A         	movff	_capteur+11,triangulation@angle3+2
  2291  000DB2  EC56  F000         	call	_triangulation	;wreg free
  2292                           
  2293                           ;main.c: 167: PutsUART(0, "\n\rTenative de base :  \n\r");
  2294  000DB6  0E2D               	movlw	low STR_6
  2295  000DB8  0100               	movlb	0	; () banked
  2296  000DBA  6F7E               	movwf	PutsUART@chaine& (0+255),b
  2297  000DBC  0E3F               	movlw	high STR_6
  2298  000DBE  0100               	movlb	0	; () banked
  2299  000DC0  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  2300  000DC2  0E00               	movlw	0
  2301  000DC4  EC09  F019         	call	_PutsUART
  2302                           
  2303                           ;main.c: 168: affichage_position(x_temp, y_temp);
  2304  000DC8  C1E1  F086         	movff	main@x_temp,affichage_position@x
  2305  000DCC  C1E2  F087         	movff	main@x_temp+1,affichage_position@x+1
  2306  000DD0  C1E3  F088         	movff	main@x_temp+2,affichage_position@x+2
  2307  000DD4  C1E4  F089         	movff	main@y_temp,affichage_position@y
  2308  000DD8  C1E5  F08A         	movff	main@y_temp+1,affichage_position@y+1
  2309  000DDC  C1E6  F08B         	movff	main@y_temp+2,affichage_position@y+2
  2310  000DE0  ECCF  F018         	call	_affichage_position	;wreg free
  2311                           
  2312                           ;main.c: 171: if (check_divergence_position(ancien_x, ancien_y, x_temp, y_temp) == 0 )
  2313  000DE4  C0D2  F0A7         	movff	main@ancien_x,check_divergence_position@ancien_x
  2314  000DE8  C0D3  F0A8         	movff	main@ancien_x+1,check_divergence_position@ancien_x+1
  2315  000DEC  C0D4  F0A9         	movff	main@ancien_x+2,check_divergence_position@ancien_x+2
  2316  000DF0  C0D5  F0AA         	movff	main@ancien_y,check_divergence_position@ancien_y
  2317  000DF4  C0D6  F0AB         	movff	main@ancien_y+1,check_divergence_position@ancien_y+1
  2318  000DF8  C0D7  F0AC         	movff	main@ancien_y+2,check_divergence_position@ancien_y+2
  2319  000DFC  C1E1  F0AD         	movff	main@x_temp,check_divergence_position@x
  2320  000E00  C1E2  F0AE         	movff	main@x_temp+1,check_divergence_position@x+1
  2321  000E04  C1E3  F0AF         	movff	main@x_temp+2,check_divergence_position@x+2
  2322  000E08  C1E4  F0B0         	movff	main@y_temp,check_divergence_position@y
  2323  000E0C  C1E5  F0B1         	movff	main@y_temp+1,check_divergence_position@y+1
  2324  000E10  C1E6  F0B2         	movff	main@y_temp+2,check_divergence_position@y+2
  2325  000E14  EC2E  F011         	call	_check_divergence_position	;wreg free
  2326  000E18  0100               	movlb	0	; () banked
  2327  000E1A  51A7               	movf	?_check_divergence_position& (0+255),w,b
  2328  000E1C  0100               	movlb	0	; () banked
  2329  000E1E  11A8               	iorwf	(?_check_divergence_position+1)& (0+255),w,b
  2330  000E20  A4D8               	btfss	status,2,c
  2331  000E22  D01F               	goto	l4992
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;main.c: 172: {
  2335                           ;main.c: 173: PutsUART(0, "\n\n\n\r BALISE MERE INCHANGEE !!!!!! \n\r");
  2336  000E24  0EC8               	movlw	low STR_7
  2337  000E26  0100               	movlb	0	; () banked
  2338  000E28  6F7E               	movwf	PutsUART@chaine& (0+255),b
  2339  000E2A  0E3E               	movlw	high STR_7
  2340  000E2C  0100               	movlb	0	; () banked
  2341  000E2E  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  2342  000E30  0E00               	movlw	0
  2343  000E32  EC09  F019         	call	_PutsUART
  2344                           
  2345                           ;main.c: 174: affichage_position(x_temp, y_temp);
  2346  000E36  C1E1  F086         	movff	main@x_temp,affichage_position@x
  2347  000E3A  C1E2  F087         	movff	main@x_temp+1,affichage_position@x+1
  2348  000E3E  C1E3  F088         	movff	main@x_temp+2,affichage_position@x+2
  2349  000E42  C1E4  F089         	movff	main@y_temp,affichage_position@y
  2350  000E46  C1E5  F08A         	movff	main@y_temp+1,affichage_position@y+1
  2351  000E4A  C1E6  F08B         	movff	main@y_temp+2,affichage_position@y+2
  2352  000E4E  ECCF  F018         	call	_affichage_position	;wreg free
  2353  000E52  D0ED               	goto	l5028
  2354  000E54                     l4990:
  2355                           
  2356                           ;main.c: 176: ancien_y = y_temp;
  2357  000E54  C1E4  F0D5         	movff	main@y_temp,main@ancien_y
  2358  000E58  C1E5  F0D6         	movff	main@y_temp+1,main@ancien_y+1
  2359  000E5C  C1E6  F0D7         	movff	main@y_temp+2,main@ancien_y+2
  2360                           
  2361                           ;main.c: 177: }
  2362  000E60  D0F7               	goto	l5034
  2363  000E62                     l4992:
  2364                           
  2365                           ;main.c: 178: else
  2366                           ;main.c: 179: {
  2367                           ;main.c: 180: triangulation(&x_temp, &y_temp, capteur.angle[1], capteur.angle[2], capteu
      +                          r.angle[0]);
  2368  000E62  0EE1               	movlw	low main@x_temp
  2369  000E64  0101               	movlb	1	; () banked
  2370  000E66  6F7E               	movwf	triangulation@x& (0+255),b
  2371  000E68  0E01               	movlw	high main@x_temp
  2372  000E6A  0101               	movlb	1	; () banked
  2373  000E6C  6F7F               	movwf	(triangulation@x+1)& (0+255),b
  2374  000E6E  0EE4               	movlw	low main@y_temp
  2375  000E70  0101               	movlb	1	; () banked
  2376  000E72  6F80               	movwf	triangulation@y& (0+255),b
  2377  000E74  0E01               	movlw	high main@y_temp
  2378  000E76  0101               	movlb	1	; () banked
  2379  000E78  6F81               	movwf	(triangulation@y+1)& (0+255),b
  2380  000E7A  C0DE  F182         	movff	_capteur+6,triangulation@angle1
  2381  000E7E  C0DF  F183         	movff	_capteur+7,triangulation@angle1+1
  2382  000E82  C0E0  F184         	movff	_capteur+8,triangulation@angle1+2
  2383  000E86  C0E1  F185         	movff	_capteur+9,triangulation@angle2
  2384  000E8A  C0E2  F186         	movff	_capteur+10,triangulation@angle2+1
  2385  000E8E  C0E3  F187         	movff	_capteur+11,triangulation@angle2+2
  2386  000E92  C0DB  F188         	movff	_capteur+3,triangulation@angle3
  2387  000E96  C0DC  F189         	movff	_capteur+4,triangulation@angle3+1
  2388  000E9A  C0DD  F18A         	movff	_capteur+5,triangulation@angle3+2
  2389  000E9E  EC56  F000         	call	_triangulation	;wreg free
  2390                           
  2391                           ;main.c: 181: PutsUART(0, "\n\rTenative 1 :  \n\r");
  2392  000EA2  0ECE               	movlw	low STR_8
  2393  000EA4  0100               	movlb	0	; () banked
  2394  000EA6  6F7E               	movwf	PutsUART@chaine& (0+255),b
  2395  000EA8  0E3F               	movlw	high STR_8
  2396  000EAA  0100               	movlb	0	; () banked
  2397  000EAC  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  2398  000EAE  0E00               	movlw	0
  2399  000EB0  EC09  F019         	call	_PutsUART
  2400                           
  2401                           ;main.c: 182: affichage_position(x_temp, y_temp);
  2402  000EB4  C1E1  F086         	movff	main@x_temp,affichage_position@x
  2403  000EB8  C1E2  F087         	movff	main@x_temp+1,affichage_position@x+1
  2404  000EBC  C1E3  F088         	movff	main@x_temp+2,affichage_position@x+2
  2405  000EC0  C1E4  F089         	movff	main@y_temp,affichage_position@y
  2406  000EC4  C1E5  F08A         	movff	main@y_temp+1,affichage_position@y+1
  2407  000EC8  C1E6  F08B         	movff	main@y_temp+2,affichage_position@y+2
  2408  000ECC  ECCF  F018         	call	_affichage_position	;wreg free
  2409                           
  2410                           ;main.c: 183: if (check_divergence_position(ancien_x, ancien_y, x_temp, y_temp) == 0 )
  2411  000ED0  C0D2  F0A7         	movff	main@ancien_x,check_divergence_position@ancien_x
  2412  000ED4  C0D3  F0A8         	movff	main@ancien_x+1,check_divergence_position@ancien_x+1
  2413  000ED8  C0D4  F0A9         	movff	main@ancien_x+2,check_divergence_position@ancien_x+2
  2414  000EDC  C0D5  F0AA         	movff	main@ancien_y,check_divergence_position@ancien_y
  2415  000EE0  C0D6  F0AB         	movff	main@ancien_y+1,check_divergence_position@ancien_y+1
  2416  000EE4  C0D7  F0AC         	movff	main@ancien_y+2,check_divergence_position@ancien_y+2
  2417  000EE8  C1E1  F0AD         	movff	main@x_temp,check_divergence_position@x
  2418  000EEC  C1E2  F0AE         	movff	main@x_temp+1,check_divergence_position@x+1
  2419  000EF0  C1E3  F0AF         	movff	main@x_temp+2,check_divergence_position@x+2
  2420  000EF4  C1E4  F0B0         	movff	main@y_temp,check_divergence_position@y
  2421  000EF8  C1E5  F0B1         	movff	main@y_temp+1,check_divergence_position@y+1
  2422  000EFC  C1E6  F0B2         	movff	main@y_temp+2,check_divergence_position@y+2
  2423  000F00  EC2E  F011         	call	_check_divergence_position	;wreg free
  2424  000F04  0100               	movlb	0	; () banked
  2425  000F06  51A7               	movf	?_check_divergence_position& (0+255),w,b
  2426  000F08  0100               	movlb	0	; () banked
  2427  000F0A  11A8               	iorwf	(?_check_divergence_position+1)& (0+255),w,b
  2428  000F0C  A4D8               	btfss	status,2,c
  2429  000F0E  D01D               	goto	l5012
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;main.c: 184: {
  2433                           ;main.c: 185: PutsUART(0, "\n\n\n\r BALISE MERE RETROUVEE 1 !!!!!! \n\r");
  2434  000F10  0E7A               	movlw	low STR_9
  2435  000F12  0100               	movlb	0	; () banked
  2436  000F14  6F7E               	movwf	PutsUART@chaine& (0+255),b
  2437  000F16  0E3E               	movlw	high STR_9
  2438  000F18  0100               	movlb	0	; () banked
  2439  000F1A  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  2440  000F1C  0E00               	movlw	0
  2441  000F1E  EC09  F019         	call	_PutsUART
  2442                           
  2443                           ;main.c: 186: affichage_position(x_temp, y_temp);
  2444  000F22  C1E1  F086         	movff	main@x_temp,affichage_position@x
  2445  000F26  C1E2  F087         	movff	main@x_temp+1,affichage_position@x+1
  2446  000F2A  C1E3  F088         	movff	main@x_temp+2,affichage_position@x+2
  2447  000F2E  C1E4  F089         	movff	main@y_temp,affichage_position@y
  2448  000F32  C1E5  F08A         	movff	main@y_temp+1,affichage_position@y+1
  2449  000F36  C1E6  F08B         	movff	main@y_temp+2,affichage_position@y+2
  2450  000F3A  ECCF  F018         	call	_affichage_position	;wreg free
  2451                           
  2452                           ;main.c: 187: capteur.id_balise_mere ++;
  2453  000F3E  0100               	movlb	0	; () banked
  2454  000F40  2BF4               	incf	(_capteur+28)& (0+255),f,b
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;main.c: 188: modulo_id_balise_mere();
  2458  000F42  EC1B  F01C         	call	_modulo_id_balise_mere	;wreg free
  2459  000F46  D073               	goto	l5028
  2460                           
  2461                           ;main.c: 189: ancien_x = x_temp;
  2462  000F48  D785               	goto	l4990
  2463  000F4A                     l5012:
  2464                           
  2465                           ;main.c: 192: else
  2466                           ;main.c: 193: {
  2467                           ;main.c: 194: triangulation(&x_temp, &y_temp, capteur.angle[2], capteur.angle[0], capteu
      +                          r.angle[1]);
  2468  000F4A  0EE1               	movlw	low main@x_temp
  2469  000F4C  0101               	movlb	1	; () banked
  2470  000F4E  6F7E               	movwf	triangulation@x& (0+255),b
  2471  000F50  0E01               	movlw	high main@x_temp
  2472  000F52  0101               	movlb	1	; () banked
  2473  000F54  6F7F               	movwf	(triangulation@x+1)& (0+255),b
  2474  000F56  0EE4               	movlw	low main@y_temp
  2475  000F58  0101               	movlb	1	; () banked
  2476  000F5A  6F80               	movwf	triangulation@y& (0+255),b
  2477  000F5C  0E01               	movlw	high main@y_temp
  2478  000F5E  0101               	movlb	1	; () banked
  2479  000F60  6F81               	movwf	(triangulation@y+1)& (0+255),b
  2480  000F62  C0E1  F182         	movff	_capteur+9,triangulation@angle1
  2481  000F66  C0E2  F183         	movff	_capteur+10,triangulation@angle1+1
  2482  000F6A  C0E3  F184         	movff	_capteur+11,triangulation@angle1+2
  2483  000F6E  C0DB  F185         	movff	_capteur+3,triangulation@angle2
  2484  000F72  C0DC  F186         	movff	_capteur+4,triangulation@angle2+1
  2485  000F76  C0DD  F187         	movff	_capteur+5,triangulation@angle2+2
  2486  000F7A  C0DE  F188         	movff	_capteur+6,triangulation@angle3
  2487  000F7E  C0DF  F189         	movff	_capteur+7,triangulation@angle3+1
  2488  000F82  C0E0  F18A         	movff	_capteur+8,triangulation@angle3+2
  2489  000F86  EC56  F000         	call	_triangulation	;wreg free
  2490                           
  2491                           ;main.c: 195: PutsUART(0, "\n\r Tenative 2 :  \n\r");
  2492  000F8A  0EBA               	movlw	low STR_10
  2493  000F8C  0100               	movlb	0	; () banked
  2494  000F8E  6F7E               	movwf	PutsUART@chaine& (0+255),b
  2495  000F90  0E3F               	movlw	high STR_10
  2496  000F92  0100               	movlb	0	; () banked
  2497  000F94  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  2498  000F96  0E00               	movlw	0
  2499  000F98  EC09  F019         	call	_PutsUART
  2500                           
  2501                           ;main.c: 196: affichage_position(x_temp, y_temp);
  2502  000F9C  C1E1  F086         	movff	main@x_temp,affichage_position@x
  2503  000FA0  C1E2  F087         	movff	main@x_temp+1,affichage_position@x+1
  2504  000FA4  C1E3  F088         	movff	main@x_temp+2,affichage_position@x+2
  2505  000FA8  C1E4  F089         	movff	main@y_temp,affichage_position@y
  2506  000FAC  C1E5  F08A         	movff	main@y_temp+1,affichage_position@y+1
  2507  000FB0  C1E6  F08B         	movff	main@y_temp+2,affichage_position@y+2
  2508  000FB4  ECCF  F018         	call	_affichage_position	;wreg free
  2509                           
  2510                           ;main.c: 197: if (check_divergence_position(ancien_x, ancien_y, x_temp, y_temp) == 0)
  2511  000FB8  C0D2  F0A7         	movff	main@ancien_x,check_divergence_position@ancien_x
  2512  000FBC  C0D3  F0A8         	movff	main@ancien_x+1,check_divergence_position@ancien_x+1
  2513  000FC0  C0D4  F0A9         	movff	main@ancien_x+2,check_divergence_position@ancien_x+2
  2514  000FC4  C0D5  F0AA         	movff	main@ancien_y,check_divergence_position@ancien_y
  2515  000FC8  C0D6  F0AB         	movff	main@ancien_y+1,check_divergence_position@ancien_y+1
  2516  000FCC  C0D7  F0AC         	movff	main@ancien_y+2,check_divergence_position@ancien_y+2
  2517  000FD0  C1E1  F0AD         	movff	main@x_temp,check_divergence_position@x
  2518  000FD4  C1E2  F0AE         	movff	main@x_temp+1,check_divergence_position@x+1
  2519  000FD8  C1E3  F0AF         	movff	main@x_temp+2,check_divergence_position@x+2
  2520  000FDC  C1E4  F0B0         	movff	main@y_temp,check_divergence_position@y
  2521  000FE0  C1E5  F0B1         	movff	main@y_temp+1,check_divergence_position@y+1
  2522  000FE4  C1E6  F0B2         	movff	main@y_temp+2,check_divergence_position@y+2
  2523  000FE8  EC2E  F011         	call	_check_divergence_position	;wreg free
  2524  000FEC  0100               	movlb	0	; () banked
  2525  000FEE  51A7               	movf	?_check_divergence_position& (0+255),w,b
  2526  000FF0  0100               	movlb	0	; () banked
  2527  000FF2  11A8               	iorwf	(?_check_divergence_position+1)& (0+255),w,b
  2528  000FF4  A4D8               	btfss	status,2,c
  2529  000FF6  D022               	goto	l5032
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;main.c: 198: {
  2533                           ;main.c: 199: PutsUART(0, "\n\n\n\r BALISE MERE RETROUVEE 2 !!!!!! \n\r");
  2534  000FF8  0EA1               	movlw	low STR_11
  2535  000FFA  0100               	movlb	0	; () banked
  2536  000FFC  6F7E               	movwf	PutsUART@chaine& (0+255),b
  2537  000FFE  0E3E               	movlw	high STR_11
  2538  001000  0100               	movlb	0	; () banked
  2539  001002  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  2540  001004  0E00               	movlw	0
  2541  001006  EC09  F019         	call	_PutsUART
  2542                           
  2543                           ;main.c: 200: affichage_position(x_temp, y_temp);
  2544  00100A  C1E1  F086         	movff	main@x_temp,affichage_position@x
  2545  00100E  C1E2  F087         	movff	main@x_temp+1,affichage_position@x+1
  2546  001012  C1E3  F088         	movff	main@x_temp+2,affichage_position@x+2
  2547  001016  C1E4  F089         	movff	main@y_temp,affichage_position@y
  2548  00101A  C1E5  F08A         	movff	main@y_temp+1,affichage_position@y+1
  2549  00101E  C1E6  F08B         	movff	main@y_temp+2,affichage_position@y+2
  2550  001022  ECCF  F018         	call	_affichage_position	;wreg free
  2551                           
  2552                           ;main.c: 201: capteur.id_balise_mere --;
  2553  001026  0100               	movlb	0	; () banked
  2554  001028  07F4               	decf	(_capteur+28)& (0+255),f,b
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;main.c: 202: modulo_id_balise_mere();
  2558  00102A  EC1B  F01C         	call	_modulo_id_balise_mere	;wreg free
  2559  00102E                     l5028:
  2560                           
  2561                           ;main.c: 203: ancien_x = x_temp;
  2562  00102E  C1E1  F0D2         	movff	main@x_temp,main@ancien_x
  2563  001032  C1E2  F0D3         	movff	main@x_temp+1,main@ancien_x+1
  2564  001036  C1E3  F0D4         	movff	main@x_temp+2,main@ancien_x+2
  2565  00103A  D70C               	goto	l4990
  2566  00103C                     l5032:
  2567                           
  2568                           ;main.c: 206: else
  2569                           ;main.c: 207: PutsUART(0, "\n\r/!\\/!\\ BALISE MERE NON RETROUVE  !!!!!! /!\\/!\\\n\r");
  2570  00103C  0E1C               	movlw	low STR_12
  2571  00103E  0100               	movlb	0	; () banked
  2572  001040  6F7E               	movwf	PutsUART@chaine& (0+255),b
  2573  001042  0E3E               	movlw	high STR_12
  2574  001044  0100               	movlb	0	; () banked
  2575  001046  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  2576  001048  0E00               	movlw	0
  2577  00104A  EC09  F019         	call	_PutsUART
  2578  00104E  D000               	goto	l5034
  2579  001050                     l5034:
  2580                           
  2581                           ;main.c: 208: }
  2582                           ;main.c: 210: }
  2583                           ;main.c: 211: }
  2584                           ;main.c: 214: for (i = 0 ; i < 3 ; i++)
  2585  001050  0E00               	movlw	0
  2586  001052  0101               	movlb	1	; () banked
  2587  001054  6FE0               	movwf	(main@i+1)& (0+255),b
  2588  001056  0E00               	movlw	0
  2589  001058  6FDF               	movwf	main@i& (0+255),b
  2590                           
  2591                           ; BSR set to: 1
  2592  00105A  0101               	movlb	1	; () banked
  2593  00105C  BFE0               	btfsc	(main@i+1)& (0+255),7,b
  2594  00105E  D00A               	goto	l5040
  2595  001060  0101               	movlb	1	; () banked
  2596  001062  51E0               	movf	(main@i+1)& (0+255),w,b
  2597  001064  E106               	bnz	u4360
  2598  001066  0E03               	movlw	3
  2599  001068  0101               	movlb	1	; () banked
  2600  00106A  5DDF               	subwf	main@i& (0+255),w,b
  2601  00106C  B0D8               	btfsc	status,0,c
  2602  00106E  D59C               	goto	l4928
  2603  001070  D001               	goto	l5040
  2604  001072                     u4360:
  2605                           
  2606                           ; BSR set to: 1
  2607  001072  D59A               	goto	l4928
  2608  001074                     l5040:
  2609                           
  2610                           ; BSR set to: 1
  2611                           ;main.c: 215: capteur.ancien_angle[i] = capteur.angle[i];
  2612  001074  C1DF  F060         	movff	main@i,___wmul@multiplier
  2613  001078  C1E0  F061         	movff	main@i+1,___wmul@multiplier+1
  2614  00107C  0E00               	movlw	0
  2615  00107E  0100               	movlb	0	; () banked
  2616  001080  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2617  001082  0E03               	movlw	3
  2618  001084  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2619  001086  EC87  F01B         	call	___wmul	;wreg free
  2620  00108A  0EDB               	movlw	low (_capteur+3)
  2621  00108C  0100               	movlb	0	; () banked
  2622  00108E  2560               	addwf	?___wmul& (0+255),w,b
  2623  001090  6ED9               	movwf	fsr2l,c
  2624  001092  0E00               	movlw	high (_capteur+3)
  2625  001094  0100               	movlb	0	; () banked
  2626  001096  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2627  001098  6EDA               	movwf	fsr2h,c
  2628  00109A  C1DF  F060         	movff	main@i,___wmul@multiplier
  2629  00109E  C1E0  F061         	movff	main@i+1,___wmul@multiplier+1
  2630  0010A2  0E00               	movlw	0
  2631  0010A4  0100               	movlb	0	; () banked
  2632  0010A6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2633  0010A8  0E03               	movlw	3
  2634  0010AA  6F62               	movwf	___wmul@multiplicand& (0+255),b
  2635  0010AC  EC87  F01B         	call	___wmul	;wreg free
  2636  0010B0  0EE4               	movlw	low (_capteur+12)
  2637  0010B2  0100               	movlb	0	; () banked
  2638  0010B4  2560               	addwf	?___wmul& (0+255),w,b
  2639  0010B6  6EE1               	movwf	fsr1l,c
  2640  0010B8  0E00               	movlw	high (_capteur+12)
  2641  0010BA  0100               	movlb	0	; () banked
  2642  0010BC  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  2643  0010BE  6EE2               	movwf	fsr1h,c
  2644  0010C0  CFDE FFE6          	movff	postinc2,postinc1
  2645  0010C4  CFDE FFE6          	movff	postinc2,postinc1
  2646  0010C8  CFDE FFE6          	movff	postinc2,postinc1
  2647                           
  2648                           ; BSR set to: 0
  2649  0010CC  0101               	movlb	1	; () banked
  2650  0010CE  4BDF               	infsnz	main@i& (0+255),f,b
  2651  0010D0  2BE0               	incf	(main@i+1)& (0+255),f,b
  2652                           
  2653                           ; BSR set to: 1
  2654  0010D2  0101               	movlb	1	; () banked
  2655  0010D4  BFE0               	btfsc	(main@i+1)& (0+255),7,b
  2656  0010D6  D7CE               	goto	l5040
  2657  0010D8  0101               	movlb	1	; () banked
  2658  0010DA  51E0               	movf	(main@i+1)& (0+255),w,b
  2659  0010DC  E101               	bnz	u4370
  2660  0010DE  D7C3               	goto	L1
  2661  0010E0                     u4370:
  2662                           
  2663                           ; BSR set to: 1
  2664                           
  2665                           ; BSR set to: 1
  2666                           
  2667                           ; BSR set to: 1
  2668  0010E0  D563               	goto	l4928
  2669  0010E2  D7FF               	goto	l74
  2670                           
  2671                           ;main.c: 259: return (0);
  2672                           ;	Return value of _main is never used
  2673  0010E4  EF54  F000         	goto	start
  2674  0010E8                     __end_of_main:
  2675                           	opt stack 0
  2676                           tblptru	equ	0xFF8
  2677                           tblptrh	equ	0xFF7
  2678                           tblptrl	equ	0xFF6
  2679                           tablat	equ	0xFF5
  2680                           postinc0	equ	0xFEE
  2681                           wreg	equ	0xFE8
  2682                           postinc1	equ	0xFE6
  2683                           postdec1	equ	0xFE5
  2684                           fsr1h	equ	0xFE2
  2685                           fsr1l	equ	0xFE1
  2686                           postinc2	equ	0xFDE
  2687                           fsr2h	equ	0xFDA
  2688                           fsr2l	equ	0xFD9
  2689                           status	equ	0xFD8
  2690                           
  2691 ;; *************** function _triangulation *****************
  2692 ;; Defined at:
  2693 ;;		line 24 in file "triangulation.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  x               2    0[BANK1 ] PTR 
  2696 ;;		 -> main@x_temp(3), main@x(3), 
  2697 ;;  y               2    2[BANK1 ] PTR 
  2698 ;;		 -> main@y_temp(3), main@y(3), 
  2699 ;;  angle1          3    4[BANK1 ] PTR 
  2700 ;;  angle2          3    7[BANK1 ] PTR 
  2701 ;;  angle3          3   10[BANK1 ] PTR 
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;  y3_             3   94[BANK1 ] PTR 
  2704 ;;  x3_             3   91[BANK1 ] PTR 
  2705 ;;  y1_             3   88[BANK1 ] PTR 
  2706 ;;  x1_             3   85[BANK1 ] PTR 
  2707 ;;  cot_23          3   82[BANK1 ] PTR 
  2708 ;;  cot_12          3   79[BANK1 ] PTR 
  2709 ;;  cot_31          3   73[BANK1 ] PTR 
  2710 ;;  c23y            3   67[BANK1 ] PTR 
  2711 ;;  c23x            3   64[BANK1 ] PTR 
  2712 ;;  y2              3   61[BANK1 ] const 
  2713 ;;  x2              3   58[BANK1 ] const 
  2714 ;;  K               3   49[BANK1 ] const 
  2715 ;;  c12y            3   46[BANK1 ] const 
  2716 ;;  c12x            3   43[BANK1 ] const 
  2717 ;;  invD            3   37[BANK1 ] const 
  2718 ;;  D               3   34[BANK1 ] const 
  2719 ;;  k31             3   31[BANK1 ] const 
  2720 ;;  c31y            3   28[BANK1 ] const 
  2721 ;;  c31x            3   25[BANK1 ] const 
  2722 ;;  y3              3   22[BANK1 ] const 
  2723 ;;  x3              3   19[BANK1 ] const 
  2724 ;;  y1              3   16[BANK1 ] const 
  2725 ;;  x1              3   13[BANK1 ] const 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;		None               void
  2728 ;; Registers used:
  2729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2735 ;;      Params:         0       0      13       0
  2736 ;;      Locals:         0       0      84       0
  2737 ;;      Temps:          0       0       0       0
  2738 ;;      Totals:         0       0      97       0
  2739 ;;Total ram usage:       97 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:   13
  2742 ;; This function calls:
  2743 ;;		_Cot
  2744 ;;		___ftadd
  2745 ;;		___ftdiv
  2746 ;;		___ftmul
  2747 ;;		___ftneg
  2748 ;;		_saturation
  2749 ;; This function is called by:
  2750 ;;		_main
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text1
  2755  0000AC                     __ptext1:
  2756                           	opt stack 0
  2757  0000AC                     _triangulation:
  2758                           	opt stack 17
  2759                           
  2760                           ;triangulation.c: 26: const double x1 = 2062., y1 = 3062., x2 = -62., y2 = 3062., x3 = 1
      +                          000., y3 = -62.;
  2761                           
  2762                           ;incstack = 0
  2763  0000AC  0EE0               	movlw	224
  2764  0000AE  0101               	movlb	1	; () banked
  2765  0000B0  6F8B               	movwf	triangulation@x1& (0+255),b
  2766  0000B2  0E00               	movlw	0
  2767  0000B4  0101               	movlb	1	; () banked
  2768  0000B6  6F8C               	movwf	(triangulation@x1+1)& (0+255),b
  2769  0000B8  0E45               	movlw	69
  2770  0000BA  0101               	movlb	1	; () banked
  2771  0000BC  6F8D               	movwf	(triangulation@x1+2)& (0+255),b
  2772  0000BE  0E60               	movlw	96
  2773  0000C0  0101               	movlb	1	; () banked
  2774  0000C2  6F8E               	movwf	triangulation@y1& (0+255),b
  2775  0000C4  0E3F               	movlw	63
  2776  0000C6  0101               	movlb	1	; () banked
  2777  0000C8  6F8F               	movwf	(triangulation@y1+1)& (0+255),b
  2778  0000CA  0E45               	movlw	69
  2779  0000CC  0101               	movlb	1	; () banked
  2780  0000CE  6F90               	movwf	(triangulation@y1+2)& (0+255),b
  2781  0000D0  0E00               	movlw	0
  2782  0000D2  0101               	movlb	1	; () banked
  2783  0000D4  6FB8               	movwf	triangulation@x2& (0+255),b
  2784  0000D6  0E78               	movlw	120
  2785  0000D8  0101               	movlb	1	; () banked
  2786  0000DA  6FB9               	movwf	(triangulation@x2+1)& (0+255),b
  2787  0000DC  0EC2               	movlw	194
  2788  0000DE  0101               	movlb	1	; () banked
  2789  0000E0  6FBA               	movwf	(triangulation@x2+2)& (0+255),b
  2790  0000E2  0E60               	movlw	96
  2791  0000E4  0101               	movlb	1	; () banked
  2792  0000E6  6FBB               	movwf	triangulation@y2& (0+255),b
  2793  0000E8  0E3F               	movlw	63
  2794  0000EA  0101               	movlb	1	; () banked
  2795  0000EC  6FBC               	movwf	(triangulation@y2+1)& (0+255),b
  2796  0000EE  0E45               	movlw	69
  2797  0000F0  0101               	movlb	1	; () banked
  2798  0000F2  6FBD               	movwf	(triangulation@y2+2)& (0+255),b
  2799  0000F4  0E00               	movlw	0
  2800  0000F6  0101               	movlb	1	; () banked
  2801  0000F8  6F91               	movwf	triangulation@x3& (0+255),b
  2802  0000FA  0E7A               	movlw	122
  2803  0000FC  0101               	movlb	1	; () banked
  2804  0000FE  6F92               	movwf	(triangulation@x3+1)& (0+255),b
  2805  000100  0E44               	movlw	68
  2806  000102  0101               	movlb	1	; () banked
  2807  000104  6F93               	movwf	(triangulation@x3+2)& (0+255),b
  2808  000106  0E00               	movlw	0
  2809  000108  0101               	movlb	1	; () banked
  2810  00010A  6F94               	movwf	triangulation@y3& (0+255),b
  2811  00010C  0E78               	movlw	120
  2812  00010E  0101               	movlb	1	; () banked
  2813  000110  6F95               	movwf	(triangulation@y3+1)& (0+255),b
  2814  000112  0EC2               	movlw	194
  2815  000114  0101               	movlb	1	; () banked
  2816  000116  6F96               	movwf	(triangulation@y3+2)& (0+255),b
  2817                           
  2818                           ; BSR set to: 1
  2819                           ;triangulation.c: 28: double cot_12 = Cot( angle2 - angle1 ) ;
  2820  000118  C182  F077         	movff	triangulation@angle1,___ftneg@f1
  2821  00011C  C183  F078         	movff	triangulation@angle1+1,___ftneg@f1+1
  2822  000120  C184  F079         	movff	triangulation@angle1+2,___ftneg@f1+2
  2823  000124  ECA3  F01B         	call	___ftneg	;wreg free
  2824  000128  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2825  00012C  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2826  000130  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2827  000134  C185  F07D         	movff	triangulation@angle2,___ftadd@f2
  2828  000138  C186  F07E         	movff	triangulation@angle2+1,___ftadd@f2+1
  2829  00013C  C187  F07F         	movff	triangulation@angle2+2,___ftadd@f2+2
  2830  000140  EC25  F00D         	call	___ftadd	;wreg free
  2831  000144  C07A  F1B2         	movff	?___ftadd,_triangulation$3245
  2832  000148  C07B  F1B3         	movff	?___ftadd+1,_triangulation$3245+1
  2833  00014C  C07C  F1B4         	movff	?___ftadd+2,_triangulation$3245+2
  2834                           
  2835                           ;triangulation.c: 28: double cot_12 = Cot( angle2 - angle1 ) ;
  2836  000150  C1B2  F0BD         	movff	_triangulation$3245,Cot@angle
  2837  000154  C1B3  F0BE         	movff	_triangulation$3245+1,Cot@angle+1
  2838  000158  C1B4  F0BF         	movff	_triangulation$3245+2,Cot@angle+2
  2839  00015C  EC76  F019         	call	_Cot	;wreg free
  2840  000160  C0BD  F1CD         	movff	?_Cot,triangulation@cot_12
  2841  000164  C0BE  F1CE         	movff	?_Cot+1,triangulation@cot_12+1
  2842  000168  C0BF  F1CF         	movff	?_Cot+2,triangulation@cot_12+2
  2843                           
  2844                           ;triangulation.c: 29: double cot_23 = Cot( angle3 - angle2 ) ;
  2845  00016C  C185  F077         	movff	triangulation@angle2,___ftneg@f1
  2846  000170  C186  F078         	movff	triangulation@angle2+1,___ftneg@f1+1
  2847  000174  C187  F079         	movff	triangulation@angle2+2,___ftneg@f1+2
  2848  000178  ECA3  F01B         	call	___ftneg	;wreg free
  2849  00017C  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2850  000180  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2851  000184  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2852  000188  C188  F07D         	movff	triangulation@angle3,___ftadd@f2
  2853  00018C  C189  F07E         	movff	triangulation@angle3+1,___ftadd@f2+1
  2854  000190  C18A  F07F         	movff	triangulation@angle3+2,___ftadd@f2+2
  2855  000194  EC25  F00D         	call	___ftadd	;wreg free
  2856  000198  C07A  F1B2         	movff	?___ftadd,_triangulation$3245
  2857  00019C  C07B  F1B3         	movff	?___ftadd+1,_triangulation$3245+1
  2858  0001A0  C07C  F1B4         	movff	?___ftadd+2,_triangulation$3245+2
  2859                           
  2860                           ;triangulation.c: 29: double cot_23 = Cot( angle3 - angle2 ) ;
  2861  0001A4  C1B2  F0BD         	movff	_triangulation$3245,Cot@angle
  2862  0001A8  C1B3  F0BE         	movff	_triangulation$3245+1,Cot@angle+1
  2863  0001AC  C1B4  F0BF         	movff	_triangulation$3245+2,Cot@angle+2
  2864  0001B0  EC76  F019         	call	_Cot	;wreg free
  2865  0001B4  C0BD  F1D0         	movff	?_Cot,triangulation@cot_23
  2866  0001B8  C0BE  F1D1         	movff	?_Cot+1,triangulation@cot_23+1
  2867  0001BC  C0BF  F1D2         	movff	?_Cot+2,triangulation@cot_23+2
  2868                           
  2869                           ;triangulation.c: 30: cot_12 = saturation( cot_12 , 100000000 ) ;
  2870  0001C0  C1CD  F083         	movff	triangulation@cot_12,saturation@valeur
  2871  0001C4  C1CE  F084         	movff	triangulation@cot_12+1,saturation@valeur+1
  2872  0001C8  C1CF  F085         	movff	triangulation@cot_12+2,saturation@valeur+2
  2873  0001CC  0EBC               	movlw	188
  2874  0001CE  0100               	movlb	0	; () banked
  2875  0001D0  6F86               	movwf	saturation@maximum& (0+255),b
  2876  0001D2  0EBE               	movlw	190
  2877  0001D4  0100               	movlb	0	; () banked
  2878  0001D6  6F87               	movwf	(saturation@maximum+1)& (0+255),b
  2879  0001D8  0E4C               	movlw	76
  2880  0001DA  0100               	movlb	0	; () banked
  2881  0001DC  6F88               	movwf	(saturation@maximum+2)& (0+255),b
  2882  0001DE  ECB6  F016         	call	_saturation	;wreg free
  2883  0001E2  C083  F1CD         	movff	?_saturation,triangulation@cot_12
  2884  0001E6  C084  F1CE         	movff	?_saturation+1,triangulation@cot_12+1
  2885  0001EA  C085  F1CF         	movff	?_saturation+2,triangulation@cot_12+2
  2886                           
  2887                           ;triangulation.c: 31: cot_23 = saturation( cot_23 , 100000000 ) ;
  2888  0001EE  C1D0  F083         	movff	triangulation@cot_23,saturation@valeur
  2889  0001F2  C1D1  F084         	movff	triangulation@cot_23+1,saturation@valeur+1
  2890  0001F6  C1D2  F085         	movff	triangulation@cot_23+2,saturation@valeur+2
  2891  0001FA  0EBC               	movlw	188
  2892  0001FC  0100               	movlb	0	; () banked
  2893  0001FE  6F86               	movwf	saturation@maximum& (0+255),b
  2894  000200  0EBE               	movlw	190
  2895  000202  0100               	movlb	0	; () banked
  2896  000204  6F87               	movwf	(saturation@maximum+1)& (0+255),b
  2897  000206  0E4C               	movlw	76
  2898  000208  0100               	movlb	0	; () banked
  2899  00020A  6F88               	movwf	(saturation@maximum+2)& (0+255),b
  2900  00020C  ECB6  F016         	call	_saturation	;wreg free
  2901  000210  C083  F1D0         	movff	?_saturation,triangulation@cot_23
  2902  000214  C084  F1D1         	movff	?_saturation+1,triangulation@cot_23+1
  2903  000218  C085  F1D2         	movff	?_saturation+2,triangulation@cot_23+2
  2904                           
  2905                           ;triangulation.c: 32: double cot_31 = ( 1.0 - cot_12 * cot_23 ) / ( cot_12 + cot_23 ) ;
  2906  00021C  0E00               	movlw	0
  2907  00021E  0100               	movlb	0	; () banked
  2908  000220  6F7D               	movwf	___ftadd@f2& (0+255),b
  2909  000222  0E80               	movlw	128
  2910  000224  0100               	movlb	0	; () banked
  2911  000226  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2912  000228  0E3F               	movlw	63
  2913  00022A  0100               	movlb	0	; () banked
  2914  00022C  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2915  00022E  C1D0  F06B         	movff	triangulation@cot_23,___ftmul@f2
  2916  000232  C1D1  F06C         	movff	triangulation@cot_23+1,___ftmul@f2+1
  2917  000236  C1D2  F06D         	movff	triangulation@cot_23+2,___ftmul@f2+2
  2918  00023A  C1CD  F068         	movff	triangulation@cot_12,___ftmul@f1
  2919  00023E  C1CE  F069         	movff	triangulation@cot_12+1,___ftmul@f1+1
  2920  000242  C1CF  F06A         	movff	triangulation@cot_12+2,___ftmul@f1+2
  2921  000246  EC46  F00F         	call	___ftmul	;wreg free
  2922  00024A  C068  F077         	movff	?___ftmul,___ftneg@f1
  2923  00024E  C069  F078         	movff	?___ftmul+1,___ftneg@f1+1
  2924  000252  C06A  F079         	movff	?___ftmul+2,___ftneg@f1+2
  2925  000256  ECA3  F01B         	call	___ftneg	;wreg free
  2926  00025A  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2927  00025E  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2928  000262  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2929  000266  EC25  F00D         	call	___ftadd	;wreg free
  2930  00026A  C07A  F092         	movff	?___ftadd,___ftdiv@f1
  2931  00026E  C07B  F093         	movff	?___ftadd+1,___ftdiv@f1+1
  2932  000272  C07C  F094         	movff	?___ftadd+2,___ftdiv@f1+2
  2933  000276  C1D0  F07D         	movff	triangulation@cot_23,___ftadd@f2
  2934  00027A  C1D1  F07E         	movff	triangulation@cot_23+1,___ftadd@f2+1
  2935  00027E  C1D2  F07F         	movff	triangulation@cot_23+2,___ftadd@f2+2
  2936  000282  C1CD  F07A         	movff	triangulation@cot_12,___ftadd@f1
  2937  000286  C1CE  F07B         	movff	triangulation@cot_12+1,___ftadd@f1+1
  2938  00028A  C1CF  F07C         	movff	triangulation@cot_12+2,___ftadd@f1+2
  2939  00028E  EC25  F00D         	call	___ftadd	;wreg free
  2940  000292  C07A  F095         	movff	?___ftadd,___ftdiv@f2
  2941  000296  C07B  F096         	movff	?___ftadd+1,___ftdiv@f2+1
  2942  00029A  C07C  F097         	movff	?___ftadd+2,___ftdiv@f2+2
  2943  00029E  ECF4  F00F         	call	___ftdiv	;wreg free
  2944  0002A2  C092  F1C7         	movff	?___ftdiv,triangulation@cot_31
  2945  0002A6  C093  F1C8         	movff	?___ftdiv+1,triangulation@cot_31+1
  2946  0002AA  C094  F1C9         	movff	?___ftdiv+2,triangulation@cot_31+2
  2947                           
  2948                           ;triangulation.c: 33: cot_31 = saturation( cot_31 , 100000000 ) ;
  2949  0002AE  C1C7  F083         	movff	triangulation@cot_31,saturation@valeur
  2950  0002B2  C1C8  F084         	movff	triangulation@cot_31+1,saturation@valeur+1
  2951  0002B6  C1C9  F085         	movff	triangulation@cot_31+2,saturation@valeur+2
  2952  0002BA  0EBC               	movlw	188
  2953  0002BC  0100               	movlb	0	; () banked
  2954  0002BE  6F86               	movwf	saturation@maximum& (0+255),b
  2955  0002C0  0EBE               	movlw	190
  2956  0002C2  0100               	movlb	0	; () banked
  2957  0002C4  6F87               	movwf	(saturation@maximum+1)& (0+255),b
  2958  0002C6  0E4C               	movlw	76
  2959  0002C8  0100               	movlb	0	; () banked
  2960  0002CA  6F88               	movwf	(saturation@maximum+2)& (0+255),b
  2961  0002CC  ECB6  F016         	call	_saturation	;wreg free
  2962  0002D0  C083  F1C7         	movff	?_saturation,triangulation@cot_31
  2963  0002D4  C084  F1C8         	movff	?_saturation+1,triangulation@cot_31+1
  2964  0002D8  C085  F1C9         	movff	?_saturation+2,triangulation@cot_31+2
  2965                           
  2966                           ;triangulation.c: 34: double x1_ = x1 - x2 , y1_ = y1 - y2 , x3_ = x3 - x2 , y3_ = y3 - 
      +                          y2 ;
  2967  0002DC  C1B8  F077         	movff	triangulation@x2,___ftneg@f1
  2968  0002E0  C1B9  F078         	movff	triangulation@x2+1,___ftneg@f1+1
  2969  0002E4  C1BA  F079         	movff	triangulation@x2+2,___ftneg@f1+2
  2970  0002E8  ECA3  F01B         	call	___ftneg	;wreg free
  2971  0002EC  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2972  0002F0  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2973  0002F4  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2974  0002F8  C18B  F07D         	movff	triangulation@x1,___ftadd@f2
  2975  0002FC  C18C  F07E         	movff	triangulation@x1+1,___ftadd@f2+1
  2976  000300  C18D  F07F         	movff	triangulation@x1+2,___ftadd@f2+2
  2977  000304  EC25  F00D         	call	___ftadd	;wreg free
  2978  000308  C07A  F1D3         	movff	?___ftadd,triangulation@x1_
  2979  00030C  C07B  F1D4         	movff	?___ftadd+1,triangulation@x1_+1
  2980  000310  C07C  F1D5         	movff	?___ftadd+2,triangulation@x1_+2
  2981  000314  C1BB  F077         	movff	triangulation@y2,___ftneg@f1
  2982  000318  C1BC  F078         	movff	triangulation@y2+1,___ftneg@f1+1
  2983  00031C  C1BD  F079         	movff	triangulation@y2+2,___ftneg@f1+2
  2984  000320  ECA3  F01B         	call	___ftneg	;wreg free
  2985  000324  C077  F07A         	movff	?___ftneg,___ftadd@f1
  2986  000328  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  2987  00032C  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  2988  000330  C18E  F07D         	movff	triangulation@y1,___ftadd@f2
  2989  000334  C18F  F07E         	movff	triangulation@y1+1,___ftadd@f2+1
  2990  000338  C190  F07F         	movff	triangulation@y1+2,___ftadd@f2+2
  2991  00033C  EC25  F00D         	call	___ftadd	;wreg free
  2992  000340  C07A  F1D6         	movff	?___ftadd,triangulation@y1_
  2993  000344  C07B  F1D7         	movff	?___ftadd+1,triangulation@y1_+1
  2994  000348  C07C  F1D8         	movff	?___ftadd+2,triangulation@y1_+2
  2995  00034C  C1B8  F077         	movff	triangulation@x2,___ftneg@f1
  2996  000350  C1B9  F078         	movff	triangulation@x2+1,___ftneg@f1+1
  2997  000354  C1BA  F079         	movff	triangulation@x2+2,___ftneg@f1+2
  2998  000358  ECA3  F01B         	call	___ftneg	;wreg free
  2999  00035C  C077  F07A         	movff	?___ftneg,___ftadd@f1
  3000  000360  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  3001  000364  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  3002  000368  C191  F07D         	movff	triangulation@x3,___ftadd@f2
  3003  00036C  C192  F07E         	movff	triangulation@x3+1,___ftadd@f2+1
  3004  000370  C193  F07F         	movff	triangulation@x3+2,___ftadd@f2+2
  3005  000374  EC25  F00D         	call	___ftadd	;wreg free
  3006  000378  C07A  F1D9         	movff	?___ftadd,triangulation@x3_
  3007  00037C  C07B  F1DA         	movff	?___ftadd+1,triangulation@x3_+1
  3008  000380  C07C  F1DB         	movff	?___ftadd+2,triangulation@x3_+2
  3009  000384  C1BB  F077         	movff	triangulation@y2,___ftneg@f1
  3010  000388  C1BC  F078         	movff	triangulation@y2+1,___ftneg@f1+1
  3011  00038C  C1BD  F079         	movff	triangulation@y2+2,___ftneg@f1+2
  3012  000390  ECA3  F01B         	call	___ftneg	;wreg free
  3013  000394  C077  F07A         	movff	?___ftneg,___ftadd@f1
  3014  000398  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  3015  00039C  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  3016  0003A0  C194  F07D         	movff	triangulation@y3,___ftadd@f2
  3017  0003A4  C195  F07E         	movff	triangulation@y3+1,___ftadd@f2+1
  3018  0003A8  C196  F07F         	movff	triangulation@y3+2,___ftadd@f2+2
  3019  0003AC  EC25  F00D         	call	___ftadd	;wreg free
  3020  0003B0  C07A  F1DC         	movff	?___ftadd,triangulation@y3_
  3021  0003B4  C07B  F1DD         	movff	?___ftadd+1,triangulation@y3_+1
  3022  0003B8  C07C  F1DE         	movff	?___ftadd+2,triangulation@y3_+2
  3023                           
  3024                           ;triangulation.c: 35: double c12x = x1_ + cot_12 * y1_ ;
  3025  0003BC  C1D6  F06B         	movff	triangulation@y1_,___ftmul@f2
  3026  0003C0  C1D7  F06C         	movff	triangulation@y1_+1,___ftmul@f2+1
  3027  0003C4  C1D8  F06D         	movff	triangulation@y1_+2,___ftmul@f2+2
  3028  0003C8  C1CD  F068         	movff	triangulation@cot_12,___ftmul@f1
  3029  0003CC  C1CE  F069         	movff	triangulation@cot_12+1,___ftmul@f1+1
  3030  0003D0  C1CF  F06A         	movff	triangulation@cot_12+2,___ftmul@f1+2
  3031  0003D4  EC46  F00F         	call	___ftmul	;wreg free
  3032  0003D8  C068  F07A         	movff	?___ftmul,___ftadd@f1
  3033  0003DC  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  3034  0003E0  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  3035  0003E4  C1D3  F07D         	movff	triangulation@x1_,___ftadd@f2
  3036  0003E8  C1D4  F07E         	movff	triangulation@x1_+1,___ftadd@f2+1
  3037  0003EC  C1D5  F07F         	movff	triangulation@x1_+2,___ftadd@f2+2
  3038  0003F0  EC25  F00D         	call	___ftadd	;wreg free
  3039  0003F4  C07A  F1A9         	movff	?___ftadd,triangulation@c12x
  3040  0003F8  C07B  F1AA         	movff	?___ftadd+1,triangulation@c12x+1
  3041  0003FC  C07C  F1AB         	movff	?___ftadd+2,triangulation@c12x+2
  3042                           
  3043                           ;triangulation.c: 36: double c12y = y1_ - cot_12 * x1_ ;
  3044  000400  C1D3  F06B         	movff	triangulation@x1_,___ftmul@f2
  3045  000404  C1D4  F06C         	movff	triangulation@x1_+1,___ftmul@f2+1
  3046  000408  C1D5  F06D         	movff	triangulation@x1_+2,___ftmul@f2+2
  3047  00040C  C1CD  F068         	movff	triangulation@cot_12,___ftmul@f1
  3048  000410  C1CE  F069         	movff	triangulation@cot_12+1,___ftmul@f1+1
  3049  000414  C1CF  F06A         	movff	triangulation@cot_12+2,___ftmul@f1+2
  3050  000418  EC46  F00F         	call	___ftmul	;wreg free
  3051  00041C  C068  F077         	movff	?___ftmul,___ftneg@f1
  3052  000420  C069  F078         	movff	?___ftmul+1,___ftneg@f1+1
  3053  000424  C06A  F079         	movff	?___ftmul+2,___ftneg@f1+2
  3054  000428  ECA3  F01B         	call	___ftneg	;wreg free
  3055  00042C  C077  F07A         	movff	?___ftneg,___ftadd@f1
  3056  000430  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  3057  000434  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  3058  000438  C1D6  F07D         	movff	triangulation@y1_,___ftadd@f2
  3059  00043C  C1D7  F07E         	movff	triangulation@y1_+1,___ftadd@f2+1
  3060  000440  C1D8  F07F         	movff	triangulation@y1_+2,___ftadd@f2+2
  3061  000444  EC25  F00D         	call	___ftadd	;wreg free
  3062  000448  C07A  F1AC         	movff	?___ftadd,triangulation@c12y
  3063  00044C  C07B  F1AD         	movff	?___ftadd+1,triangulation@c12y+1
  3064  000450  C07C  F1AE         	movff	?___ftadd+2,triangulation@c12y+2
  3065                           
  3066                           ;triangulation.c: 38: double c23x = x3_ - cot_23 * y3_ ;
  3067  000454  C1DC  F06B         	movff	triangulation@y3_,___ftmul@f2
  3068  000458  C1DD  F06C         	movff	triangulation@y3_+1,___ftmul@f2+1
  3069  00045C  C1DE  F06D         	movff	triangulation@y3_+2,___ftmul@f2+2
  3070  000460  C1D0  F068         	movff	triangulation@cot_23,___ftmul@f1
  3071  000464  C1D1  F069         	movff	triangulation@cot_23+1,___ftmul@f1+1
  3072  000468  C1D2  F06A         	movff	triangulation@cot_23+2,___ftmul@f1+2
  3073  00046C  EC46  F00F         	call	___ftmul	;wreg free
  3074  000470  C068  F077         	movff	?___ftmul,___ftneg@f1
  3075  000474  C069  F078         	movff	?___ftmul+1,___ftneg@f1+1
  3076  000478  C06A  F079         	movff	?___ftmul+2,___ftneg@f1+2
  3077  00047C  ECA3  F01B         	call	___ftneg	;wreg free
  3078  000480  C077  F07A         	movff	?___ftneg,___ftadd@f1
  3079  000484  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  3080  000488  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  3081  00048C  C1D9  F07D         	movff	triangulation@x3_,___ftadd@f2
  3082  000490  C1DA  F07E         	movff	triangulation@x3_+1,___ftadd@f2+1
  3083  000494  C1DB  F07F         	movff	triangulation@x3_+2,___ftadd@f2+2
  3084  000498  EC25  F00D         	call	___ftadd	;wreg free
  3085  00049C  C07A  F1BE         	movff	?___ftadd,triangulation@c23x
  3086  0004A0  C07B  F1BF         	movff	?___ftadd+1,triangulation@c23x+1
  3087  0004A4  C07C  F1C0         	movff	?___ftadd+2,triangulation@c23x+2
  3088                           
  3089                           ;triangulation.c: 39: double c23y = y3_ + cot_23 * x3_ ;
  3090  0004A8  C1D9  F06B         	movff	triangulation@x3_,___ftmul@f2
  3091  0004AC  C1DA  F06C         	movff	triangulation@x3_+1,___ftmul@f2+1
  3092  0004B0  C1DB  F06D         	movff	triangulation@x3_+2,___ftmul@f2+2
  3093  0004B4  C1D0  F068         	movff	triangulation@cot_23,___ftmul@f1
  3094  0004B8  C1D1  F069         	movff	triangulation@cot_23+1,___ftmul@f1+1
  3095  0004BC  C1D2  F06A         	movff	triangulation@cot_23+2,___ftmul@f1+2
  3096  0004C0  EC46  F00F         	call	___ftmul	;wreg free
  3097  0004C4  C068  F07A         	movff	?___ftmul,___ftadd@f1
  3098  0004C8  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  3099  0004CC  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  3100  0004D0  C1DC  F07D         	movff	triangulation@y3_,___ftadd@f2
  3101  0004D4  C1DD  F07E         	movff	triangulation@y3_+1,___ftadd@f2+1
  3102  0004D8  C1DE  F07F         	movff	triangulation@y3_+2,___ftadd@f2+2
  3103  0004DC  EC25  F00D         	call	___ftadd	;wreg free
  3104  0004E0  C07A  F1C1         	movff	?___ftadd,triangulation@c23y
  3105  0004E4  C07B  F1C2         	movff	?___ftadd+1,triangulation@c23y+1
  3106  0004E8  C07C  F1C3         	movff	?___ftadd+2,triangulation@c23y+2
  3107                           
  3108                           ;triangulation.c: 41: double c31x = (x3_ + x1_) + cot_31 * (y3_ - y1_) ;
  3109  0004EC  C1C7  F06B         	movff	triangulation@cot_31,___ftmul@f2
  3110  0004F0  C1C8  F06C         	movff	triangulation@cot_31+1,___ftmul@f2+1
  3111  0004F4  C1C9  F06D         	movff	triangulation@cot_31+2,___ftmul@f2+2
  3112  0004F8  C1DC  F07D         	movff	triangulation@y3_,___ftadd@f2
  3113  0004FC  C1DD  F07E         	movff	triangulation@y3_+1,___ftadd@f2+1
  3114  000500  C1DE  F07F         	movff	triangulation@y3_+2,___ftadd@f2+2
  3115  000504  C1D6  F077         	movff	triangulation@y1_,___ftneg@f1
  3116  000508  C1D7  F078         	movff	triangulation@y1_+1,___ftneg@f1+1
  3117  00050C  C1D8  F079         	movff	triangulation@y1_+2,___ftneg@f1+2
  3118  000510  ECA3  F01B         	call	___ftneg	;wreg free
  3119  000514  C077  F07A         	movff	?___ftneg,___ftadd@f1
  3120  000518  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  3121  00051C  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  3122  000520  EC25  F00D         	call	___ftadd	;wreg free
  3123  000524  C07A  F068         	movff	?___ftadd,___ftmul@f1
  3124  000528  C07B  F069         	movff	?___ftadd+1,___ftmul@f1+1
  3125  00052C  C07C  F06A         	movff	?___ftadd+2,___ftmul@f1+2
  3126  000530  EC46  F00F         	call	___ftmul	;wreg free
  3127  000534  C068  F1C4         	movff	?___ftmul,_triangulation$3246
  3128  000538  C069  F1C5         	movff	?___ftmul+1,_triangulation$3246+1
  3129  00053C  C06A  F1C6         	movff	?___ftmul+2,_triangulation$3246+2
  3130                           
  3131                           ;triangulation.c: 41: double c31x = (x3_ + x1_) + cot_31 * (y3_ - y1_) ;
  3132  000540  C1D9  F07D         	movff	triangulation@x3_,___ftadd@f2
  3133  000544  C1DA  F07E         	movff	triangulation@x3_+1,___ftadd@f2+1
  3134  000548  C1DB  F07F         	movff	triangulation@x3_+2,___ftadd@f2+2
  3135  00054C  C1C4  F07A         	movff	_triangulation$3246,___ftadd@f1
  3136  000550  C1C5  F07B         	movff	_triangulation$3246+1,___ftadd@f1+1
  3137  000554  C1C6  F07C         	movff	_triangulation$3246+2,___ftadd@f1+2
  3138  000558  EC25  F00D         	call	___ftadd	;wreg free
  3139  00055C  C07A  F1CA         	movff	?___ftadd,_triangulation$3247
  3140  000560  C07B  F1CB         	movff	?___ftadd+1,_triangulation$3247+1
  3141  000564  C07C  F1CC         	movff	?___ftadd+2,_triangulation$3247+2
  3142                           
  3143                           ;triangulation.c: 41: double c31x = (x3_ + x1_) + cot_31 * (y3_ - y1_) ;
  3144  000568  C1CA  F07A         	movff	_triangulation$3247,___ftadd@f1
  3145  00056C  C1CB  F07B         	movff	_triangulation$3247+1,___ftadd@f1+1
  3146  000570  C1CC  F07C         	movff	_triangulation$3247+2,___ftadd@f1+2
  3147  000574  C1D3  F07D         	movff	triangulation@x1_,___ftadd@f2
  3148  000578  C1D4  F07E         	movff	triangulation@x1_+1,___ftadd@f2+1
  3149  00057C  C1D5  F07F         	movff	triangulation@x1_+2,___ftadd@f2+2
  3150  000580  EC25  F00D         	call	___ftadd	;wreg free
  3151  000584  C07A  F197         	movff	?___ftadd,triangulation@c31x
  3152  000588  C07B  F198         	movff	?___ftadd+1,triangulation@c31x+1
  3153  00058C  C07C  F199         	movff	?___ftadd+2,triangulation@c31x+2
  3154                           
  3155                           ;triangulation.c: 42: double c31y = (y3_ + y1_) - cot_31 * (x3_ - x1_) ;
  3156  000590  C1C7  F06B         	movff	triangulation@cot_31,___ftmul@f2
  3157  000594  C1C8  F06C         	movff	triangulation@cot_31+1,___ftmul@f2+1
  3158  000598  C1C9  F06D         	movff	triangulation@cot_31+2,___ftmul@f2+2
  3159  00059C  C1D9  F07D         	movff	triangulation@x3_,___ftadd@f2
  3160  0005A0  C1DA  F07E         	movff	triangulation@x3_+1,___ftadd@f2+1
  3161  0005A4  C1DB  F07F         	movff	triangulation@x3_+2,___ftadd@f2+2
  3162  0005A8  C1D3  F077         	movff	triangulation@x1_,___ftneg@f1
  3163  0005AC  C1D4  F078         	movff	triangulation@x1_+1,___ftneg@f1+1
  3164  0005B0  C1D5  F079         	movff	triangulation@x1_+2,___ftneg@f1+2
  3165  0005B4  ECA3  F01B         	call	___ftneg	;wreg free
  3166  0005B8  C077  F07A         	movff	?___ftneg,___ftadd@f1
  3167  0005BC  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  3168  0005C0  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  3169  0005C4  EC25  F00D         	call	___ftadd	;wreg free
  3170  0005C8  C07A  F068         	movff	?___ftadd,___ftmul@f1
  3171  0005CC  C07B  F069         	movff	?___ftadd+1,___ftmul@f1+1
  3172  0005D0  C07C  F06A         	movff	?___ftadd+2,___ftmul@f1+2
  3173  0005D4  EC46  F00F         	call	___ftmul	;wreg free
  3174  0005D8  C068  F1B5         	movff	?___ftmul,_triangulation$3248
  3175  0005DC  C069  F1B6         	movff	?___ftmul+1,_triangulation$3248+1
  3176  0005E0  C06A  F1B7         	movff	?___ftmul+2,_triangulation$3248+2
  3177                           
  3178                           ;triangulation.c: 42: double c31y = (y3_ + y1_) - cot_31 * (x3_ - x1_) ;
  3179  0005E4  C1DC  F07D         	movff	triangulation@y3_,___ftadd@f2
  3180  0005E8  C1DD  F07E         	movff	triangulation@y3_+1,___ftadd@f2+1
  3181  0005EC  C1DE  F07F         	movff	triangulation@y3_+2,___ftadd@f2+2
  3182  0005F0  C1B5  F077         	movff	_triangulation$3248,___ftneg@f1
  3183  0005F4  C1B6  F078         	movff	_triangulation$3248+1,___ftneg@f1+1
  3184  0005F8  C1B7  F079         	movff	_triangulation$3248+2,___ftneg@f1+2
  3185  0005FC  ECA3  F01B         	call	___ftneg	;wreg free
  3186  000600  C077  F07A         	movff	?___ftneg,___ftadd@f1
  3187  000604  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  3188  000608  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  3189  00060C  EC25  F00D         	call	___ftadd	;wreg free
  3190  000610  C07A  F1CA         	movff	?___ftadd,_triangulation$3247
  3191  000614  C07B  F1CB         	movff	?___ftadd+1,_triangulation$3247+1
  3192  000618  C07C  F1CC         	movff	?___ftadd+2,_triangulation$3247+2
  3193                           
  3194                           ;triangulation.c: 42: double c31y = (y3_ + y1_) - cot_31 * (x3_ - x1_) ;
  3195  00061C  C1CA  F07A         	movff	_triangulation$3247,___ftadd@f1
  3196  000620  C1CB  F07B         	movff	_triangulation$3247+1,___ftadd@f1+1
  3197  000624  C1CC  F07C         	movff	_triangulation$3247+2,___ftadd@f1+2
  3198  000628  C1D6  F07D         	movff	triangulation@y1_,___ftadd@f2
  3199  00062C  C1D7  F07E         	movff	triangulation@y1_+1,___ftadd@f2+1
  3200  000630  C1D8  F07F         	movff	triangulation@y1_+2,___ftadd@f2+2
  3201  000634  EC25  F00D         	call	___ftadd	;wreg free
  3202  000638  C07A  F19A         	movff	?___ftadd,triangulation@c31y
  3203  00063C  C07B  F19B         	movff	?___ftadd+1,triangulation@c31y+1
  3204  000640  C07C  F19C         	movff	?___ftadd+2,triangulation@c31y+2
  3205                           
  3206                           ;triangulation.c: 43: double k31 = (x3_ * x1_) + (y3_ * y1_) + cot_31 * ( (y3_ * x1_) - 
      +                          (x3_ * y1_) ) ;
  3207  000644  C1D6  F06B         	movff	triangulation@y1_,___ftmul@f2
  3208  000648  C1D7  F06C         	movff	triangulation@y1_+1,___ftmul@f2+1
  3209  00064C  C1D8  F06D         	movff	triangulation@y1_+2,___ftmul@f2+2
  3210  000650  C1D9  F068         	movff	triangulation@x3_,___ftmul@f1
  3211  000654  C1DA  F069         	movff	triangulation@x3_+1,___ftmul@f1+1
  3212  000658  C1DB  F06A         	movff	triangulation@x3_+2,___ftmul@f1+2
  3213  00065C  EC46  F00F         	call	___ftmul	;wreg free
  3214  000660  C068  F077         	movff	?___ftmul,___ftneg@f1
  3215  000664  C069  F078         	movff	?___ftmul+1,___ftneg@f1+1
  3216  000668  C06A  F079         	movff	?___ftmul+2,___ftneg@f1+2
  3217  00066C  ECA3  F01B         	call	___ftneg	;wreg free
  3218  000670  C077  F07D         	movff	?___ftneg,___ftadd@f2
  3219  000674  C078  F07E         	movff	?___ftneg+1,___ftadd@f2+1
  3220  000678  C079  F07F         	movff	?___ftneg+2,___ftadd@f2+2
  3221  00067C  C1D3  F06B         	movff	triangulation@x1_,___ftmul@f2
  3222  000680  C1D4  F06C         	movff	triangulation@x1_+1,___ftmul@f2+1
  3223  000684  C1D5  F06D         	movff	triangulation@x1_+2,___ftmul@f2+2
  3224  000688  C1DC  F068         	movff	triangulation@y3_,___ftmul@f1
  3225  00068C  C1DD  F069         	movff	triangulation@y3_+1,___ftmul@f1+1
  3226  000690  C1DE  F06A         	movff	triangulation@y3_+2,___ftmul@f1+2
  3227  000694  EC46  F00F         	call	___ftmul	;wreg free
  3228  000698  C068  F07A         	movff	?___ftmul,___ftadd@f1
  3229  00069C  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  3230  0006A0  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  3231  0006A4  EC25  F00D         	call	___ftadd	;wreg free
  3232  0006A8  C07A  F1A6         	movff	?___ftadd,_triangulation$3249
  3233  0006AC  C07B  F1A7         	movff	?___ftadd+1,_triangulation$3249+1
  3234  0006B0  C07C  F1A8         	movff	?___ftadd+2,_triangulation$3249+2
  3235                           
  3236                           ;triangulation.c: 43: double k31 = (x3_ * x1_) + (y3_ * y1_) + cot_31 * ( (y3_ * x1_) - 
      +                          (x3_ * y1_) ) ;
  3237  0006B4  C1D6  F06B         	movff	triangulation@y1_,___ftmul@f2
  3238  0006B8  C1D7  F06C         	movff	triangulation@y1_+1,___ftmul@f2+1
  3239  0006BC  C1D8  F06D         	movff	triangulation@y1_+2,___ftmul@f2+2
  3240  0006C0  C1DC  F068         	movff	triangulation@y3_,___ftmul@f1
  3241  0006C4  C1DD  F069         	movff	triangulation@y3_+1,___ftmul@f1+1
  3242  0006C8  C1DE  F06A         	movff	triangulation@y3_+2,___ftmul@f1+2
  3243  0006CC  EC46  F00F         	call	___ftmul	;wreg free
  3244  0006D0  C068  F07D         	movff	?___ftmul,___ftadd@f2
  3245  0006D4  C069  F07E         	movff	?___ftmul+1,___ftadd@f2+1
  3246  0006D8  C06A  F07F         	movff	?___ftmul+2,___ftadd@f2+2
  3247  0006DC  C1D3  F06B         	movff	triangulation@x1_,___ftmul@f2
  3248  0006E0  C1D4  F06C         	movff	triangulation@x1_+1,___ftmul@f2+1
  3249  0006E4  C1D5  F06D         	movff	triangulation@x1_+2,___ftmul@f2+2
  3250  0006E8  C1D9  F068         	movff	triangulation@x3_,___ftmul@f1
  3251  0006EC  C1DA  F069         	movff	triangulation@x3_+1,___ftmul@f1+1
  3252  0006F0  C1DB  F06A         	movff	triangulation@x3_+2,___ftmul@f1+2
  3253  0006F4  EC46  F00F         	call	___ftmul	;wreg free
  3254  0006F8  C068  F07A         	movff	?___ftmul,___ftadd@f1
  3255  0006FC  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  3256  000700  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  3257  000704  EC25  F00D         	call	___ftadd	;wreg free
  3258  000708  C07A  F1CA         	movff	?___ftadd,_triangulation$3247
  3259  00070C  C07B  F1CB         	movff	?___ftadd+1,_triangulation$3247+1
  3260  000710  C07C  F1CC         	movff	?___ftadd+2,_triangulation$3247+2
  3261                           
  3262                           ;triangulation.c: 43: double k31 = (x3_ * x1_) + (y3_ * y1_) + cot_31 * ( (y3_ * x1_) - 
      +                          (x3_ * y1_) ) ;
  3263  000714  C1CA  F07A         	movff	_triangulation$3247,___ftadd@f1
  3264  000718  C1CB  F07B         	movff	_triangulation$3247+1,___ftadd@f1+1
  3265  00071C  C1CC  F07C         	movff	_triangulation$3247+2,___ftadd@f1+2
  3266  000720  C1C7  F06B         	movff	triangulation@cot_31,___ftmul@f2
  3267  000724  C1C8  F06C         	movff	triangulation@cot_31+1,___ftmul@f2+1
  3268  000728  C1C9  F06D         	movff	triangulation@cot_31+2,___ftmul@f2+2
  3269  00072C  C1A6  F068         	movff	_triangulation$3249,___ftmul@f1
  3270  000730  C1A7  F069         	movff	_triangulation$3249+1,___ftmul@f1+1
  3271  000734  C1A8  F06A         	movff	_triangulation$3249+2,___ftmul@f1+2
  3272  000738  EC46  F00F         	call	___ftmul	;wreg free
  3273  00073C  C068  F07D         	movff	?___ftmul,___ftadd@f2
  3274  000740  C069  F07E         	movff	?___ftmul+1,___ftadd@f2+1
  3275  000744  C06A  F07F         	movff	?___ftmul+2,___ftadd@f2+2
  3276  000748  EC25  F00D         	call	___ftadd	;wreg free
  3277  00074C  C07A  F19D         	movff	?___ftadd,triangulation@k31
  3278  000750  C07B  F19E         	movff	?___ftadd+1,triangulation@k31+1
  3279  000754  C07C  F19F         	movff	?___ftadd+2,triangulation@k31+2
  3280                           
  3281                           ;triangulation.c: 45: double D = (c12x - c23x) * (c23y - c31y) - (c23x - c31x) * (c12y -
      +                           c23y) ;
  3282  000758  C1AC  F07D         	movff	triangulation@c12y,___ftadd@f2
  3283  00075C  C1AD  F07E         	movff	triangulation@c12y+1,___ftadd@f2+1
  3284  000760  C1AE  F07F         	movff	triangulation@c12y+2,___ftadd@f2+2
  3285  000764  C1C1  F077         	movff	triangulation@c23y,___ftneg@f1
  3286  000768  C1C2  F078         	movff	triangulation@c23y+1,___ftneg@f1+1
  3287  00076C  C1C3  F079         	movff	triangulation@c23y+2,___ftneg@f1+2
  3288  000770  ECA3  F01B         	call	___ftneg	;wreg free
  3289  000774  C077  F07A         	movff	?___ftneg,___ftadd@f1
  3290  000778  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  3291  00077C  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  3292  000780  EC25  F00D         	call	___ftadd	;wreg free
  3293  000784  C07A  F06B         	movff	?___ftadd,___ftmul@f2
  3294  000788  C07B  F06C         	movff	?___ftadd+1,___ftmul@f2+1
  3295  00078C  C07C  F06D         	movff	?___ftadd+2,___ftmul@f2+2
  3296  000790  C1BE  F07D         	movff	triangulation@c23x,___ftadd@f2
  3297  000794  C1BF  F07E         	movff	triangulation@c23x+1,___ftadd@f2+1
  3298  000798  C1C0  F07F         	movff	triangulation@c23x+2,___ftadd@f2+2
  3299  00079C  C197  F077         	movff	triangulation@c31x,___ftneg@f1
  3300  0007A0  C198  F078         	movff	triangulation@c31x+1,___ftneg@f1+1
  3301  0007A4  C199  F079         	movff	triangulation@c31x+2,___ftneg@f1+2
  3302  0007A8  ECA3  F01B         	call	___ftneg	;wreg free
  3303  0007AC  C077  F07A         	movff	?___ftneg,___ftadd@f1
  3304  0007B0  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  3305  0007B4  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  3306  0007B8  EC25  F00D         	call	___ftadd	;wreg free
  3307  0007BC  C07A  F068         	movff	?___ftadd,___ftmul@f1
  3308  0007C0  C07B  F069         	movff	?___ftadd+1,___ftmul@f1+1
  3309  0007C4  C07C  F06A         	movff	?___ftadd+2,___ftmul@f1+2
  3310  0007C8  EC46  F00F         	call	___ftmul	;wreg free
  3311  0007CC  C068  F1B5         	movff	?___ftmul,_triangulation$3248
  3312  0007D0  C069  F1B6         	movff	?___ftmul+1,_triangulation$3248+1
  3313  0007D4  C06A  F1B7         	movff	?___ftmul+2,_triangulation$3248+2
  3314                           
  3315                           ;triangulation.c: 45: double D = (c12x - c23x) * (c23y - c31y) - (c23x - c31x) * (c12y -
      +                           c23y) ;
  3316  0007D8  C1C1  F07D         	movff	triangulation@c23y,___ftadd@f2
  3317  0007DC  C1C2  F07E         	movff	triangulation@c23y+1,___ftadd@f2+1
  3318  0007E0  C1C3  F07F         	movff	triangulation@c23y+2,___ftadd@f2+2
  3319  0007E4  C19A  F077         	movff	triangulation@c31y,___ftneg@f1
  3320  0007E8  C19B  F078         	movff	triangulation@c31y+1,___ftneg@f1+1
  3321  0007EC  C19C  F079         	movff	triangulation@c31y+2,___ftneg@f1+2
  3322  0007F0  ECA3  F01B         	call	___ftneg	;wreg free
  3323  0007F4  C077  F07A         	movff	?___ftneg,___ftadd@f1
  3324  0007F8  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  3325  0007FC  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  3326  000800  EC25  F00D         	call	___ftadd	;wreg free
  3327  000804  C07A  F06B         	movff	?___ftadd,___ftmul@f2
  3328  000808  C07B  F06C         	movff	?___ftadd+1,___ftmul@f2+1
  3329  00080C  C07C  F06D         	movff	?___ftadd+2,___ftmul@f2+2
  3330  000810  C1A9  F07D         	movff	triangulation@c12x,___ftadd@f2
  3331  000814  C1AA  F07E         	movff	triangulation@c12x+1,___ftadd@f2+1
  3332  000818  C1AB  F07F         	movff	triangulation@c12x+2,___ftadd@f2+2
  3333  00081C  C1BE  F077         	movff	triangulation@c23x,___ftneg@f1
  3334  000820  C1BF  F078         	movff	triangulation@c23x+1,___ftneg@f1+1
  3335  000824  C1C0  F079         	movff	triangulation@c23x+2,___ftneg@f1+2
  3336  000828  ECA3  F01B         	call	___ftneg	;wreg free
  3337  00082C  C077  F07A         	movff	?___ftneg,___ftadd@f1
  3338  000830  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  3339  000834  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  3340  000838  EC25  F00D         	call	___ftadd	;wreg free
  3341  00083C  C07A  F068         	movff	?___ftadd,___ftmul@f1
  3342  000840  C07B  F069         	movff	?___ftadd+1,___ftmul@f1+1
  3343  000844  C07C  F06A         	movff	?___ftadd+2,___ftmul@f1+2
  3344  000848  EC46  F00F         	call	___ftmul	;wreg free
  3345  00084C  C068  F1CA         	movff	?___ftmul,_triangulation$3247
  3346  000850  C069  F1CB         	movff	?___ftmul+1,_triangulation$3247+1
  3347  000854  C06A  F1CC         	movff	?___ftmul+2,_triangulation$3247+2
  3348                           
  3349                           ;triangulation.c: 45: double D = (c12x - c23x) * (c23y - c31y) - (c23x - c31x) * (c12y -
      +                           c23y) ;
  3350  000858  C1CA  F07A         	movff	_triangulation$3247,___ftadd@f1
  3351  00085C  C1CB  F07B         	movff	_triangulation$3247+1,___ftadd@f1+1
  3352  000860  C1CC  F07C         	movff	_triangulation$3247+2,___ftadd@f1+2
  3353  000864  C1B5  F077         	movff	_triangulation$3248,___ftneg@f1
  3354  000868  C1B6  F078         	movff	_triangulation$3248+1,___ftneg@f1+1
  3355  00086C  C1B7  F079         	movff	_triangulation$3248+2,___ftneg@f1+2
  3356  000870  ECA3  F01B         	call	___ftneg	;wreg free
  3357  000874  C077  F07D         	movff	?___ftneg,___ftadd@f2
  3358  000878  C078  F07E         	movff	?___ftneg+1,___ftadd@f2+1
  3359  00087C  C079  F07F         	movff	?___ftneg+2,___ftadd@f2+2
  3360  000880  EC25  F00D         	call	___ftadd	;wreg free
  3361  000884  C07A  F1A0         	movff	?___ftadd,triangulation@D
  3362  000888  C07B  F1A1         	movff	?___ftadd+1,triangulation@D+1
  3363  00088C  C07C  F1A2         	movff	?___ftadd+2,triangulation@D+2
  3364                           
  3365                           ;triangulation.c: 46: double invD = 1.0 / D ;
  3366  000890  0E00               	movlw	0
  3367  000892  0100               	movlb	0	; () banked
  3368  000894  6F92               	movwf	___ftdiv@f1& (0+255),b
  3369  000896  0E80               	movlw	128
  3370  000898  0100               	movlb	0	; () banked
  3371  00089A  6F93               	movwf	(___ftdiv@f1+1)& (0+255),b
  3372  00089C  0E3F               	movlw	63
  3373  00089E  0100               	movlb	0	; () banked
  3374  0008A0  6F94               	movwf	(___ftdiv@f1+2)& (0+255),b
  3375  0008A2  C1A0  F095         	movff	triangulation@D,___ftdiv@f2
  3376  0008A6  C1A1  F096         	movff	triangulation@D+1,___ftdiv@f2+1
  3377  0008AA  C1A2  F097         	movff	triangulation@D+2,___ftdiv@f2+2
  3378  0008AE  ECF4  F00F         	call	___ftdiv	;wreg free
  3379  0008B2  C092  F1A3         	movff	?___ftdiv,triangulation@invD
  3380  0008B6  C093  F1A4         	movff	?___ftdiv+1,triangulation@invD+1
  3381  0008BA  C094  F1A5         	movff	?___ftdiv+2,triangulation@invD+2
  3382                           
  3383                           ;triangulation.c: 47: double K = k31 * invD ;
  3384  0008BE  C19D  F068         	movff	triangulation@k31,___ftmul@f1
  3385  0008C2  C19E  F069         	movff	triangulation@k31+1,___ftmul@f1+1
  3386  0008C6  C19F  F06A         	movff	triangulation@k31+2,___ftmul@f1+2
  3387  0008CA  C1A3  F06B         	movff	triangulation@invD,___ftmul@f2
  3388  0008CE  C1A4  F06C         	movff	triangulation@invD+1,___ftmul@f2+1
  3389  0008D2  C1A5  F06D         	movff	triangulation@invD+2,___ftmul@f2+2
  3390  0008D6  EC46  F00F         	call	___ftmul	;wreg free
  3391  0008DA  C068  F1AF         	movff	?___ftmul,triangulation@K
  3392  0008DE  C069  F1B0         	movff	?___ftmul+1,triangulation@K+1
  3393  0008E2  C06A  F1B1         	movff	?___ftmul+2,triangulation@K+2
  3394                           
  3395                           ;triangulation.c: 49: *x = K * (c12y - c23y) + x2 ;
  3396  0008E6  C1AF  F06B         	movff	triangulation@K,___ftmul@f2
  3397  0008EA  C1B0  F06C         	movff	triangulation@K+1,___ftmul@f2+1
  3398  0008EE  C1B1  F06D         	movff	triangulation@K+2,___ftmul@f2+2
  3399  0008F2  C1AC  F07D         	movff	triangulation@c12y,___ftadd@f2
  3400  0008F6  C1AD  F07E         	movff	triangulation@c12y+1,___ftadd@f2+1
  3401  0008FA  C1AE  F07F         	movff	triangulation@c12y+2,___ftadd@f2+2
  3402  0008FE  C1C1  F077         	movff	triangulation@c23y,___ftneg@f1
  3403  000902  C1C2  F078         	movff	triangulation@c23y+1,___ftneg@f1+1
  3404  000906  C1C3  F079         	movff	triangulation@c23y+2,___ftneg@f1+2
  3405  00090A  ECA3  F01B         	call	___ftneg	;wreg free
  3406  00090E  C077  F07A         	movff	?___ftneg,___ftadd@f1
  3407  000912  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  3408  000916  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  3409  00091A  EC25  F00D         	call	___ftadd	;wreg free
  3410  00091E  C07A  F068         	movff	?___ftadd,___ftmul@f1
  3411  000922  C07B  F069         	movff	?___ftadd+1,___ftmul@f1+1
  3412  000926  C07C  F06A         	movff	?___ftadd+2,___ftmul@f1+2
  3413  00092A  EC46  F00F         	call	___ftmul	;wreg free
  3414  00092E  C068  F1C4         	movff	?___ftmul,_triangulation$3246
  3415  000932  C069  F1C5         	movff	?___ftmul+1,_triangulation$3246+1
  3416  000936  C06A  F1C6         	movff	?___ftmul+2,_triangulation$3246+2
  3417                           
  3418                           ;triangulation.c: 49: *x = K * (c12y - c23y) + x2 ;
  3419  00093A  C1C4  F07A         	movff	_triangulation$3246,___ftadd@f1
  3420  00093E  C1C5  F07B         	movff	_triangulation$3246+1,___ftadd@f1+1
  3421  000942  C1C6  F07C         	movff	_triangulation$3246+2,___ftadd@f1+2
  3422  000946  C1B8  F07D         	movff	triangulation@x2,___ftadd@f2
  3423  00094A  C1B9  F07E         	movff	triangulation@x2+1,___ftadd@f2+1
  3424  00094E  C1BA  F07F         	movff	triangulation@x2+2,___ftadd@f2+2
  3425  000952  EC25  F00D         	call	___ftadd	;wreg free
  3426  000956  C17E  FFD9         	movff	triangulation@x,fsr2l
  3427  00095A  C17F  FFDA         	movff	triangulation@x+1,fsr2h
  3428  00095E  C07A  FFDE         	movff	?___ftadd,postinc2
  3429  000962  C07B  FFDE         	movff	?___ftadd+1,postinc2
  3430  000966  C07C  FFDE         	movff	?___ftadd+2,postinc2
  3431                           
  3432                           ;triangulation.c: 50: *y = K * (c23x - c12x) + y2 ;
  3433  00096A  C1AF  F06B         	movff	triangulation@K,___ftmul@f2
  3434  00096E  C1B0  F06C         	movff	triangulation@K+1,___ftmul@f2+1
  3435  000972  C1B1  F06D         	movff	triangulation@K+2,___ftmul@f2+2
  3436  000976  C1BE  F07D         	movff	triangulation@c23x,___ftadd@f2
  3437  00097A  C1BF  F07E         	movff	triangulation@c23x+1,___ftadd@f2+1
  3438  00097E  C1C0  F07F         	movff	triangulation@c23x+2,___ftadd@f2+2
  3439  000982  C1A9  F077         	movff	triangulation@c12x,___ftneg@f1
  3440  000986  C1AA  F078         	movff	triangulation@c12x+1,___ftneg@f1+1
  3441  00098A  C1AB  F079         	movff	triangulation@c12x+2,___ftneg@f1+2
  3442  00098E  ECA3  F01B         	call	___ftneg	;wreg free
  3443  000992  C077  F07A         	movff	?___ftneg,___ftadd@f1
  3444  000996  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  3445  00099A  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  3446  00099E  EC25  F00D         	call	___ftadd	;wreg free
  3447  0009A2  C07A  F068         	movff	?___ftadd,___ftmul@f1
  3448  0009A6  C07B  F069         	movff	?___ftadd+1,___ftmul@f1+1
  3449  0009AA  C07C  F06A         	movff	?___ftadd+2,___ftmul@f1+2
  3450  0009AE  EC46  F00F         	call	___ftmul	;wreg free
  3451  0009B2  C068  F1C4         	movff	?___ftmul,_triangulation$3246
  3452  0009B6  C069  F1C5         	movff	?___ftmul+1,_triangulation$3246+1
  3453  0009BA  C06A  F1C6         	movff	?___ftmul+2,_triangulation$3246+2
  3454                           
  3455                           ;triangulation.c: 50: *y = K * (c23x - c12x) + y2 ;
  3456  0009BE  C1C4  F07A         	movff	_triangulation$3246,___ftadd@f1
  3457  0009C2  C1C5  F07B         	movff	_triangulation$3246+1,___ftadd@f1+1
  3458  0009C6  C1C6  F07C         	movff	_triangulation$3246+2,___ftadd@f1+2
  3459  0009CA  C1BB  F07D         	movff	triangulation@y2,___ftadd@f2
  3460  0009CE  C1BC  F07E         	movff	triangulation@y2+1,___ftadd@f2+1
  3461  0009D2  C1BD  F07F         	movff	triangulation@y2+2,___ftadd@f2+2
  3462  0009D6  EC25  F00D         	call	___ftadd	;wreg free
  3463  0009DA  C180  FFD9         	movff	triangulation@y,fsr2l
  3464  0009DE  C181  FFDA         	movff	triangulation@y+1,fsr2h
  3465  0009E2  C07A  FFDE         	movff	?___ftadd,postinc2
  3466  0009E6  C07B  FFDE         	movff	?___ftadd+1,postinc2
  3467  0009EA  C07C  FFDE         	movff	?___ftadd+2,postinc2
  3468  0009EE  0012               	return		;funcret
  3469  0009F0                     __end_of_triangulation:
  3470                           	opt stack 0
  3471                           tblptru	equ	0xFF8
  3472                           tblptrh	equ	0xFF7
  3473                           tblptrl	equ	0xFF6
  3474                           tablat	equ	0xFF5
  3475                           postinc0	equ	0xFEE
  3476                           wreg	equ	0xFE8
  3477                           postinc1	equ	0xFE6
  3478                           postdec1	equ	0xFE5
  3479                           fsr1h	equ	0xFE2
  3480                           fsr1l	equ	0xFE1
  3481                           postinc2	equ	0xFDE
  3482                           fsr2h	equ	0xFDA
  3483                           fsr2l	equ	0xFD9
  3484                           status	equ	0xFD8
  3485                           
  3486 ;; *************** function _saturation *****************
  3487 ;; Defined at:
  3488 ;;		line 61 in file "triangulation.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  valeur          3   35[BANK0 ] const 
  3491 ;;  maximum         3   38[BANK0 ] const 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;		None
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  3   35[BANK0 ] const 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, status,0, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3503 ;;      Params:         0       6       0       0
  3504 ;;      Locals:         0       0       0       0
  3505 ;;      Temps:          0       0       0       0
  3506 ;;      Totals:         0       6       0       0
  3507 ;;Total ram usage:        6 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    7
  3510 ;; This function calls:
  3511 ;;		___ftge
  3512 ;;		___ftneg
  3513 ;; This function is called by:
  3514 ;;		_triangulation
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           	psect	text2
  3519  002D6C                     __ptext2:
  3520                           	opt stack 0
  3521  002D6C                     _saturation:
  3522                           	opt stack 22
  3523                           
  3524                           ;triangulation.c: 63: if (valeur > maximum)
  3525                           
  3526                           ;incstack = 0
  3527  002D6C  C086  F07A         	movff	saturation@maximum,___ftge@ff1
  3528  002D70  C087  F07B         	movff	saturation@maximum+1,___ftge@ff1+1
  3529  002D74  C088  F07C         	movff	saturation@maximum+2,___ftge@ff1+2
  3530  002D78  C083  F07D         	movff	saturation@valeur,___ftge@ff2
  3531  002D7C  C084  F07E         	movff	saturation@valeur+1,___ftge@ff2+1
  3532  002D80  C085  F07F         	movff	saturation@valeur+2,___ftge@ff2+2
  3533  002D84  EC91  F014         	call	___ftge	;wreg free
  3534  002D88  0100               	movlb	0	; () banked
  3535  002D8A  B0D8               	btfsc	status,0,c
  3536  002D8C  D007               	goto	l4612
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;triangulation.c: 64: valeur = maximum;
  3540  002D8E  C086  F083         	movff	saturation@maximum,saturation@valeur
  3541  002D92  C087  F084         	movff	saturation@maximum+1,saturation@valeur+1
  3542  002D96  C088  F085         	movff	saturation@maximum+2,saturation@valeur+2
  3543  002D9A  D028               	goto	l4616
  3544  002D9C                     l4612:
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;triangulation.c: 65: else if (valeur < -maximum)
  3548  002D9C  C083  F07A         	movff	saturation@valeur,___ftge@ff1
  3549  002DA0  C084  F07B         	movff	saturation@valeur+1,___ftge@ff1+1
  3550  002DA4  C085  F07C         	movff	saturation@valeur+2,___ftge@ff1+2
  3551  002DA8  C086  F077         	movff	saturation@maximum,___ftneg@f1
  3552  002DAC  C087  F078         	movff	saturation@maximum+1,___ftneg@f1+1
  3553  002DB0  C088  F079         	movff	saturation@maximum+2,___ftneg@f1+2
  3554  002DB4  ECA3  F01B         	call	___ftneg	;wreg free
  3555  002DB8  C077  F07D         	movff	?___ftneg,___ftge@ff2
  3556  002DBC  C078  F07E         	movff	?___ftneg+1,___ftge@ff2+1
  3557  002DC0  C079  F07F         	movff	?___ftneg+2,___ftge@ff2+2
  3558  002DC4  EC91  F014         	call	___ftge	;wreg free
  3559  002DC8  0100               	movlb	0	; () banked
  3560  002DCA  B0D8               	btfsc	status,0,c
  3561  002DCC  D00F               	goto	l4616
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;triangulation.c: 66: valeur = -maximum;
  3565  002DCE  C086  F077         	movff	saturation@maximum,___ftneg@f1
  3566  002DD2  C087  F078         	movff	saturation@maximum+1,___ftneg@f1+1
  3567  002DD6  C088  F079         	movff	saturation@maximum+2,___ftneg@f1+2
  3568  002DDA  ECA3  F01B         	call	___ftneg	;wreg free
  3569  002DDE  C077  F083         	movff	?___ftneg,saturation@valeur
  3570  002DE2  C078  F084         	movff	?___ftneg+1,saturation@valeur+1
  3571  002DE6  C079  F085         	movff	?___ftneg+2,saturation@valeur+2
  3572  002DEA  D000               	goto	l4616
  3573  002DEC                     l4616:
  3574                           
  3575                           ;triangulation.c: 67: return valeur;
  3576  002DEC  C083  F083         	movff	saturation@valeur,?_saturation
  3577  002DF0  C084  F084         	movff	saturation@valeur+1,?_saturation+1
  3578  002DF4  C085  F085         	movff	saturation@valeur+2,?_saturation+2
  3579  002DF8  D000               	goto	l589
  3580  002DFA                     l589:
  3581  002DFA  0012               	return		;funcret
  3582  002DFC                     __end_of_saturation:
  3583                           	opt stack 0
  3584                           tblptru	equ	0xFF8
  3585                           tblptrh	equ	0xFF7
  3586                           tblptrl	equ	0xFF6
  3587                           tablat	equ	0xFF5
  3588                           postinc0	equ	0xFEE
  3589                           wreg	equ	0xFE8
  3590                           postinc1	equ	0xFE6
  3591                           postdec1	equ	0xFE5
  3592                           fsr1h	equ	0xFE2
  3593                           fsr1l	equ	0xFE1
  3594                           postinc2	equ	0xFDE
  3595                           fsr2h	equ	0xFDA
  3596                           fsr2l	equ	0xFD9
  3597                           status	equ	0xFD8
  3598                           
  3599 ;; *************** function _Cot *****************
  3600 ;; Defined at:
  3601 ;;		line 54 in file "triangulation.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;  angle           3   93[BANK0 ] const 
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;		None
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  3   93[BANK0 ] const 
  3608 ;; Registers used:
  3609 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3615 ;;      Params:         0       3       0       0
  3616 ;;      Locals:         0       3       0       0
  3617 ;;      Temps:          0       0       0       0
  3618 ;;      Totals:         0       6       0       0
  3619 ;;Total ram usage:        6 bytes
  3620 ;; Hardware stack levels used:    1
  3621 ;; Hardware stack levels required when called:   12
  3622 ;; This function calls:
  3623 ;;		___ftdiv
  3624 ;;		_conversion_degre_radian
  3625 ;;		_tan
  3626 ;; This function is called by:
  3627 ;;		_triangulation
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text3
  3632  0032EC                     __ptext3:
  3633                           	opt stack 0
  3634  0032EC                     _Cot:
  3635                           	opt stack 17
  3636                           
  3637                           ;triangulation.c: 56: angle = conversion_degre_radian(angle);
  3638                           
  3639                           ;incstack = 0
  3640  0032EC  C0BD  F0A1         	movff	Cot@angle,conversion_degre_radian@angle
  3641  0032F0  C0BE  F0A2         	movff	Cot@angle+1,conversion_degre_radian@angle+1
  3642  0032F4  C0BF  F0A3         	movff	Cot@angle+2,conversion_degre_radian@angle+2
  3643  0032F8  EC09  F01A         	call	_conversion_degre_radian	;wreg free
  3644  0032FC  C0A1  F0BD         	movff	?_conversion_degre_radian,Cot@angle
  3645  003300  C0A2  F0BE         	movff	?_conversion_degre_radian+1,Cot@angle+1
  3646  003304  C0A3  F0BF         	movff	?_conversion_degre_radian+2,Cot@angle+2
  3647                           
  3648                           ;triangulation.c: 57: return (1 / tan(angle));
  3649  003308  C0BD  F0B4         	movff	Cot@angle,tan@x
  3650  00330C  C0BE  F0B5         	movff	Cot@angle+1,tan@x+1
  3651  003310  C0BF  F0B6         	movff	Cot@angle+2,tan@x+2
  3652  003314  ECAB  F019         	call	_tan	;wreg free
  3653  003318  C0B4  F0C0         	movff	?_tan,_Cot$3250
  3654  00331C  C0B5  F0C1         	movff	?_tan+1,_Cot$3250+1
  3655  003320  C0B6  F0C2         	movff	?_tan+2,_Cot$3250+2
  3656                           
  3657                           ;triangulation.c: 57: return (1 / tan(angle));
  3658  003324  0E00               	movlw	0
  3659  003326  0100               	movlb	0	; () banked
  3660  003328  6F92               	movwf	___ftdiv@f1& (0+255),b
  3661  00332A  0E80               	movlw	128
  3662  00332C  0100               	movlb	0	; () banked
  3663  00332E  6F93               	movwf	(___ftdiv@f1+1)& (0+255),b
  3664  003330  0E3F               	movlw	63
  3665  003332  0100               	movlb	0	; () banked
  3666  003334  6F94               	movwf	(___ftdiv@f1+2)& (0+255),b
  3667  003336  C0C0  F095         	movff	_Cot$3250,___ftdiv@f2
  3668  00333A  C0C1  F096         	movff	_Cot$3250+1,___ftdiv@f2+1
  3669  00333E  C0C2  F097         	movff	_Cot$3250+2,___ftdiv@f2+2
  3670  003342  ECF4  F00F         	call	___ftdiv	;wreg free
  3671  003346  C092  F0BD         	movff	?___ftdiv,?_Cot
  3672  00334A  C093  F0BE         	movff	?___ftdiv+1,?_Cot+1
  3673  00334E  C094  F0BF         	movff	?___ftdiv+2,?_Cot+2
  3674  003352  D000               	goto	l583
  3675  003354                     l583:
  3676  003354  0012               	return		;funcret
  3677  003356                     __end_of_Cot:
  3678                           	opt stack 0
  3679                           tblptru	equ	0xFF8
  3680                           tblptrh	equ	0xFF7
  3681                           tblptrl	equ	0xFF6
  3682                           tablat	equ	0xFF5
  3683                           postinc0	equ	0xFEE
  3684                           wreg	equ	0xFE8
  3685                           postinc1	equ	0xFE6
  3686                           postdec1	equ	0xFE5
  3687                           fsr1h	equ	0xFE2
  3688                           fsr1l	equ	0xFE1
  3689                           postinc2	equ	0xFDE
  3690                           fsr2h	equ	0xFDA
  3691                           fsr2l	equ	0xFD9
  3692                           status	equ	0xFD8
  3693                           
  3694 ;; *************** function _tan *****************
  3695 ;; Defined at:
  3696 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\tan.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  x               3   84[BANK0 ] const 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;		None
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  3   84[BANK0 ] const 
  3703 ;; Registers used:
  3704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3710 ;;      Params:         0       3       0       0
  3711 ;;      Locals:         0       6       0       0
  3712 ;;      Temps:          0       0       0       0
  3713 ;;      Totals:         0       9       0       0
  3714 ;;Total ram usage:        9 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:   11
  3717 ;; This function calls:
  3718 ;;		___ftdiv
  3719 ;;		_cos
  3720 ;;		_sin
  3721 ;; This function is called by:
  3722 ;;		_Cot
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text4
  3727  003356                     __ptext4:
  3728                           	opt stack 0
  3729  003356                     _tan:
  3730                           	opt stack 17
  3731                           
  3732                           ;incstack = 0
  3733  003356  C0B4  F0A1         	movff	tan@x,sin@f
  3734  00335A  C0B5  F0A2         	movff	tan@x+1,sin@f+1
  3735  00335E  C0B6  F0A3         	movff	tan@x+2,sin@f+2
  3736  003362  ECD7  F00B         	call	_sin	;wreg free
  3737  003366  C0A1  F0B7         	movff	?_sin,_tan$3253
  3738  00336A  C0A2  F0B8         	movff	?_sin+1,_tan$3253+1
  3739  00336E  C0A3  F0B9         	movff	?_sin+2,_tan$3253+2
  3740  003372  C0B4  F0AE         	movff	tan@x,cos@f
  3741  003376  C0B5  F0AF         	movff	tan@x+1,cos@f+1
  3742  00337A  C0B6  F0B0         	movff	tan@x+2,cos@f+2
  3743  00337E  EC58  F015         	call	_cos	;wreg free
  3744  003382  C0AE  F0BA         	movff	?_cos,_tan$3254
  3745  003386  C0AF  F0BB         	movff	?_cos+1,_tan$3254+1
  3746  00338A  C0B0  F0BC         	movff	?_cos+2,_tan$3254+2
  3747  00338E  C0B7  F092         	movff	_tan$3253,___ftdiv@f1
  3748  003392  C0B8  F093         	movff	_tan$3253+1,___ftdiv@f1+1
  3749  003396  C0B9  F094         	movff	_tan$3253+2,___ftdiv@f1+2
  3750  00339A  C0BA  F095         	movff	_tan$3254,___ftdiv@f2
  3751  00339E  C0BB  F096         	movff	_tan$3254+1,___ftdiv@f2+1
  3752  0033A2  C0BC  F097         	movff	_tan$3254+2,___ftdiv@f2+2
  3753  0033A6  ECF4  F00F         	call	___ftdiv	;wreg free
  3754  0033AA  C092  F0B4         	movff	?___ftdiv,?_tan
  3755  0033AE  C093  F0B5         	movff	?___ftdiv+1,?_tan+1
  3756  0033B2  C094  F0B6         	movff	?___ftdiv+2,?_tan+2
  3757  0033B6  D000               	goto	l1198
  3758  0033B8                     l1198:
  3759  0033B8  0012               	return		;funcret
  3760  0033BA                     __end_of_tan:
  3761                           	opt stack 0
  3762                           tblptru	equ	0xFF8
  3763                           tblptrh	equ	0xFF7
  3764                           tblptrl	equ	0xFF6
  3765                           tablat	equ	0xFF5
  3766                           postinc0	equ	0xFEE
  3767                           wreg	equ	0xFE8
  3768                           postinc1	equ	0xFE6
  3769                           postdec1	equ	0xFE5
  3770                           fsr1h	equ	0xFE2
  3771                           fsr1l	equ	0xFE1
  3772                           postinc2	equ	0xFDE
  3773                           fsr2h	equ	0xFDA
  3774                           fsr2l	equ	0xFD9
  3775                           status	equ	0xFD8
  3776                           
  3777 ;; *************** function _cos *****************
  3778 ;; Defined at:
  3779 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\cos.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  f               3   78[BANK0 ] const 
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  3   78[BANK0 ] const 
  3786 ;; Registers used:
  3787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3793 ;;      Params:         0       3       0       0
  3794 ;;      Locals:         0       3       0       0
  3795 ;;      Temps:          0       0       0       0
  3796 ;;      Totals:         0       6       0       0
  3797 ;;Total ram usage:        6 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; Hardware stack levels required when called:   10
  3800 ;; This function calls:
  3801 ;;		___ftadd
  3802 ;;		___ftge
  3803 ;;		_sin
  3804 ;; This function is called by:
  3805 ;;		_tan
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           	psect	text5
  3810  002AB0                     __ptext5:
  3811                           	opt stack 0
  3812  002AB0                     _cos:
  3813                           	opt stack 17
  3814                           
  3815                           ;incstack = 0
  3816  002AB0  0E10               	movlw	16
  3817  002AB2  0100               	movlb	0	; () banked
  3818  002AB4  6F7A               	movwf	___ftge@ff1& (0+255),b
  3819  002AB6  0E49               	movlw	73
  3820  002AB8  0100               	movlb	0	; () banked
  3821  002ABA  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  3822  002ABC  0E40               	movlw	64
  3823  002ABE  0100               	movlb	0	; () banked
  3824  002AC0  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  3825  002AC2  C0AE  F07D         	movff	cos@f,___ftge@ff2
  3826  002AC6  C0AF  F07E         	movff	cos@f+1,___ftge@ff2+1
  3827  002ACA  C0B0  F07F         	movff	cos@f+2,___ftge@ff2+2
  3828  002ACE  EC91  F014         	call	___ftge	;wreg free
  3829  002AD2  0100               	movlb	0	; () banked
  3830  002AD4  B0D8               	btfsc	status,0,c
  3831  002AD6  D021               	goto	l4432
  3832                           
  3833                           ; BSR set to: 0
  3834  002AD8  C0AE  F07A         	movff	cos@f,___ftadd@f1
  3835  002ADC  C0AF  F07B         	movff	cos@f+1,___ftadd@f1+1
  3836  002AE0  C0B0  F07C         	movff	cos@f+2,___ftadd@f1+2
  3837  002AE4  0ECC               	movlw	204
  3838  002AE6  0100               	movlb	0	; () banked
  3839  002AE8  6F7D               	movwf	___ftadd@f2& (0+255),b
  3840  002AEA  0E96               	movlw	150
  3841  002AEC  0100               	movlb	0	; () banked
  3842  002AEE  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  3843  002AF0  0EC0               	movlw	192
  3844  002AF2  0100               	movlb	0	; () banked
  3845  002AF4  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  3846  002AF6  EC25  F00D         	call	___ftadd	;wreg free
  3847  002AFA  C07A  F0B1         	movff	?___ftadd,_cos$3255
  3848  002AFE  C07B  F0B2         	movff	?___ftadd+1,_cos$3255+1
  3849  002B02  C07C  F0B3         	movff	?___ftadd+2,_cos$3255+2
  3850  002B06  C0B1  F0A1         	movff	_cos$3255,sin@f
  3851  002B0A  C0B2  F0A2         	movff	_cos$3255+1,sin@f+1
  3852  002B0E  C0B3  F0A3         	movff	_cos$3255+2,sin@f+2
  3853  002B12  ECD7  F00B         	call	_sin	;wreg free
  3854  002B16  D020               	goto	L2
  3855  002B18  D026               	goto	l1204
  3856  002B1A                     l4432:
  3857  002B1A  C0AE  F07A         	movff	cos@f,___ftadd@f1
  3858  002B1E  C0AF  F07B         	movff	cos@f+1,___ftadd@f1+1
  3859  002B22  C0B0  F07C         	movff	cos@f+2,___ftadd@f1+2
  3860  002B26  0E10               	movlw	16
  3861  002B28  0100               	movlb	0	; () banked
  3862  002B2A  6F7D               	movwf	___ftadd@f2& (0+255),b
  3863  002B2C  0EC9               	movlw	201
  3864  002B2E  0100               	movlb	0	; () banked
  3865  002B30  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  3866  002B32  0E3F               	movlw	63
  3867  002B34  0100               	movlb	0	; () banked
  3868  002B36  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  3869  002B38  EC25  F00D         	call	___ftadd	;wreg free
  3870  002B3C  C07A  F0B1         	movff	?___ftadd,_cos$3255
  3871  002B40  C07B  F0B2         	movff	?___ftadd+1,_cos$3255+1
  3872  002B44  C07C  F0B3         	movff	?___ftadd+2,_cos$3255+2
  3873  002B48  C0B1  F0A1         	movff	_cos$3255,sin@f
  3874  002B4C  C0B2  F0A2         	movff	_cos$3255+1,sin@f+1
  3875  002B50  C0B3  F0A3         	movff	_cos$3255+2,sin@f+2
  3876  002B54  ECD7  F00B         	call	_sin	;wreg free
  3877  002B58                     L2:
  3878  002B58  C0A1  F0AE         	movff	?_sin,?_cos
  3879  002B5C  C0A2  F0AF         	movff	?_sin+1,?_cos+1
  3880  002B60  C0A3  F0B0         	movff	?_sin+2,?_cos+2
  3881  002B64  D000               	goto	l1204
  3882  002B66                     l1204:
  3883  002B66  0012               	return		;funcret
  3884  002B68                     __end_of_cos:
  3885                           	opt stack 0
  3886                           tblptru	equ	0xFF8
  3887                           tblptrh	equ	0xFF7
  3888                           tblptrl	equ	0xFF6
  3889                           tablat	equ	0xFF5
  3890                           postinc0	equ	0xFEE
  3891                           wreg	equ	0xFE8
  3892                           postinc1	equ	0xFE6
  3893                           postdec1	equ	0xFE5
  3894                           fsr1h	equ	0xFE2
  3895                           fsr1l	equ	0xFE1
  3896                           postinc2	equ	0xFDE
  3897                           fsr2h	equ	0xFDA
  3898                           fsr2l	equ	0xFD9
  3899                           status	equ	0xFD8
  3900                           
  3901 ;; *************** function _sin *****************
  3902 ;; Defined at:
  3903 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\sin.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;  f               3   65[BANK0 ] const 
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  x2              3   74[BANK0 ] const 
  3908 ;;  y               3   68[BANK0 ] const 
  3909 ;;  sgn             1   77[BANK0 ] unsigned char 
  3910 ;; Return value:  Size  Location     Type
  3911 ;;                  3   65[BANK0 ] unsigned char 
  3912 ;; Registers used:
  3913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3914 ;; Tracked objects:
  3915 ;;		On entry : 0/0
  3916 ;;		On exit  : 0/0
  3917 ;;		Unchanged: 0/0
  3918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3919 ;;      Params:         0       3       0       0
  3920 ;;      Locals:         0      10       0       0
  3921 ;;      Temps:          0       0       0       0
  3922 ;;      Totals:         0      13       0       0
  3923 ;;Total ram usage:       13 bytes
  3924 ;; Hardware stack levels used:    1
  3925 ;; Hardware stack levels required when called:    9
  3926 ;; This function calls:
  3927 ;;		___ftadd
  3928 ;;		___ftdiv
  3929 ;;		___ftge
  3930 ;;		___ftmul
  3931 ;;		___ftneg
  3932 ;;		___ftsub
  3933 ;;		_eval_poly
  3934 ;;		_floor
  3935 ;; This function is called by:
  3936 ;;		_tan
  3937 ;;		_cos
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           	psect	text6
  3942  0017AE                     __ptext6:
  3943                           	opt stack 0
  3944  0017AE                     _sin:
  3945                           	opt stack 18
  3946                           
  3947                           ;incstack = 0
  3948  0017AE  0E00               	movlw	0
  3949  0017B0  0100               	movlb	0	; () banked
  3950  0017B2  6FAD               	movwf	sin@sgn& (0+255),b
  3951                           
  3952                           ; BSR set to: 0
  3953  0017B4  0100               	movlb	0	; () banked
  3954  0017B6  AFA3               	btfss	(sin@f+2)& (0+255),7,b
  3955  0017B8  D012               	goto	l4370
  3956                           
  3957                           ; BSR set to: 0
  3958  0017BA  C0A1  F077         	movff	sin@f,___ftneg@f1
  3959  0017BE  C0A2  F078         	movff	sin@f+1,___ftneg@f1+1
  3960  0017C2  C0A3  F079         	movff	sin@f+2,___ftneg@f1+2
  3961  0017C6  ECA3  F01B         	call	___ftneg	;wreg free
  3962  0017CA  C077  F0A1         	movff	?___ftneg,sin@f
  3963  0017CE  C078  F0A2         	movff	?___ftneg+1,sin@f+1
  3964  0017D2  C079  F0A3         	movff	?___ftneg+2,sin@f+2
  3965  0017D6  0E01               	movlw	1
  3966  0017D8  0100               	movlb	0	; () banked
  3967  0017DA  6FAD               	movwf	sin@sgn& (0+255),b
  3968  0017DC  D000               	goto	l4370
  3969  0017DE                     l4370:
  3970                           
  3971                           ; BSR set to: 0
  3972  0017DE  C0A1  F068         	movff	sin@f,___ftmul@f1
  3973  0017E2  C0A2  F069         	movff	sin@f+1,___ftmul@f1+1
  3974  0017E6  C0A3  F06A         	movff	sin@f+2,___ftmul@f1+2
  3975  0017EA  0EFA               	movlw	250
  3976  0017EC  0100               	movlb	0	; () banked
  3977  0017EE  6F6B               	movwf	___ftmul@f2& (0+255),b
  3978  0017F0  0E22               	movlw	34
  3979  0017F2  0100               	movlb	0	; () banked
  3980  0017F4  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  3981  0017F6  0E3E               	movlw	62
  3982  0017F8  0100               	movlb	0	; () banked
  3983  0017FA  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  3984  0017FC  EC46  F00F         	call	___ftmul	;wreg free
  3985  001800  C068  F0A1         	movff	?___ftmul,sin@f
  3986  001804  C069  F0A2         	movff	?___ftmul+1,sin@f+1
  3987  001808  C06A  F0A3         	movff	?___ftmul+2,sin@f+2
  3988  00180C  C0A1  F08E         	movff	sin@f,___ftsub@f1
  3989  001810  C0A2  F08F         	movff	sin@f+1,___ftsub@f1+1
  3990  001814  C0A3  F090         	movff	sin@f+2,___ftsub@f1+2
  3991  001818  C0A1  F086         	movff	sin@f,floor@x
  3992  00181C  C0A2  F087         	movff	sin@f+1,floor@x+1
  3993  001820  C0A3  F088         	movff	sin@f+2,floor@x+2
  3994  001824  EC53  F012         	call	_floor	;wreg free
  3995  001828  C086  F091         	movff	?_floor,___ftsub@f2
  3996  00182C  C087  F092         	movff	?_floor+1,___ftsub@f2+1
  3997  001830  C088  F093         	movff	?_floor+2,___ftsub@f2+2
  3998  001834  EC33  F01A         	call	___ftsub	;wreg free
  3999  001838  C08E  F0A1         	movff	?___ftsub,sin@f
  4000  00183C  C08F  F0A2         	movff	?___ftsub+1,sin@f+1
  4001  001840  C090  F0A3         	movff	?___ftsub+2,sin@f+2
  4002  001844  C0A1  F068         	movff	sin@f,___ftmul@f1
  4003  001848  C0A2  F069         	movff	sin@f+1,___ftmul@f1+1
  4004  00184C  C0A3  F06A         	movff	sin@f+2,___ftmul@f1+2
  4005  001850  0E00               	movlw	0
  4006  001852  0100               	movlb	0	; () banked
  4007  001854  6F6B               	movwf	___ftmul@f2& (0+255),b
  4008  001856  0E80               	movlw	128
  4009  001858  0100               	movlb	0	; () banked
  4010  00185A  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  4011  00185C  0E40               	movlw	64
  4012  00185E  0100               	movlb	0	; () banked
  4013  001860  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  4014  001862  EC46  F00F         	call	___ftmul	;wreg free
  4015  001866  C068  F0A1         	movff	?___ftmul,sin@f
  4016  00186A  C069  F0A2         	movff	?___ftmul+1,sin@f+1
  4017  00186E  C06A  F0A3         	movff	?___ftmul+2,sin@f+2
  4018  001872  0E00               	movlw	0
  4019  001874  0100               	movlb	0	; () banked
  4020  001876  6F7A               	movwf	___ftge@ff1& (0+255),b
  4021  001878  0E00               	movlw	0
  4022  00187A  0100               	movlb	0	; () banked
  4023  00187C  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  4024  00187E  0E40               	movlw	64
  4025  001880  0100               	movlb	0	; () banked
  4026  001882  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  4027  001884  C0A1  F07D         	movff	sin@f,___ftge@ff2
  4028  001888  C0A2  F07E         	movff	sin@f+1,___ftge@ff2+1
  4029  00188C  C0A3  F07F         	movff	sin@f+2,___ftge@ff2+2
  4030  001890  EC91  F014         	call	___ftge	;wreg free
  4031  001894  0100               	movlb	0	; () banked
  4032  001896  B0D8               	btfsc	status,0,c
  4033  001898  D022               	goto	l4382
  4034                           
  4035                           ; BSR set to: 0
  4036  00189A  C0A1  F08E         	movff	sin@f,___ftsub@f1
  4037  00189E  C0A2  F08F         	movff	sin@f+1,___ftsub@f1+1
  4038  0018A2  C0A3  F090         	movff	sin@f+2,___ftsub@f1+2
  4039  0018A6  0E00               	movlw	0
  4040  0018A8  0100               	movlb	0	; () banked
  4041  0018AA  6F91               	movwf	___ftsub@f2& (0+255),b
  4042  0018AC  0E00               	movlw	0
  4043  0018AE  0100               	movlb	0	; () banked
  4044  0018B0  6F92               	movwf	(___ftsub@f2+1)& (0+255),b
  4045  0018B2  0E40               	movlw	64
  4046  0018B4  0100               	movlb	0	; () banked
  4047  0018B6  6F93               	movwf	(___ftsub@f2+2)& (0+255),b
  4048  0018B8  EC33  F01A         	call	___ftsub	;wreg free
  4049  0018BC  C08E  F0A1         	movff	?___ftsub,sin@f
  4050  0018C0  C08F  F0A2         	movff	?___ftsub+1,sin@f+1
  4051  0018C4  C090  F0A3         	movff	?___ftsub+2,sin@f+2
  4052  0018C8  0100               	movlb	0	; () banked
  4053  0018CA  51AD               	movf	sin@sgn& (0+255),w,b
  4054  0018CC  0100               	movlb	0	; () banked
  4055  0018CE  A4D8               	btfss	status,2,c
  4056  0018D0  D002               	goto	u3890
  4057  0018D2  0E01               	movlw	1
  4058  0018D4  D001               	goto	u3900
  4059  0018D6                     u3890:
  4060  0018D6  0E00               	movlw	0
  4061  0018D8                     u3900:
  4062  0018D8  0100               	movlb	0	; () banked
  4063  0018DA  6FAD               	movwf	sin@sgn& (0+255),b
  4064  0018DC  D000               	goto	l4382
  4065  0018DE                     l4382:
  4066                           
  4067                           ; BSR set to: 0
  4068  0018DE  0E00               	movlw	0
  4069  0018E0  0100               	movlb	0	; () banked
  4070  0018E2  6F7A               	movwf	___ftge@ff1& (0+255),b
  4071  0018E4  0E80               	movlw	128
  4072  0018E6  0100               	movlb	0	; () banked
  4073  0018E8  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  4074  0018EA  0E3F               	movlw	63
  4075  0018EC  0100               	movlb	0	; () banked
  4076  0018EE  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  4077  0018F0  C0A1  F07D         	movff	sin@f,___ftge@ff2
  4078  0018F4  C0A2  F07E         	movff	sin@f+1,___ftge@ff2+1
  4079  0018F8  C0A3  F07F         	movff	sin@f+2,___ftge@ff2+2
  4080  0018FC  EC91  F014         	call	___ftge	;wreg free
  4081  001900  0100               	movlb	0	; () banked
  4082  001902  B0D8               	btfsc	status,0,c
  4083  001904  D01F               	goto	l1219
  4084                           
  4085                           ; BSR set to: 0
  4086  001906  C0A1  F077         	movff	sin@f,___ftneg@f1
  4087  00190A  C0A2  F078         	movff	sin@f+1,___ftneg@f1+1
  4088  00190E  C0A3  F079         	movff	sin@f+2,___ftneg@f1+2
  4089  001912  ECA3  F01B         	call	___ftneg	;wreg free
  4090  001916  C077  F07A         	movff	?___ftneg,___ftadd@f1
  4091  00191A  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  4092  00191E  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  4093  001922  0E00               	movlw	0
  4094  001924  0100               	movlb	0	; () banked
  4095  001926  6F7D               	movwf	___ftadd@f2& (0+255),b
  4096  001928  0E00               	movlw	0
  4097  00192A  0100               	movlb	0	; () banked
  4098  00192C  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  4099  00192E  0E40               	movlw	64
  4100  001930  0100               	movlb	0	; () banked
  4101  001932  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  4102  001934  EC25  F00D         	call	___ftadd	;wreg free
  4103  001938  C07A  F0A1         	movff	?___ftadd,sin@f
  4104  00193C  C07B  F0A2         	movff	?___ftadd+1,sin@f+1
  4105  001940  C07C  F0A3         	movff	?___ftadd+2,sin@f+2
  4106  001944                     l1219:
  4107  001944  C0A1  F068         	movff	sin@f,___ftmul@f1
  4108  001948  C0A2  F069         	movff	sin@f+1,___ftmul@f1+1
  4109  00194C  C0A3  F06A         	movff	sin@f+2,___ftmul@f1+2
  4110  001950  C0A1  F06B         	movff	sin@f,___ftmul@f2
  4111  001954  C0A2  F06C         	movff	sin@f+1,___ftmul@f2+1
  4112  001958  C0A3  F06D         	movff	sin@f+2,___ftmul@f2+2
  4113  00195C  EC46  F00F         	call	___ftmul	;wreg free
  4114  001960  C068  F0AA         	movff	?___ftmul,sin@x2
  4115  001964  C069  F0AB         	movff	?___ftmul+1,sin@x2+1
  4116  001968  C06A  F0AC         	movff	?___ftmul+2,sin@x2+2
  4117  00196C  C0AA  F086         	movff	sin@x2,eval_poly@x
  4118  001970  C0AB  F087         	movff	sin@x2+1,eval_poly@x+1
  4119  001974  C0AC  F088         	movff	sin@x2+2,eval_poly@x+2
  4120  001978  0E10               	movlw	low sin@coeff_b
  4121  00197A  0100               	movlb	0	; () banked
  4122  00197C  6F89               	movwf	eval_poly@d& (0+255),b
  4123  00197E  0E3E               	movlw	high sin@coeff_b
  4124  001980  0100               	movlb	0	; () banked
  4125  001982  6F8A               	movwf	(eval_poly@d+1)& (0+255),b
  4126  001984  0E00               	movlw	0
  4127  001986  0100               	movlb	0	; () banked
  4128  001988  6F8C               	movwf	(eval_poly@n+1)& (0+255),b
  4129  00198A  0E03               	movlw	3
  4130  00198C  6F8B               	movwf	eval_poly@n& (0+255),b
  4131  00198E  ECD1  F012         	call	_eval_poly	;wreg free
  4132  001992  C086  F0A4         	movff	?_eval_poly,sin@y
  4133  001996  C087  F0A5         	movff	?_eval_poly+1,sin@y+1
  4134  00199A  C088  F0A6         	movff	?_eval_poly+2,sin@y+2
  4135  00199E  C0A4  F095         	movff	sin@y,___ftdiv@f2
  4136  0019A2  C0A5  F096         	movff	sin@y+1,___ftdiv@f2+1
  4137  0019A6  C0A6  F097         	movff	sin@y+2,___ftdiv@f2+2
  4138  0019AA  0E00               	movlw	0
  4139  0019AC  0100               	movlb	0	; () banked
  4140  0019AE  6F8C               	movwf	(eval_poly@n+1)& (0+255),b
  4141  0019B0  0E04               	movlw	4
  4142  0019B2  6F8B               	movwf	eval_poly@n& (0+255),b
  4143  0019B4  0E01               	movlw	low sin@coeff_a
  4144  0019B6  0100               	movlb	0	; () banked
  4145  0019B8  6F89               	movwf	eval_poly@d& (0+255),b
  4146  0019BA  0E3E               	movlw	high sin@coeff_a
  4147  0019BC  0100               	movlb	0	; () banked
  4148  0019BE  6F8A               	movwf	(eval_poly@d+1)& (0+255),b
  4149  0019C0  C0AA  F086         	movff	sin@x2,eval_poly@x
  4150  0019C4  C0AB  F087         	movff	sin@x2+1,eval_poly@x+1
  4151  0019C8  C0AC  F088         	movff	sin@x2+2,eval_poly@x+2
  4152  0019CC  ECD1  F012         	call	_eval_poly	;wreg free
  4153  0019D0  C086  F092         	movff	?_eval_poly,___ftdiv@f1
  4154  0019D4  C087  F093         	movff	?_eval_poly+1,___ftdiv@f1+1
  4155  0019D8  C088  F094         	movff	?_eval_poly+2,___ftdiv@f1+2
  4156  0019DC  ECF4  F00F         	call	___ftdiv	;wreg free
  4157  0019E0  C092  F0A7         	movff	?___ftdiv,_sin$3256
  4158  0019E4  C093  F0A8         	movff	?___ftdiv+1,_sin$3256+1
  4159  0019E8  C094  F0A9         	movff	?___ftdiv+2,_sin$3256+2
  4160  0019EC  C0A1  F068         	movff	sin@f,___ftmul@f1
  4161  0019F0  C0A2  F069         	movff	sin@f+1,___ftmul@f1+1
  4162  0019F4  C0A3  F06A         	movff	sin@f+2,___ftmul@f1+2
  4163  0019F8  C0A7  F06B         	movff	_sin$3256,___ftmul@f2
  4164  0019FC  C0A8  F06C         	movff	_sin$3256+1,___ftmul@f2+1
  4165  001A00  C0A9  F06D         	movff	_sin$3256+2,___ftmul@f2+2
  4166  001A04  EC46  F00F         	call	___ftmul	;wreg free
  4167  001A08  C068  F0A1         	movff	?___ftmul,sin@f
  4168  001A0C  C069  F0A2         	movff	?___ftmul+1,sin@f+1
  4169  001A10  C06A  F0A3         	movff	?___ftmul+2,sin@f+2
  4170  001A14  0100               	movlb	0	; () banked
  4171  001A16  51AD               	movf	sin@sgn& (0+255),w,b
  4172  001A18  0100               	movlb	0	; () banked
  4173  001A1A  B4D8               	btfsc	status,2,c
  4174  001A1C  D00F               	goto	l1220
  4175                           
  4176                           ; BSR set to: 0
  4177  001A1E  C0A1  F077         	movff	sin@f,___ftneg@f1
  4178  001A22  C0A2  F078         	movff	sin@f+1,___ftneg@f1+1
  4179  001A26  C0A3  F079         	movff	sin@f+2,___ftneg@f1+2
  4180  001A2A  ECA3  F01B         	call	___ftneg	;wreg free
  4181  001A2E  C077  F0A1         	movff	?___ftneg,?_sin
  4182  001A32  C078  F0A2         	movff	?___ftneg+1,?_sin+1
  4183  001A36  C079  F0A3         	movff	?___ftneg+2,?_sin+2
  4184  001A3A  D006               	goto	l1221
  4185  001A3C                     l1220:
  4186                           
  4187                           ; BSR set to: 0
  4188  001A3C  C0A1  F0A1         	movff	sin@f,?_sin
  4189  001A40  C0A2  F0A2         	movff	sin@f+1,?_sin+1
  4190  001A44  C0A3  F0A3         	movff	sin@f+2,?_sin+2
  4191  001A48                     l1221:
  4192  001A48  0012               	return		;funcret
  4193  001A4A                     __end_of_sin:
  4194                           	opt stack 0
  4195                           tblptru	equ	0xFF8
  4196                           tblptrh	equ	0xFF7
  4197                           tblptrl	equ	0xFF6
  4198                           tablat	equ	0xFF5
  4199                           postinc0	equ	0xFEE
  4200                           wreg	equ	0xFE8
  4201                           postinc1	equ	0xFE6
  4202                           postdec1	equ	0xFE5
  4203                           fsr1h	equ	0xFE2
  4204                           fsr1l	equ	0xFE1
  4205                           postinc2	equ	0xFDE
  4206                           fsr2h	equ	0xFDA
  4207                           fsr2l	equ	0xFD9
  4208                           status	equ	0xFD8
  4209                           
  4210 ;; *************** function _floor *****************
  4211 ;; Defined at:
  4212 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\floor.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;  x               3   38[BANK0 ] unsigned char 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  i               3   41[BANK0 ] unsigned char 
  4217 ;;  expon           2   44[BANK0 ] int 
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  3   38[BANK0 ] int 
  4220 ;; Registers used:
  4221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4227 ;;      Params:         0       3       0       0
  4228 ;;      Locals:         0       5       0       0
  4229 ;;      Temps:          0       0       0       0
  4230 ;;      Totals:         0       8       0       0
  4231 ;;Total ram usage:        8 bytes
  4232 ;; Hardware stack levels used:    1
  4233 ;; Hardware stack levels required when called:    8
  4234 ;; This function calls:
  4235 ;;		___altoft
  4236 ;;		___ftadd
  4237 ;;		___ftge
  4238 ;;		___fttol
  4239 ;;		_frexp
  4240 ;; This function is called by:
  4241 ;;		_sin
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text7
  4246  0024A6                     __ptext7:
  4247                           	opt stack 0
  4248  0024A6                     _floor:
  4249                           	opt stack 18
  4250                           
  4251                           ;incstack = 0
  4252  0024A6  C086  F060         	movff	floor@x,frexp@value
  4253  0024AA  C087  F061         	movff	floor@x+1,frexp@value+1
  4254  0024AE  C088  F062         	movff	floor@x+2,frexp@value+2
  4255  0024B2  0E8C               	movlw	low floor@expon
  4256  0024B4  0100               	movlb	0	; () banked
  4257  0024B6  6F63               	movwf	frexp@eptr& (0+255),b
  4258  0024B8  0E00               	movlw	high floor@expon
  4259  0024BA  0100               	movlb	0	; () banked
  4260  0024BC  6F64               	movwf	(frexp@eptr+1)& (0+255),b
  4261  0024BE  ECFE  F016         	call	_frexp	;wreg free
  4262  0024C2  0100               	movlb	0	; () banked
  4263  0024C4  AF8D               	btfss	(floor@expon+1)& (0+255),7,b
  4264  0024C6  D016               	goto	l4302
  4265                           
  4266                           ; BSR set to: 0
  4267  0024C8  0100               	movlb	0	; () banked
  4268  0024CA  AF88               	btfss	(floor@x+2)& (0+255),7,b
  4269  0024CC  D009               	goto	l4298
  4270                           
  4271                           ; BSR set to: 0
  4272  0024CE  0E00               	movlw	0
  4273  0024D0  0100               	movlb	0	; () banked
  4274  0024D2  6F86               	movwf	?_floor& (0+255),b
  4275  0024D4  0E80               	movlw	128
  4276  0024D6  0100               	movlb	0	; () banked
  4277  0024D8  6F87               	movwf	(?_floor+1)& (0+255),b
  4278  0024DA  0EBF               	movlw	191
  4279  0024DC  D008               	goto	L3
  4280                           
  4281                           ; BSR set to: 0
  4282  0024DE  D060               	goto	l1234
  4283  0024E0                     l4298:
  4284                           
  4285                           ; BSR set to: 0
  4286  0024E0  0E00               	movlw	0
  4287  0024E2  0100               	movlb	0	; () banked
  4288  0024E4  6F86               	movwf	?_floor& (0+255),b
  4289  0024E6  0E00               	movlw	0
  4290  0024E8  0100               	movlb	0	; () banked
  4291  0024EA  6F87               	movwf	(?_floor+1)& (0+255),b
  4292  0024EC  0E00               	movlw	0
  4293  0024EE                     L3:
  4294  0024EE  0100               	movlb	0	; () banked
  4295  0024F0  6F88               	movwf	(?_floor+2)& (0+255),b
  4296                           
  4297                           ; BSR set to: 0
  4298  0024F2  D056               	goto	l1234
  4299  0024F4                     l4302:
  4300                           
  4301                           ; BSR set to: 0
  4302  0024F4  0100               	movlb	0	; () banked
  4303  0024F6  518D               	movf	(floor@expon+1)& (0+255),w,b
  4304  0024F8  E105               	bnz	u3780
  4305  0024FA  0E15               	movlw	21
  4306  0024FC  0100               	movlb	0	; () banked
  4307  0024FE  5D8C               	subwf	floor@expon& (0+255),w,b
  4308  002500  A0D8               	btfss	status,0,c
  4309  002502  D007               	goto	l4306
  4310  002504                     u3780:
  4311                           
  4312                           ; BSR set to: 0
  4313  002504  C086  F086         	movff	floor@x,?_floor
  4314  002508  C087  F087         	movff	floor@x+1,?_floor+1
  4315  00250C  C088  F088         	movff	floor@x+2,?_floor+2
  4316  002510  D047               	goto	l1234
  4317  002512                     l4306:
  4318                           
  4319                           ; BSR set to: 0
  4320  002512  C086  F060         	movff	floor@x,___fttol@f1
  4321  002516  C087  F061         	movff	floor@x+1,___fttol@f1+1
  4322  00251A  C088  F062         	movff	floor@x+2,___fttol@f1+2
  4323  00251E  EC95  F010         	call	___fttol	;wreg free
  4324  002522  C060  F06F         	movff	?___fttol,___altoft@c
  4325  002526  C061  F070         	movff	?___fttol+1,___altoft@c+1
  4326  00252A  C062  F071         	movff	?___fttol+2,___altoft@c+2
  4327  00252E  C063  F072         	movff	?___fttol+3,___altoft@c+3
  4328  002532  EC65  F016         	call	___altoft	;wreg free
  4329  002536  C06F  F089         	movff	?___altoft,floor@i
  4330  00253A  C070  F08A         	movff	?___altoft+1,floor@i+1
  4331  00253E  C071  F08B         	movff	?___altoft+2,floor@i+2
  4332  002542  C086  F07A         	movff	floor@x,___ftge@ff1
  4333  002546  C087  F07B         	movff	floor@x+1,___ftge@ff1+1
  4334  00254A  C088  F07C         	movff	floor@x+2,___ftge@ff1+2
  4335  00254E  C089  F07D         	movff	floor@i,___ftge@ff2
  4336  002552  C08A  F07E         	movff	floor@i+1,___ftge@ff2+1
  4337  002556  C08B  F07F         	movff	floor@i+2,___ftge@ff2+2
  4338  00255A  EC91  F014         	call	___ftge	;wreg free
  4339  00255E  0100               	movlb	0	; () banked
  4340  002560  B0D8               	btfsc	status,0,c
  4341  002562  D018               	goto	l1236
  4342                           
  4343                           ; BSR set to: 0
  4344  002564  C089  F07A         	movff	floor@i,___ftadd@f1
  4345  002568  C08A  F07B         	movff	floor@i+1,___ftadd@f1+1
  4346  00256C  C08B  F07C         	movff	floor@i+2,___ftadd@f1+2
  4347  002570  0E00               	movlw	0
  4348  002572  0100               	movlb	0	; () banked
  4349  002574  6F7D               	movwf	___ftadd@f2& (0+255),b
  4350  002576  0E80               	movlw	128
  4351  002578  0100               	movlb	0	; () banked
  4352  00257A  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  4353  00257C  0EBF               	movlw	191
  4354  00257E  0100               	movlb	0	; () banked
  4355  002580  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  4356  002582  EC25  F00D         	call	___ftadd	;wreg free
  4357  002586  C07A  F086         	movff	?___ftadd,?_floor
  4358  00258A  C07B  F087         	movff	?___ftadd+1,?_floor+1
  4359  00258E  C07C  F088         	movff	?___ftadd+2,?_floor+2
  4360  002592  D006               	goto	l1234
  4361  002594                     l1236:
  4362                           
  4363                           ; BSR set to: 0
  4364  002594  C089  F086         	movff	floor@i,?_floor
  4365  002598  C08A  F087         	movff	floor@i+1,?_floor+1
  4366  00259C  C08B  F088         	movff	floor@i+2,?_floor+2
  4367  0025A0                     l1234:
  4368  0025A0  0012               	return		;funcret
  4369  0025A2                     __end_of_floor:
  4370                           	opt stack 0
  4371                           tblptru	equ	0xFF8
  4372                           tblptrh	equ	0xFF7
  4373                           tblptrl	equ	0xFF6
  4374                           tablat	equ	0xFF5
  4375                           postinc0	equ	0xFEE
  4376                           wreg	equ	0xFE8
  4377                           postinc1	equ	0xFE6
  4378                           postdec1	equ	0xFE5
  4379                           fsr1h	equ	0xFE2
  4380                           fsr1l	equ	0xFE1
  4381                           postinc2	equ	0xFDE
  4382                           fsr2h	equ	0xFDA
  4383                           fsr2l	equ	0xFD9
  4384                           status	equ	0xFD8
  4385                           
  4386 ;; *************** function _frexp *****************
  4387 ;; Defined at:
  4388 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\frexp.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  value           3    0[BANK0 ] int 
  4391 ;;  eptr            2    3[BANK0 ] PTR int 
  4392 ;;		 -> floor@expon(2), 
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;		None
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  3    0[BANK0 ] PTR int 
  4397 ;; Registers used:
  4398 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4404 ;;      Params:         0       5       0       0
  4405 ;;      Locals:         0       0       0       0
  4406 ;;      Temps:          0       2       0       0
  4407 ;;      Totals:         0       7       0       0
  4408 ;;Total ram usage:        7 bytes
  4409 ;; Hardware stack levels used:    1
  4410 ;; Hardware stack levels required when called:    6
  4411 ;; This function calls:
  4412 ;;		Nothing
  4413 ;; This function is called by:
  4414 ;;		_floor
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           	psect	text8
  4419  002DFC                     __ptext8:
  4420                           	opt stack 0
  4421  002DFC                     _frexp:
  4422                           	opt stack 19
  4423                           
  4424                           ;incstack = 0
  4425  002DFC  0100               	movlb	0	; () banked
  4426  002DFE  5160               	movf	frexp@value& (0+255),w,b
  4427  002E00  0100               	movlb	0	; () banked
  4428  002E02  1161               	iorwf	(frexp@value+1)& (0+255),w,b
  4429  002E04  0100               	movlb	0	; () banked
  4430  002E06  1162               	iorwf	(frexp@value+2)& (0+255),w,b
  4431  002E08  A4D8               	btfss	status,2,c
  4432  002E0A  D009               	goto	l4220
  4433                           
  4434                           ; BSR set to: 0
  4435  002E0C  C063  FFD9         	movff	frexp@eptr,fsr2l
  4436  002E10  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  4437  002E14  0E00               	movlw	0
  4438  002E16  6EDE               	movwf	postinc2,c
  4439  002E18  0E00               	movlw	0
  4440  002E1A  6EDD               	movwf	postdec2,c
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;	Return value of _frexp is never used
  4444  002E1C  D036               	goto	l1242
  4445  002E1E                     l4220:
  4446                           
  4447                           ; BSR set to: 0
  4448  002E1E  0100               	movlb	0	; () banked
  4449  002E20  5162               	movf	(frexp@value+2)& (0+255),w,b
  4450  002E22  0B7F               	andlw	127
  4451  002E24  0100               	movlb	0	; () banked
  4452  002E26  6F65               	movwf	??_frexp& (0+255),b
  4453  002E28  6B66               	clrf	(??_frexp+1)& (0+255),b
  4454  002E2A  90D8               	bcf	status,0,c
  4455  002E2C  0100               	movlb	0	; () banked
  4456  002E2E  3765               	rlcf	??_frexp& (0+255),f,b
  4457  002E30  3766               	rlcf	(??_frexp+1)& (0+255),f,b
  4458  002E32  C063  FFD9         	movff	frexp@eptr,fsr2l
  4459  002E36  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  4460  002E3A  C065  FFDE         	movff	??_frexp,postinc2
  4461  002E3E  C066  FFDD         	movff	??_frexp+1,postdec2
  4462  002E42  0100               	movlb	0	; () banked
  4463  002E44  AF61               	btfss	(frexp@value+1)& (0+255),7,b
  4464  002E46  D004               	goto	u3680
  4465  002E48  0100               	movlb	0	; () banked
  4466  002E4A  6B65               	clrf	??_frexp& (0+255),b
  4467  002E4C  2B65               	incf	??_frexp& (0+255),f,b
  4468  002E4E  D002               	goto	u3688
  4469  002E50                     u3680:
  4470  002E50  0100               	movlb	0	; () banked
  4471  002E52  6B65               	clrf	??_frexp& (0+255),b
  4472  002E54                     u3688:
  4473  002E54  0100               	movlb	0	; () banked
  4474  002E56  5165               	movf	??_frexp& (0+255),w,b
  4475  002E58  C063  FFD9         	movff	frexp@eptr,fsr2l
  4476  002E5C  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  4477  002E60  12DE               	iorwf	postinc2,f,c
  4478  002E62  0E00               	movlw	0
  4479  002E64  12DD               	iorwf	postdec2,f,c
  4480                           
  4481                           ; BSR set to: 0
  4482  002E66  C063  FFD9         	movff	frexp@eptr,fsr2l
  4483  002E6A  C064  FFDA         	movff	frexp@eptr+1,fsr2h
  4484  002E6E  0E82               	movlw	130
  4485  002E70  26DE               	addwf	postinc2,f,c
  4486  002E72  0EFF               	movlw	255
  4487  002E74  22DD               	addwfc	postdec2,f,c
  4488                           
  4489                           ; BSR set to: 0
  4490  002E76  8162               	bsf	(frexp@value+2)& (0+255),0,b
  4491  002E78  8362               	bsf	(frexp@value+2)& (0+255),1,b
  4492  002E7A  8562               	bsf	(frexp@value+2)& (0+255),2,b
  4493  002E7C  8762               	bsf	(frexp@value+2)& (0+255),3,b
  4494  002E7E  8962               	bsf	(frexp@value+2)& (0+255),4,b
  4495  002E80  8B62               	bsf	(frexp@value+2)& (0+255),5,b
  4496  002E82  9D62               	bcf	(frexp@value+2)& (0+255),6,b
  4497                           
  4498                           ; BSR set to: 0
  4499  002E84  0100               	movlb	0	; () banked
  4500  002E86  9F61               	bcf	(frexp@value+1)& (0+255),7,b
  4501  002E88  D000               	goto	l1242
  4502  002E8A                     l1242:
  4503                           
  4504                           ; BSR set to: 0
  4505  002E8A  0012               	return		;funcret
  4506  002E8C                     __end_of_frexp:
  4507                           	opt stack 0
  4508                           tblptru	equ	0xFF8
  4509                           tblptrh	equ	0xFF7
  4510                           tblptrl	equ	0xFF6
  4511                           tablat	equ	0xFF5
  4512                           postinc0	equ	0xFEE
  4513                           wreg	equ	0xFE8
  4514                           postinc1	equ	0xFE6
  4515                           postdec1	equ	0xFE5
  4516                           fsr1h	equ	0xFE2
  4517                           fsr1l	equ	0xFE1
  4518                           postinc2	equ	0xFDE
  4519                           postdec2	equ	0xFDD
  4520                           fsr2h	equ	0xFDA
  4521                           fsr2l	equ	0xFD9
  4522                           status	equ	0xFD8
  4523                           
  4524 ;; *************** function ___altoft *****************
  4525 ;; Defined at:
  4526 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  c               4   15[BANK0 ] long 
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;  sign            1   24[BANK0 ] unsigned char 
  4531 ;;  exp             1   23[BANK0 ] unsigned char 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  3   15[BANK0 ] float 
  4534 ;; Registers used:
  4535 ;;		wreg, status,2, status,0, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4541 ;;      Params:         0       4       0       0
  4542 ;;      Locals:         0       2       0       0
  4543 ;;      Temps:          0       4       0       0
  4544 ;;      Totals:         0      10       0       0
  4545 ;;Total ram usage:       10 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:    7
  4548 ;; This function calls:
  4549 ;;		___ftpack
  4550 ;; This function is called by:
  4551 ;;		_floor
  4552 ;;		_mesure_vitesse
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           	psect	text9
  4557  002CCA                     __ptext9:
  4558                           	opt stack 0
  4559  002CCA                     ___altoft:
  4560                           	opt stack 18
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;incstack = 0
  4564  002CCA  0E00               	movlw	0
  4565  002CCC  0100               	movlb	0	; () banked
  4566  002CCE  6F78               	movwf	___altoft@sign& (0+255),b
  4567  002CD0  0E8E               	movlw	142
  4568  002CD2  0100               	movlb	0	; () banked
  4569  002CD4  6F77               	movwf	___altoft@exp& (0+255),b
  4570                           
  4571                           ; BSR set to: 0
  4572  002CD6  0100               	movlb	0	; () banked
  4573  002CD8  AF72               	btfss	(___altoft@c+3)& (0+255),7,b
  4574  002CDA  D016               	goto	l4026
  4575                           
  4576                           ; BSR set to: 0
  4577  002CDC  0100               	movlb	0	; () banked
  4578  002CDE  1F72               	comf	(___altoft@c+3)& (0+255),f,b
  4579  002CE0  1F71               	comf	(___altoft@c+2)& (0+255),f,b
  4580  002CE2  1F70               	comf	(___altoft@c+1)& (0+255),f,b
  4581  002CE4  6D6F               	negf	___altoft@c& (0+255),b
  4582  002CE6  0E00               	movlw	0
  4583  002CE8  2370               	addwfc	(___altoft@c+1)& (0+255),f,b
  4584  002CEA  2371               	addwfc	(___altoft@c+2)& (0+255),f,b
  4585  002CEC  2372               	addwfc	(___altoft@c+3)& (0+255),f,b
  4586                           
  4587                           ; BSR set to: 0
  4588  002CEE  0E01               	movlw	1
  4589  002CF0  0100               	movlb	0	; () banked
  4590  002CF2  6F78               	movwf	___altoft@sign& (0+255),b
  4591                           
  4592                           ; BSR set to: 0
  4593  002CF4  D009               	goto	l4026
  4594  002CF6                     l4024:
  4595                           
  4596                           ; BSR set to: 0
  4597  002CF6  0100               	movlb	0	; () banked
  4598  002CF8  90D8               	bcf	status,0,c
  4599  002CFA  3372               	rrcf	(___altoft@c+3)& (0+255),f,b
  4600  002CFC  3371               	rrcf	(___altoft@c+2)& (0+255),f,b
  4601  002CFE  3370               	rrcf	(___altoft@c+1)& (0+255),f,b
  4602  002D00  336F               	rrcf	___altoft@c& (0+255),f,b
  4603  002D02  0100               	movlb	0	; () banked
  4604  002D04  2B77               	incf	___altoft@exp& (0+255),f,b
  4605  002D06  D000               	goto	l4026
  4606  002D08                     l4026:
  4607                           
  4608                           ; BSR set to: 0
  4609  002D08  0E00               	movlw	0
  4610  002D0A  0100               	movlb	0	; () banked
  4611  002D0C  156F               	andwf	___altoft@c& (0+255),w,b
  4612  002D0E  0100               	movlb	0	; () banked
  4613  002D10  6F73               	movwf	??___altoft& (0+255),b
  4614  002D12  0E00               	movlw	0
  4615  002D14  0100               	movlb	0	; () banked
  4616  002D16  1570               	andwf	(___altoft@c+1)& (0+255),w,b
  4617  002D18  0100               	movlb	0	; () banked
  4618  002D1A  6F74               	movwf	(??___altoft+1)& (0+255),b
  4619  002D1C  0E00               	movlw	0
  4620  002D1E  0100               	movlb	0	; () banked
  4621  002D20  1571               	andwf	(___altoft@c+2)& (0+255),w,b
  4622  002D22  0100               	movlb	0	; () banked
  4623  002D24  6F75               	movwf	(??___altoft+2)& (0+255),b
  4624  002D26  0EFF               	movlw	255
  4625  002D28  0100               	movlb	0	; () banked
  4626  002D2A  1572               	andwf	(___altoft@c+3)& (0+255),w,b
  4627  002D2C  0100               	movlb	0	; () banked
  4628  002D2E  6F76               	movwf	(??___altoft+3)& (0+255),b
  4629  002D30  0100               	movlb	0	; () banked
  4630  002D32  5173               	movf	??___altoft& (0+255),w,b
  4631  002D34  0100               	movlb	0	; () banked
  4632  002D36  1174               	iorwf	(??___altoft+1)& (0+255),w,b
  4633  002D38  0100               	movlb	0	; () banked
  4634  002D3A  1175               	iorwf	(??___altoft+2)& (0+255),w,b
  4635  002D3C  0100               	movlb	0	; () banked
  4636  002D3E  1176               	iorwf	(??___altoft+3)& (0+255),w,b
  4637  002D40  A4D8               	btfss	status,2,c
  4638  002D42  D7D9               	goto	l4024
  4639                           
  4640                           ; BSR set to: 0
  4641                           
  4642                           ; BSR set to: 0
  4643  002D44  C06F  F060         	movff	___altoft@c,___ftpack@arg
  4644  002D48  C070  F061         	movff	___altoft@c+1,___ftpack@arg+1
  4645  002D4C  C071  F062         	movff	___altoft@c+2,___ftpack@arg+2
  4646  002D50  C077  F063         	movff	___altoft@exp,___ftpack@exp
  4647  002D54  C078  F064         	movff	___altoft@sign,___ftpack@sign
  4648  002D58  ECC3  F011         	call	___ftpack	;wreg free
  4649  002D5C  C060  F06F         	movff	?___ftpack,?___altoft
  4650  002D60  C061  F070         	movff	?___ftpack+1,?___altoft+1
  4651  002D64  C062  F071         	movff	?___ftpack+2,?___altoft+2
  4652  002D68  D000               	goto	l734
  4653  002D6A                     l734:
  4654  002D6A  0012               	return		;funcret
  4655  002D6C                     __end_of___altoft:
  4656                           	opt stack 0
  4657                           tblptru	equ	0xFF8
  4658                           tblptrh	equ	0xFF7
  4659                           tblptrl	equ	0xFF6
  4660                           tablat	equ	0xFF5
  4661                           postinc0	equ	0xFEE
  4662                           wreg	equ	0xFE8
  4663                           postinc1	equ	0xFE6
  4664                           postdec1	equ	0xFE5
  4665                           fsr1h	equ	0xFE2
  4666                           fsr1l	equ	0xFE1
  4667                           postinc2	equ	0xFDE
  4668                           postdec2	equ	0xFDD
  4669                           fsr2h	equ	0xFDA
  4670                           fsr2l	equ	0xFD9
  4671                           status	equ	0xFD8
  4672                           
  4673 ;; *************** function _eval_poly *****************
  4674 ;; Defined at:
  4675 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\evalpoly.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  x               3   38[BANK0 ] float 
  4678 ;;  d               2   41[BANK0 ] PTR const 
  4679 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), 
  4680 ;;  n               2   43[BANK0 ] int 
  4681 ;; Auto vars:     Size  Location     Type
  4682 ;;  res             3   47[BANK0 ] int 
  4683 ;; Return value:  Size  Location     Type
  4684 ;;                  3   38[BANK0 ] int 
  4685 ;; Registers used:
  4686 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4692 ;;      Params:         0       7       0       0
  4693 ;;      Locals:         0       3       0       0
  4694 ;;      Temps:          0       2       0       0
  4695 ;;      Totals:         0      12       0       0
  4696 ;;Total ram usage:       12 bytes
  4697 ;; Hardware stack levels used:    1
  4698 ;; Hardware stack levels required when called:    8
  4699 ;; This function calls:
  4700 ;;		___ftadd
  4701 ;;		___ftmul
  4702 ;;		___wmul
  4703 ;; This function is called by:
  4704 ;;		_sin
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708                           	psect	text10
  4709  0025A2                     __ptext10:
  4710                           	opt stack 0
  4711  0025A2                     _eval_poly:
  4712                           	opt stack 18
  4713                           
  4714                           ;incstack = 0
  4715  0025A2  C08B  F060         	movff	eval_poly@n,___wmul@multiplier
  4716  0025A6  C08C  F061         	movff	eval_poly@n+1,___wmul@multiplier+1
  4717  0025AA  0E00               	movlw	0
  4718  0025AC  0100               	movlb	0	; () banked
  4719  0025AE  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4720  0025B0  0E03               	movlw	3
  4721  0025B2  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4722  0025B4  EC87  F01B         	call	___wmul	;wreg free
  4723  0025B8  C089  F08D         	movff	eval_poly@d,??_eval_poly
  4724  0025BC  C08A  F08E         	movff	eval_poly@d+1,??_eval_poly+1
  4725  0025C0  0100               	movlb	0	; () banked
  4726  0025C2  5160               	movf	?___wmul& (0+255),w,b
  4727  0025C4  0100               	movlb	0	; () banked
  4728  0025C6  278D               	addwf	??_eval_poly& (0+255),f,b
  4729  0025C8  0100               	movlb	0	; () banked
  4730  0025CA  5161               	movf	(?___wmul+1)& (0+255),w,b
  4731  0025CC  0100               	movlb	0	; () banked
  4732  0025CE  238E               	addwfc	(??_eval_poly+1)& (0+255),f,b
  4733  0025D0  C08D  FFF6         	movff	??_eval_poly,tblptrl
  4734  0025D4  C08E  FFF7         	movff	??_eval_poly+1,tblptrh
  4735  0025D8                     	if	0	;tblptru may be non-zero
  4736  0025D8                     	endif
  4737  0025D8                     	if	0	;tblptru may be non-zero
  4738  0025D8                     	endif
  4739  0025D8  0009               	tblrd		*+
  4740  0025DA  CFF5 F08F          	movff	tablat,eval_poly@res
  4741  0025DE  0009               	tblrd		*+
  4742  0025E0  CFF5 F090          	movff	tablat,eval_poly@res+1
  4743  0025E4  000A               	tblrd		*-
  4744  0025E6  CFF5 F091          	movff	tablat,eval_poly@res+2
  4745  0025EA  D045               	goto	l4316
  4746  0025EC                     l4314:
  4747                           
  4748                           ; BSR set to: 0
  4749  0025EC  C08F  F06B         	movff	eval_poly@res,___ftmul@f2
  4750  0025F0  C090  F06C         	movff	eval_poly@res+1,___ftmul@f2+1
  4751  0025F4  C091  F06D         	movff	eval_poly@res+2,___ftmul@f2+2
  4752  0025F8  C086  F068         	movff	eval_poly@x,___ftmul@f1
  4753  0025FC  C087  F069         	movff	eval_poly@x+1,___ftmul@f1+1
  4754  002600  C088  F06A         	movff	eval_poly@x+2,___ftmul@f1+2
  4755  002604  EC46  F00F         	call	___ftmul	;wreg free
  4756  002608  C068  F07A         	movff	?___ftmul,___ftadd@f1
  4757  00260C  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  4758  002610  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  4759  002614  0E00               	movlw	0
  4760  002616  0100               	movlb	0	; () banked
  4761  002618  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4762  00261A  0E03               	movlw	3
  4763  00261C  6F62               	movwf	___wmul@multiplicand& (0+255),b
  4764  00261E  0100               	movlb	0	; () banked
  4765  002620  078B               	decf	eval_poly@n& (0+255),f,b
  4766  002622  A0D8               	btfss	status,0,c
  4767  002624  078C               	decf	(eval_poly@n+1)& (0+255),f,b
  4768  002626  C08B  F060         	movff	eval_poly@n,___wmul@multiplier
  4769  00262A  C08C  F061         	movff	eval_poly@n+1,___wmul@multiplier+1
  4770  00262E  EC87  F01B         	call	___wmul	;wreg free
  4771  002632  C089  F08D         	movff	eval_poly@d,??_eval_poly
  4772  002636  C08A  F08E         	movff	eval_poly@d+1,??_eval_poly+1
  4773  00263A  0100               	movlb	0	; () banked
  4774  00263C  5160               	movf	?___wmul& (0+255),w,b
  4775  00263E  0100               	movlb	0	; () banked
  4776  002640  278D               	addwf	??_eval_poly& (0+255),f,b
  4777  002642  0100               	movlb	0	; () banked
  4778  002644  5161               	movf	(?___wmul+1)& (0+255),w,b
  4779  002646  0100               	movlb	0	; () banked
  4780  002648  238E               	addwfc	(??_eval_poly+1)& (0+255),f,b
  4781  00264A  C08D  FFF6         	movff	??_eval_poly,tblptrl
  4782  00264E  C08E  FFF7         	movff	??_eval_poly+1,tblptrh
  4783  002652                     	if	0	;tblptru may be non-zero
  4784  002652                     	endif
  4785  002652                     	if	0	;tblptru may be non-zero
  4786  002652                     	endif
  4787  002652  0009               	tblrd		*+
  4788  002654  CFF5 F07D          	movff	tablat,___ftadd@f2
  4789  002658  0009               	tblrd		*+
  4790  00265A  CFF5 F07E          	movff	tablat,___ftadd@f2+1
  4791  00265E  000A               	tblrd		*-
  4792  002660  CFF5 F07F          	movff	tablat,___ftadd@f2+2
  4793  002664  EC25  F00D         	call	___ftadd	;wreg free
  4794  002668  C07A  F08F         	movff	?___ftadd,eval_poly@res
  4795  00266C  C07B  F090         	movff	?___ftadd+1,eval_poly@res+1
  4796  002670  C07C  F091         	movff	?___ftadd+2,eval_poly@res+2
  4797  002674  D000               	goto	l4316
  4798  002676                     l4316:
  4799  002676  0100               	movlb	0	; () banked
  4800  002678  518B               	movf	eval_poly@n& (0+255),w,b
  4801  00267A  0100               	movlb	0	; () banked
  4802  00267C  118C               	iorwf	(eval_poly@n+1)& (0+255),w,b
  4803  00267E  A4D8               	btfss	status,2,c
  4804  002680  D7B5               	goto	l4314
  4805                           
  4806                           ; BSR set to: 0
  4807  002682  C08F  F086         	movff	eval_poly@res,?_eval_poly
  4808  002686  C090  F087         	movff	eval_poly@res+1,?_eval_poly+1
  4809  00268A  C091  F088         	movff	eval_poly@res+2,?_eval_poly+2
  4810                           
  4811                           ; BSR set to: 0
  4812  00268E  0012               	return		;funcret
  4813  002690                     __end_of_eval_poly:
  4814                           	opt stack 0
  4815                           tblptru	equ	0xFF8
  4816                           tblptrh	equ	0xFF7
  4817                           tblptrl	equ	0xFF6
  4818                           tablat	equ	0xFF5
  4819                           postinc0	equ	0xFEE
  4820                           wreg	equ	0xFE8
  4821                           postinc1	equ	0xFE6
  4822                           postdec1	equ	0xFE5
  4823                           fsr1h	equ	0xFE2
  4824                           fsr1l	equ	0xFE1
  4825                           postinc2	equ	0xFDE
  4826                           postdec2	equ	0xFDD
  4827                           fsr2h	equ	0xFDA
  4828                           fsr2l	equ	0xFD9
  4829                           status	equ	0xFD8
  4830                           
  4831 ;; *************** function _conversion_degre_radian *****************
  4832 ;; Defined at:
  4833 ;;		line 70 in file "triangulation.c"
  4834 ;; Parameters:    Size  Location     Type
  4835 ;;  angle           3   65[BANK0 ] int 
  4836 ;; Auto vars:     Size  Location     Type
  4837 ;;		None
  4838 ;; Return value:  Size  Location     Type
  4839 ;;                  3   65[BANK0 ] int 
  4840 ;; Registers used:
  4841 ;;		wreg, status,2, status,0, cstack
  4842 ;; Tracked objects:
  4843 ;;		On entry : 0/0
  4844 ;;		On exit  : 0/0
  4845 ;;		Unchanged: 0/0
  4846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4847 ;;      Params:         0       3       0       0
  4848 ;;      Locals:         0       0       0       0
  4849 ;;      Temps:          0       0       0       0
  4850 ;;      Totals:         0       3       0       0
  4851 ;;Total ram usage:        3 bytes
  4852 ;; Hardware stack levels used:    1
  4853 ;; Hardware stack levels required when called:    8
  4854 ;; This function calls:
  4855 ;;		___ftdiv
  4856 ;;		___ftmul
  4857 ;; This function is called by:
  4858 ;;		_Cot
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           	psect	text11
  4863  003412                     __ptext11:
  4864                           	opt stack 0
  4865  003412                     _conversion_degre_radian:
  4866                           	opt stack 20
  4867                           
  4868                           ;triangulation.c: 72: return ((angle / 180.) * 3.14159265);
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;incstack = 0
  4872  003412  0E00               	movlw	0
  4873  003414  0100               	movlb	0	; () banked
  4874  003416  6F95               	movwf	___ftdiv@f2& (0+255),b
  4875  003418  0E34               	movlw	52
  4876  00341A  0100               	movlb	0	; () banked
  4877  00341C  6F96               	movwf	(___ftdiv@f2+1)& (0+255),b
  4878  00341E  0E43               	movlw	67
  4879  003420  0100               	movlb	0	; () banked
  4880  003422  6F97               	movwf	(___ftdiv@f2+2)& (0+255),b
  4881  003424  C0A1  F092         	movff	conversion_degre_radian@angle,___ftdiv@f1
  4882  003428  C0A2  F093         	movff	conversion_degre_radian@angle+1,___ftdiv@f1+1
  4883  00342C  C0A3  F094         	movff	conversion_degre_radian@angle+2,___ftdiv@f1+2
  4884  003430  ECF4  F00F         	call	___ftdiv	;wreg free
  4885  003434  C092  F068         	movff	?___ftdiv,___ftmul@f1
  4886  003438  C093  F069         	movff	?___ftdiv+1,___ftmul@f1+1
  4887  00343C  C094  F06A         	movff	?___ftdiv+2,___ftmul@f1+2
  4888  003440  0E10               	movlw	16
  4889  003442  0100               	movlb	0	; () banked
  4890  003444  6F6B               	movwf	___ftmul@f2& (0+255),b
  4891  003446  0E49               	movlw	73
  4892  003448  0100               	movlb	0	; () banked
  4893  00344A  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  4894  00344C  0E40               	movlw	64
  4895  00344E  0100               	movlb	0	; () banked
  4896  003450  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  4897  003452  EC46  F00F         	call	___ftmul	;wreg free
  4898  003456  C068  F0A1         	movff	?___ftmul,?_conversion_degre_radian
  4899  00345A  C069  F0A2         	movff	?___ftmul+1,?_conversion_degre_radian+1
  4900  00345E  C06A  F0A3         	movff	?___ftmul+2,?_conversion_degre_radian+2
  4901  003462  D000               	goto	l592
  4902  003464                     l592:
  4903  003464  0012               	return		;funcret
  4904  003466                     __end_of_conversion_degre_radian:
  4905                           	opt stack 0
  4906                           tblptru	equ	0xFF8
  4907                           tblptrh	equ	0xFF7
  4908                           tblptrl	equ	0xFF6
  4909                           tablat	equ	0xFF5
  4910                           postinc0	equ	0xFEE
  4911                           wreg	equ	0xFE8
  4912                           postinc1	equ	0xFE6
  4913                           postdec1	equ	0xFE5
  4914                           fsr1h	equ	0xFE2
  4915                           fsr1l	equ	0xFE1
  4916                           postinc2	equ	0xFDE
  4917                           postdec2	equ	0xFDD
  4918                           fsr2h	equ	0xFDA
  4919                           fsr2l	equ	0xFD9
  4920                           status	equ	0xFD8
  4921                           
  4922 ;; *************** function _retrouver_balise_mere *****************
  4923 ;; Defined at:
  4924 ;;		line 106 in file "triangulation.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;		None
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;		None
  4929 ;; Return value:  Size  Location     Type
  4930 ;;                  1    wreg      char 
  4931 ;; Registers used:
  4932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4933 ;; Tracked objects:
  4934 ;;		On entry : 0/0
  4935 ;;		On exit  : 0/0
  4936 ;;		Unchanged: 0/0
  4937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4938 ;;      Params:         0       0       0       0
  4939 ;;      Locals:         0       0       0       0
  4940 ;;      Temps:          0       0       0       0
  4941 ;;      Totals:         0       0       0       0
  4942 ;;Total ram usage:        0 bytes
  4943 ;; Hardware stack levels used:    1
  4944 ;; Hardware stack levels required when called:   11
  4945 ;; This function calls:
  4946 ;;		_PutsUART
  4947 ;;		_check_divergence_angle
  4948 ;;		_inversion_balises
  4949 ;;		_modulo_id_balise_mere
  4950 ;; This function is called by:
  4951 ;;		_main
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text12
  4956  002B68                     __ptext12:
  4957                           	opt stack 0
  4958  002B68                     _retrouver_balise_mere:
  4959                           	opt stack 19
  4960                           
  4961                           ;triangulation.c: 108: if (check_divergence_angle(capteur.ancien_angle[0], capteur.angle
      +                          [0]) != 0)
  4962                           
  4963                           ;incstack = 0
  4964  002B68  C0E4  F097         	movff	_capteur+12,check_divergence_angle@ancien_angle
  4965  002B6C  C0E5  F098         	movff	_capteur+13,check_divergence_angle@ancien_angle+1
  4966  002B70  C0E6  F099         	movff	_capteur+14,check_divergence_angle@ancien_angle+2
  4967  002B74  C0DB  F09A         	movff	_capteur+3,check_divergence_angle@nouvel_angle
  4968  002B78  C0DC  F09B         	movff	_capteur+4,check_divergence_angle@nouvel_angle+1
  4969  002B7C  C0DD  F09C         	movff	_capteur+5,check_divergence_angle@nouvel_angle+2
  4970  002B80  ECB9  F013         	call	_check_divergence_angle	;wreg free
  4971  002B84  0900               	iorlw	0
  4972  002B86  B4D8               	btfsc	status,2,c
  4973  002B88  D048               	goto	l4758
  4974                           
  4975                           ;triangulation.c: 109: {
  4976                           ;triangulation.c: 110: if (check_divergence_angle(capteur.ancien_angle[0], capteur.angle
      +                          [1]) == 0)
  4977  002B8A  C0E4  F097         	movff	_capteur+12,check_divergence_angle@ancien_angle
  4978  002B8E  C0E5  F098         	movff	_capteur+13,check_divergence_angle@ancien_angle+1
  4979  002B92  C0E6  F099         	movff	_capteur+14,check_divergence_angle@ancien_angle+2
  4980  002B96  C0DE  F09A         	movff	_capteur+6,check_divergence_angle@nouvel_angle
  4981  002B9A  C0DF  F09B         	movff	_capteur+7,check_divergence_angle@nouvel_angle+1
  4982  002B9E  C0E0  F09C         	movff	_capteur+8,check_divergence_angle@nouvel_angle+2
  4983  002BA2  ECB9  F013         	call	_check_divergence_angle	;wreg free
  4984  002BA6  0900               	iorlw	0
  4985  002BA8  A4D8               	btfss	status,2,c
  4986  002BAA  D012               	goto	l4738
  4987                           
  4988                           ;triangulation.c: 111: {
  4989                           ;triangulation.c: 112: capteur.id_balise_mere ++;
  4990  002BAC  0100               	movlb	0	; () banked
  4991  002BAE  2BF4               	incf	(_capteur+28)& (0+255),f,b
  4992                           
  4993                           ; BSR set to: 0
  4994                           ;triangulation.c: 113: modulo_id_balise_mere();
  4995  002BB0  EC1B  F01C         	call	_modulo_id_balise_mere	;wreg free
  4996                           
  4997                           ;triangulation.c: 114: inversion_balises(1);
  4998  002BB4  0E01               	movlw	1
  4999  002BB6  EC55  F018         	call	_inversion_balises
  5000                           
  5001                           ;triangulation.c: 116: PutsUART(0, "\n\r ROTATION A GAUCHE \n\r");
  5002  002BBA  0E46               	movlw	low STR_15
  5003  002BBC  0100               	movlb	0	; () banked
  5004  002BBE  6F7E               	movwf	PutsUART@chaine& (0+255),b
  5005  002BC0  0E3F               	movlw	high STR_15
  5006  002BC2  0100               	movlb	0	; () banked
  5007  002BC4  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  5008  002BC6  0E00               	movlw	0
  5009  002BC8  EC09  F019         	call	_PutsUART
  5010  002BCC  D026               	goto	l4758
  5011                           
  5012                           ;triangulation.c: 119: }
  5013                           
  5014                           ;triangulation.c: 117: return 0;
  5015  002BCE  D027               	goto	l609
  5016  002BD0                     l4738:
  5017                           
  5018                           ;triangulation.c: 120: else if (check_divergence_angle(capteur.ancien_angle[0], capteur.
      +                          angle[2]) == 0)
  5019  002BD0  C0E4  F097         	movff	_capteur+12,check_divergence_angle@ancien_angle
  5020  002BD4  C0E5  F098         	movff	_capteur+13,check_divergence_angle@ancien_angle+1
  5021  002BD8  C0E6  F099         	movff	_capteur+14,check_divergence_angle@ancien_angle+2
  5022  002BDC  C0E1  F09A         	movff	_capteur+9,check_divergence_angle@nouvel_angle
  5023  002BE0  C0E2  F09B         	movff	_capteur+10,check_divergence_angle@nouvel_angle+1
  5024  002BE4  C0E3  F09C         	movff	_capteur+11,check_divergence_angle@nouvel_angle+2
  5025  002BE8  ECB9  F013         	call	_check_divergence_angle	;wreg free
  5026  002BEC  0900               	iorlw	0
  5027  002BEE  A4D8               	btfss	status,2,c
  5028  002BF0  D012               	goto	l4754
  5029                           
  5030                           ;triangulation.c: 121: {
  5031                           ;triangulation.c: 122: capteur.id_balise_mere --;
  5032  002BF2  0100               	movlb	0	; () banked
  5033  002BF4  07F4               	decf	(_capteur+28)& (0+255),f,b
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;triangulation.c: 123: modulo_id_balise_mere();
  5037  002BF6  EC1B  F01C         	call	_modulo_id_balise_mere	;wreg free
  5038                           
  5039                           ;triangulation.c: 124: inversion_balises(2);
  5040  002BFA  0E02               	movlw	2
  5041  002BFC  EC55  F018         	call	_inversion_balises
  5042                           
  5043                           ;triangulation.c: 125: PutsUART(0, "\n\r ROTATION A DROITE \n\r");
  5044  002C00  0E5E               	movlw	low STR_16
  5045  002C02  0100               	movlb	0	; () banked
  5046  002C04  6F7E               	movwf	PutsUART@chaine& (0+255),b
  5047  002C06  0E3F               	movlw	high STR_16
  5048  002C08  0100               	movlb	0	; () banked
  5049  002C0A  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  5050  002C0C  0E00               	movlw	0
  5051  002C0E  EC09  F019         	call	_PutsUART
  5052  002C12  D003               	goto	l4758
  5053                           
  5054                           ;triangulation.c: 127: }
  5055                           
  5056                           ;triangulation.c: 126: return 0;
  5057  002C14  D004               	goto	l609
  5058  002C16                     l4754:
  5059                           
  5060                           ;triangulation.c: 128: else
  5061                           ;triangulation.c: 129: return -1;
  5062  002C16  0EFF               	movlw	255
  5063                           
  5064                           ;triangulation.c: 130: }
  5065  002C18  D002               	goto	l609
  5066  002C1A                     l4758:
  5067                           
  5068                           ;triangulation.c: 131: else
  5069                           ;triangulation.c: 132: return 0;
  5070  002C1A  0E00               	movlw	0
  5071  002C1C  D000               	goto	l609
  5072  002C1E                     l609:
  5073  002C1E  0012               	return		;funcret
  5074  002C20                     __end_of_retrouver_balise_mere:
  5075                           	opt stack 0
  5076                           tblptru	equ	0xFF8
  5077                           tblptrh	equ	0xFF7
  5078                           tblptrl	equ	0xFF6
  5079                           tablat	equ	0xFF5
  5080                           postinc0	equ	0xFEE
  5081                           wreg	equ	0xFE8
  5082                           postinc1	equ	0xFE6
  5083                           postdec1	equ	0xFE5
  5084                           fsr1h	equ	0xFE2
  5085                           fsr1l	equ	0xFE1
  5086                           postinc2	equ	0xFDE
  5087                           postdec2	equ	0xFDD
  5088                           fsr2h	equ	0xFDA
  5089                           fsr2l	equ	0xFD9
  5090                           status	equ	0xFD8
  5091                           
  5092 ;; *************** function _modulo_id_balise_mere *****************
  5093 ;; Defined at:
  5094 ;;		line 164 in file "triangulation.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;		None
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;		None
  5099 ;; Return value:  Size  Location     Type
  5100 ;;		None               void
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5108 ;;      Params:         0       0       0       0
  5109 ;;      Locals:         0       0       0       0
  5110 ;;      Temps:          0       0       0       0
  5111 ;;      Totals:         0       0       0       0
  5112 ;;Total ram usage:        0 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:    6
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_main
  5119 ;;		_retrouver_balise_mere
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           	psect	text13
  5124  003836                     __ptext13:
  5125                           	opt stack 0
  5126  003836                     _modulo_id_balise_mere:
  5127                           	opt stack 23
  5128                           
  5129                           ;triangulation.c: 166: if (capteur.id_balise_mere == 3)
  5130                           
  5131                           ;incstack = 0
  5132  003836  0E03               	movlw	3
  5133  003838  0100               	movlb	0	; () banked
  5134  00383A  19F4               	xorwf	(_capteur+28)& (0+255),w,b
  5135  00383C  A4D8               	btfss	status,2,c
  5136  00383E  D002               	goto	l4532
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;triangulation.c: 167: capteur.id_balise_mere = 0;
  5140  003840  0E00               	movlw	0
  5141  003842  D005               	goto	L4
  5142  003844                     l4532:
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;triangulation.c: 168: else if (capteur.id_balise_mere == -1)
  5146  003844  0100               	movlb	0	; () banked
  5147  003846  29F4               	incf	(_capteur+28)& (0+255),w,b
  5148  003848  A4D8               	btfss	status,2,c
  5149  00384A  D004               	goto	l631
  5150                           
  5151                           ; BSR set to: 0
  5152                           ;triangulation.c: 169: capteur.id_balise_mere = 2;
  5153  00384C  0E02               	movlw	2
  5154  00384E                     L4:
  5155  00384E  0100               	movlb	0	; () banked
  5156  003850  6FF4               	movwf	(_capteur+28)& (0+255),b
  5157                           
  5158                           ; BSR set to: 0
  5159  003852  D000               	goto	l631
  5160  003854                     l631:
  5161                           
  5162                           ; BSR set to: 0
  5163  003854  0012               	return		;funcret
  5164  003856                     __end_of_modulo_id_balise_mere:
  5165                           	opt stack 0
  5166                           tblptru	equ	0xFF8
  5167                           tblptrh	equ	0xFF7
  5168                           tblptrl	equ	0xFF6
  5169                           tablat	equ	0xFF5
  5170                           postinc0	equ	0xFEE
  5171                           wreg	equ	0xFE8
  5172                           postinc1	equ	0xFE6
  5173                           postdec1	equ	0xFE5
  5174                           fsr1h	equ	0xFE2
  5175                           fsr1l	equ	0xFE1
  5176                           postinc2	equ	0xFDE
  5177                           postdec2	equ	0xFDD
  5178                           fsr2h	equ	0xFDA
  5179                           fsr2l	equ	0xFD9
  5180                           status	equ	0xFD8
  5181                           
  5182 ;; *************** function _inversion_balises *****************
  5183 ;; Defined at:
  5184 ;;		line 145 in file "triangulation.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;  id_balise_me    1    wreg     unsigned char 
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;  id_balise_me    1    0[BANK0 ] unsigned char 
  5189 ;;  temp            3    1[BANK0 ] unsigned char 
  5190 ;; Return value:  Size  Location     Type
  5191 ;;		None               void
  5192 ;; Registers used:
  5193 ;;		wreg, status,2, status,0
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5199 ;;      Params:         0       0       0       0
  5200 ;;      Locals:         0       4       0       0
  5201 ;;      Temps:          0       0       0       0
  5202 ;;      Totals:         0       4       0       0
  5203 ;;Total ram usage:        4 bytes
  5204 ;; Hardware stack levels used:    1
  5205 ;; Hardware stack levels required when called:    6
  5206 ;; This function calls:
  5207 ;;		Nothing
  5208 ;; This function is called by:
  5209 ;;		_main
  5210 ;;		_retrouver_balise_mere
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           	psect	text14
  5215  0030AA                     __ptext14:
  5216                           	opt stack 0
  5217  0030AA                     _inversion_balises:
  5218                           	opt stack 23
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;incstack = 0
  5222                           ;inversion_balises@id_balise_mere stored from wreg
  5223  0030AA  0100               	movlb	0	; () banked
  5224  0030AC  6F60               	movwf	inversion_balises@id_balise_mere& (0+255),b
  5225                           
  5226                           ; BSR set to: 0
  5227                           ;triangulation.c: 147: double temp;
  5228                           ;triangulation.c: 148: if (id_balise_mere == 1)
  5229  0030AE  0100               	movlb	0	; () banked
  5230  0030B0  0560               	decf	inversion_balises@id_balise_mere& (0+255),w,b
  5231  0030B2  A4D8               	btfss	status,2,c
  5232  0030B4  D019               	goto	l4524
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;triangulation.c: 149: {
  5236                           ;triangulation.c: 150: temp = capteur.angle[0];
  5237  0030B6  C0DB  F061         	movff	_capteur+3,inversion_balises@temp
  5238  0030BA  C0DC  F062         	movff	_capteur+4,inversion_balises@temp+1
  5239  0030BE  C0DD  F063         	movff	_capteur+5,inversion_balises@temp+2
  5240                           
  5241                           ;triangulation.c: 151: capteur.angle[0] = capteur.angle[1];
  5242  0030C2  C0DE  F0DB         	movff	_capteur+6,_capteur+3
  5243  0030C6  C0DF  F0DC         	movff	_capteur+7,_capteur+4
  5244  0030CA  C0E0  F0DD         	movff	_capteur+8,_capteur+5
  5245                           
  5246                           ;triangulation.c: 152: capteur.angle[1] = capteur.angle[2];
  5247  0030CE  C0E1  F0DE         	movff	_capteur+9,_capteur+6
  5248  0030D2  C0E2  F0DF         	movff	_capteur+10,_capteur+7
  5249  0030D6  C0E3  F0E0         	movff	_capteur+11,_capteur+8
  5250                           
  5251                           ;triangulation.c: 153: capteur.angle[2] = temp;
  5252  0030DA  C061  F0E1         	movff	inversion_balises@temp,_capteur+9
  5253  0030DE  C062  F0E2         	movff	inversion_balises@temp+1,_capteur+10
  5254  0030E2  C063  F0E3         	movff	inversion_balises@temp+2,_capteur+11
  5255                           
  5256                           ;triangulation.c: 154: }
  5257  0030E6  D01E               	goto	l625
  5258  0030E8                     l4524:
  5259                           
  5260                           ; BSR set to: 0
  5261                           ;triangulation.c: 155: else if (id_balise_mere == 2)
  5262  0030E8  0E02               	movlw	2
  5263  0030EA  0100               	movlb	0	; () banked
  5264  0030EC  1960               	xorwf	inversion_balises@id_balise_mere& (0+255),w,b
  5265  0030EE  A4D8               	btfss	status,2,c
  5266  0030F0  D019               	goto	l625
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;triangulation.c: 156: {
  5270                           ;triangulation.c: 157: temp = capteur.angle[0];
  5271  0030F2  C0DB  F061         	movff	_capteur+3,inversion_balises@temp
  5272  0030F6  C0DC  F062         	movff	_capteur+4,inversion_balises@temp+1
  5273  0030FA  C0DD  F063         	movff	_capteur+5,inversion_balises@temp+2
  5274                           
  5275                           ;triangulation.c: 158: capteur.angle[0] = capteur.angle[2];
  5276  0030FE  C0E1  F0DB         	movff	_capteur+9,_capteur+3
  5277  003102  C0E2  F0DC         	movff	_capteur+10,_capteur+4
  5278  003106  C0E3  F0DD         	movff	_capteur+11,_capteur+5
  5279                           
  5280                           ;triangulation.c: 159: capteur.angle[2] = capteur.angle[1];
  5281  00310A  C0DE  F0E1         	movff	_capteur+6,_capteur+9
  5282  00310E  C0DF  F0E2         	movff	_capteur+7,_capteur+10
  5283  003112  C0E0  F0E3         	movff	_capteur+8,_capteur+11
  5284                           
  5285                           ;triangulation.c: 160: capteur.angle[1] = temp;
  5286  003116  C061  F0DE         	movff	inversion_balises@temp,_capteur+6
  5287  00311A  C062  F0DF         	movff	inversion_balises@temp+1,_capteur+7
  5288  00311E  C063  F0E0         	movff	inversion_balises@temp+2,_capteur+8
  5289                           
  5290                           ; BSR set to: 0
  5291  003122  D000               	goto	l625
  5292  003124                     l625:
  5293                           
  5294                           ; BSR set to: 0
  5295  003124  0012               	return		;funcret
  5296  003126                     __end_of_inversion_balises:
  5297                           	opt stack 0
  5298                           tblptru	equ	0xFF8
  5299                           tblptrh	equ	0xFF7
  5300                           tblptrl	equ	0xFF6
  5301                           tablat	equ	0xFF5
  5302                           postinc0	equ	0xFEE
  5303                           wreg	equ	0xFE8
  5304                           postinc1	equ	0xFE6
  5305                           postdec1	equ	0xFE5
  5306                           fsr1h	equ	0xFE2
  5307                           fsr1l	equ	0xFE1
  5308                           postinc2	equ	0xFDE
  5309                           postdec2	equ	0xFDD
  5310                           fsr2h	equ	0xFDA
  5311                           fsr2l	equ	0xFD9
  5312                           status	equ	0xFD8
  5313                           
  5314 ;; *************** function _check_divergence_angle *****************
  5315 ;; Defined at:
  5316 ;;		line 75 in file "triangulation.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  ancien_angle    3   55[BANK0 ] unsigned char 
  5319 ;;  nouvel_angle    3   58[BANK0 ] unsigned char 
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;  derive          3   64[BANK0 ] unsigned char 
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  1    wreg      char 
  5324 ;; Registers used:
  5325 ;;		wreg, status,2, status,0, cstack
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5331 ;;      Params:         0       6       0       0
  5332 ;;      Locals:         0       6       0       0
  5333 ;;      Temps:          0       0       0       0
  5334 ;;      Totals:         0      12       0       0
  5335 ;;Total ram usage:       12 bytes
  5336 ;; Hardware stack levels used:    1
  5337 ;; Hardware stack levels required when called:   10
  5338 ;; This function calls:
  5339 ;;		___ftadd
  5340 ;;		___ftge
  5341 ;;		___ftneg
  5342 ;;		_modulo_angle
  5343 ;; This function is called by:
  5344 ;;		_retrouver_balise_mere
  5345 ;; This function uses a non-reentrant model
  5346 ;;
  5347                           
  5348                           	psect	text15
  5349  002772                     __ptext15:
  5350                           	opt stack 0
  5351  002772                     _check_divergence_angle:
  5352                           	opt stack 19
  5353                           
  5354                           ;triangulation.c: 77: double derive = modulo_angle(nouvel_angle - ancien_angle);
  5355                           
  5356                           ; BSR set to: 0
  5357                           ;incstack = 0
  5358  002772  C097  F077         	movff	check_divergence_angle@ancien_angle,___ftneg@f1
  5359  002776  C098  F078         	movff	check_divergence_angle@ancien_angle+1,___ftneg@f1+1
  5360  00277A  C099  F079         	movff	check_divergence_angle@ancien_angle+2,___ftneg@f1+2
  5361  00277E  ECA3  F01B         	call	___ftneg	;wreg free
  5362  002782  C077  F07A         	movff	?___ftneg,___ftadd@f1
  5363  002786  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  5364  00278A  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  5365  00278E  C09A  F07D         	movff	check_divergence_angle@nouvel_angle,___ftadd@f2
  5366  002792  C09B  F07E         	movff	check_divergence_angle@nouvel_angle+1,___ftadd@f2+1
  5367  002796  C09C  F07F         	movff	check_divergence_angle@nouvel_angle+2,___ftadd@f2+2
  5368  00279A  EC25  F00D         	call	___ftadd	;wreg free
  5369  00279E  C07A  F09D         	movff	?___ftadd,_check_divergence_angle$3251
  5370  0027A2  C07B  F09E         	movff	?___ftadd+1,_check_divergence_angle$3251+1
  5371  0027A6  C07C  F09F         	movff	?___ftadd+2,_check_divergence_angle$3251+2
  5372                           
  5373                           ;triangulation.c: 77: double derive = modulo_angle(nouvel_angle - ancien_angle);
  5374  0027AA  C09D  F094         	movff	_check_divergence_angle$3251,modulo_angle@angle
  5375  0027AE  C09E  F095         	movff	_check_divergence_angle$3251+1,modulo_angle@angle+1
  5376  0027B2  C09F  F096         	movff	_check_divergence_angle$3251+2,modulo_angle@angle+2
  5377  0027B6  ECF8  F014         	call	_modulo_angle	;wreg free
  5378  0027BA  C094  F0A0         	movff	?_modulo_angle,check_divergence_angle@derive
  5379  0027BE  C095  F0A1         	movff	?_modulo_angle+1,check_divergence_angle@derive+1
  5380  0027C2  C096  F0A2         	movff	?_modulo_angle+2,check_divergence_angle@derive+2
  5381                           
  5382                           ;triangulation.c: 79: if (derive < -20. && derive < 0.)
  5383  0027C6  C0A0  F07A         	movff	check_divergence_angle@derive,___ftge@ff1
  5384  0027CA  C0A1  F07B         	movff	check_divergence_angle@derive+1,___ftge@ff1+1
  5385  0027CE  C0A2  F07C         	movff	check_divergence_angle@derive+2,___ftge@ff1+2
  5386  0027D2  0E00               	movlw	0
  5387  0027D4  0100               	movlb	0	; () banked
  5388  0027D6  6F7D               	movwf	___ftge@ff2& (0+255),b
  5389  0027D8  0EA0               	movlw	160
  5390  0027DA  0100               	movlb	0	; () banked
  5391  0027DC  6F7E               	movwf	(___ftge@ff2+1)& (0+255),b
  5392  0027DE  0EC1               	movlw	193
  5393  0027E0  0100               	movlb	0	; () banked
  5394  0027E2  6F7F               	movwf	(___ftge@ff2+2)& (0+255),b
  5395  0027E4  EC91  F014         	call	___ftge	;wreg free
  5396  0027E8  0100               	movlb	0	; () banked
  5397  0027EA  B0D8               	btfsc	status,0,c
  5398  0027EC  D005               	goto	l4630
  5399                           
  5400                           ; BSR set to: 0
  5401  0027EE  0100               	movlb	0	; () banked
  5402  0027F0  AFA2               	btfss	(check_divergence_angle@derive+2)& (0+255),7,b
  5403  0027F2  D002               	goto	l4630
  5404                           
  5405                           ; BSR set to: 0
  5406                           ;triangulation.c: 80: {
  5407                           ;triangulation.c: 81: return -1;
  5408  0027F4  0EFF               	movlw	255
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;triangulation.c: 82: }
  5412                           
  5413                           ; BSR set to: 0
  5414  0027F6  D02C               	goto	l596
  5415  0027F8                     l4630:
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;triangulation.c: 83: else if (derive > 20. && derive > 0.)
  5419  0027F8  0E00               	movlw	0
  5420  0027FA  0100               	movlb	0	; () banked
  5421  0027FC  6F7A               	movwf	___ftge@ff1& (0+255),b
  5422  0027FE  0EA0               	movlw	160
  5423  002800  0100               	movlb	0	; () banked
  5424  002802  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  5425  002804  0E41               	movlw	65
  5426  002806  0100               	movlb	0	; () banked
  5427  002808  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  5428  00280A  C0A0  F07D         	movff	check_divergence_angle@derive,___ftge@ff2
  5429  00280E  C0A1  F07E         	movff	check_divergence_angle@derive+1,___ftge@ff2+1
  5430  002812  C0A2  F07F         	movff	check_divergence_angle@derive+2,___ftge@ff2+2
  5431  002816  EC91  F014         	call	___ftge	;wreg free
  5432  00281A  0100               	movlb	0	; () banked
  5433  00281C  B0D8               	btfsc	status,0,c
  5434  00281E  D016               	goto	l4640
  5435                           
  5436                           ; BSR set to: 0
  5437  002820  0E00               	movlw	0
  5438  002822  0100               	movlb	0	; () banked
  5439  002824  6F7A               	movwf	___ftge@ff1& (0+255),b
  5440  002826  0E00               	movlw	0
  5441  002828  0100               	movlb	0	; () banked
  5442  00282A  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  5443  00282C  0E00               	movlw	0
  5444  00282E  0100               	movlb	0	; () banked
  5445  002830  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  5446  002832  C0A0  F07D         	movff	check_divergence_angle@derive,___ftge@ff2
  5447  002836  C0A1  F07E         	movff	check_divergence_angle@derive+1,___ftge@ff2+1
  5448  00283A  C0A2  F07F         	movff	check_divergence_angle@derive+2,___ftge@ff2+2
  5449  00283E  EC91  F014         	call	___ftge	;wreg free
  5450  002842  0100               	movlb	0	; () banked
  5451  002844  B0D8               	btfsc	status,0,c
  5452  002846  D002               	goto	l4640
  5453                           
  5454                           ; BSR set to: 0
  5455                           ;triangulation.c: 84: {
  5456                           ;triangulation.c: 85: return 1;
  5457  002848  0E01               	movlw	1
  5458                           
  5459                           ; BSR set to: 0
  5460                           ;triangulation.c: 86: }
  5461                           
  5462                           ; BSR set to: 0
  5463  00284A  D002               	goto	l596
  5464  00284C                     l4640:
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;triangulation.c: 87: else
  5468                           ;triangulation.c: 88: return 0;
  5469  00284C  0E00               	movlw	0
  5470                           
  5471                           ; BSR set to: 0
  5472                           
  5473                           ; BSR set to: 0
  5474  00284E  D000               	goto	l596
  5475  002850                     l596:
  5476                           
  5477                           ; BSR set to: 0
  5478  002850  0012               	return		;funcret
  5479  002852                     __end_of_check_divergence_angle:
  5480                           	opt stack 0
  5481                           tblptru	equ	0xFF8
  5482                           tblptrh	equ	0xFF7
  5483                           tblptrl	equ	0xFF6
  5484                           tablat	equ	0xFF5
  5485                           postinc0	equ	0xFEE
  5486                           wreg	equ	0xFE8
  5487                           postinc1	equ	0xFE6
  5488                           postdec1	equ	0xFE5
  5489                           fsr1h	equ	0xFE2
  5490                           fsr1l	equ	0xFE1
  5491                           postinc2	equ	0xFDE
  5492                           postdec2	equ	0xFDD
  5493                           fsr2h	equ	0xFDA
  5494                           fsr2l	equ	0xFD9
  5495                           status	equ	0xFD8
  5496                           
  5497 ;; *************** function _modulo_angle *****************
  5498 ;; Defined at:
  5499 ;;		line 135 in file "triangulation.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;  angle           3   52[BANK0 ] char 
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;		None
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  3   52[BANK0 ] char 
  5506 ;; Registers used:
  5507 ;;		wreg, status,2, status,0, cstack
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5513 ;;      Params:         0       3       0       0
  5514 ;;      Locals:         0       0       0       0
  5515 ;;      Temps:          0       0       0       0
  5516 ;;      Totals:         0       3       0       0
  5517 ;;Total ram usage:        3 bytes
  5518 ;; Hardware stack levels used:    1
  5519 ;; Hardware stack levels required when called:    9
  5520 ;; This function calls:
  5521 ;;		___ftadd
  5522 ;;		___ftge
  5523 ;;		___ftsub
  5524 ;; This function is called by:
  5525 ;;		_check_divergence_angle
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           	psect	text16
  5530  0029F0                     __ptext16:
  5531                           	opt stack 0
  5532  0029F0                     _modulo_angle:
  5533                           	opt stack 19
  5534                           
  5535                           ;triangulation.c: 137: if (angle < -180.)
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;incstack = 0
  5539  0029F0  C094  F07A         	movff	modulo_angle@angle,___ftge@ff1
  5540  0029F4  C095  F07B         	movff	modulo_angle@angle+1,___ftge@ff1+1
  5541  0029F8  C096  F07C         	movff	modulo_angle@angle+2,___ftge@ff1+2
  5542  0029FC  0E00               	movlw	0
  5543  0029FE  0100               	movlb	0	; () banked
  5544  002A00  6F7D               	movwf	___ftge@ff2& (0+255),b
  5545  002A02  0E34               	movlw	52
  5546  002A04  0100               	movlb	0	; () banked
  5547  002A06  6F7E               	movwf	(___ftge@ff2+1)& (0+255),b
  5548  002A08  0EC3               	movlw	195
  5549  002A0A  0100               	movlb	0	; () banked
  5550  002A0C  6F7F               	movwf	(___ftge@ff2+2)& (0+255),b
  5551  002A0E  EC91  F014         	call	___ftge	;wreg free
  5552  002A12  0100               	movlb	0	; () banked
  5553  002A14  B0D8               	btfsc	status,0,c
  5554  002A16  D018               	goto	l4510
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;triangulation.c: 138: angle+= 360.;
  5558  002A18  C094  F07A         	movff	modulo_angle@angle,___ftadd@f1
  5559  002A1C  C095  F07B         	movff	modulo_angle@angle+1,___ftadd@f1+1
  5560  002A20  C096  F07C         	movff	modulo_angle@angle+2,___ftadd@f1+2
  5561  002A24  0E00               	movlw	0
  5562  002A26  0100               	movlb	0	; () banked
  5563  002A28  6F7D               	movwf	___ftadd@f2& (0+255),b
  5564  002A2A  0EB4               	movlw	180
  5565  002A2C  0100               	movlb	0	; () banked
  5566  002A2E  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  5567  002A30  0E43               	movlw	67
  5568  002A32  0100               	movlb	0	; () banked
  5569  002A34  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  5570  002A36  EC25  F00D         	call	___ftadd	;wreg free
  5571  002A3A  C07A  F094         	movff	?___ftadd,modulo_angle@angle
  5572  002A3E  C07B  F095         	movff	?___ftadd+1,modulo_angle@angle+1
  5573  002A42  C07C  F096         	movff	?___ftadd+2,modulo_angle@angle+2
  5574  002A46  D02C               	goto	l4514
  5575  002A48                     l4510:
  5576                           
  5577                           ;triangulation.c: 139: else if (angle > 180.)
  5578  002A48  0E00               	movlw	0
  5579  002A4A  0100               	movlb	0	; () banked
  5580  002A4C  6F7A               	movwf	___ftge@ff1& (0+255),b
  5581  002A4E  0E34               	movlw	52
  5582  002A50  0100               	movlb	0	; () banked
  5583  002A52  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  5584  002A54  0E43               	movlw	67
  5585  002A56  0100               	movlb	0	; () banked
  5586  002A58  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  5587  002A5A  C094  F07D         	movff	modulo_angle@angle,___ftge@ff2
  5588  002A5E  C095  F07E         	movff	modulo_angle@angle+1,___ftge@ff2+1
  5589  002A62  C096  F07F         	movff	modulo_angle@angle+2,___ftge@ff2+2
  5590  002A66  EC91  F014         	call	___ftge	;wreg free
  5591  002A6A  0100               	movlb	0	; () banked
  5592  002A6C  B0D8               	btfsc	status,0,c
  5593  002A6E  D018               	goto	l4514
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;triangulation.c: 140: angle -= 360.;
  5597  002A70  C094  F08E         	movff	modulo_angle@angle,___ftsub@f1
  5598  002A74  C095  F08F         	movff	modulo_angle@angle+1,___ftsub@f1+1
  5599  002A78  C096  F090         	movff	modulo_angle@angle+2,___ftsub@f1+2
  5600  002A7C  0E00               	movlw	0
  5601  002A7E  0100               	movlb	0	; () banked
  5602  002A80  6F91               	movwf	___ftsub@f2& (0+255),b
  5603  002A82  0EB4               	movlw	180
  5604  002A84  0100               	movlb	0	; () banked
  5605  002A86  6F92               	movwf	(___ftsub@f2+1)& (0+255),b
  5606  002A88  0E43               	movlw	67
  5607  002A8A  0100               	movlb	0	; () banked
  5608  002A8C  6F93               	movwf	(___ftsub@f2+2)& (0+255),b
  5609  002A8E  EC33  F01A         	call	___ftsub	;wreg free
  5610  002A92  C08E  F094         	movff	?___ftsub,modulo_angle@angle
  5611  002A96  C08F  F095         	movff	?___ftsub+1,modulo_angle@angle+1
  5612  002A9A  C090  F096         	movff	?___ftsub+2,modulo_angle@angle+2
  5613  002A9E  D000               	goto	l4514
  5614  002AA0                     l4514:
  5615                           
  5616                           ;triangulation.c: 142: return angle;
  5617  002AA0  C094  F094         	movff	modulo_angle@angle,?_modulo_angle
  5618  002AA4  C095  F095         	movff	modulo_angle@angle+1,?_modulo_angle+1
  5619  002AA8  C096  F096         	movff	modulo_angle@angle+2,?_modulo_angle+2
  5620  002AAC  D000               	goto	l619
  5621  002AAE                     l619:
  5622  002AAE  0012               	return		;funcret
  5623  002AB0                     __end_of_modulo_angle:
  5624                           	opt stack 0
  5625                           tblptru	equ	0xFF8
  5626                           tblptrh	equ	0xFF7
  5627                           tblptrl	equ	0xFF6
  5628                           tablat	equ	0xFF5
  5629                           postinc0	equ	0xFEE
  5630                           wreg	equ	0xFE8
  5631                           postinc1	equ	0xFE6
  5632                           postdec1	equ	0xFE5
  5633                           fsr1h	equ	0xFE2
  5634                           fsr1l	equ	0xFE1
  5635                           postinc2	equ	0xFDE
  5636                           postdec2	equ	0xFDD
  5637                           fsr2h	equ	0xFDA
  5638                           fsr2l	equ	0xFD9
  5639                           status	equ	0xFD8
  5640                           
  5641 ;; *************** function _obtention_angle *****************
  5642 ;; Defined at:
  5643 ;;		line 140 in file "moteur.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;  position        2   65[BANK0 ] unsigned int 
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;  angle           3   68[BANK0 ] unsigned int 
  5648 ;; Return value:  Size  Location     Type
  5649 ;;                  3   65[BANK0 ] unsigned int 
  5650 ;; Registers used:
  5651 ;;		wreg, status,2, status,0, cstack
  5652 ;; Tracked objects:
  5653 ;;		On entry : 0/0
  5654 ;;		On exit  : 0/0
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5657 ;;      Params:         0       3       0       0
  5658 ;;      Locals:         0       3       0       0
  5659 ;;      Temps:          0       0       0       0
  5660 ;;      Totals:         0       6       0       0
  5661 ;;Total ram usage:        6 bytes
  5662 ;; Hardware stack levels used:    1
  5663 ;; Hardware stack levels required when called:    8
  5664 ;; This function calls:
  5665 ;;		___ftdiv
  5666 ;;		___ftmul
  5667 ;;		___lwtoft
  5668 ;; This function is called by:
  5669 ;;		_main
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673                           	psect	text17
  5674  003126                     __ptext17:
  5675                           	opt stack 0
  5676  003126                     _obtention_angle:
  5677                           	opt stack 22
  5678                           
  5679                           ;moteur.c: 142: double angle;
  5680                           ;moteur.c: 143: angle = (double) ((position) / 7999.);
  5681                           
  5682                           ;incstack = 0
  5683  003126  C0A1  F068         	movff	obtention_angle@position,___lwtoft@c
  5684  00312A  C0A2  F069         	movff	obtention_angle@position+1,___lwtoft@c+1
  5685  00312E  ECBB  F01B         	call	___lwtoft	;wreg free
  5686  003132  C068  F092         	movff	?___lwtoft,___ftdiv@f1
  5687  003136  C069  F093         	movff	?___lwtoft+1,___ftdiv@f1+1
  5688  00313A  C06A  F094         	movff	?___lwtoft+2,___ftdiv@f1+2
  5689  00313E  0EF8               	movlw	248
  5690  003140  0100               	movlb	0	; () banked
  5691  003142  6F95               	movwf	___ftdiv@f2& (0+255),b
  5692  003144  0EF9               	movlw	249
  5693  003146  0100               	movlb	0	; () banked
  5694  003148  6F96               	movwf	(___ftdiv@f2+1)& (0+255),b
  5695  00314A  0E45               	movlw	69
  5696  00314C  0100               	movlb	0	; () banked
  5697  00314E  6F97               	movwf	(___ftdiv@f2+2)& (0+255),b
  5698  003150  ECF4  F00F         	call	___ftdiv	;wreg free
  5699  003154  C092  F0A4         	movff	?___ftdiv,obtention_angle@angle
  5700  003158  C093  F0A5         	movff	?___ftdiv+1,obtention_angle@angle+1
  5701  00315C  C094  F0A6         	movff	?___ftdiv+2,obtention_angle@angle+2
  5702                           
  5703                           ;moteur.c: 144: angle *= 360;
  5704  003160  C0A4  F068         	movff	obtention_angle@angle,___ftmul@f1
  5705  003164  C0A5  F069         	movff	obtention_angle@angle+1,___ftmul@f1+1
  5706  003168  C0A6  F06A         	movff	obtention_angle@angle+2,___ftmul@f1+2
  5707  00316C  0E00               	movlw	0
  5708  00316E  0100               	movlb	0	; () banked
  5709  003170  6F6B               	movwf	___ftmul@f2& (0+255),b
  5710  003172  0EB4               	movlw	180
  5711  003174  0100               	movlb	0	; () banked
  5712  003176  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  5713  003178  0E43               	movlw	67
  5714  00317A  0100               	movlb	0	; () banked
  5715  00317C  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  5716  00317E  EC46  F00F         	call	___ftmul	;wreg free
  5717  003182  C068  F0A4         	movff	?___ftmul,obtention_angle@angle
  5718  003186  C069  F0A5         	movff	?___ftmul+1,obtention_angle@angle+1
  5719  00318A  C06A  F0A6         	movff	?___ftmul+2,obtention_angle@angle+2
  5720                           
  5721                           ;moteur.c: 145: return angle;
  5722  00318E  C0A4  F0A1         	movff	obtention_angle@angle,?_obtention_angle
  5723  003192  C0A5  F0A2         	movff	obtention_angle@angle+1,?_obtention_angle+1
  5724  003196  C0A6  F0A3         	movff	obtention_angle@angle+2,?_obtention_angle+2
  5725  00319A  D000               	goto	l505
  5726  00319C                     l505:
  5727  00319C  0012               	return		;funcret
  5728  00319E                     __end_of_obtention_angle:
  5729                           	opt stack 0
  5730                           tblptru	equ	0xFF8
  5731                           tblptrh	equ	0xFF7
  5732                           tblptrl	equ	0xFF6
  5733                           tablat	equ	0xFF5
  5734                           postinc0	equ	0xFEE
  5735                           wreg	equ	0xFE8
  5736                           postinc1	equ	0xFE6
  5737                           postdec1	equ	0xFE5
  5738                           fsr1h	equ	0xFE2
  5739                           fsr1l	equ	0xFE1
  5740                           postinc2	equ	0xFDE
  5741                           postdec2	equ	0xFDD
  5742                           fsr2h	equ	0xFDA
  5743                           fsr2l	equ	0xFD9
  5744                           status	equ	0xFD8
  5745                           
  5746 ;; *************** function ___lwtoft *****************
  5747 ;; Defined at:
  5748 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  c               2    8[BANK0 ] unsigned int 
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;		None
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  3    8[BANK0 ] float 
  5755 ;; Registers used:
  5756 ;;		wreg, status,2, status,0, cstack
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5762 ;;      Params:         0       3       0       0
  5763 ;;      Locals:         0       0       0       0
  5764 ;;      Temps:          0       0       0       0
  5765 ;;      Totals:         0       3       0       0
  5766 ;;Total ram usage:        3 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; Hardware stack levels required when called:    7
  5769 ;; This function calls:
  5770 ;;		___ftpack
  5771 ;; This function is called by:
  5772 ;;		_obtention_angle
  5773 ;;		_conversion_angle
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           	psect	text18
  5778  003776                     __ptext18:
  5779                           	opt stack 0
  5780  003776                     ___lwtoft:
  5781                           	opt stack 22
  5782                           
  5783                           ;incstack = 0
  5784  003776  C068  F060         	movff	___lwtoft@c,___ftpack@arg
  5785  00377A  C069  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
  5786  00377E  0100               	movlb	0	; () banked
  5787  003780  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  5788  003782  0E8E               	movlw	142
  5789  003784  0100               	movlb	0	; () banked
  5790  003786  6F63               	movwf	___ftpack@exp& (0+255),b
  5791  003788  0E00               	movlw	0
  5792  00378A  0100               	movlb	0	; () banked
  5793  00378C  6F64               	movwf	___ftpack@sign& (0+255),b
  5794  00378E  ECC3  F011         	call	___ftpack	;wreg free
  5795  003792  C060  F068         	movff	?___ftpack,?___lwtoft
  5796  003796  C061  F069         	movff	?___ftpack+1,?___lwtoft+1
  5797  00379A  C062  F06A         	movff	?___ftpack+2,?___lwtoft+2
  5798  00379E  D000               	goto	l1182
  5799  0037A0                     l1182:
  5800  0037A0  0012               	return		;funcret
  5801  0037A2                     __end_of___lwtoft:
  5802                           	opt stack 0
  5803                           tblptru	equ	0xFF8
  5804                           tblptrh	equ	0xFF7
  5805                           tblptrl	equ	0xFF6
  5806                           tablat	equ	0xFF5
  5807                           postinc0	equ	0xFEE
  5808                           wreg	equ	0xFE8
  5809                           postinc1	equ	0xFE6
  5810                           postdec1	equ	0xFE5
  5811                           fsr1h	equ	0xFE2
  5812                           fsr1l	equ	0xFE1
  5813                           postinc2	equ	0xFDE
  5814                           postdec2	equ	0xFDD
  5815                           fsr2h	equ	0xFDA
  5816                           fsr2l	equ	0xFD9
  5817                           status	equ	0xFD8
  5818                           
  5819 ;; *************** function ___ftdiv *****************
  5820 ;; Defined at:
  5821 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  5822 ;; Parameters:    Size  Location     Type
  5823 ;;  f1              3   50[BANK0 ] float 
  5824 ;;  f2              3   53[BANK0 ] float 
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  f3              3   60[BANK0 ] float 
  5827 ;;  sign            1   64[BANK0 ] unsigned char 
  5828 ;;  exp             1   63[BANK0 ] unsigned char 
  5829 ;;  cntr            1   59[BANK0 ] unsigned char 
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  3   50[BANK0 ] float 
  5832 ;; Registers used:
  5833 ;;		wreg, status,2, status,0, cstack
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  5839 ;;      Params:         0       6       0       0
  5840 ;;      Locals:         0       6       0       0
  5841 ;;      Temps:          0       3       0       0
  5842 ;;      Totals:         0      15       0       0
  5843 ;;Total ram usage:       15 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:    7
  5846 ;; This function calls:
  5847 ;;		___ftpack
  5848 ;; This function is called by:
  5849 ;;		_obtention_angle
  5850 ;;		_triangulation
  5851 ;;		_Cot
  5852 ;;		_conversion_degre_radian
  5853 ;;		_tan
  5854 ;;		_sin
  5855 ;;		_conversion_angle
  5856 ;;		_mesure_vitesse
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           
  5860                           	psect	text19
  5861  001FE8                     __ptext19:
  5862                           	opt stack 0
  5863  001FE8                     ___ftdiv:
  5864                           	opt stack 22
  5865                           
  5866                           ;incstack = 0
  5867  001FE8  C094  F098         	movff	___ftdiv@f1+2,??___ftdiv
  5868  001FEC  0100               	movlb	0	; () banked
  5869  001FEE  6B99               	clrf	(??___ftdiv+1)& (0+255),b
  5870  001FF0  6B9A               	clrf	(??___ftdiv+2)& (0+255),b
  5871  001FF2  0100               	movlb	0	; () banked
  5872  001FF4  3593               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  5873  001FF6  0100               	movlb	0	; () banked
  5874  001FF8  3798               	rlcf	??___ftdiv& (0+255),f,b
  5875  001FFA  E301               	bnc	u3691
  5876  001FFC  8199               	bsf	(??___ftdiv+1)& (0+255),0,b
  5877  001FFE                     u3691:
  5878  001FFE  0100               	movlb	0	; () banked
  5879  002000  5198               	movf	??___ftdiv& (0+255),w,b
  5880  002002  0100               	movlb	0	; () banked
  5881  002004  6F9F               	movwf	___ftdiv@exp& (0+255),b
  5882  002006  0100               	movlb	0	; () banked
  5883  002008  519F               	movf	___ftdiv@exp& (0+255),w,b
  5884  00200A  A4D8               	btfss	status,2,c
  5885  00200C  D002               	goto	l4236
  5886  00200E  D014               	goto	l4238
  5887                           
  5888                           ; BSR set to: 0
  5889                           
  5890                           ; BSR set to: 0
  5891  002010  D08B               	goto	l1017
  5892  002012                     l4236:
  5893                           
  5894                           ; BSR set to: 0
  5895  002012  C097  F098         	movff	___ftdiv@f2+2,??___ftdiv
  5896  002016  0100               	movlb	0	; () banked
  5897  002018  6B99               	clrf	(??___ftdiv+1)& (0+255),b
  5898  00201A  6B9A               	clrf	(??___ftdiv+2)& (0+255),b
  5899  00201C  0100               	movlb	0	; () banked
  5900  00201E  3596               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  5901  002020  0100               	movlb	0	; () banked
  5902  002022  3798               	rlcf	??___ftdiv& (0+255),f,b
  5903  002024  E301               	bnc	u3711
  5904  002026  8199               	bsf	(??___ftdiv+1)& (0+255),0,b
  5905  002028                     u3711:
  5906  002028  0100               	movlb	0	; () banked
  5907  00202A  5198               	movf	??___ftdiv& (0+255),w,b
  5908  00202C  0100               	movlb	0	; () banked
  5909  00202E  6FA0               	movwf	___ftdiv@sign& (0+255),b
  5910  002030  0100               	movlb	0	; () banked
  5911  002032  51A0               	movf	___ftdiv@sign& (0+255),w,b
  5912  002034  A4D8               	btfss	status,2,c
  5913  002036  D00A               	goto	l4242
  5914  002038                     l4238:
  5915                           
  5916                           ; BSR set to: 0
  5917  002038  0E00               	movlw	0
  5918  00203A  0100               	movlb	0	; () banked
  5919  00203C  6F92               	movwf	?___ftdiv& (0+255),b
  5920  00203E  0E00               	movlw	0
  5921  002040  0100               	movlb	0	; () banked
  5922  002042  6F93               	movwf	(?___ftdiv+1)& (0+255),b
  5923  002044  0E00               	movlw	0
  5924  002046  0100               	movlb	0	; () banked
  5925  002048  6F94               	movwf	(?___ftdiv+2)& (0+255),b
  5926                           
  5927                           ; BSR set to: 0
  5928  00204A  D06E               	goto	l1017
  5929  00204C                     l4242:
  5930                           
  5931                           ; BSR set to: 0
  5932  00204C  0E00               	movlw	0
  5933  00204E  0100               	movlb	0	; () banked
  5934  002050  6F9C               	movwf	___ftdiv@f3& (0+255),b
  5935  002052  0E00               	movlw	0
  5936  002054  0100               	movlb	0	; () banked
  5937  002056  6F9D               	movwf	(___ftdiv@f3+1)& (0+255),b
  5938  002058  0E00               	movlw	0
  5939  00205A  0100               	movlb	0	; () banked
  5940  00205C  6F9E               	movwf	(___ftdiv@f3+2)& (0+255),b
  5941                           
  5942                           ; BSR set to: 0
  5943  00205E  0100               	movlb	0	; () banked
  5944  002060  51A0               	movf	___ftdiv@sign& (0+255),w,b
  5945  002062  0F89               	addlw	137
  5946  002064  0100               	movlb	0	; () banked
  5947  002066  5F9F               	subwf	___ftdiv@exp& (0+255),f,b
  5948                           
  5949                           ; BSR set to: 0
  5950  002068  C094  F0A0         	movff	___ftdiv@f1+2,___ftdiv@sign
  5951                           
  5952                           ; BSR set to: 0
  5953  00206C  0100               	movlb	0	; () banked
  5954  00206E  5197               	movf	(___ftdiv@f2+2)& (0+255),w,b
  5955  002070  0100               	movlb	0	; () banked
  5956  002072  1BA0               	xorwf	___ftdiv@sign& (0+255),f,b
  5957                           
  5958                           ; BSR set to: 0
  5959  002074  0E80               	movlw	128
  5960  002076  0100               	movlb	0	; () banked
  5961  002078  17A0               	andwf	___ftdiv@sign& (0+255),f,b
  5962                           
  5963                           ; BSR set to: 0
  5964  00207A  0100               	movlb	0	; () banked
  5965  00207C  8F93               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  5966                           
  5967                           ; BSR set to: 0
  5968  00207E  0EFF               	movlw	255
  5969  002080  0100               	movlb	0	; () banked
  5970  002082  1792               	andwf	___ftdiv@f1& (0+255),f,b
  5971  002084  0EFF               	movlw	255
  5972  002086  0100               	movlb	0	; () banked
  5973  002088  1793               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  5974  00208A  0E00               	movlw	0
  5975  00208C  0100               	movlb	0	; () banked
  5976  00208E  1794               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  5977                           
  5978                           ; BSR set to: 0
  5979  002090  0100               	movlb	0	; () banked
  5980  002092  8F96               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  5981                           
  5982                           ; BSR set to: 0
  5983  002094  0EFF               	movlw	255
  5984  002096  0100               	movlb	0	; () banked
  5985  002098  1795               	andwf	___ftdiv@f2& (0+255),f,b
  5986  00209A  0EFF               	movlw	255
  5987  00209C  0100               	movlb	0	; () banked
  5988  00209E  1796               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  5989  0020A0  0E00               	movlw	0
  5990  0020A2  0100               	movlb	0	; () banked
  5991  0020A4  1797               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  5992                           
  5993                           ; BSR set to: 0
  5994  0020A6  0E18               	movlw	24
  5995  0020A8  0100               	movlb	0	; () banked
  5996  0020AA  6F9B               	movwf	___ftdiv@cntr& (0+255),b
  5997  0020AC  D000               	goto	l4262
  5998  0020AE                     l4262:
  5999                           
  6000                           ; BSR set to: 0
  6001  0020AE  0100               	movlb	0	; () banked
  6002  0020B0  90D8               	bcf	status,0,c
  6003  0020B2  379C               	rlcf	___ftdiv@f3& (0+255),f,b
  6004  0020B4  379D               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  6005  0020B6  379E               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  6006                           
  6007                           ; BSR set to: 0
  6008  0020B8  0100               	movlb	0	; () banked
  6009  0020BA  5195               	movf	___ftdiv@f2& (0+255),w,b
  6010  0020BC  0100               	movlb	0	; () banked
  6011  0020BE  5D92               	subwf	___ftdiv@f1& (0+255),w,b
  6012  0020C0  0100               	movlb	0	; () banked
  6013  0020C2  5196               	movf	(___ftdiv@f2+1)& (0+255),w,b
  6014  0020C4  0100               	movlb	0	; () banked
  6015  0020C6  5993               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  6016  0020C8  0100               	movlb	0	; () banked
  6017  0020CA  5197               	movf	(___ftdiv@f2+2)& (0+255),w,b
  6018  0020CC  0100               	movlb	0	; () banked
  6019  0020CE  5994               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  6020  0020D0  A0D8               	btfss	status,0,c
  6021  0020D2  D00E               	goto	l1020
  6022                           
  6023                           ; BSR set to: 0
  6024  0020D4  0100               	movlb	0	; () banked
  6025  0020D6  5195               	movf	___ftdiv@f2& (0+255),w,b
  6026  0020D8  0100               	movlb	0	; () banked
  6027  0020DA  5F92               	subwf	___ftdiv@f1& (0+255),f,b
  6028  0020DC  0100               	movlb	0	; () banked
  6029  0020DE  5196               	movf	(___ftdiv@f2+1)& (0+255),w,b
  6030  0020E0  0100               	movlb	0	; () banked
  6031  0020E2  5B93               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  6032  0020E4  0100               	movlb	0	; () banked
  6033  0020E6  5197               	movf	(___ftdiv@f2+2)& (0+255),w,b
  6034  0020E8  0100               	movlb	0	; () banked
  6035  0020EA  5B94               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  6036                           
  6037                           ; BSR set to: 0
  6038  0020EC  0100               	movlb	0	; () banked
  6039  0020EE  819C               	bsf	___ftdiv@f3& (0+255),0,b
  6040  0020F0                     l1020:
  6041                           
  6042                           ; BSR set to: 0
  6043  0020F0  0100               	movlb	0	; () banked
  6044  0020F2  90D8               	bcf	status,0,c
  6045  0020F4  3792               	rlcf	___ftdiv@f1& (0+255),f,b
  6046  0020F6  3793               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  6047  0020F8  3794               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  6048                           
  6049                           ; BSR set to: 0
  6050  0020FA  0100               	movlb	0	; () banked
  6051  0020FC  2F9B               	decfsz	___ftdiv@cntr& (0+255),f,b
  6052  0020FE  D7D7               	goto	l4262
  6053  002100  D000               	goto	l4272
  6054  002102                     l4272:
  6055                           
  6056                           ; BSR set to: 0
  6057  002102  C09C  F060         	movff	___ftdiv@f3,___ftpack@arg
  6058  002106  C09D  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  6059  00210A  C09E  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  6060  00210E  C09F  F063         	movff	___ftdiv@exp,___ftpack@exp
  6061  002112  C0A0  F064         	movff	___ftdiv@sign,___ftpack@sign
  6062  002116  ECC3  F011         	call	___ftpack	;wreg free
  6063  00211A  C060  F092         	movff	?___ftpack,?___ftdiv
  6064  00211E  C061  F093         	movff	?___ftpack+1,?___ftdiv+1
  6065  002122  C062  F094         	movff	?___ftpack+2,?___ftdiv+2
  6066  002126  D000               	goto	l1017
  6067  002128                     l1017:
  6068  002128  0012               	return		;funcret
  6069  00212A                     __end_of___ftdiv:
  6070                           	opt stack 0
  6071                           tblptru	equ	0xFF8
  6072                           tblptrh	equ	0xFF7
  6073                           tblptrl	equ	0xFF6
  6074                           tablat	equ	0xFF5
  6075                           postinc0	equ	0xFEE
  6076                           wreg	equ	0xFE8
  6077                           postinc1	equ	0xFE6
  6078                           postdec1	equ	0xFE5
  6079                           fsr1h	equ	0xFE2
  6080                           fsr1l	equ	0xFE1
  6081                           postinc2	equ	0xFDE
  6082                           postdec2	equ	0xFDD
  6083                           fsr2h	equ	0xFDA
  6084                           fsr2l	equ	0xFD9
  6085                           status	equ	0xFD8
  6086                           
  6087 ;; *************** function _init_system *****************
  6088 ;; Defined at:
  6089 ;;		line 22 in file "system.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;		None
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;		None
  6094 ;; Return value:  Size  Location     Type
  6095 ;;		None               void
  6096 ;; Registers used:
  6097 ;;		wreg, status,2, cstack
  6098 ;; Tracked objects:
  6099 ;;		On entry : 0/0
  6100 ;;		On exit  : 0/0
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6103 ;;      Params:         0       0       0       0
  6104 ;;      Locals:         0       0       0       0
  6105 ;;      Temps:          0       0       0       0
  6106 ;;      Totals:         0       0       0       0
  6107 ;;Total ram usage:        0 bytes
  6108 ;; Hardware stack levels used:    1
  6109 ;; Hardware stack levels required when called:    8
  6110 ;; This function calls:
  6111 ;;		_ConfigInterrupt
  6112 ;;		_ConfigPorts
  6113 ;;		_config_QEI
  6114 ;;		_config_pwm
  6115 ;;		_config_uart
  6116 ;;		_init_capteur
  6117 ;;		_init_timer_0
  6118 ;;		_init_uart_logiciel
  6119 ;;		_init_uart_reception
  6120 ;;		_reglage_PID
  6121 ;; This function is called by:
  6122 ;;		_main
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126                           	psect	text20
  6127  0037A2                     __ptext20:
  6128                           	opt stack 0
  6129  0037A2                     _init_system:
  6130                           	opt stack 22
  6131                           
  6132                           ;system.c: 25: ConfigPorts();
  6133                           
  6134                           ;incstack = 0
  6135  0037A2  EC46  F017         	call	_ConfigPorts	;wreg free
  6136                           
  6137                           ;system.c: 26: ConfigInterrupt();
  6138  0037A6  EC8D  F017         	call	_ConfigInterrupt	;wreg free
  6139                           
  6140                           ;system.c: 27: init_timer_0();
  6141  0037AA  EC45  F01C         	call	_init_timer_0	;wreg free
  6142                           
  6143                           ;system.c: 28: init_uart_logiciel();
  6144  0037AE  EC5A  F01C         	call	_init_uart_logiciel	;wreg free
  6145                           
  6146                           ;system.c: 29: init_uart_reception();
  6147  0037B2  EC50  F01C         	call	_init_uart_reception	;wreg free
  6148                           
  6149                           ;system.c: 30: config_uart ();
  6150  0037B6  EC2B  F01C         	call	_config_uart	;wreg free
  6151                           
  6152                           ;system.c: 31: config_pwm();
  6153  0037BA  ECA5  F01A         	call	_config_pwm	;wreg free
  6154                           
  6155                           ;system.c: 32: config_QEI();
  6156  0037BE  ECDD  F019         	call	_config_QEI	;wreg free
  6157                           
  6158                           ;system.c: 33: reglage_PID();
  6159  0037C2  EC6B  F01B         	call	_reglage_PID	;wreg free
  6160                           
  6161                           ;system.c: 35: init_capteur();
  6162  0037C6  EC10  F016         	call	_init_capteur	;wreg free
  6163  0037CA  0012               	return		;funcret
  6164  0037CC                     __end_of_init_system:
  6165                           	opt stack 0
  6166                           tblptru	equ	0xFF8
  6167                           tblptrh	equ	0xFF7
  6168                           tblptrl	equ	0xFF6
  6169                           tablat	equ	0xFF5
  6170                           postinc0	equ	0xFEE
  6171                           wreg	equ	0xFE8
  6172                           postinc1	equ	0xFE6
  6173                           postdec1	equ	0xFE5
  6174                           fsr1h	equ	0xFE2
  6175                           fsr1l	equ	0xFE1
  6176                           postinc2	equ	0xFDE
  6177                           postdec2	equ	0xFDD
  6178                           fsr2h	equ	0xFDA
  6179                           fsr2l	equ	0xFD9
  6180                           status	equ	0xFD8
  6181                           
  6182 ;; *************** function _reglage_PID *****************
  6183 ;; Defined at:
  6184 ;;		line 64 in file "asserv.c"
  6185 ;; Parameters:    Size  Location     Type
  6186 ;;		None
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;		None
  6189 ;; Return value:  Size  Location     Type
  6190 ;;		None               void
  6191 ;; Registers used:
  6192 ;;		wreg, status,2
  6193 ;; Tracked objects:
  6194 ;;		On entry : 0/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6198 ;;      Params:         0       0       0       0
  6199 ;;      Locals:         0       0       0       0
  6200 ;;      Temps:          0       0       0       0
  6201 ;;      Totals:         0       0       0       0
  6202 ;;Total ram usage:        0 bytes
  6203 ;; Hardware stack levels used:    1
  6204 ;; Hardware stack levels required when called:    6
  6205 ;; This function calls:
  6206 ;;		Nothing
  6207 ;; This function is called by:
  6208 ;;		_init_system
  6209 ;; This function uses a non-reentrant model
  6210 ;;
  6211                           
  6212                           	psect	text21
  6213  0036D6                     __ptext21:
  6214                           	opt stack 0
  6215  0036D6                     _reglage_PID:
  6216                           	opt stack 23
  6217                           
  6218                           ;asserv.c: 67: PID.KP = 0.;
  6219                           
  6220                           ;incstack = 0
  6221  0036D6  0E00               	movlw	0
  6222  0036D8  0101               	movlb	1	; () banked
  6223  0036DA  6F00               	movwf	_PID& (0+255),b
  6224  0036DC  0E00               	movlw	0
  6225  0036DE  0101               	movlb	1	; () banked
  6226  0036E0  6F01               	movwf	(_PID+1)& (0+255),b
  6227  0036E2  0E00               	movlw	0
  6228  0036E4  0101               	movlb	1	; () banked
  6229  0036E6  6F02               	movwf	(_PID+2)& (0+255),b
  6230                           
  6231                           ;asserv.c: 68: PID.KI = 10.;
  6232  0036E8  0E00               	movlw	0
  6233  0036EA  0101               	movlb	1	; () banked
  6234  0036EC  6F03               	movwf	(_PID+3)& (0+255),b
  6235  0036EE  0E20               	movlw	32
  6236  0036F0  0101               	movlb	1	; () banked
  6237  0036F2  6F04               	movwf	(_PID+4)& (0+255),b
  6238  0036F4  0E41               	movlw	65
  6239  0036F6  0101               	movlb	1	; () banked
  6240  0036F8  6F05               	movwf	(_PID+5)& (0+255),b
  6241                           
  6242                           ;asserv.c: 69: PID.KD = 0.;
  6243  0036FA  0E00               	movlw	0
  6244  0036FC  0101               	movlb	1	; () banked
  6245  0036FE  6F06               	movwf	(_PID+6)& (0+255),b
  6246  003700  0E00               	movlw	0
  6247  003702  0101               	movlb	1	; () banked
  6248  003704  6F07               	movwf	(_PID+7)& (0+255),b
  6249  003706  0E00               	movlw	0
  6250  003708  0101               	movlb	1	; () banked
  6251  00370A  6F08               	movwf	(_PID+8)& (0+255),b
  6252                           
  6253                           ; BSR set to: 1
  6254  00370C  0012               	return		;funcret
  6255  00370E                     __end_of_reglage_PID:
  6256                           	opt stack 0
  6257                           tblptru	equ	0xFF8
  6258                           tblptrh	equ	0xFF7
  6259                           tblptrl	equ	0xFF6
  6260                           tablat	equ	0xFF5
  6261                           postinc0	equ	0xFEE
  6262                           wreg	equ	0xFE8
  6263                           postinc1	equ	0xFE6
  6264                           postdec1	equ	0xFE5
  6265                           fsr1h	equ	0xFE2
  6266                           fsr1l	equ	0xFE1
  6267                           postinc2	equ	0xFDE
  6268                           postdec2	equ	0xFDD
  6269                           fsr2h	equ	0xFDA
  6270                           fsr2l	equ	0xFD9
  6271                           status	equ	0xFD8
  6272                           
  6273 ;; *************** function _init_uart_reception *****************
  6274 ;; Defined at:
  6275 ;;		line 72 in file "uart.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;		None
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;		None
  6280 ;; Return value:  Size  Location     Type
  6281 ;;		None               void
  6282 ;; Registers used:
  6283 ;;		wreg, status,2
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6289 ;;      Params:         0       0       0       0
  6290 ;;      Locals:         0       0       0       0
  6291 ;;      Temps:          0       0       0       0
  6292 ;;      Totals:         0       0       0       0
  6293 ;;Total ram usage:        0 bytes
  6294 ;; Hardware stack levels used:    1
  6295 ;; Hardware stack levels required when called:    6
  6296 ;; This function calls:
  6297 ;;		Nothing
  6298 ;; This function is called by:
  6299 ;;		_init_system
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text22
  6304  0038A0                     __ptext22:
  6305                           	opt stack 0
  6306  0038A0                     _init_uart_reception:
  6307                           	opt stack 23
  6308                           
  6309                           ;uart.c: 74: uart_reception.buffer_plein = 0;
  6310                           
  6311                           ; BSR set to: 1
  6312                           ;incstack = 0
  6313  0038A0  0E00               	movlw	0
  6314  0038A2  0101               	movlb	1	; () banked
  6315  0038A4  6F74               	movwf	(_uart_reception+101)& (0+255),b
  6316                           
  6317                           ;uart.c: 75: uart_reception.buffer_vide = 1;
  6318  0038A6  0E01               	movlw	1
  6319  0038A8  0101               	movlb	1	; () banked
  6320  0038AA  6F75               	movwf	(_uart_reception+102)& (0+255),b
  6321                           
  6322                           ;uart.c: 76: uart_reception.indice = 0;
  6323  0038AC  0E00               	movlw	0
  6324  0038AE  0101               	movlb	1	; () banked
  6325  0038B0  6F73               	movwf	(_uart_reception+100)& (0+255),b
  6326                           
  6327                           ; BSR set to: 1
  6328  0038B2  0012               	return		;funcret
  6329  0038B4                     __end_of_init_uart_reception:
  6330                           	opt stack 0
  6331                           tblptru	equ	0xFF8
  6332                           tblptrh	equ	0xFF7
  6333                           tblptrl	equ	0xFF6
  6334                           tablat	equ	0xFF5
  6335                           postinc0	equ	0xFEE
  6336                           wreg	equ	0xFE8
  6337                           postinc1	equ	0xFE6
  6338                           postdec1	equ	0xFE5
  6339                           fsr1h	equ	0xFE2
  6340                           fsr1l	equ	0xFE1
  6341                           postinc2	equ	0xFDE
  6342                           postdec2	equ	0xFDD
  6343                           fsr2h	equ	0xFDA
  6344                           fsr2l	equ	0xFD9
  6345                           status	equ	0xFD8
  6346                           
  6347 ;; *************** function _init_uart_logiciel *****************
  6348 ;; Defined at:
  6349 ;;		line 65 in file "uart.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;		None
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;		None
  6354 ;; Return value:  Size  Location     Type
  6355 ;;		None               void
  6356 ;; Registers used:
  6357 ;;		wreg, status,2, cstack
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6363 ;;      Params:         0       0       0       0
  6364 ;;      Locals:         0       0       0       0
  6365 ;;      Temps:          0       0       0       0
  6366 ;;      Totals:         0       0       0       0
  6367 ;;Total ram usage:        0 bytes
  6368 ;; Hardware stack levels used:    1
  6369 ;; Hardware stack levels required when called:    7
  6370 ;; This function calls:
  6371 ;;		_init_timer_1
  6372 ;; This function is called by:
  6373 ;;		_init_system
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           	psect	text23
  6378  0038B4                     __ptext23:
  6379                           	opt stack 0
  6380  0038B4                     _init_uart_logiciel:
  6381                           	opt stack 22
  6382                           
  6383                           ;uart.c: 67: uart_logiciel.transmission_en_cours = 0;
  6384                           
  6385                           ; BSR set to: 1
  6386                           ;incstack = 0
  6387  0038B4  0E00               	movlw	0
  6388  0038B6  6E47               	movwf	_uart_logiciel+11,c
  6389                           
  6390                           ;uart.c: 68: uart_logiciel.indice = 0;
  6391  0038B8  0E00               	movlw	0
  6392  0038BA  6E48               	movwf	_uart_logiciel+12,c
  6393                           
  6394                           ;uart.c: 69: init_timer_1();
  6395  0038BC  EC39  F01C         	call	_init_timer_1	;wreg free
  6396  0038C0  0012               	return		;funcret
  6397  0038C2                     __end_of_init_uart_logiciel:
  6398                           	opt stack 0
  6399                           tblptru	equ	0xFF8
  6400                           tblptrh	equ	0xFF7
  6401                           tblptrl	equ	0xFF6
  6402                           tablat	equ	0xFF5
  6403                           postinc0	equ	0xFEE
  6404                           wreg	equ	0xFE8
  6405                           postinc1	equ	0xFE6
  6406                           postdec1	equ	0xFE5
  6407                           fsr1h	equ	0xFE2
  6408                           fsr1l	equ	0xFE1
  6409                           postinc2	equ	0xFDE
  6410                           postdec2	equ	0xFDD
  6411                           fsr2h	equ	0xFDA
  6412                           fsr2l	equ	0xFD9
  6413                           status	equ	0xFD8
  6414                           
  6415 ;; *************** function _init_timer_1 *****************
  6416 ;; Defined at:
  6417 ;;		line 57 in file "system.c"
  6418 ;; Parameters:    Size  Location     Type
  6419 ;;		None
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;		None
  6422 ;; Return value:  Size  Location     Type
  6423 ;;		None               void
  6424 ;; Registers used:
  6425 ;;		wreg, status,2
  6426 ;; Tracked objects:
  6427 ;;		On entry : 0/0
  6428 ;;		On exit  : 0/0
  6429 ;;		Unchanged: 0/0
  6430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6431 ;;      Params:         0       0       0       0
  6432 ;;      Locals:         0       0       0       0
  6433 ;;      Temps:          0       0       0       0
  6434 ;;      Totals:         0       0       0       0
  6435 ;;Total ram usage:        0 bytes
  6436 ;; Hardware stack levels used:    1
  6437 ;; Hardware stack levels required when called:    6
  6438 ;; This function calls:
  6439 ;;		Nothing
  6440 ;; This function is called by:
  6441 ;;		_init_uart_logiciel
  6442 ;; This function uses a non-reentrant model
  6443 ;;
  6444                           
  6445                           	psect	text24
  6446  003872                     __ptext24:
  6447                           	opt stack 0
  6448  003872                     _init_timer_1:
  6449                           	opt stack 22
  6450                           
  6451                           ;system.c: 59: T1CONbits.RD16 = 1;
  6452                           
  6453                           ;incstack = 0
  6454  003872  8ECD               	bsf	4045,7,c	;volatile
  6455                           
  6456                           ;system.c: 60: T1CONbits.T1RUN = 0;
  6457  003874  9CCD               	bcf	4045,6,c	;volatile
  6458                           
  6459                           ;system.c: 61: T1CONbits.TMR1CS = 0;
  6460  003876  92CD               	bcf	4045,1,c	;volatile
  6461                           
  6462                           ;system.c: 62: T1CONbits.T1OSCEN = 1;
  6463  003878  86CD               	bsf	4045,3,c	;volatile
  6464                           
  6465                           ;system.c: 63: T1CONbits.T1CKPS0 = 0;
  6466  00387A  98CD               	bcf	4045,4,c	;volatile
  6467                           
  6468                           ;system.c: 64: T1CONbits.T1CKPS1 = 0;
  6469  00387C  9ACD               	bcf	4045,5,c	;volatile
  6470                           
  6471                           ;system.c: 66: TMR1 = 65519;
  6472  00387E  0EFF               	movlw	255
  6473  003880  6ECF               	movwf	4047,c	;volatile
  6474  003882  0EEF               	movlw	239
  6475  003884  6ECE               	movwf	4046,c	;volatile
  6476                           
  6477                           ;system.c: 69: TMR1ON = 1;
  6478  003886  80CD               	bsf	4045,0,c	;volatile
  6479  003888  0012               	return		;funcret
  6480  00388A                     __end_of_init_timer_1:
  6481                           	opt stack 0
  6482                           tblptru	equ	0xFF8
  6483                           tblptrh	equ	0xFF7
  6484                           tblptrl	equ	0xFF6
  6485                           tablat	equ	0xFF5
  6486                           postinc0	equ	0xFEE
  6487                           wreg	equ	0xFE8
  6488                           postinc1	equ	0xFE6
  6489                           postdec1	equ	0xFE5
  6490                           fsr1h	equ	0xFE2
  6491                           fsr1l	equ	0xFE1
  6492                           postinc2	equ	0xFDE
  6493                           postdec2	equ	0xFDD
  6494                           fsr2h	equ	0xFDA
  6495                           fsr2l	equ	0xFD9
  6496                           status	equ	0xFD8
  6497                           
  6498 ;; *************** function _init_timer_0 *****************
  6499 ;; Defined at:
  6500 ;;		line 45 in file "system.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;		None
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;		None
  6505 ;; Return value:  Size  Location     Type
  6506 ;;		None               void
  6507 ;; Registers used:
  6508 ;;		wreg, status,2
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6514 ;;      Params:         0       0       0       0
  6515 ;;      Locals:         0       0       0       0
  6516 ;;      Temps:          0       0       0       0
  6517 ;;      Totals:         0       0       0       0
  6518 ;;Total ram usage:        0 bytes
  6519 ;; Hardware stack levels used:    1
  6520 ;; Hardware stack levels required when called:    6
  6521 ;; This function calls:
  6522 ;;		Nothing
  6523 ;; This function is called by:
  6524 ;;		_init_system
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text25
  6529  00388A                     __ptext25:
  6530                           	opt stack 0
  6531  00388A                     _init_timer_0:
  6532                           	opt stack 23
  6533                           
  6534                           ;system.c: 47: T0CONbits.T016BIT = 1;
  6535                           
  6536                           ;incstack = 0
  6537  00388A  8CD5               	bsf	4053,6,c	;volatile
  6538                           
  6539                           ;system.c: 48: T0CONbits.T0PS = 0b100;
  6540  00388C  50D5               	movf	4053,w,c	;volatile
  6541  00388E  0BF8               	andlw	-8
  6542  003890  0904               	iorlw	4
  6543  003892  6ED5               	movwf	4053,c	;volatile
  6544                           
  6545                           ;system.c: 49: T0CONbits.T0CS = 0;
  6546  003894  9AD5               	bcf	4053,5,c	;volatile
  6547                           
  6548                           ;system.c: 50: T0CONbits.PSA = 0;
  6549  003896  96D5               	bcf	4053,3,c	;volatile
  6550                           
  6551                           ;system.c: 52: TMR0L = 131;
  6552  003898  0E83               	movlw	131
  6553  00389A  6ED6               	movwf	4054,c	;volatile
  6554                           
  6555                           ;system.c: 54: TMR0ON = 1;
  6556  00389C  8ED5               	bsf	4053,7,c	;volatile
  6557  00389E  0012               	return		;funcret
  6558  0038A0                     __end_of_init_timer_0:
  6559                           	opt stack 0
  6560                           tblptru	equ	0xFF8
  6561                           tblptrh	equ	0xFF7
  6562                           tblptrl	equ	0xFF6
  6563                           tablat	equ	0xFF5
  6564                           postinc0	equ	0xFEE
  6565                           wreg	equ	0xFE8
  6566                           postinc1	equ	0xFE6
  6567                           postdec1	equ	0xFE5
  6568                           fsr1h	equ	0xFE2
  6569                           fsr1l	equ	0xFE1
  6570                           postinc2	equ	0xFDE
  6571                           postdec2	equ	0xFDD
  6572                           fsr2h	equ	0xFDA
  6573                           fsr2l	equ	0xFD9
  6574                           status	equ	0xFD8
  6575                           
  6576 ;; *************** function _init_capteur *****************
  6577 ;; Defined at:
  6578 ;;		line 148 in file "moteur.c"
  6579 ;; Parameters:    Size  Location     Type
  6580 ;;		None
  6581 ;; Auto vars:     Size  Location     Type
  6582 ;;		None
  6583 ;; Return value:  Size  Location     Type
  6584 ;;		None               void
  6585 ;; Registers used:
  6586 ;;		wreg, status,2
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/0
  6589 ;;		On exit  : 0/0
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6592 ;;      Params:         0       0       0       0
  6593 ;;      Locals:         0       0       0       0
  6594 ;;      Temps:          0       0       0       0
  6595 ;;      Totals:         0       0       0       0
  6596 ;;Total ram usage:        0 bytes
  6597 ;; Hardware stack levels used:    1
  6598 ;; Hardware stack levels required when called:    6
  6599 ;; This function calls:
  6600 ;;		Nothing
  6601 ;; This function is called by:
  6602 ;;		_init_system
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606                           	psect	text26
  6607  002C20                     __ptext26:
  6608                           	opt stack 0
  6609  002C20                     _init_capteur:
  6610                           	opt stack 23
  6611                           
  6612                           ;moteur.c: 150: capteur.angle[0] = 0.;
  6613                           
  6614                           ;incstack = 0
  6615  002C20  0E00               	movlw	0
  6616  002C22  0100               	movlb	0	; () banked
  6617  002C24  6FDB               	movwf	(_capteur+3)& (0+255),b
  6618  002C26  0E00               	movlw	0
  6619  002C28  0100               	movlb	0	; () banked
  6620  002C2A  6FDC               	movwf	(_capteur+4)& (0+255),b
  6621  002C2C  0E00               	movlw	0
  6622  002C2E  0100               	movlb	0	; () banked
  6623  002C30  6FDD               	movwf	(_capteur+5)& (0+255),b
  6624                           
  6625                           ;moteur.c: 151: capteur.angle[1] = 0.;
  6626  002C32  0E00               	movlw	0
  6627  002C34  0100               	movlb	0	; () banked
  6628  002C36  6FDE               	movwf	(_capteur+6)& (0+255),b
  6629  002C38  0E00               	movlw	0
  6630  002C3A  0100               	movlb	0	; () banked
  6631  002C3C  6FDF               	movwf	(_capteur+7)& (0+255),b
  6632  002C3E  0E00               	movlw	0
  6633  002C40  0100               	movlb	0	; () banked
  6634  002C42  6FE0               	movwf	(_capteur+8)& (0+255),b
  6635                           
  6636                           ;moteur.c: 152: capteur.angle[2] = 0.;
  6637  002C44  0E00               	movlw	0
  6638  002C46  0100               	movlb	0	; () banked
  6639  002C48  6FE1               	movwf	(_capteur+9)& (0+255),b
  6640  002C4A  0E00               	movlw	0
  6641  002C4C  0100               	movlb	0	; () banked
  6642  002C4E  6FE2               	movwf	(_capteur+10)& (0+255),b
  6643  002C50  0E00               	movlw	0
  6644  002C52  0100               	movlb	0	; () banked
  6645  002C54  6FE3               	movwf	(_capteur+11)& (0+255),b
  6646                           
  6647                           ;moteur.c: 153: capteur.ancien_angle[0] = 0.;
  6648  002C56  0E00               	movlw	0
  6649  002C58  0100               	movlb	0	; () banked
  6650  002C5A  6FE4               	movwf	(_capteur+12)& (0+255),b
  6651  002C5C  0E00               	movlw	0
  6652  002C5E  0100               	movlb	0	; () banked
  6653  002C60  6FE5               	movwf	(_capteur+13)& (0+255),b
  6654  002C62  0E00               	movlw	0
  6655  002C64  0100               	movlb	0	; () banked
  6656  002C66  6FE6               	movwf	(_capteur+14)& (0+255),b
  6657                           
  6658                           ;moteur.c: 154: capteur.ancien_angle[1] = 0.;
  6659  002C68  0E00               	movlw	0
  6660  002C6A  0100               	movlb	0	; () banked
  6661  002C6C  6FE7               	movwf	(_capteur+15)& (0+255),b
  6662  002C6E  0E00               	movlw	0
  6663  002C70  0100               	movlb	0	; () banked
  6664  002C72  6FE8               	movwf	(_capteur+16)& (0+255),b
  6665  002C74  0E00               	movlw	0
  6666  002C76  0100               	movlb	0	; () banked
  6667  002C78  6FE9               	movwf	(_capteur+17)& (0+255),b
  6668                           
  6669                           ;moteur.c: 155: capteur.ancien_angle[2] = 0.;
  6670  002C7A  0E00               	movlw	0
  6671  002C7C  0100               	movlb	0	; () banked
  6672  002C7E  6FEA               	movwf	(_capteur+18)& (0+255),b
  6673  002C80  0E00               	movlw	0
  6674  002C82  0100               	movlb	0	; () banked
  6675  002C84  6FEB               	movwf	(_capteur+19)& (0+255),b
  6676  002C86  0E00               	movlw	0
  6677  002C88  0100               	movlb	0	; () banked
  6678  002C8A  6FEC               	movwf	(_capteur+20)& (0+255),b
  6679                           
  6680                           ;moteur.c: 156: capteur.flag_capteur = 0;
  6681  002C8C  0E00               	movlw	0
  6682  002C8E  0100               	movlb	0	; () banked
  6683  002C90  6FDA               	movwf	(_capteur+2)& (0+255),b
  6684                           
  6685                           ;moteur.c: 157: capteur.indice = 0;
  6686  002C92  0E00               	movlw	0
  6687  002C94  0100               	movlb	0	; () banked
  6688  002C96  6FF3               	movwf	(_capteur+27)& (0+255),b
  6689                           
  6690                           ;moteur.c: 158: capteur.position[0] = 0;
  6691  002C98  0E00               	movlw	0
  6692  002C9A  0100               	movlb	0	; () banked
  6693  002C9C  6FEE               	movwf	(_capteur+22)& (0+255),b
  6694  002C9E  0E00               	movlw	0
  6695  002CA0  6FED               	movwf	(_capteur+21)& (0+255),b
  6696                           
  6697                           ;moteur.c: 159: capteur.position[1] = 0;
  6698  002CA2  0E00               	movlw	0
  6699  002CA4  0100               	movlb	0	; () banked
  6700  002CA6  6FF0               	movwf	(_capteur+24)& (0+255),b
  6701  002CA8  0E00               	movlw	0
  6702  002CAA  6FEF               	movwf	(_capteur+23)& (0+255),b
  6703                           
  6704                           ;moteur.c: 160: capteur.position[2] = 0;
  6705  002CAC  0E00               	movlw	0
  6706  002CAE  0100               	movlb	0	; () banked
  6707  002CB0  6FF2               	movwf	(_capteur+26)& (0+255),b
  6708  002CB2  0E00               	movlw	0
  6709  002CB4  6FF1               	movwf	(_capteur+25)& (0+255),b
  6710                           
  6711                           ;moteur.c: 161: capteur.synchro_debut_tour = 0;
  6712  002CB6  0E00               	movlw	0
  6713  002CB8  0100               	movlb	0	; () banked
  6714  002CBA  6FD9               	movwf	(_capteur+1)& (0+255),b
  6715                           
  6716                           ;moteur.c: 162: capteur.tour_en_cours = 0;
  6717  002CBC  0E00               	movlw	0
  6718  002CBE  0100               	movlb	0	; () banked
  6719  002CC0  6FD8               	movwf	_capteur& (0+255),b
  6720                           
  6721                           ;moteur.c: 163: capteur.id_balise_mere = 0;
  6722  002CC2  0E00               	movlw	0
  6723  002CC4  0100               	movlb	0	; () banked
  6724  002CC6  6FF4               	movwf	(_capteur+28)& (0+255),b
  6725                           
  6726                           ; BSR set to: 0
  6727  002CC8  0012               	return		;funcret
  6728  002CCA                     __end_of_init_capteur:
  6729                           	opt stack 0
  6730                           tblptru	equ	0xFF8
  6731                           tblptrh	equ	0xFF7
  6732                           tblptrl	equ	0xFF6
  6733                           tablat	equ	0xFF5
  6734                           postinc0	equ	0xFEE
  6735                           wreg	equ	0xFE8
  6736                           postinc1	equ	0xFE6
  6737                           postdec1	equ	0xFE5
  6738                           fsr1h	equ	0xFE2
  6739                           fsr1l	equ	0xFE1
  6740                           postinc2	equ	0xFDE
  6741                           postdec2	equ	0xFDD
  6742                           fsr2h	equ	0xFDA
  6743                           fsr2l	equ	0xFD9
  6744                           status	equ	0xFD8
  6745                           
  6746 ;; *************** function _config_uart *****************
  6747 ;; Defined at:
  6748 ;;		line 31 in file "uart.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;		None
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;		None
  6753 ;; Return value:  Size  Location     Type
  6754 ;;		None               void
  6755 ;; Registers used:
  6756 ;;		wreg, status,2
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6762 ;;      Params:         0       0       0       0
  6763 ;;      Locals:         0       0       0       0
  6764 ;;      Temps:          0       0       0       0
  6765 ;;      Totals:         0       0       0       0
  6766 ;;Total ram usage:        0 bytes
  6767 ;; Hardware stack levels used:    1
  6768 ;; Hardware stack levels required when called:    6
  6769 ;; This function calls:
  6770 ;;		Nothing
  6771 ;; This function is called by:
  6772 ;;		_init_system
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           	psect	text27
  6777  003856                     __ptext27:
  6778                           	opt stack 0
  6779  003856                     _config_uart:
  6780                           	opt stack 23
  6781                           
  6782                           ;uart.c: 39: TXSTAbits.TXEN = 1;
  6783                           
  6784                           ; BSR set to: 0
  6785                           ;incstack = 0
  6786  003856  8AAC               	bsf	4012,5,c	;volatile
  6787                           
  6788                           ;uart.c: 40: TXSTAbits.TX9 = 0;
  6789  003858  9CAC               	bcf	4012,6,c	;volatile
  6790                           
  6791                           ;uart.c: 41: TXSTAbits.SYNC = 0;
  6792  00385A  98AC               	bcf	4012,4,c	;volatile
  6793                           
  6794                           ;uart.c: 42: TXSTAbits.SENDB = 0;
  6795  00385C  96AC               	bcf	4012,3,c	;volatile
  6796                           
  6797                           ;uart.c: 43: TXSTAbits.BRGH = 1;
  6798  00385E  84AC               	bsf	4012,2,c	;volatile
  6799                           
  6800                           ;uart.c: 44: TXSTAbits.TX9 = 0;
  6801  003860  9CAC               	bcf	4012,6,c	;volatile
  6802                           
  6803                           ;uart.c: 47: BAUDCONbits.BRG16 = 1;
  6804  003862  86AA               	bsf	4010,3,c	;volatile
  6805                           
  6806                           ;uart.c: 49: BAUDCONbits.ABDEN = 0;
  6807  003864  90AA               	bcf	4010,0,c	;volatile
  6808                           
  6809                           ;uart.c: 52: SPBRG = 86;
  6810  003866  0E56               	movlw	86
  6811  003868  6EAF               	movwf	4015,c	;volatile
  6812                           
  6813                           ;uart.c: 59: RCSTAbits.SPEN = 1;
  6814  00386A  8EAB               	bsf	4011,7,c	;volatile
  6815                           
  6816                           ;uart.c: 60: RCSTAbits.RX9 = 0;
  6817  00386C  9CAB               	bcf	4011,6,c	;volatile
  6818                           
  6819                           ;uart.c: 61: RCSTAbits.CREN = 1;
  6820  00386E  88AB               	bsf	4011,4,c	;volatile
  6821  003870  0012               	return		;funcret
  6822  003872                     __end_of_config_uart:
  6823                           	opt stack 0
  6824                           tblptru	equ	0xFF8
  6825                           tblptrh	equ	0xFF7
  6826                           tblptrl	equ	0xFF6
  6827                           tablat	equ	0xFF5
  6828                           postinc0	equ	0xFEE
  6829                           wreg	equ	0xFE8
  6830                           postinc1	equ	0xFE6
  6831                           postdec1	equ	0xFE5
  6832                           fsr1h	equ	0xFE2
  6833                           fsr1l	equ	0xFE1
  6834                           postinc2	equ	0xFDE
  6835                           postdec2	equ	0xFDD
  6836                           fsr2h	equ	0xFDA
  6837                           fsr2l	equ	0xFD9
  6838                           status	equ	0xFD8
  6839                           
  6840 ;; *************** function _config_pwm *****************
  6841 ;; Defined at:
  6842 ;;		line 27 in file "moteur.c"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;		None
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;		None
  6847 ;; Return value:  Size  Location     Type
  6848 ;;		None               void
  6849 ;; Registers used:
  6850 ;;		wreg, status,2
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6856 ;;      Params:         0       0       0       0
  6857 ;;      Locals:         0       0       0       0
  6858 ;;      Temps:          0       0       0       0
  6859 ;;      Totals:         0       0       0       0
  6860 ;;Total ram usage:        0 bytes
  6861 ;; Hardware stack levels used:    1
  6862 ;; Hardware stack levels required when called:    6
  6863 ;; This function calls:
  6864 ;;		Nothing
  6865 ;; This function is called by:
  6866 ;;		_init_system
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           	psect	text28
  6871  00354A                     __ptext28:
  6872                           	opt stack 0
  6873  00354A                     _config_pwm:
  6874                           	opt stack 23
  6875                           
  6876                           ;moteur.c: 29: PTCON0bits.PTOPS = 0;
  6877                           
  6878                           ;incstack = 0
  6879  00354A  987F               	bcf	3967,4,c	;volatile
  6880  00354C  9A7F               	bcf	3967,5,c	;volatile
  6881  00354E  9C7F               	bcf	3967,6,c	;volatile
  6882  003550  9E7F               	bcf	3967,7,c	;volatile
  6883                           
  6884                           ;moteur.c: 30: PTCON0bits.PTCKPS = 0;
  6885  003552  0EF3               	movlw	-13
  6886  003554  167F               	andwf	3967,f,c	;volatile
  6887                           
  6888                           ;moteur.c: 31: PTCON0bits.PTMOD = 0;
  6889  003556  0EFC               	movlw	-4
  6890  003558  167F               	andwf	3967,f,c	;volatile
  6891                           
  6892                           ;moteur.c: 33: PTCON1bits.PTEN = 1;
  6893  00355A  8E7E               	bsf	3966,7,c	;volatile
  6894                           
  6895                           ;moteur.c: 35: PWMCON0bits.PMOD0 = 1;
  6896  00355C  806F               	bsf	3951,0,c	;volatile
  6897                           
  6898                           ;moteur.c: 36: PWMCON0bits.PWMEN = 0b001;
  6899  00355E  506F               	movf	3951,w,c	;volatile
  6900  003560  0B8F               	andlw	-113
  6901  003562  0910               	iorlw	16
  6902  003564  6E6F               	movwf	3951,c	;volatile
  6903                           
  6904                           ;moteur.c: 38: PWMCON1bits.UDIS = 0;
  6905  003566  926E               	bcf	3950,1,c	;volatile
  6906                           
  6907                           ;moteur.c: 40: PTPERL = 166;
  6908  003568  0EA6               	movlw	166
  6909  00356A  6E7B               	movwf	3963,c	;volatile
  6910                           
  6911                           ;moteur.c: 41: PTPERH = 0;
  6912  00356C  0E00               	movlw	0
  6913  00356E  6E7A               	movwf	3962,c	;volatile
  6914                           
  6915                           ;moteur.c: 44: PDC0L = 0;
  6916  003570  0E00               	movlw	0
  6917  003572  6E79               	movwf	3961,c	;volatile
  6918                           
  6919                           ;moteur.c: 45: PDC0H = 0;
  6920  003574  0E00               	movlw	0
  6921  003576  6E78               	movwf	3960,c	;volatile
  6922                           
  6923                           ;moteur.c: 46: PDC1L = 0;
  6924  003578  0E00               	movlw	0
  6925  00357A  6E77               	movwf	3959,c	;volatile
  6926                           
  6927                           ;moteur.c: 47: PDC1H = 0;
  6928  00357C  0E00               	movlw	0
  6929  00357E  6E76               	movwf	3958,c	;volatile
  6930                           
  6931                           ;moteur.c: 48: PDC2L = 0;
  6932  003580  0E00               	movlw	0
  6933  003582  6E75               	movwf	3957,c	;volatile
  6934                           
  6935                           ;moteur.c: 49: PDC2H = 0;
  6936  003584  0E00               	movlw	0
  6937  003586  6E74               	movwf	3956,c	;volatile
  6938                           
  6939                           ;moteur.c: 50: PDC3L = 0;
  6940  003588  0E00               	movlw	0
  6941  00358A  6E73               	movwf	3955,c	;volatile
  6942                           
  6943                           ;moteur.c: 51: PDC3H = 0;
  6944  00358C  0E00               	movlw	0
  6945  00358E  6E72               	movwf	3954,c	;volatile
  6946  003590  0012               	return		;funcret
  6947  003592                     __end_of_config_pwm:
  6948                           	opt stack 0
  6949                           tblptru	equ	0xFF8
  6950                           tblptrh	equ	0xFF7
  6951                           tblptrl	equ	0xFF6
  6952                           tablat	equ	0xFF5
  6953                           postinc0	equ	0xFEE
  6954                           wreg	equ	0xFE8
  6955                           postinc1	equ	0xFE6
  6956                           postdec1	equ	0xFE5
  6957                           fsr1h	equ	0xFE2
  6958                           fsr1l	equ	0xFE1
  6959                           postinc2	equ	0xFDE
  6960                           postdec2	equ	0xFDD
  6961                           fsr2h	equ	0xFDA
  6962                           fsr2l	equ	0xFD9
  6963                           status	equ	0xFD8
  6964                           
  6965 ;; *************** function _config_QEI *****************
  6966 ;; Defined at:
  6967 ;;		line 82 in file "moteur.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;		None
  6970 ;; Auto vars:     Size  Location     Type
  6971 ;;		None
  6972 ;; Return value:  Size  Location     Type
  6973 ;;		None               void
  6974 ;; Registers used:
  6975 ;;		wreg, status,2
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  6981 ;;      Params:         0       0       0       0
  6982 ;;      Locals:         0       0       0       0
  6983 ;;      Temps:          0       0       0       0
  6984 ;;      Totals:         0       0       0       0
  6985 ;;Total ram usage:        0 bytes
  6986 ;; Hardware stack levels used:    1
  6987 ;; Hardware stack levels required when called:    6
  6988 ;; This function calls:
  6989 ;;		Nothing
  6990 ;; This function is called by:
  6991 ;;		_init_system
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           	psect	text29
  6996  0033BA                     __ptext29:
  6997                           	opt stack 0
  6998  0033BA                     _config_QEI:
  6999                           	opt stack 23
  7000                           
  7001                           ;moteur.c: 84: CAP1CONbits.CAP1REN = 1;
  7002                           
  7003                           ;incstack = 0
  7004  0033BA  8C63               	bsf	3939,6,c	;volatile
  7005                           
  7006                           ;moteur.c: 85: ANSEL0 = 0;
  7007  0033BC  0E00               	movlw	0
  7008  0033BE  6EB8               	movwf	4024,c	;volatile
  7009                           
  7010                           ;moteur.c: 88: QEICONbits.VELM = 1;
  7011  0033C0  8EB6               	bsf	4022,7,c	;volatile
  7012                           
  7013                           ;moteur.c: 89: QEICONbits.QERR = 0;
  7014  0033C2  9CB6               	bcf	4022,6,c	;volatile
  7015                           
  7016                           ;moteur.c: 90: QEICONbits.QEIM = 0b110;
  7017  0033C4  50B6               	movf	4022,w,c	;volatile
  7018  0033C6  0BE3               	andlw	-29
  7019  0033C8  0918               	iorlw	24
  7020  0033CA  6EB6               	movwf	4022,c	;volatile
  7021                           
  7022                           ;moteur.c: 91: QEICONbits.PDEC = 0b01;
  7023  0033CC  50B6               	movf	4022,w,c	;volatile
  7024  0033CE  0BFC               	andlw	-4
  7025  0033D0  0901               	iorlw	1
  7026  0033D2  6EB6               	movwf	4022,c	;volatile
  7027                           
  7028                           ;moteur.c: 96: DFLTCONbits.FLT3EN = 1;
  7029  0033D4  8A60               	bsf	3936,5,c	;volatile
  7030                           
  7031                           ;moteur.c: 97: DFLTCONbits.FLT2EN = 1;
  7032  0033D6  8860               	bsf	3936,4,c	;volatile
  7033                           
  7034                           ;moteur.c: 98: DFLTCONbits.FLTCK = 0b010;
  7035  0033D8  5060               	movf	3936,w,c	;volatile
  7036  0033DA  0BF8               	andlw	-8
  7037  0033DC  0902               	iorlw	2
  7038  0033DE  6E60               	movwf	3936,c	;volatile
  7039                           
  7040                           ;moteur.c: 100: POSCNTH = 0;
  7041  0033E0  0E00               	movlw	0
  7042  0033E2  6E67               	movwf	3943,c	;volatile
  7043                           
  7044                           ;moteur.c: 101: POSCNTL = 0;
  7045  0033E4  0E00               	movlw	0
  7046  0033E6  6E66               	movwf	3942,c	;volatile
  7047                           
  7048                           ;moteur.c: 103: MAXCNTH = (uint8_t) (((4 * 2000) - 1) / 256);
  7049  0033E8  0E1F               	movlw	31
  7050  0033EA  6E65               	movwf	3941,c	;volatile
  7051                           
  7052                           ;moteur.c: 104: MAXCNTL = (uint8_t) (((4 * 2000) - 1) % 256);
  7053  0033EC  0E3F               	movlw	63
  7054  0033EE  6E64               	movwf	3940,c	;volatile
  7055                           
  7056                           ;moteur.c: 106: position.ancien = 0;
  7057  0033F0  0E00               	movlw	0
  7058  0033F2  6E27               	movwf	_position+1,c
  7059  0033F4  0E00               	movlw	0
  7060  0033F6  6E26               	movwf	_position,c
  7061                           
  7062                           ;moteur.c: 107: position.ecart = 0;
  7063  0033F8  0E00               	movlw	0
  7064  0033FA  6E2A               	movwf	_position+4,c
  7065  0033FC  0E00               	movlw	0
  7066  0033FE  6E2B               	movwf	_position+5,c
  7067  003400  0E00               	movlw	0
  7068  003402  6E2C               	movwf	_position+6,c
  7069  003404  0E00               	movlw	0
  7070  003406  6E2D               	movwf	_position+7,c
  7071                           
  7072                           ;moteur.c: 108: position.nouvelle = 0;
  7073  003408  0E00               	movlw	0
  7074  00340A  6E29               	movwf	_position+3,c
  7075  00340C  0E00               	movlw	0
  7076  00340E  6E28               	movwf	_position+2,c
  7077  003410  0012               	return		;funcret
  7078  003412                     __end_of_config_QEI:
  7079                           	opt stack 0
  7080                           tblptru	equ	0xFF8
  7081                           tblptrh	equ	0xFF7
  7082                           tblptrl	equ	0xFF6
  7083                           tablat	equ	0xFF5
  7084                           postinc0	equ	0xFEE
  7085                           wreg	equ	0xFE8
  7086                           postinc1	equ	0xFE6
  7087                           postdec1	equ	0xFE5
  7088                           fsr1h	equ	0xFE2
  7089                           fsr1l	equ	0xFE1
  7090                           postinc2	equ	0xFDE
  7091                           postdec2	equ	0xFDD
  7092                           fsr2h	equ	0xFDA
  7093                           fsr2l	equ	0xFD9
  7094                           status	equ	0xFD8
  7095                           
  7096 ;; *************** function _ConfigPorts *****************
  7097 ;; Defined at:
  7098 ;;		line 91 in file "system.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;		None
  7101 ;; Auto vars:     Size  Location     Type
  7102 ;;		None
  7103 ;; Return value:  Size  Location     Type
  7104 ;;		None               void
  7105 ;; Registers used:
  7106 ;;		None
  7107 ;; Tracked objects:
  7108 ;;		On entry : 0/0
  7109 ;;		On exit  : 0/0
  7110 ;;		Unchanged: 0/0
  7111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7112 ;;      Params:         0       0       0       0
  7113 ;;      Locals:         0       0       0       0
  7114 ;;      Temps:          0       0       0       0
  7115 ;;      Totals:         0       0       0       0
  7116 ;;Total ram usage:        0 bytes
  7117 ;; Hardware stack levels used:    1
  7118 ;; Hardware stack levels required when called:    6
  7119 ;; This function calls:
  7120 ;;		Nothing
  7121 ;; This function is called by:
  7122 ;;		_init_system
  7123 ;; This function uses a non-reentrant model
  7124 ;;
  7125                           
  7126                           	psect	text30
  7127  002E8C                     __ptext30:
  7128                           	opt stack 0
  7129  002E8C                     _ConfigPorts:
  7130                           	opt stack 23
  7131                           
  7132                           ;system.c: 94: TRISAbits.RA0 = 0;
  7133                           
  7134                           ;incstack = 0
  7135  002E8C  9092               	bcf	3986,0,c	;volatile
  7136                           
  7137                           ;system.c: 95: TRISAbits.RA1 = 0;
  7138  002E8E  9292               	bcf	3986,1,c	;volatile
  7139                           
  7140                           ;system.c: 96: TRISAbits.RA2 = 0;
  7141  002E90  9492               	bcf	3986,2,c	;volatile
  7142                           
  7143                           ;system.c: 97: TRISAbits.RA3 = 1;
  7144  002E92  8692               	bsf	3986,3,c	;volatile
  7145                           
  7146                           ;system.c: 98: TRISAbits.RA4 = 1;
  7147  002E94  8892               	bsf	3986,4,c	;volatile
  7148                           
  7149                           ;system.c: 99: TRISAbits.RA5 = 0;
  7150  002E96  9A92               	bcf	3986,5,c	;volatile
  7151                           
  7152                           ;system.c: 100: TRISAbits.RA6 = 1;
  7153  002E98  8C92               	bsf	3986,6,c	;volatile
  7154                           
  7155                           ;system.c: 101: TRISAbits.RA7 = 1;
  7156  002E9A  8E92               	bsf	3986,7,c	;volatile
  7157                           
  7158                           ;system.c: 104: TRISBbits.RB0 = 0;
  7159  002E9C  9093               	bcf	3987,0,c	;volatile
  7160                           
  7161                           ;system.c: 105: TRISBbits.RB1 = 0;
  7162  002E9E  9293               	bcf	3987,1,c	;volatile
  7163                           
  7164                           ;system.c: 106: TRISBbits.RB2 = 0;
  7165  002EA0  9493               	bcf	3987,2,c	;volatile
  7166                           
  7167                           ;system.c: 107: TRISBbits.RB3 = 0;
  7168  002EA2  9693               	bcf	3987,3,c	;volatile
  7169                           
  7170                           ;system.c: 108: TRISBbits.RB4 = 0;
  7171  002EA4  9893               	bcf	3987,4,c	;volatile
  7172                           
  7173                           ;system.c: 109: TRISBbits.RB5 = 0;
  7174  002EA6  9A93               	bcf	3987,5,c	;volatile
  7175                           
  7176                           ;system.c: 110: TRISBbits.RB6 = 0;
  7177  002EA8  9C93               	bcf	3987,6,c	;volatile
  7178                           
  7179                           ;system.c: 111: TRISBbits.RB7 = 0;
  7180  002EAA  9E93               	bcf	3987,7,c	;volatile
  7181                           
  7182                           ;system.c: 114: TRISCbits.RC0 = 0;
  7183  002EAC  9094               	bcf	3988,0,c	;volatile
  7184                           
  7185                           ;system.c: 115: TRISCbits.RC1 = 0;
  7186  002EAE  9294               	bcf	3988,1,c	;volatile
  7187                           
  7188                           ;system.c: 116: TRISCbits.RC2 = 0;
  7189  002EB0  9494               	bcf	3988,2,c	;volatile
  7190                           
  7191                           ;system.c: 117: TRISCbits.RC3 = 1;
  7192  002EB2  8694               	bsf	3988,3,c	;volatile
  7193                           
  7194                           ;system.c: 118: TRISCbits.RC4 = 0;
  7195  002EB4  9894               	bcf	3988,4,c	;volatile
  7196                           
  7197                           ;system.c: 119: TRISCbits.RC5 = 0;
  7198  002EB6  9A94               	bcf	3988,5,c	;volatile
  7199                           
  7200                           ;system.c: 120: TRISCbits.RC6 = 1;
  7201  002EB8  8C94               	bsf	3988,6,c	;volatile
  7202                           
  7203                           ;system.c: 121: TRISCbits.RC7 = 1;
  7204  002EBA  8E94               	bsf	3988,7,c	;volatile
  7205                           
  7206                           ;system.c: 124: TRISDbits.RD0 = 0;
  7207  002EBC  9095               	bcf	3989,0,c	;volatile
  7208                           
  7209                           ;system.c: 125: TRISDbits.RD1 = 0;
  7210  002EBE  9295               	bcf	3989,1,c	;volatile
  7211                           
  7212                           ;system.c: 126: TRISDbits.RD2 = 1;
  7213  002EC0  8495               	bsf	3989,2,c	;volatile
  7214                           
  7215                           ;system.c: 127: TRISDbits.RD3 = 0;
  7216  002EC2  9695               	bcf	3989,3,c	;volatile
  7217                           
  7218                           ;system.c: 128: TRISDbits.RD4 = 0;
  7219  002EC4  9895               	bcf	3989,4,c	;volatile
  7220                           
  7221                           ;system.c: 129: TRISDbits.RD5 = 0;
  7222  002EC6  9A95               	bcf	3989,5,c	;volatile
  7223                           
  7224                           ;system.c: 130: TRISDbits.RD6 = 0;
  7225  002EC8  9C95               	bcf	3989,6,c	;volatile
  7226                           
  7227                           ;system.c: 131: TRISDbits.RD7 = 0;
  7228  002ECA  9E95               	bcf	3989,7,c	;volatile
  7229                           
  7230                           ;system.c: 134: TRISEbits.RE0 = 0;
  7231  002ECC  9096               	bcf	3990,0,c	;volatile
  7232                           
  7233                           ;system.c: 135: TRISEbits.RE1 = 0;
  7234  002ECE  9296               	bcf	3990,1,c	;volatile
  7235                           
  7236                           ;system.c: 136: TRISEbits.RE2 = 0;
  7237  002ED0  9496               	bcf	3990,2,c	;volatile
  7238                           
  7239                           ;system.c: 144: LATA0 = 0;
  7240  002ED2  9089               	bcf	3977,0,c	;volatile
  7241                           
  7242                           ;system.c: 145: LATA1 = 0;
  7243  002ED4  9289               	bcf	3977,1,c	;volatile
  7244                           
  7245                           ;system.c: 146: LATA2 = 0;
  7246  002ED6  9489               	bcf	3977,2,c	;volatile
  7247                           
  7248                           ;system.c: 147: LATA3 = 0;
  7249  002ED8  9689               	bcf	3977,3,c	;volatile
  7250                           
  7251                           ;system.c: 148: LATA4 = 0;
  7252  002EDA  9889               	bcf	3977,4,c	;volatile
  7253                           
  7254                           ;system.c: 149: LATA5 = 0;
  7255  002EDC  9A89               	bcf	3977,5,c	;volatile
  7256                           
  7257                           ;system.c: 150: LATA6 = 0;
  7258  002EDE  9C89               	bcf	3977,6,c	;volatile
  7259                           
  7260                           ;system.c: 151: LATA7 = 0;
  7261  002EE0  9E89               	bcf	3977,7,c	;volatile
  7262                           
  7263                           ;system.c: 154: LATB0 = 0;
  7264  002EE2  908A               	bcf	3978,0,c	;volatile
  7265                           
  7266                           ;system.c: 155: LATB1 = 0;
  7267  002EE4  928A               	bcf	3978,1,c	;volatile
  7268                           
  7269                           ;system.c: 156: LATB2 = 0;
  7270  002EE6  948A               	bcf	3978,2,c	;volatile
  7271                           
  7272                           ;system.c: 157: LATB3 = 0;
  7273  002EE8  968A               	bcf	3978,3,c	;volatile
  7274                           
  7275                           ;system.c: 158: LATB4 = 0;
  7276  002EEA  988A               	bcf	3978,4,c	;volatile
  7277                           
  7278                           ;system.c: 159: LATB5 = 0;
  7279  002EEC  9A8A               	bcf	3978,5,c	;volatile
  7280                           
  7281                           ;system.c: 160: LATB6 = 0;
  7282  002EEE  9C8A               	bcf	3978,6,c	;volatile
  7283                           
  7284                           ;system.c: 161: LATB7 = 0;
  7285  002EF0  9E8A               	bcf	3978,7,c	;volatile
  7286                           
  7287                           ;system.c: 164: LATC0 = 0;
  7288  002EF2  908B               	bcf	3979,0,c	;volatile
  7289                           
  7290                           ;system.c: 165: LATC1 = 0;
  7291  002EF4  928B               	bcf	3979,1,c	;volatile
  7292                           
  7293                           ;system.c: 166: LATC2 = 0;
  7294  002EF6  948B               	bcf	3979,2,c	;volatile
  7295                           
  7296                           ;system.c: 167: LATC3 = 0;
  7297  002EF8  968B               	bcf	3979,3,c	;volatile
  7298                           
  7299                           ;system.c: 168: LATC4 = 0;
  7300  002EFA  988B               	bcf	3979,4,c	;volatile
  7301                           
  7302                           ;system.c: 169: LATC5 = 0;
  7303  002EFC  9A8B               	bcf	3979,5,c	;volatile
  7304                           
  7305                           ;system.c: 170: LATC6 = 0;
  7306  002EFE  9C8B               	bcf	3979,6,c	;volatile
  7307                           
  7308                           ;system.c: 171: LATC7 = 0;
  7309  002F00  9E8B               	bcf	3979,7,c	;volatile
  7310                           
  7311                           ;system.c: 174: LATD0 = 0;
  7312  002F02  908C               	bcf	3980,0,c	;volatile
  7313                           
  7314                           ;system.c: 175: LATD1 = 0;
  7315  002F04  928C               	bcf	3980,1,c	;volatile
  7316                           
  7317                           ;system.c: 176: LATD2 = 0;
  7318  002F06  948C               	bcf	3980,2,c	;volatile
  7319                           
  7320                           ;system.c: 177: LATD3 = 0;
  7321  002F08  968C               	bcf	3980,3,c	;volatile
  7322                           
  7323                           ;system.c: 178: LATD4 = 0;
  7324  002F0A  988C               	bcf	3980,4,c	;volatile
  7325                           
  7326                           ;system.c: 179: LATD5 = 0;
  7327  002F0C  9A8C               	bcf	3980,5,c	;volatile
  7328                           
  7329                           ;system.c: 180: LATD6 = 0;
  7330  002F0E  9C8C               	bcf	3980,6,c	;volatile
  7331                           
  7332                           ;system.c: 181: LATD7 = 0;
  7333  002F10  9E8C               	bcf	3980,7,c	;volatile
  7334                           
  7335                           ;system.c: 184: LATE0 = 0;
  7336  002F12  908D               	bcf	3981,0,c	;volatile
  7337                           
  7338                           ;system.c: 185: LATE1 = 0;
  7339  002F14  928D               	bcf	3981,1,c	;volatile
  7340                           
  7341                           ;system.c: 186: LATE2 = 0;
  7342  002F16  948D               	bcf	3981,2,c	;volatile
  7343  002F18  0012               	return		;funcret
  7344  002F1A                     __end_of_ConfigPorts:
  7345                           	opt stack 0
  7346                           tblptru	equ	0xFF8
  7347                           tblptrh	equ	0xFF7
  7348                           tblptrl	equ	0xFF6
  7349                           tablat	equ	0xFF5
  7350                           postinc0	equ	0xFEE
  7351                           wreg	equ	0xFE8
  7352                           postinc1	equ	0xFE6
  7353                           postdec1	equ	0xFE5
  7354                           fsr1h	equ	0xFE2
  7355                           fsr1l	equ	0xFE1
  7356                           postinc2	equ	0xFDE
  7357                           postdec2	equ	0xFDD
  7358                           fsr2h	equ	0xFDA
  7359                           fsr2l	equ	0xFD9
  7360                           status	equ	0xFD8
  7361                           
  7362 ;; *************** function _ConfigInterrupt *****************
  7363 ;; Defined at:
  7364 ;;		line 194 in file "system.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;		None
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;		None
  7369 ;; Return value:  Size  Location     Type
  7370 ;;		None               void
  7371 ;; Registers used:
  7372 ;;		None
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7378 ;;      Params:         0       0       0       0
  7379 ;;      Locals:         0       0       0       0
  7380 ;;      Temps:          0       0       0       0
  7381 ;;      Totals:         0       0       0       0
  7382 ;;Total ram usage:        0 bytes
  7383 ;; Hardware stack levels used:    1
  7384 ;; Hardware stack levels required when called:    6
  7385 ;; This function calls:
  7386 ;;		Nothing
  7387 ;; This function is called by:
  7388 ;;		_init_system
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           	psect	text31
  7393  002F1A                     __ptext31:
  7394                           	opt stack 0
  7395  002F1A                     _ConfigInterrupt:
  7396                           	opt stack 23
  7397                           
  7398                           ;system.c: 197: INTCONbits.GIEH = 1;
  7399                           
  7400                           ;incstack = 0
  7401  002F1A  8EF2               	bsf	intcon,7,c	;volatile
  7402                           
  7403                           ;system.c: 198: INTCONbits.GIEL = 1;
  7404  002F1C  8CF2               	bsf	intcon,6,c	;volatile
  7405                           
  7406                           ;system.c: 199: INTCONbits.TMR0IE = 0b0;
  7407  002F1E  9AF2               	bcf	intcon,5,c	;volatile
  7408                           
  7409                           ;system.c: 200: INTCONbits.INT0IE = 0b1;
  7410  002F20  88F2               	bsf	intcon,4,c	;volatile
  7411                           
  7412                           ;system.c: 201: INTCONbits.RBIE = 0;
  7413  002F22  96F2               	bcf	intcon,3,c	;volatile
  7414                           
  7415                           ;system.c: 202: INTCONbits.TMR0IF = 0;
  7416  002F24  94F2               	bcf	intcon,2,c	;volatile
  7417                           
  7418                           ;system.c: 203: INTCONbits.INT0IF = 0;
  7419  002F26  92F2               	bcf	intcon,1,c	;volatile
  7420                           
  7421                           ;system.c: 204: INTCONbits.RBIF = 0;
  7422  002F28  90F2               	bcf	intcon,0,c	;volatile
  7423                           
  7424                           ;system.c: 208: INTCON2bits.INTEDG0 = 1;
  7425  002F2A  8CF1               	bsf	intcon2,6,c	;volatile
  7426                           
  7427                           ;system.c: 209: INTCON2bits.INTEDG1 = 1;
  7428  002F2C  8AF1               	bsf	intcon2,5,c	;volatile
  7429                           
  7430                           ;system.c: 210: INTCON2bits.INTEDG2 = 1;
  7431  002F2E  88F1               	bsf	intcon2,4,c	;volatile
  7432                           
  7433                           ;system.c: 211: INTCON2bits.TMR0IP = 0b1;
  7434  002F30  84F1               	bsf	intcon2,2,c	;volatile
  7435                           
  7436                           ;system.c: 214: INTCON3bits.INT2IP = 0b0 ;
  7437  002F32  9EF0               	bcf	intcon3,7,c	;volatile
  7438                           
  7439                           ;system.c: 215: INTCON3bits.INT1IP = 0b0;
  7440  002F34  9CF0               	bcf	intcon3,6,c	;volatile
  7441                           
  7442                           ;system.c: 216: INTCON3bits.INT2IE = 0b0;
  7443  002F36  98F0               	bcf	intcon3,4,c	;volatile
  7444                           
  7445                           ;system.c: 217: INTCON3bits.INT2IP = 0b0;
  7446  002F38  9EF0               	bcf	intcon3,7,c	;volatile
  7447                           
  7448                           ;system.c: 218: INTCON3bits.INT2IF = 0;
  7449  002F3A  92F0               	bcf	intcon3,1,c	;volatile
  7450                           
  7451                           ;system.c: 219: INTCON3bits.INT1IF = 0;
  7452  002F3C  90F0               	bcf	intcon3,0,c	;volatile
  7453                           
  7454                           ;system.c: 226: PIR1bits.ADIF = 0;
  7455  002F3E  9C9E               	bcf	3998,6,c	;volatile
  7456                           
  7457                           ;system.c: 227: PIR1bits.RCIF = 0;
  7458  002F40  9A9E               	bcf	3998,5,c	;volatile
  7459                           
  7460                           ;system.c: 228: PIR1bits.TXIF = 0;
  7461  002F42  989E               	bcf	3998,4,c	;volatile
  7462                           
  7463                           ;system.c: 229: PIR1bits.SSPIF = 0;
  7464  002F44  969E               	bcf	3998,3,c	;volatile
  7465                           
  7466                           ;system.c: 230: PIR1bits.CCP1IF = 0;
  7467  002F46  949E               	bcf	3998,2,c	;volatile
  7468                           
  7469                           ;system.c: 231: PIR1bits.TMR2IF = 0;
  7470  002F48  929E               	bcf	3998,1,c	;volatile
  7471                           
  7472                           ;system.c: 232: PIR1bits.TMR1IF = 0;
  7473  002F4A  909E               	bcf	3998,0,c	;volatile
  7474                           
  7475                           ;system.c: 235: PIR2bits.OSFIF = 0;
  7476  002F4C  9EA1               	bcf	4001,7,c	;volatile
  7477                           
  7478                           ;system.c: 236: PIR2bits.EEIF = 0;
  7479  002F4E  98A1               	bcf	4001,4,c	;volatile
  7480                           
  7481                           ;system.c: 237: PIR2bits.LVDIF = 0;
  7482  002F50  94A1               	bcf	4001,2,c	;volatile
  7483                           
  7484                           ;system.c: 238: PIR2bits.CCP2IF = 0;
  7485  002F52  90A1               	bcf	4001,0,c	;volatile
  7486                           
  7487                           ;system.c: 241: PIR3bits.PTIF = 0;
  7488  002F54  98A4               	bcf	4004,4,c	;volatile
  7489                           
  7490                           ;system.c: 242: PIR3bits.IC3DRIF = 0;
  7491  002F56  96A4               	bcf	4004,3,c	;volatile
  7492                           
  7493                           ;system.c: 243: PIR3bits.IC2QEIF = 0;
  7494  002F58  94A4               	bcf	4004,2,c	;volatile
  7495                           
  7496                           ;system.c: 244: PIR3bits.IC1IF = 0;
  7497  002F5A  92A4               	bcf	4004,1,c	;volatile
  7498                           
  7499                           ;system.c: 245: PIR3bits.TMR5IF = 0;
  7500  002F5C  90A4               	bcf	4004,0,c	;volatile
  7501                           
  7502                           ;system.c: 252: RCONbits.IPEN = 1;
  7503  002F5E  8ED0               	bsf	4048,7,c	;volatile
  7504                           
  7505                           ;system.c: 255: IPR1bits.ADIP = 0b0;
  7506  002F60  9C9F               	bcf	3999,6,c	;volatile
  7507                           
  7508                           ;system.c: 256: IPR1bits.RC1IP = 0b1;
  7509  002F62  8A9F               	bsf	3999,5,c	;volatile
  7510                           
  7511                           ;system.c: 257: IPR1bits.TX1IP = 0b0;
  7512  002F64  989F               	bcf	3999,4,c	;volatile
  7513                           
  7514                           ;system.c: 258: IPR1bits.SSPIP = 0;
  7515  002F66  969F               	bcf	3999,3,c	;volatile
  7516                           
  7517                           ;system.c: 259: IPR1bits.CCP1IP = 0;
  7518  002F68  949F               	bcf	3999,2,c	;volatile
  7519                           
  7520                           ;system.c: 260: IPR1bits.TMR2IP = 0b0;
  7521  002F6A  929F               	bcf	3999,1,c	;volatile
  7522                           
  7523                           ;system.c: 261: IPR1bits.TMR1IP = 0b1;
  7524  002F6C  809F               	bsf	3999,0,c	;volatile
  7525                           
  7526                           ;system.c: 264: IPR2bits.OSFIP = 0;
  7527  002F6E  9EA2               	bcf	4002,7,c	;volatile
  7528                           
  7529                           ;system.c: 265: IPR2bits.EEIP = 1;
  7530  002F70  88A2               	bsf	4002,4,c	;volatile
  7531                           
  7532                           ;system.c: 266: IPR2bits.LVDIP = 0;
  7533  002F72  94A2               	bcf	4002,2,c	;volatile
  7534                           
  7535                           ;system.c: 267: IPR2bits.CCP2IP = 0;
  7536  002F74  90A2               	bcf	4002,0,c	;volatile
  7537                           
  7538                           ;system.c: 270: IPR3bits.PTIP = 0;
  7539  002F76  98A5               	bcf	4005,4,c	;volatile
  7540                           
  7541                           ;system.c: 271: IPR3bits.IC3DRIP = 0b1;
  7542  002F78  86A5               	bsf	4005,3,c	;volatile
  7543                           
  7544                           ;system.c: 272: IPR3bits.IC2QEIP = 0b1;
  7545  002F7A  84A5               	bsf	4005,2,c	;volatile
  7546                           
  7547                           ;system.c: 273: IPR3bits.IC1IP = 0;
  7548  002F7C  92A5               	bcf	4005,1,c	;volatile
  7549                           
  7550                           ;system.c: 274: IPR3bits.TMR5IP = 0b0;
  7551  002F7E  90A5               	bcf	4005,0,c	;volatile
  7552                           
  7553                           ;system.c: 281: PIE1bits.ADIE = 0b0;
  7554  002F80  9C9D               	bcf	3997,6,c	;volatile
  7555                           
  7556                           ;system.c: 282: PIE1bits.RC1IE = 0b1;
  7557  002F82  8A9D               	bsf	3997,5,c	;volatile
  7558                           
  7559                           ;system.c: 283: PIE1bits.TXIE = 0b0;
  7560  002F84  989D               	bcf	3997,4,c	;volatile
  7561                           
  7562                           ;system.c: 284: PIE1bits.SSPIE = 0;
  7563  002F86  969D               	bcf	3997,3,c	;volatile
  7564                           
  7565                           ;system.c: 285: PIE1bits.CCP1IE = 0;
  7566  002F88  949D               	bcf	3997,2,c	;volatile
  7567                           
  7568                           ;system.c: 286: PIE1bits.TMR2IE = 0b0;
  7569  002F8A  929D               	bcf	3997,1,c	;volatile
  7570                           
  7571                           ;system.c: 287: PIE1bits.TMR1IE = 0b1;
  7572  002F8C  809D               	bsf	3997,0,c	;volatile
  7573                           
  7574                           ;system.c: 290: PIE2bits.OSFIE = 0;
  7575  002F8E  9EA0               	bcf	4000,7,c	;volatile
  7576                           
  7577                           ;system.c: 291: PIE2bits.EEIE = 1;
  7578  002F90  88A0               	bsf	4000,4,c	;volatile
  7579                           
  7580                           ;system.c: 292: PIE2bits.LVDIE = 0;
  7581  002F92  94A0               	bcf	4000,2,c	;volatile
  7582                           
  7583                           ;system.c: 293: PIE2bits.CCP2IE = 0;
  7584  002F94  90A0               	bcf	4000,0,c	;volatile
  7585                           
  7586                           ;system.c: 296: PIE3bits.PTIE = 0;
  7587  002F96  98A3               	bcf	4003,4,c	;volatile
  7588                           
  7589                           ;system.c: 297: PIE3bits.IC3DRIE = 0b0;
  7590  002F98  96A3               	bcf	4003,3,c	;volatile
  7591                           
  7592                           ;system.c: 298: PIE3bits.IC2QEIE = 0b1;
  7593  002F9A  84A3               	bsf	4003,2,c	;volatile
  7594                           
  7595                           ;system.c: 299: PIE3bits.IC1IE = 0;
  7596  002F9C  92A3               	bcf	4003,1,c	;volatile
  7597                           
  7598                           ;system.c: 300: PIE3bits.TMR5IE = 0b0;
  7599  002F9E  90A3               	bcf	4003,0,c	;volatile
  7600  002FA0  0012               	return		;funcret
  7601  002FA2                     __end_of_ConfigInterrupt:
  7602                           	opt stack 0
  7603                           tblptru	equ	0xFF8
  7604                           tblptrh	equ	0xFF7
  7605                           tblptrl	equ	0xFF6
  7606                           tablat	equ	0xFF5
  7607                           intcon	equ	0xFF2
  7608                           intcon2	equ	0xFF1
  7609                           intcon3	equ	0xFF0
  7610                           postinc0	equ	0xFEE
  7611                           wreg	equ	0xFE8
  7612                           postinc1	equ	0xFE6
  7613                           postdec1	equ	0xFE5
  7614                           fsr1h	equ	0xFE2
  7615                           fsr1l	equ	0xFE1
  7616                           postinc2	equ	0xFDE
  7617                           postdec2	equ	0xFDD
  7618                           fsr2h	equ	0xFDA
  7619                           fsr2l	equ	0xFD9
  7620                           status	equ	0xFD8
  7621                           
  7622 ;; *************** function _envoit_pwm *****************
  7623 ;; Defined at:
  7624 ;;		line 54 in file "moteur.c"
  7625 ;; Parameters:    Size  Location     Type
  7626 ;;  valeur          3   35[BANK0 ] float 
  7627 ;; Auto vars:     Size  Location     Type
  7628 ;;  abs_valeur      3   38[BANK0 ] float 
  7629 ;; Return value:  Size  Location     Type
  7630 ;;		None               void
  7631 ;; Registers used:
  7632 ;;		wreg, status,2, status,0, cstack
  7633 ;; Tracked objects:
  7634 ;;		On entry : 0/0
  7635 ;;		On exit  : 0/0
  7636 ;;		Unchanged: 0/0
  7637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7638 ;;      Params:         0       3       0       0
  7639 ;;      Locals:         0       3       0       0
  7640 ;;      Temps:          0       0       0       0
  7641 ;;      Totals:         0       6       0       0
  7642 ;;Total ram usage:        6 bytes
  7643 ;; Hardware stack levels used:    1
  7644 ;; Hardware stack levels required when called:    8
  7645 ;; This function calls:
  7646 ;;		___ftge
  7647 ;;		___ftmul
  7648 ;;		___ftneg
  7649 ;;		___fttol
  7650 ;; This function is called by:
  7651 ;;		_main
  7652 ;;		_asserv
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656                           	psect	text32
  7657  002690                     __ptext32:
  7658                           	opt stack 0
  7659  002690                     _envoit_pwm:
  7660                           	opt stack 22
  7661                           
  7662                           ;moteur.c: 56: double abs_valeur;
  7663                           ;moteur.c: 58: if (valeur < 0)
  7664                           
  7665                           ;incstack = 0
  7666  002690  0100               	movlb	0	; () banked
  7667  002692  AF85               	btfss	(envoit_pwm@valeur+2)& (0+255),7,b
  7668  002694  D00F               	goto	l485
  7669                           
  7670                           ; BSR set to: 0
  7671                           ;moteur.c: 59: abs_valeur = (double) (-valeur);
  7672  002696  C083  F077         	movff	envoit_pwm@valeur,___ftneg@f1
  7673  00269A  C084  F078         	movff	envoit_pwm@valeur+1,___ftneg@f1+1
  7674  00269E  C085  F079         	movff	envoit_pwm@valeur+2,___ftneg@f1+2
  7675  0026A2  ECA3  F01B         	call	___ftneg	;wreg free
  7676  0026A6  C077  F086         	movff	?___ftneg,envoit_pwm@abs_valeur
  7677  0026AA  C078  F087         	movff	?___ftneg+1,envoit_pwm@abs_valeur+1
  7678  0026AE  C079  F088         	movff	?___ftneg+2,envoit_pwm@abs_valeur+2
  7679  0026B2  D007               	goto	l4704
  7680  0026B4                     l485:
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;moteur.c: 60: else
  7684                           ;moteur.c: 61: abs_valeur = (double) valeur;
  7685  0026B4  C083  F086         	movff	envoit_pwm@valeur,envoit_pwm@abs_valeur
  7686  0026B8  C084  F087         	movff	envoit_pwm@valeur+1,envoit_pwm@abs_valeur+1
  7687  0026BC  C085  F088         	movff	envoit_pwm@valeur+2,envoit_pwm@abs_valeur+2
  7688  0026C0  D000               	goto	l4704
  7689  0026C2                     l4704:
  7690                           
  7691                           ;moteur.c: 63: abs_valeur *= (double) 669 / 100;
  7692  0026C2  C086  F068         	movff	envoit_pwm@abs_valeur,___ftmul@f1
  7693  0026C6  C087  F069         	movff	envoit_pwm@abs_valeur+1,___ftmul@f1+1
  7694  0026CA  C088  F06A         	movff	envoit_pwm@abs_valeur+2,___ftmul@f1+2
  7695  0026CE  0E14               	movlw	20
  7696  0026D0  0100               	movlb	0	; () banked
  7697  0026D2  6F6B               	movwf	___ftmul@f2& (0+255),b
  7698  0026D4  0ED6               	movlw	214
  7699  0026D6  0100               	movlb	0	; () banked
  7700  0026D8  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  7701  0026DA  0E40               	movlw	64
  7702  0026DC  0100               	movlb	0	; () banked
  7703  0026DE  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  7704  0026E0  EC46  F00F         	call	___ftmul	;wreg free
  7705  0026E4  C068  F086         	movff	?___ftmul,envoit_pwm@abs_valeur
  7706  0026E8  C069  F087         	movff	?___ftmul+1,envoit_pwm@abs_valeur+1
  7707  0026EC  C06A  F088         	movff	?___ftmul+2,envoit_pwm@abs_valeur+2
  7708                           
  7709                           ;moteur.c: 65: if (abs_valeur > 669)
  7710  0026F0  0E40               	movlw	64
  7711  0026F2  0100               	movlb	0	; () banked
  7712  0026F4  6F7A               	movwf	___ftge@ff1& (0+255),b
  7713  0026F6  0E27               	movlw	39
  7714  0026F8  0100               	movlb	0	; () banked
  7715  0026FA  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  7716  0026FC  0E44               	movlw	68
  7717  0026FE  0100               	movlb	0	; () banked
  7718  002700  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  7719  002702  C086  F07D         	movff	envoit_pwm@abs_valeur,___ftge@ff2
  7720  002706  C087  F07E         	movff	envoit_pwm@abs_valeur+1,___ftge@ff2+1
  7721  00270A  C088  F07F         	movff	envoit_pwm@abs_valeur+2,___ftge@ff2+2
  7722  00270E  EC91  F014         	call	___ftge	;wreg free
  7723  002712  0100               	movlb	0	; () banked
  7724  002714  B0D8               	btfsc	status,0,c
  7725  002716  D00A               	goto	l4708
  7726                           
  7727                           ; BSR set to: 0
  7728                           ;moteur.c: 66: abs_valeur = 669;
  7729  002718  0E40               	movlw	64
  7730  00271A  0100               	movlb	0	; () banked
  7731  00271C  6F86               	movwf	envoit_pwm@abs_valeur& (0+255),b
  7732  00271E  0E27               	movlw	39
  7733  002720  0100               	movlb	0	; () banked
  7734  002722  6F87               	movwf	(envoit_pwm@abs_valeur+1)& (0+255),b
  7735  002724  0E44               	movlw	68
  7736  002726  0100               	movlb	0	; () banked
  7737  002728  6F88               	movwf	(envoit_pwm@abs_valeur+2)& (0+255),b
  7738  00272A  D000               	goto	l4708
  7739  00272C                     l4708:
  7740                           
  7741                           ; BSR set to: 0
  7742                           ;moteur.c: 68: if (valeur < (double) 0.)
  7743  00272C  0100               	movlb	0	; () banked
  7744  00272E  AF85               	btfss	(envoit_pwm@valeur+2)& (0+255),7,b
  7745  002730  D002               	goto	l488
  7746                           
  7747                           ; BSR set to: 0
  7748                           ;moteur.c: 69: {
  7749                           ;moteur.c: 70: PORTDbits.RD4 = 1;
  7750  002732  8883               	bsf	3971,4,c	;volatile
  7751                           
  7752                           ;moteur.c: 71: }
  7753  002734  D002               	goto	l4712
  7754  002736                     l488:
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;moteur.c: 72: else
  7758                           ;moteur.c: 73: {
  7759                           ;moteur.c: 74: PORTDbits.RD4 = 0;
  7760  002736  9883               	bcf	3971,4,c	;volatile
  7761  002738  D000               	goto	l4712
  7762  00273A                     l4712:
  7763                           
  7764                           ; BSR set to: 0
  7765                           ;moteur.c: 75: }
  7766                           ;moteur.c: 77: PDC0L = (uint8_t) ((uint16_t) abs_valeur % 256);
  7767  00273A  C086  F060         	movff	envoit_pwm@abs_valeur,___fttol@f1
  7768  00273E  C087  F061         	movff	envoit_pwm@abs_valeur+1,___fttol@f1+1
  7769  002742  C088  F062         	movff	envoit_pwm@abs_valeur+2,___fttol@f1+2
  7770  002746  EC95  F010         	call	___fttol	;wreg free
  7771  00274A  0100               	movlb	0	; () banked
  7772  00274C  5160               	movf	?___fttol& (0+255),w,b
  7773  00274E  6E79               	movwf	3961,c	;volatile
  7774                           
  7775                           ;moteur.c: 78: PDC0H = (uint8_t) ((uint16_t) abs_valeur / 256);
  7776  002750  C086  F060         	movff	envoit_pwm@abs_valeur,___fttol@f1
  7777  002754  C087  F061         	movff	envoit_pwm@abs_valeur+1,___fttol@f1+1
  7778  002758  C088  F062         	movff	envoit_pwm@abs_valeur+2,___fttol@f1+2
  7779  00275C  EC95  F010         	call	___fttol	;wreg free
  7780  002760  0100               	movlb	0	; () banked
  7781  002762  C061  F060         	movff	?___fttol+1,?___fttol
  7782  002766  0100               	movlb	0	; () banked
  7783  002768  6B61               	clrf	(?___fttol+1)& (0+255),b
  7784  00276A  0100               	movlb	0	; () banked
  7785  00276C  5160               	movf	?___fttol& (0+255),w,b
  7786  00276E  6E78               	movwf	3960,c	;volatile
  7787                           
  7788                           ; BSR set to: 0
  7789  002770  0012               	return		;funcret
  7790  002772                     __end_of_envoit_pwm:
  7791                           	opt stack 0
  7792                           tblptru	equ	0xFF8
  7793                           tblptrh	equ	0xFF7
  7794                           tblptrl	equ	0xFF6
  7795                           tablat	equ	0xFF5
  7796                           intcon	equ	0xFF2
  7797                           intcon2	equ	0xFF1
  7798                           intcon3	equ	0xFF0
  7799                           postinc0	equ	0xFEE
  7800                           wreg	equ	0xFE8
  7801                           postinc1	equ	0xFE6
  7802                           postdec1	equ	0xFE5
  7803                           fsr1h	equ	0xFE2
  7804                           fsr1l	equ	0xFE1
  7805                           postinc2	equ	0xFDE
  7806                           postdec2	equ	0xFDD
  7807                           fsr2h	equ	0xFDA
  7808                           fsr2l	equ	0xFD9
  7809                           status	equ	0xFD8
  7810                           
  7811 ;; *************** function _check_divergence_position *****************
  7812 ;; Defined at:
  7813 ;;		line 92 in file "triangulation.c"
  7814 ;; Parameters:    Size  Location     Type
  7815 ;;  ancien_x        3   71[BANK0 ] float 
  7816 ;;  ancien_y        3   74[BANK0 ] float 
  7817 ;;  x               3   77[BANK0 ] float 
  7818 ;;  y               3   80[BANK0 ] float 
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;  delta_y         3   92[BANK0 ] float 
  7821 ;;  delta_x         3   89[BANK0 ] float 
  7822 ;;  distance        3   83[BANK0 ] float 
  7823 ;; Return value:  Size  Location     Type
  7824 ;;                  2   71[BANK0 ] int 
  7825 ;; Registers used:
  7826 ;;		wreg, status,2, status,0, cstack
  7827 ;; Tracked objects:
  7828 ;;		On entry : 0/0
  7829 ;;		On exit  : 0/0
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  7832 ;;      Params:         0      12       0       0
  7833 ;;      Locals:         0      12       0       0
  7834 ;;      Temps:          0       0       0       0
  7835 ;;      Totals:         0      24       0       0
  7836 ;;Total ram usage:       24 bytes
  7837 ;; Hardware stack levels used:    1
  7838 ;; Hardware stack levels required when called:   10
  7839 ;; This function calls:
  7840 ;;		___ftadd
  7841 ;;		___ftge
  7842 ;;		___ftmul
  7843 ;;		___ftneg
  7844 ;;		_sqrt
  7845 ;; This function is called by:
  7846 ;;		_main
  7847 ;; This function uses a non-reentrant model
  7848 ;;
  7849                           
  7850                           	psect	text33
  7851  00225C                     __ptext33:
  7852                           	opt stack 0
  7853  00225C                     _check_divergence_position:
  7854                           	opt stack 20
  7855                           
  7856                           ;triangulation.c: 94: double delta_x, delta_y, distance;
  7857                           ;triangulation.c: 96: delta_x = ancien_x - x;
  7858                           
  7859                           ; BSR set to: 0
  7860                           ;incstack = 0
  7861  00225C  C0AD  F077         	movff	check_divergence_position@x,___ftneg@f1
  7862  002260  C0AE  F078         	movff	check_divergence_position@x+1,___ftneg@f1+1
  7863  002264  C0AF  F079         	movff	check_divergence_position@x+2,___ftneg@f1+2
  7864  002268  ECA3  F01B         	call	___ftneg	;wreg free
  7865  00226C  C077  F07A         	movff	?___ftneg,___ftadd@f1
  7866  002270  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  7867  002274  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  7868  002278  C0A7  F07D         	movff	check_divergence_position@ancien_x,___ftadd@f2
  7869  00227C  C0A8  F07E         	movff	check_divergence_position@ancien_x+1,___ftadd@f2+1
  7870  002280  C0A9  F07F         	movff	check_divergence_position@ancien_x+2,___ftadd@f2+2
  7871  002284  EC25  F00D         	call	___ftadd	;wreg free
  7872  002288  C07A  F0B9         	movff	?___ftadd,check_divergence_position@delta_x
  7873  00228C  C07B  F0BA         	movff	?___ftadd+1,check_divergence_position@delta_x+1
  7874  002290  C07C  F0BB         	movff	?___ftadd+2,check_divergence_position@delta_x+2
  7875                           
  7876                           ;triangulation.c: 97: delta_y = ancien_y - y;
  7877  002294  C0B0  F077         	movff	check_divergence_position@y,___ftneg@f1
  7878  002298  C0B1  F078         	movff	check_divergence_position@y+1,___ftneg@f1+1
  7879  00229C  C0B2  F079         	movff	check_divergence_position@y+2,___ftneg@f1+2
  7880  0022A0  ECA3  F01B         	call	___ftneg	;wreg free
  7881  0022A4  C077  F07A         	movff	?___ftneg,___ftadd@f1
  7882  0022A8  C078  F07B         	movff	?___ftneg+1,___ftadd@f1+1
  7883  0022AC  C079  F07C         	movff	?___ftneg+2,___ftadd@f1+2
  7884  0022B0  C0AA  F07D         	movff	check_divergence_position@ancien_y,___ftadd@f2
  7885  0022B4  C0AB  F07E         	movff	check_divergence_position@ancien_y+1,___ftadd@f2+1
  7886  0022B8  C0AC  F07F         	movff	check_divergence_position@ancien_y+2,___ftadd@f2+2
  7887  0022BC  EC25  F00D         	call	___ftadd	;wreg free
  7888  0022C0  C07A  F0BC         	movff	?___ftadd,check_divergence_position@delta_y
  7889  0022C4  C07B  F0BD         	movff	?___ftadd+1,check_divergence_position@delta_y+1
  7890  0022C8  C07C  F0BE         	movff	?___ftadd+2,check_divergence_position@delta_y+2
  7891                           
  7892                           ;triangulation.c: 98: distance = sqrt (delta_x * delta_x + delta_y * delta_y);
  7893  0022CC  C0B9  F06B         	movff	check_divergence_position@delta_x,___ftmul@f2
  7894  0022D0  C0BA  F06C         	movff	check_divergence_position@delta_x+1,___ftmul@f2+1
  7895  0022D4  C0BB  F06D         	movff	check_divergence_position@delta_x+2,___ftmul@f2+2
  7896  0022D8  C0B9  F068         	movff	check_divergence_position@delta_x,___ftmul@f1
  7897  0022DC  C0BA  F069         	movff	check_divergence_position@delta_x+1,___ftmul@f1+1
  7898  0022E0  C0BB  F06A         	movff	check_divergence_position@delta_x+2,___ftmul@f1+2
  7899  0022E4  EC46  F00F         	call	___ftmul	;wreg free
  7900  0022E8  C068  F07A         	movff	?___ftmul,___ftadd@f1
  7901  0022EC  C069  F07B         	movff	?___ftmul+1,___ftadd@f1+1
  7902  0022F0  C06A  F07C         	movff	?___ftmul+2,___ftadd@f1+2
  7903  0022F4  C0BC  F06B         	movff	check_divergence_position@delta_y,___ftmul@f2
  7904  0022F8  C0BD  F06C         	movff	check_divergence_position@delta_y+1,___ftmul@f2+1
  7905  0022FC  C0BE  F06D         	movff	check_divergence_position@delta_y+2,___ftmul@f2+2
  7906  002300  C0BC  F068         	movff	check_divergence_position@delta_y,___ftmul@f1
  7907  002304  C0BD  F069         	movff	check_divergence_position@delta_y+1,___ftmul@f1+1
  7908  002308  C0BE  F06A         	movff	check_divergence_position@delta_y+2,___ftmul@f1+2
  7909  00230C  EC46  F00F         	call	___ftmul	;wreg free
  7910  002310  C068  F07D         	movff	?___ftmul,___ftadd@f2
  7911  002314  C069  F07E         	movff	?___ftmul+1,___ftadd@f2+1
  7912  002318  C06A  F07F         	movff	?___ftmul+2,___ftadd@f2+2
  7913  00231C  EC25  F00D         	call	___ftadd	;wreg free
  7914  002320  C07A  F0B6         	movff	?___ftadd,_check_divergence_position$3252
  7915  002324  C07B  F0B7         	movff	?___ftadd+1,_check_divergence_position$3252+1
  7916  002328  C07C  F0B8         	movff	?___ftadd+2,_check_divergence_position$3252+2
  7917                           
  7918                           ;triangulation.c: 98: distance = sqrt (delta_x * delta_x + delta_y * delta_y);
  7919  00232C  C0B6  F094         	movff	_check_divergence_position$3252,sqrt@y
  7920  002330  C0B7  F095         	movff	_check_divergence_position$3252+1,sqrt@y+1
  7921  002334  C0B8  F096         	movff	_check_divergence_position$3252+2,sqrt@y+2
  7922  002338  EC64  F00E         	call	_sqrt	;wreg free
  7923  00233C  C094  F0B3         	movff	?_sqrt,check_divergence_position@distance
  7924  002340  C095  F0B4         	movff	?_sqrt+1,check_divergence_position@distance+1
  7925  002344  C096  F0B5         	movff	?_sqrt+2,check_divergence_position@distance+2
  7926                           
  7927                           ;triangulation.c: 100: if (distance < 200.)
  7928  002348  C0B3  F07A         	movff	check_divergence_position@distance,___ftge@ff1
  7929  00234C  C0B4  F07B         	movff	check_divergence_position@distance+1,___ftge@ff1+1
  7930  002350  C0B5  F07C         	movff	check_divergence_position@distance+2,___ftge@ff1+2
  7931  002354  0E00               	movlw	0
  7932  002356  0100               	movlb	0	; () banked
  7933  002358  6F7D               	movwf	___ftge@ff2& (0+255),b
  7934  00235A  0E48               	movlw	72
  7935  00235C  0100               	movlb	0	; () banked
  7936  00235E  6F7E               	movwf	(___ftge@ff2+1)& (0+255),b
  7937  002360  0E43               	movlw	67
  7938  002362  0100               	movlb	0	; () banked
  7939  002364  6F7F               	movwf	(___ftge@ff2+2)& (0+255),b
  7940  002366  EC91  F014         	call	___ftge	;wreg free
  7941  00236A  0100               	movlb	0	; () banked
  7942  00236C  B0D8               	btfsc	status,0,c
  7943  00236E  D006               	goto	l602
  7944                           
  7945                           ; BSR set to: 0
  7946                           ;triangulation.c: 101: return 0;
  7947  002370  0E00               	movlw	0
  7948  002372  0100               	movlb	0	; () banked
  7949  002374  6FA8               	movwf	(?_check_divergence_position+1)& (0+255),b
  7950  002376  0E00               	movlw	0
  7951  002378  6FA7               	movwf	?_check_divergence_position& (0+255),b
  7952                           
  7953                           ; BSR set to: 0
  7954                           
  7955                           ; BSR set to: 0
  7956  00237A  D004               	goto	l603
  7957  00237C                     l602:
  7958                           
  7959                           ; BSR set to: 0
  7960                           ;triangulation.c: 102: else
  7961                           ;triangulation.c: 103: return -1;
  7962  00237C  0100               	movlb	0	; () banked
  7963  00237E  69A7               	setf	?_check_divergence_position& (0+255),b
  7964  002380  69A8               	setf	(?_check_divergence_position+1)& (0+255),b
  7965  002382  D000               	goto	l603
  7966  002384                     l603:
  7967                           
  7968                           ; BSR set to: 0
  7969  002384  0012               	return		;funcret
  7970  002386                     __end_of_check_divergence_position:
  7971                           	opt stack 0
  7972                           tblptru	equ	0xFF8
  7973                           tblptrh	equ	0xFF7
  7974                           tblptrl	equ	0xFF6
  7975                           tablat	equ	0xFF5
  7976                           intcon	equ	0xFF2
  7977                           intcon2	equ	0xFF1
  7978                           intcon3	equ	0xFF0
  7979                           postinc0	equ	0xFEE
  7980                           wreg	equ	0xFE8
  7981                           postinc1	equ	0xFE6
  7982                           postdec1	equ	0xFE5
  7983                           fsr1h	equ	0xFE2
  7984                           fsr1l	equ	0xFE1
  7985                           postinc2	equ	0xFDE
  7986                           postdec2	equ	0xFDD
  7987                           fsr2h	equ	0xFDA
  7988                           fsr2l	equ	0xFD9
  7989                           status	equ	0xFD8
  7990                           
  7991 ;; *************** function _sqrt *****************
  7992 ;; Defined at:
  7993 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\sqrt.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;  y               3   52[BANK0 ] int 
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;  x               3   68[BANK0 ] int 
  7998 ;;  q               3   65[BANK0 ] int 
  7999 ;;  z               3   61[BANK0 ] int 
  8000 ;;  og              3   58[BANK0 ] int 
  8001 ;;  i               1   64[BANK0 ] unsigned char 
  8002 ;; Return value:  Size  Location     Type
  8003 ;;                  3   52[BANK0 ] unsigned char 
  8004 ;; Registers used:
  8005 ;;		wreg, status,2, status,0, cstack
  8006 ;; Tracked objects:
  8007 ;;		On entry : 0/0
  8008 ;;		On exit  : 0/0
  8009 ;;		Unchanged: 0/0
  8010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8011 ;;      Params:         0       3       0       0
  8012 ;;      Locals:         0      13       0       0
  8013 ;;      Temps:          0       3       0       0
  8014 ;;      Totals:         0      19       0       0
  8015 ;;Total ram usage:       19 bytes
  8016 ;; Hardware stack levels used:    1
  8017 ;; Hardware stack levels required when called:    9
  8018 ;; This function calls:
  8019 ;;		___ftge
  8020 ;;		___ftmul
  8021 ;;		___ftsub
  8022 ;; This function is called by:
  8023 ;;		_check_divergence_position
  8024 ;; This function uses a non-reentrant model
  8025 ;;
  8026                           
  8027                           	psect	text34
  8028  001CC8                     __ptext34:
  8029                           	opt stack 0
  8030  001CC8                     _sqrt:
  8031                           	opt stack 20
  8032                           
  8033                           ; BSR set to: 0
  8034                           ;incstack = 0
  8035  001CC8  0E00               	movlw	0
  8036  001CCA  0100               	movlb	0	; () banked
  8037  001CCC  6F7A               	movwf	___ftge@ff1& (0+255),b
  8038  001CCE  0E00               	movlw	0
  8039  001CD0  0100               	movlb	0	; () banked
  8040  001CD2  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  8041  001CD4  0E00               	movlw	0
  8042  001CD6  0100               	movlb	0	; () banked
  8043  001CD8  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  8044  001CDA  C094  F07D         	movff	sqrt@y,___ftge@ff2
  8045  001CDE  C095  F07E         	movff	sqrt@y+1,___ftge@ff2+1
  8046  001CE2  C096  F07F         	movff	sqrt@y+2,___ftge@ff2+2
  8047  001CE6  EC91  F014         	call	___ftge	;wreg free
  8048  001CEA  0100               	movlb	0	; () banked
  8049  001CEC  A0D8               	btfss	status,0,c
  8050  001CEE  D012               	goto	l1187
  8051                           
  8052                           ; BSR set to: 0
  8053  001CF0  0100               	movlb	0	; () banked
  8054  001CF2  AF96               	btfss	(sqrt@y+2)& (0+255),7,b
  8055  001CF4  D005               	goto	l1188
  8056                           
  8057                           ; BSR set to: 0
  8058  001CF6  0E00               	movlw	0
  8059  001CF8  0101               	movlb	1	; () banked
  8060  001CFA  6F0E               	movwf	(_errno+1)& (0+255),b
  8061  001CFC  0E21               	movlw	33
  8062  001CFE  6F0D               	movwf	_errno& (0+255),b
  8063  001D00                     l1188:
  8064  001D00  0E00               	movlw	0
  8065  001D02  0100               	movlb	0	; () banked
  8066  001D04  6F94               	movwf	?_sqrt& (0+255),b
  8067  001D06  0E00               	movlw	0
  8068  001D08  0100               	movlb	0	; () banked
  8069  001D0A  6F95               	movwf	(?_sqrt+1)& (0+255),b
  8070  001D0C  0E00               	movlw	0
  8071  001D0E  0100               	movlb	0	; () banked
  8072  001D10  6F96               	movwf	(?_sqrt+2)& (0+255),b
  8073                           
  8074                           ; BSR set to: 0
  8075  001D12  D0BB               	goto	l1189
  8076  001D14                     l1187:
  8077                           
  8078                           ; BSR set to: 0
  8079  001D14  C094  F09D         	movff	sqrt@y,sqrt@z
  8080  001D18  C095  F09E         	movff	sqrt@y+1,sqrt@z+1
  8081  001D1C  C096  F09F         	movff	sqrt@y+2,sqrt@z+2
  8082                           
  8083                           ; BSR set to: 0
  8084  001D20  C094  F097         	movff	sqrt@y,??_sqrt
  8085  001D24  C095  F098         	movff	sqrt@y+1,??_sqrt+1
  8086  001D28  C096  F099         	movff	sqrt@y+2,??_sqrt+2
  8087  001D2C  0100               	movlb	0	; () banked
  8088  001D2E  1F97               	comf	??_sqrt& (0+255),f,b
  8089  001D30  1F98               	comf	(??_sqrt+1)& (0+255),f,b
  8090  001D32  1F99               	comf	(??_sqrt+2)& (0+255),f,b
  8091  001D34  2B97               	incf	??_sqrt& (0+255),f,b
  8092  001D36  0E00               	movlw	0
  8093  001D38  2398               	addwfc	(??_sqrt+1)& (0+255),f,b
  8094  001D3A  2399               	addwfc	(??_sqrt+2)& (0+255),f,b
  8095  001D3C  0EC8               	movlw	200
  8096  001D3E  0100               	movlb	0	; () banked
  8097  001D40  2597               	addwf	??_sqrt& (0+255),w,b
  8098  001D42  0100               	movlb	0	; () banked
  8099  001D44  6FA4               	movwf	sqrt@x& (0+255),b
  8100  001D46  0E6E               	movlw	110
  8101  001D48  0100               	movlb	0	; () banked
  8102  001D4A  2198               	addwfc	(??_sqrt+1)& (0+255),w,b
  8103  001D4C  0100               	movlb	0	; () banked
  8104  001D4E  6FA5               	movwf	(sqrt@x+1)& (0+255),b
  8105  001D50  0EBE               	movlw	190
  8106  001D52  0100               	movlb	0	; () banked
  8107  001D54  2199               	addwfc	(??_sqrt+2)& (0+255),w,b
  8108  001D56  0100               	movlb	0	; () banked
  8109  001D58  6FA6               	movwf	(sqrt@x+2)& (0+255),b
  8110                           
  8111                           ; BSR set to: 0
  8112  001D5A  0100               	movlb	0	; () banked
  8113  001D5C  90D8               	bcf	status,0,c
  8114  001D5E  33A6               	rrcf	(sqrt@x+2)& (0+255),f,b
  8115  001D60  33A5               	rrcf	(sqrt@x+1)& (0+255),f,b
  8116  001D62  33A4               	rrcf	sqrt@x& (0+255),f,b
  8117                           
  8118                           ; BSR set to: 0
  8119  001D64  0E00               	movlw	0
  8120  001D66  0100               	movlb	0	; () banked
  8121  001D68  5F9D               	subwf	sqrt@z& (0+255),f,b
  8122  001D6A  0E80               	movlw	128
  8123  001D6C  0100               	movlb	0	; () banked
  8124  001D6E  5B9E               	subwfb	(sqrt@z+1)& (0+255),f,b
  8125  001D70  0E00               	movlw	0
  8126  001D72  0100               	movlb	0	; () banked
  8127  001D74  5B9F               	subwfb	(sqrt@z+2)& (0+255),f,b
  8128                           
  8129                           ; BSR set to: 0
  8130  001D76  0E04               	movlw	4
  8131  001D78  0100               	movlb	0	; () banked
  8132  001D7A  6FA0               	movwf	sqrt@i& (0+255),b
  8133  001D7C  D000               	goto	l4660
  8134  001D7E                     l4660:
  8135                           
  8136                           ; BSR set to: 0
  8137  001D7E  C0A4  F09A         	movff	sqrt@x,sqrt@og
  8138  001D82  C0A5  F09B         	movff	sqrt@x+1,sqrt@og+1
  8139  001D86  C0A6  F09C         	movff	sqrt@x+2,sqrt@og+2
  8140                           
  8141                           ; BSR set to: 0
  8142  001D8A  C0A4  F068         	movff	sqrt@x,___ftmul@f1
  8143  001D8E  C0A5  F069         	movff	sqrt@x+1,___ftmul@f1+1
  8144  001D92  C0A6  F06A         	movff	sqrt@x+2,___ftmul@f1+2
  8145  001D96  C09D  F06B         	movff	sqrt@z,___ftmul@f2
  8146  001D9A  C09E  F06C         	movff	sqrt@z+1,___ftmul@f2+1
  8147  001D9E  C09F  F06D         	movff	sqrt@z+2,___ftmul@f2+2
  8148  001DA2  EC46  F00F         	call	___ftmul	;wreg free
  8149  001DA6  C068  F0A1         	movff	?___ftmul,sqrt@q
  8150  001DAA  C069  F0A2         	movff	?___ftmul+1,sqrt@q+1
  8151  001DAE  C06A  F0A3         	movff	?___ftmul+2,sqrt@q+2
  8152  001DB2  C0A1  F068         	movff	sqrt@q,___ftmul@f1
  8153  001DB6  C0A2  F069         	movff	sqrt@q+1,___ftmul@f1+1
  8154  001DBA  C0A3  F06A         	movff	sqrt@q+2,___ftmul@f1+2
  8155  001DBE  C0A4  F06B         	movff	sqrt@x,___ftmul@f2
  8156  001DC2  C0A5  F06C         	movff	sqrt@x+1,___ftmul@f2+1
  8157  001DC6  C0A6  F06D         	movff	sqrt@x+2,___ftmul@f2+2
  8158  001DCA  EC46  F00F         	call	___ftmul	;wreg free
  8159  001DCE  C068  F0A1         	movff	?___ftmul,sqrt@q
  8160  001DD2  C069  F0A2         	movff	?___ftmul+1,sqrt@q+1
  8161  001DD6  C06A  F0A3         	movff	?___ftmul+2,sqrt@q+2
  8162  001DDA  C0A1  F068         	movff	sqrt@q,___ftmul@f1
  8163  001DDE  C0A2  F069         	movff	sqrt@q+1,___ftmul@f1+1
  8164  001DE2  C0A3  F06A         	movff	sqrt@q+2,___ftmul@f1+2
  8165  001DE6  C0A4  F06B         	movff	sqrt@x,___ftmul@f2
  8166  001DEA  C0A5  F06C         	movff	sqrt@x+1,___ftmul@f2+1
  8167  001DEE  C0A6  F06D         	movff	sqrt@x+2,___ftmul@f2+2
  8168  001DF2  EC46  F00F         	call	___ftmul	;wreg free
  8169  001DF6  C068  F0A1         	movff	?___ftmul,sqrt@q
  8170  001DFA  C069  F0A2         	movff	?___ftmul+1,sqrt@q+1
  8171  001DFE  C06A  F0A3         	movff	?___ftmul+2,sqrt@q+2
  8172  001E02  C0A4  F068         	movff	sqrt@x,___ftmul@f1
  8173  001E06  C0A5  F069         	movff	sqrt@x+1,___ftmul@f1+1
  8174  001E0A  C0A6  F06A         	movff	sqrt@x+2,___ftmul@f1+2
  8175  001E0E  0E00               	movlw	0
  8176  001E10  0100               	movlb	0	; () banked
  8177  001E12  6F6B               	movwf	___ftmul@f2& (0+255),b
  8178  001E14  0EC0               	movlw	192
  8179  001E16  0100               	movlb	0	; () banked
  8180  001E18  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
  8181  001E1A  0E3F               	movlw	63
  8182  001E1C  0100               	movlb	0	; () banked
  8183  001E1E  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
  8184  001E20  EC46  F00F         	call	___ftmul	;wreg free
  8185  001E24  C068  F0A4         	movff	?___ftmul,sqrt@x
  8186  001E28  C069  F0A5         	movff	?___ftmul+1,sqrt@x+1
  8187  001E2C  C06A  F0A6         	movff	?___ftmul+2,sqrt@x+2
  8188  001E30  C0A4  F08E         	movff	sqrt@x,___ftsub@f1
  8189  001E34  C0A5  F08F         	movff	sqrt@x+1,___ftsub@f1+1
  8190  001E38  C0A6  F090         	movff	sqrt@x+2,___ftsub@f1+2
  8191  001E3C  C0A1  F091         	movff	sqrt@q,___ftsub@f2
  8192  001E40  C0A2  F092         	movff	sqrt@q+1,___ftsub@f2+1
  8193  001E44  C0A3  F093         	movff	sqrt@q+2,___ftsub@f2+2
  8194  001E48  EC33  F01A         	call	___ftsub	;wreg free
  8195  001E4C  C08E  F0A4         	movff	?___ftsub,sqrt@x
  8196  001E50  C08F  F0A5         	movff	?___ftsub+1,sqrt@x+1
  8197  001E54  C090  F0A6         	movff	?___ftsub+2,sqrt@x+2
  8198  001E58  0100               	movlb	0	; () banked
  8199  001E5A  2FA0               	decfsz	sqrt@i& (0+255),f,b
  8200  001E5C  D790               	goto	l4660
  8201  001E5E  D000               	goto	l4674
  8202  001E60                     l4674:
  8203                           
  8204                           ; BSR set to: 0
  8205  001E60  C0A4  F068         	movff	sqrt@x,___ftmul@f1
  8206  001E64  C0A5  F069         	movff	sqrt@x+1,___ftmul@f1+1
  8207  001E68  C0A6  F06A         	movff	sqrt@x+2,___ftmul@f1+2
  8208  001E6C  C094  F06B         	movff	sqrt@y,___ftmul@f2
  8209  001E70  C095  F06C         	movff	sqrt@y+1,___ftmul@f2+1
  8210  001E74  C096  F06D         	movff	sqrt@y+2,___ftmul@f2+2
  8211  001E78  EC46  F00F         	call	___ftmul	;wreg free
  8212  001E7C  C068  F094         	movff	?___ftmul,?_sqrt
  8213  001E80  C069  F095         	movff	?___ftmul+1,?_sqrt+1
  8214  001E84  C06A  F096         	movff	?___ftmul+2,?_sqrt+2
  8215  001E88  D000               	goto	l1189
  8216  001E8A                     l1189:
  8217  001E8A  0012               	return		;funcret
  8218  001E8C                     __end_of_sqrt:
  8219                           	opt stack 0
  8220                           tblptru	equ	0xFF8
  8221                           tblptrh	equ	0xFF7
  8222                           tblptrl	equ	0xFF6
  8223                           tablat	equ	0xFF5
  8224                           intcon	equ	0xFF2
  8225                           intcon2	equ	0xFF1
  8226                           intcon3	equ	0xFF0
  8227                           postinc0	equ	0xFEE
  8228                           wreg	equ	0xFE8
  8229                           postinc1	equ	0xFE6
  8230                           postdec1	equ	0xFE5
  8231                           fsr1h	equ	0xFE2
  8232                           fsr1l	equ	0xFE1
  8233                           postinc2	equ	0xFDE
  8234                           postdec2	equ	0xFDD
  8235                           fsr2h	equ	0xFDA
  8236                           fsr2l	equ	0xFD9
  8237                           status	equ	0xFD8
  8238                           
  8239 ;; *************** function ___ftsub *****************
  8240 ;; Defined at:
  8241 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;  f1              3   46[BANK0 ] float 
  8244 ;;  f2              3   49[BANK0 ] float 
  8245 ;; Auto vars:     Size  Location     Type
  8246 ;;		None
  8247 ;; Return value:  Size  Location     Type
  8248 ;;                  3   46[BANK0 ] float 
  8249 ;; Registers used:
  8250 ;;		wreg, status,2, status,0, cstack
  8251 ;; Tracked objects:
  8252 ;;		On entry : 0/0
  8253 ;;		On exit  : 0/0
  8254 ;;		Unchanged: 0/0
  8255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8256 ;;      Params:         0       6       0       0
  8257 ;;      Locals:         0       0       0       0
  8258 ;;      Temps:          0       0       0       0
  8259 ;;      Totals:         0       6       0       0
  8260 ;;Total ram usage:        6 bytes
  8261 ;; Hardware stack levels used:    1
  8262 ;; Hardware stack levels required when called:    8
  8263 ;; This function calls:
  8264 ;;		___ftadd
  8265 ;; This function is called by:
  8266 ;;		_modulo_angle
  8267 ;;		_sqrt
  8268 ;;		_sin
  8269 ;; This function uses a non-reentrant model
  8270 ;;
  8271                           
  8272                           	psect	text35
  8273  003466                     __ptext35:
  8274                           	opt stack 0
  8275  003466                     ___ftsub:
  8276                           	opt stack 18
  8277                           
  8278                           ;incstack = 0
  8279  003466  0100               	movlb	0	; () banked
  8280  003468  5191               	movf	___ftsub@f2& (0+255),w,b
  8281  00346A  0100               	movlb	0	; () banked
  8282  00346C  1192               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  8283  00346E  0100               	movlb	0	; () banked
  8284  003470  1193               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  8285  003472  B4D8               	btfsc	status,2,c
  8286  003474  D00A               	goto	l4280
  8287                           
  8288                           ; BSR set to: 0
  8289  003476  0E00               	movlw	0
  8290  003478  0100               	movlb	0	; () banked
  8291  00347A  1B91               	xorwf	___ftsub@f2& (0+255),f,b
  8292  00347C  0E00               	movlw	0
  8293  00347E  0100               	movlb	0	; () banked
  8294  003480  1B92               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  8295  003482  0E80               	movlw	128
  8296  003484  0100               	movlb	0	; () banked
  8297  003486  1B93               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  8298  003488  D000               	goto	l4280
  8299  00348A                     l4280:
  8300                           
  8301                           ; BSR set to: 0
  8302  00348A  C08E  F07A         	movff	___ftsub@f1,___ftadd@f1
  8303  00348E  C08F  F07B         	movff	___ftsub@f1+1,___ftadd@f1+1
  8304  003492  C090  F07C         	movff	___ftsub@f1+2,___ftadd@f1+2
  8305  003496  C091  F07D         	movff	___ftsub@f2,___ftadd@f2
  8306  00349A  C092  F07E         	movff	___ftsub@f2+1,___ftadd@f2+1
  8307  00349E  C093  F07F         	movff	___ftsub@f2+2,___ftadd@f2+2
  8308  0034A2  EC25  F00D         	call	___ftadd	;wreg free
  8309  0034A6  C07A  F08E         	movff	?___ftadd,?___ftsub
  8310  0034AA  C07B  F08F         	movff	?___ftadd+1,?___ftsub+1
  8311  0034AE  C07C  F090         	movff	?___ftadd+2,?___ftsub+2
  8312  0034B2  D000               	goto	l1049
  8313  0034B4                     l1049:
  8314  0034B4  0012               	return		;funcret
  8315  0034B6                     __end_of___ftsub:
  8316                           	opt stack 0
  8317                           tblptru	equ	0xFF8
  8318                           tblptrh	equ	0xFF7
  8319                           tblptrl	equ	0xFF6
  8320                           tablat	equ	0xFF5
  8321                           intcon	equ	0xFF2
  8322                           intcon2	equ	0xFF1
  8323                           intcon3	equ	0xFF0
  8324                           postinc0	equ	0xFEE
  8325                           wreg	equ	0xFE8
  8326                           postinc1	equ	0xFE6
  8327                           postdec1	equ	0xFE5
  8328                           fsr1h	equ	0xFE2
  8329                           fsr1l	equ	0xFE1
  8330                           postinc2	equ	0xFDE
  8331                           postdec2	equ	0xFDD
  8332                           fsr2h	equ	0xFDA
  8333                           fsr2l	equ	0xFD9
  8334                           status	equ	0xFD8
  8335                           
  8336 ;; *************** function ___ftadd *****************
  8337 ;; Defined at:
  8338 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;  f1              3   26[BANK0 ] float 
  8341 ;;  f2              3   29[BANK0 ] float 
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;  exp1            1   37[BANK0 ] unsigned char 
  8344 ;;  exp2            1   36[BANK0 ] unsigned char 
  8345 ;;  sign            1   35[BANK0 ] unsigned char 
  8346 ;; Return value:  Size  Location     Type
  8347 ;;                  3   26[BANK0 ] float 
  8348 ;; Registers used:
  8349 ;;		wreg, status,2, status,0, cstack
  8350 ;; Tracked objects:
  8351 ;;		On entry : 0/0
  8352 ;;		On exit  : 0/0
  8353 ;;		Unchanged: 0/0
  8354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8355 ;;      Params:         0       6       0       0
  8356 ;;      Locals:         0       3       0       0
  8357 ;;      Temps:          0       3       0       0
  8358 ;;      Totals:         0      12       0       0
  8359 ;;Total ram usage:       12 bytes
  8360 ;; Hardware stack levels used:    1
  8361 ;; Hardware stack levels required when called:    7
  8362 ;; This function calls:
  8363 ;;		___ftpack
  8364 ;; This function is called by:
  8365 ;;		_triangulation
  8366 ;;		_check_divergence_angle
  8367 ;;		_check_divergence_position
  8368 ;;		_modulo_angle
  8369 ;;		___ftsub
  8370 ;;		_cos
  8371 ;;		_sin
  8372 ;;		_eval_poly
  8373 ;;		_floor
  8374 ;;		_fonction_PID
  8375 ;; This function uses a non-reentrant model
  8376 ;;
  8377                           
  8378                           	psect	text36
  8379  001A4A                     __ptext36:
  8380                           	opt stack 0
  8381  001A4A                     ___ftadd:
  8382                           	opt stack 22
  8383                           
  8384                           ;incstack = 0
  8385  001A4A  C07C  F080         	movff	___ftadd@f1+2,??___ftadd
  8386  001A4E  0100               	movlb	0	; () banked
  8387  001A50  6B81               	clrf	(??___ftadd+1)& (0+255),b
  8388  001A52  6B82               	clrf	(??___ftadd+2)& (0+255),b
  8389  001A54  0100               	movlb	0	; () banked
  8390  001A56  357B               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  8391  001A58  0100               	movlb	0	; () banked
  8392  001A5A  3780               	rlcf	??___ftadd& (0+255),f,b
  8393  001A5C  E301               	bnc	u3291
  8394  001A5E  8181               	bsf	(??___ftadd+1)& (0+255),0,b
  8395  001A60                     u3291:
  8396  001A60  0100               	movlb	0	; () banked
  8397  001A62  5180               	movf	??___ftadd& (0+255),w,b
  8398  001A64  0100               	movlb	0	; () banked
  8399  001A66  6F85               	movwf	___ftadd@exp1& (0+255),b
  8400  001A68  C07F  F080         	movff	___ftadd@f2+2,??___ftadd
  8401  001A6C  0100               	movlb	0	; () banked
  8402  001A6E  6B81               	clrf	(??___ftadd+1)& (0+255),b
  8403  001A70  6B82               	clrf	(??___ftadd+2)& (0+255),b
  8404  001A72  0100               	movlb	0	; () banked
  8405  001A74  357E               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  8406  001A76  0100               	movlb	0	; () banked
  8407  001A78  3780               	rlcf	??___ftadd& (0+255),f,b
  8408  001A7A  E301               	bnc	u3301
  8409  001A7C  8181               	bsf	(??___ftadd+1)& (0+255),0,b
  8410  001A7E                     u3301:
  8411  001A7E  0100               	movlb	0	; () banked
  8412  001A80  5180               	movf	??___ftadd& (0+255),w,b
  8413  001A82  0100               	movlb	0	; () banked
  8414  001A84  6F84               	movwf	___ftadd@exp2& (0+255),b
  8415                           
  8416                           ; BSR set to: 0
  8417  001A86  0100               	movlb	0	; () banked
  8418  001A88  5185               	movf	___ftadd@exp1& (0+255),w,b
  8419  001A8A  0100               	movlb	0	; () banked
  8420  001A8C  B4D8               	btfsc	status,2,c
  8421  001A8E  D011               	goto	l985
  8422                           
  8423                           ; BSR set to: 0
  8424  001A90  0100               	movlb	0	; () banked
  8425  001A92  5184               	movf	___ftadd@exp2& (0+255),w,b
  8426  001A94  0100               	movlb	0	; () banked
  8427  001A96  5D85               	subwf	___ftadd@exp1& (0+255),w,b
  8428  001A98  B0D8               	btfsc	status,0,c
  8429  001A9A  D012               	goto	l4040
  8430                           
  8431                           ; BSR set to: 0
  8432  001A9C  0100               	movlb	0	; () banked
  8433  001A9E  5185               	movf	___ftadd@exp1& (0+255),w,b
  8434  001AA0  0800               	sublw	0
  8435  001AA2  0100               	movlb	0	; () banked
  8436  001AA4  2584               	addwf	___ftadd@exp2& (0+255),w,b
  8437  001AA6  0100               	movlb	0	; () banked
  8438  001AA8  6F80               	movwf	??___ftadd& (0+255),b
  8439  001AAA  0E18               	movlw	24
  8440  001AAC  0100               	movlb	0	; () banked
  8441  001AAE  6580               	cpfsgt	??___ftadd& (0+255),b
  8442  001AB0  D007               	goto	l4040
  8443  001AB2                     l985:
  8444                           
  8445                           ; BSR set to: 0
  8446  001AB2  C07D  F07A         	movff	___ftadd@f2,?___ftadd
  8447  001AB6  C07E  F07B         	movff	___ftadd@f2+1,?___ftadd+1
  8448  001ABA  C07F  F07C         	movff	___ftadd@f2+2,?___ftadd+2
  8449  001ABE  D103               	goto	l986
  8450  001AC0                     l4040:
  8451                           
  8452                           ; BSR set to: 0
  8453  001AC0  0100               	movlb	0	; () banked
  8454  001AC2  5184               	movf	___ftadd@exp2& (0+255),w,b
  8455  001AC4  0100               	movlb	0	; () banked
  8456  001AC6  B4D8               	btfsc	status,2,c
  8457  001AC8  D011               	goto	l989
  8458                           
  8459                           ; BSR set to: 0
  8460  001ACA  0100               	movlb	0	; () banked
  8461  001ACC  5185               	movf	___ftadd@exp1& (0+255),w,b
  8462  001ACE  0100               	movlb	0	; () banked
  8463  001AD0  5D84               	subwf	___ftadd@exp2& (0+255),w,b
  8464  001AD2  B0D8               	btfsc	status,0,c
  8465  001AD4  D012               	goto	l4046
  8466                           
  8467                           ; BSR set to: 0
  8468  001AD6  0100               	movlb	0	; () banked
  8469  001AD8  5184               	movf	___ftadd@exp2& (0+255),w,b
  8470  001ADA  0800               	sublw	0
  8471  001ADC  0100               	movlb	0	; () banked
  8472  001ADE  2585               	addwf	___ftadd@exp1& (0+255),w,b
  8473  001AE0  0100               	movlb	0	; () banked
  8474  001AE2  6F80               	movwf	??___ftadd& (0+255),b
  8475  001AE4  0E18               	movlw	24
  8476  001AE6  0100               	movlb	0	; () banked
  8477  001AE8  6580               	cpfsgt	??___ftadd& (0+255),b
  8478  001AEA  D007               	goto	l4046
  8479  001AEC                     l989:
  8480                           
  8481                           ; BSR set to: 0
  8482  001AEC  C07A  F07A         	movff	___ftadd@f1,?___ftadd
  8483  001AF0  C07B  F07B         	movff	___ftadd@f1+1,?___ftadd+1
  8484  001AF4  C07C  F07C         	movff	___ftadd@f1+2,?___ftadd+2
  8485  001AF8  D0E6               	goto	l986
  8486  001AFA                     l4046:
  8487                           
  8488                           ; BSR set to: 0
  8489  001AFA  0E06               	movlw	6
  8490  001AFC  0100               	movlb	0	; () banked
  8491  001AFE  6F83               	movwf	___ftadd@sign& (0+255),b
  8492                           
  8493                           ; BSR set to: 0
  8494  001B00  0100               	movlb	0	; () banked
  8495  001B02  AF7C               	btfss	(___ftadd@f1+2)& (0+255),7,b
  8496  001B04  D003               	goto	l4052
  8497                           
  8498                           ; BSR set to: 0
  8499  001B06  0100               	movlb	0	; () banked
  8500  001B08  8F83               	bsf	___ftadd@sign& (0+255),7,b
  8501  001B0A  D000               	goto	l4052
  8502  001B0C                     l4052:
  8503                           
  8504                           ; BSR set to: 0
  8505  001B0C  0100               	movlb	0	; () banked
  8506  001B0E  AF7F               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8507  001B10  D002               	goto	l991
  8508                           
  8509                           ; BSR set to: 0
  8510  001B12  0100               	movlb	0	; () banked
  8511  001B14  8D83               	bsf	___ftadd@sign& (0+255),6,b
  8512  001B16                     l991:
  8513                           
  8514                           ; BSR set to: 0
  8515  001B16  0100               	movlb	0	; () banked
  8516  001B18  8F7B               	bsf	(___ftadd@f1+1)& (0+255),7,b
  8517                           
  8518                           ; BSR set to: 0
  8519  001B1A  0EFF               	movlw	255
  8520  001B1C  0100               	movlb	0	; () banked
  8521  001B1E  177A               	andwf	___ftadd@f1& (0+255),f,b
  8522  001B20  0EFF               	movlw	255
  8523  001B22  0100               	movlb	0	; () banked
  8524  001B24  177B               	andwf	(___ftadd@f1+1)& (0+255),f,b
  8525  001B26  0E00               	movlw	0
  8526  001B28  0100               	movlb	0	; () banked
  8527  001B2A  177C               	andwf	(___ftadd@f1+2)& (0+255),f,b
  8528  001B2C  0100               	movlb	0	; () banked
  8529  001B2E  8F7E               	bsf	(___ftadd@f2+1)& (0+255),7,b
  8530                           
  8531                           ; BSR set to: 0
  8532  001B30  0EFF               	movlw	255
  8533  001B32  0100               	movlb	0	; () banked
  8534  001B34  177D               	andwf	___ftadd@f2& (0+255),f,b
  8535  001B36  0EFF               	movlw	255
  8536  001B38  0100               	movlb	0	; () banked
  8537  001B3A  177E               	andwf	(___ftadd@f2+1)& (0+255),f,b
  8538  001B3C  0E00               	movlw	0
  8539  001B3E  0100               	movlb	0	; () banked
  8540  001B40  177F               	andwf	(___ftadd@f2+2)& (0+255),f,b
  8541                           
  8542                           ; BSR set to: 0
  8543  001B42  0100               	movlb	0	; () banked
  8544  001B44  5184               	movf	___ftadd@exp2& (0+255),w,b
  8545  001B46  0100               	movlb	0	; () banked
  8546  001B48  5D85               	subwf	___ftadd@exp1& (0+255),w,b
  8547  001B4A  B0D8               	btfsc	status,0,c
  8548  001B4C  D028               	goto	l4072
  8549  001B4E                     l4062:
  8550                           
  8551                           ; BSR set to: 0
  8552  001B4E  0100               	movlb	0	; () banked
  8553  001B50  90D8               	bcf	status,0,c
  8554  001B52  377D               	rlcf	___ftadd@f2& (0+255),f,b
  8555  001B54  377E               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  8556  001B56  377F               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  8557  001B58  0100               	movlb	0	; () banked
  8558  001B5A  0784               	decf	___ftadd@exp2& (0+255),f,b
  8559                           
  8560                           ; BSR set to: 0
  8561  001B5C  0100               	movlb	0	; () banked
  8562  001B5E  5185               	movf	___ftadd@exp1& (0+255),w,b
  8563  001B60  0100               	movlb	0	; () banked
  8564  001B62  1984               	xorwf	___ftadd@exp2& (0+255),w,b
  8565  001B64  B4D8               	btfsc	status,2,c
  8566  001B66  D013               	goto	l4070
  8567                           
  8568                           ; BSR set to: 0
  8569  001B68  0100               	movlb	0	; () banked
  8570  001B6A  0783               	decf	___ftadd@sign& (0+255),f,b
  8571  001B6C  C083  F080         	movff	___ftadd@sign,??___ftadd
  8572  001B70  0E07               	movlw	7
  8573  001B72  0100               	movlb	0	; () banked
  8574  001B74  1780               	andwf	??___ftadd& (0+255),f,b
  8575  001B76  B4D8               	btfsc	status,2,c
  8576  001B78  D00A               	goto	l4070
  8577  001B7A  D7E9               	goto	l4062
  8578                           
  8579                           ; BSR set to: 0
  8580                           
  8581                           ; BSR set to: 0
  8582  001B7C  D008               	goto	l4070
  8583  001B7E                     l4068:
  8584                           
  8585                           ; BSR set to: 0
  8586  001B7E  0100               	movlb	0	; () banked
  8587  001B80  90D8               	bcf	status,0,c
  8588  001B82  337C               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  8589  001B84  337B               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  8590  001B86  337A               	rrcf	___ftadd@f1& (0+255),f,b
  8591  001B88  0100               	movlb	0	; () banked
  8592  001B8A  2B85               	incf	___ftadd@exp1& (0+255),f,b
  8593  001B8C  D000               	goto	l4070
  8594  001B8E                     l4070:
  8595                           
  8596                           ; BSR set to: 0
  8597  001B8E  0100               	movlb	0	; () banked
  8598  001B90  5184               	movf	___ftadd@exp2& (0+255),w,b
  8599  001B92  0100               	movlb	0	; () banked
  8600  001B94  1985               	xorwf	___ftadd@exp1& (0+255),w,b
  8601  001B96  B4D8               	btfsc	status,2,c
  8602  001B98  D030               	goto	l1000
  8603  001B9A  D7F1               	goto	l4068
  8604                           
  8605                           ; BSR set to: 0
  8606  001B9C  D02E               	goto	l1000
  8607  001B9E                     l4072:
  8608                           
  8609                           ; BSR set to: 0
  8610  001B9E  0100               	movlb	0	; () banked
  8611  001BA0  5185               	movf	___ftadd@exp1& (0+255),w,b
  8612  001BA2  0100               	movlb	0	; () banked
  8613  001BA4  5D84               	subwf	___ftadd@exp2& (0+255),w,b
  8614  001BA6  B0D8               	btfsc	status,0,c
  8615  001BA8  D028               	goto	l1000
  8616  001BAA                     l4074:
  8617                           
  8618                           ; BSR set to: 0
  8619  001BAA  0100               	movlb	0	; () banked
  8620  001BAC  90D8               	bcf	status,0,c
  8621  001BAE  377A               	rlcf	___ftadd@f1& (0+255),f,b
  8622  001BB0  377B               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  8623  001BB2  377C               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  8624  001BB4  0100               	movlb	0	; () banked
  8625  001BB6  0785               	decf	___ftadd@exp1& (0+255),f,b
  8626                           
  8627                           ; BSR set to: 0
  8628  001BB8  0100               	movlb	0	; () banked
  8629  001BBA  5185               	movf	___ftadd@exp1& (0+255),w,b
  8630  001BBC  0100               	movlb	0	; () banked
  8631  001BBE  1984               	xorwf	___ftadd@exp2& (0+255),w,b
  8632  001BC0  B4D8               	btfsc	status,2,c
  8633  001BC2  D013               	goto	l4082
  8634                           
  8635                           ; BSR set to: 0
  8636  001BC4  0100               	movlb	0	; () banked
  8637  001BC6  0783               	decf	___ftadd@sign& (0+255),f,b
  8638  001BC8  C083  F080         	movff	___ftadd@sign,??___ftadd
  8639  001BCC  0E07               	movlw	7
  8640  001BCE  0100               	movlb	0	; () banked
  8641  001BD0  1780               	andwf	??___ftadd& (0+255),f,b
  8642  001BD2  B4D8               	btfsc	status,2,c
  8643  001BD4  D00A               	goto	l4082
  8644  001BD6  D7E9               	goto	l4074
  8645                           
  8646                           ; BSR set to: 0
  8647                           
  8648                           ; BSR set to: 0
  8649  001BD8  D008               	goto	l4082
  8650  001BDA                     l4080:
  8651                           
  8652                           ; BSR set to: 0
  8653  001BDA  0100               	movlb	0	; () banked
  8654  001BDC  90D8               	bcf	status,0,c
  8655  001BDE  337F               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  8656  001BE0  337E               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  8657  001BE2  337D               	rrcf	___ftadd@f2& (0+255),f,b
  8658  001BE4  0100               	movlb	0	; () banked
  8659  001BE6  2B84               	incf	___ftadd@exp2& (0+255),f,b
  8660  001BE8  D000               	goto	l4082
  8661  001BEA                     l4082:
  8662                           
  8663                           ; BSR set to: 0
  8664  001BEA  0100               	movlb	0	; () banked
  8665  001BEC  5184               	movf	___ftadd@exp2& (0+255),w,b
  8666  001BEE  0100               	movlb	0	; () banked
  8667  001BF0  1985               	xorwf	___ftadd@exp1& (0+255),w,b
  8668  001BF2  B4D8               	btfsc	status,2,c
  8669  001BF4  D002               	goto	l1000
  8670  001BF6  D7F1               	goto	l4080
  8671                           
  8672                           ; BSR set to: 0
  8673  001BF8  D000               	goto	l1000
  8674  001BFA                     l1000:
  8675                           
  8676                           ; BSR set to: 0
  8677  001BFA  0100               	movlb	0	; () banked
  8678  001BFC  AF83               	btfss	___ftadd@sign& (0+255),7,b
  8679  001BFE  D012               	goto	l1009
  8680                           
  8681                           ; BSR set to: 0
  8682  001C00  0EFF               	movlw	255
  8683  001C02  0100               	movlb	0	; () banked
  8684  001C04  1B7A               	xorwf	___ftadd@f1& (0+255),f,b
  8685  001C06  0EFF               	movlw	255
  8686  001C08  0100               	movlb	0	; () banked
  8687  001C0A  1B7B               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  8688  001C0C  0EFF               	movlw	255
  8689  001C0E  0100               	movlb	0	; () banked
  8690  001C10  1B7C               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  8691  001C12  0E01               	movlw	1
  8692  001C14  0100               	movlb	0	; () banked
  8693  001C16  277A               	addwf	___ftadd@f1& (0+255),f,b
  8694  001C18  0E00               	movlw	0
  8695  001C1A  0100               	movlb	0	; () banked
  8696  001C1C  237B               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  8697  001C1E  0E00               	movlw	0
  8698  001C20  0100               	movlb	0	; () banked
  8699  001C22  237C               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  8700  001C24                     l1009:
  8701                           
  8702                           ; BSR set to: 0
  8703  001C24  0100               	movlb	0	; () banked
  8704  001C26  AD83               	btfss	___ftadd@sign& (0+255),6,b
  8705  001C28  D013               	goto	l4088
  8706                           
  8707                           ; BSR set to: 0
  8708  001C2A  0EFF               	movlw	255
  8709  001C2C  0100               	movlb	0	; () banked
  8710  001C2E  1B7D               	xorwf	___ftadd@f2& (0+255),f,b
  8711  001C30  0EFF               	movlw	255
  8712  001C32  0100               	movlb	0	; () banked
  8713  001C34  1B7E               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8714  001C36  0EFF               	movlw	255
  8715  001C38  0100               	movlb	0	; () banked
  8716  001C3A  1B7F               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8717  001C3C  0E01               	movlw	1
  8718  001C3E  0100               	movlb	0	; () banked
  8719  001C40  277D               	addwf	___ftadd@f2& (0+255),f,b
  8720  001C42  0E00               	movlw	0
  8721  001C44  0100               	movlb	0	; () banked
  8722  001C46  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8723  001C48  0E00               	movlw	0
  8724  001C4A  0100               	movlb	0	; () banked
  8725  001C4C  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8726  001C4E  D000               	goto	l4088
  8727  001C50                     l4088:
  8728                           
  8729                           ; BSR set to: 0
  8730  001C50  0E00               	movlw	0
  8731  001C52  0100               	movlb	0	; () banked
  8732  001C54  6F83               	movwf	___ftadd@sign& (0+255),b
  8733                           
  8734                           ; BSR set to: 0
  8735  001C56  0100               	movlb	0	; () banked
  8736  001C58  517A               	movf	___ftadd@f1& (0+255),w,b
  8737  001C5A  0100               	movlb	0	; () banked
  8738  001C5C  277D               	addwf	___ftadd@f2& (0+255),f,b
  8739  001C5E  0100               	movlb	0	; () banked
  8740  001C60  517B               	movf	(___ftadd@f1+1)& (0+255),w,b
  8741  001C62  0100               	movlb	0	; () banked
  8742  001C64  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8743  001C66  0100               	movlb	0	; () banked
  8744  001C68  517C               	movf	(___ftadd@f1+2)& (0+255),w,b
  8745  001C6A  0100               	movlb	0	; () banked
  8746  001C6C  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8747                           
  8748                           ; BSR set to: 0
  8749  001C6E  0100               	movlb	0	; () banked
  8750  001C70  AF7F               	btfss	(___ftadd@f2+2)& (0+255),7,b
  8751  001C72  D016               	goto	l4098
  8752                           
  8753                           ; BSR set to: 0
  8754  001C74  0EFF               	movlw	255
  8755  001C76  0100               	movlb	0	; () banked
  8756  001C78  1B7D               	xorwf	___ftadd@f2& (0+255),f,b
  8757  001C7A  0EFF               	movlw	255
  8758  001C7C  0100               	movlb	0	; () banked
  8759  001C7E  1B7E               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  8760  001C80  0EFF               	movlw	255
  8761  001C82  0100               	movlb	0	; () banked
  8762  001C84  1B7F               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  8763  001C86  0E01               	movlw	1
  8764  001C88  0100               	movlb	0	; () banked
  8765  001C8A  277D               	addwf	___ftadd@f2& (0+255),f,b
  8766  001C8C  0E00               	movlw	0
  8767  001C8E  0100               	movlb	0	; () banked
  8768  001C90  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  8769  001C92  0E00               	movlw	0
  8770  001C94  0100               	movlb	0	; () banked
  8771  001C96  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  8772                           
  8773                           ; BSR set to: 0
  8774  001C98  0E01               	movlw	1
  8775  001C9A  0100               	movlb	0	; () banked
  8776  001C9C  6F83               	movwf	___ftadd@sign& (0+255),b
  8777  001C9E  D000               	goto	l4098
  8778  001CA0                     l4098:
  8779                           
  8780                           ; BSR set to: 0
  8781  001CA0  C07D  F060         	movff	___ftadd@f2,___ftpack@arg
  8782  001CA4  C07E  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
  8783  001CA8  C07F  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
  8784  001CAC  C085  F063         	movff	___ftadd@exp1,___ftpack@exp
  8785  001CB0  C083  F064         	movff	___ftadd@sign,___ftpack@sign
  8786  001CB4  ECC3  F011         	call	___ftpack	;wreg free
  8787  001CB8  C060  F07A         	movff	?___ftpack,?___ftadd
  8788  001CBC  C061  F07B         	movff	?___ftpack+1,?___ftadd+1
  8789  001CC0  C062  F07C         	movff	?___ftpack+2,?___ftadd+2
  8790  001CC4  D000               	goto	l986
  8791  001CC6                     l986:
  8792  001CC6  0012               	return		;funcret
  8793  001CC8                     __end_of___ftadd:
  8794                           	opt stack 0
  8795                           tblptru	equ	0xFF8
  8796                           tblptrh	equ	0xFF7
  8797                           tblptrl	equ	0xFF6
  8798                           tablat	equ	0xFF5
  8799                           intcon	equ	0xFF2
  8800                           intcon2	equ	0xFF1
  8801                           intcon3	equ	0xFF0
  8802                           postinc0	equ	0xFEE
  8803                           wreg	equ	0xFE8
  8804                           postinc1	equ	0xFE6
  8805                           postdec1	equ	0xFE5
  8806                           fsr1h	equ	0xFE2
  8807                           fsr1l	equ	0xFE1
  8808                           postinc2	equ	0xFDE
  8809                           postdec2	equ	0xFDD
  8810                           fsr2h	equ	0xFDA
  8811                           fsr2l	equ	0xFD9
  8812                           status	equ	0xFD8
  8813                           
  8814 ;; *************** function ___ftmul *****************
  8815 ;; Defined at:
  8816 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  8817 ;; Parameters:    Size  Location     Type
  8818 ;;  f1              3    8[BANK0 ] float 
  8819 ;;  f2              3   11[BANK0 ] float 
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
  8822 ;;  sign            1   22[BANK0 ] unsigned char 
  8823 ;;  cntr            1   21[BANK0 ] unsigned char 
  8824 ;;  exp             1   17[BANK0 ] unsigned char 
  8825 ;; Return value:  Size  Location     Type
  8826 ;;                  3    8[BANK0 ] float 
  8827 ;; Registers used:
  8828 ;;		wreg, status,2, status,0, cstack
  8829 ;; Tracked objects:
  8830 ;;		On entry : 0/0
  8831 ;;		On exit  : 0/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  8834 ;;      Params:         0       6       0       0
  8835 ;;      Locals:         0       6       0       0
  8836 ;;      Temps:          0       3       0       0
  8837 ;;      Totals:         0      15       0       0
  8838 ;;Total ram usage:       15 bytes
  8839 ;; Hardware stack levels used:    1
  8840 ;; Hardware stack levels required when called:    7
  8841 ;; This function calls:
  8842 ;;		___ftpack
  8843 ;; This function is called by:
  8844 ;;		_envoit_pwm
  8845 ;;		_obtention_angle
  8846 ;;		_triangulation
  8847 ;;		_conversion_degre_radian
  8848 ;;		_check_divergence_position
  8849 ;;		_sqrt
  8850 ;;		_sin
  8851 ;;		_eval_poly
  8852 ;;		_conversion_angle
  8853 ;;		_fonction_PID
  8854 ;;		_mesure_vitesse
  8855 ;; This function uses a non-reentrant model
  8856 ;;
  8857                           
  8858                           	psect	text37
  8859  001E8C                     __ptext37:
  8860                           	opt stack 0
  8861  001E8C                     ___ftmul:
  8862                           	opt stack 22
  8863                           
  8864                           ;incstack = 0
  8865  001E8C  C06A  F06E         	movff	___ftmul@f1+2,??___ftmul
  8866  001E90  0100               	movlb	0	; () banked
  8867  001E92  6B6F               	clrf	(??___ftmul+1)& (0+255),b
  8868  001E94  6B70               	clrf	(??___ftmul+2)& (0+255),b
  8869  001E96  0100               	movlb	0	; () banked
  8870  001E98  3569               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  8871  001E9A  0100               	movlb	0	; () banked
  8872  001E9C  376E               	rlcf	??___ftmul& (0+255),f,b
  8873  001E9E  E301               	bnc	u3501
  8874  001EA0  816F               	bsf	(??___ftmul+1)& (0+255),0,b
  8875  001EA2                     u3501:
  8876  001EA2  0100               	movlb	0	; () banked
  8877  001EA4  516E               	movf	??___ftmul& (0+255),w,b
  8878  001EA6  0100               	movlb	0	; () banked
  8879  001EA8  6F71               	movwf	___ftmul@exp& (0+255),b
  8880  001EAA  0100               	movlb	0	; () banked
  8881  001EAC  5171               	movf	___ftmul@exp& (0+255),w,b
  8882  001EAE  A4D8               	btfss	status,2,c
  8883  001EB0  D002               	goto	l4108
  8884  001EB2  D014               	goto	l4110
  8885                           
  8886                           ; BSR set to: 0
  8887                           
  8888                           ; BSR set to: 0
  8889  001EB4  D098               	goto	l1032
  8890  001EB6                     l4108:
  8891                           
  8892                           ; BSR set to: 0
  8893  001EB6  C06D  F06E         	movff	___ftmul@f2+2,??___ftmul
  8894  001EBA  0100               	movlb	0	; () banked
  8895  001EBC  6B6F               	clrf	(??___ftmul+1)& (0+255),b
  8896  001EBE  6B70               	clrf	(??___ftmul+2)& (0+255),b
  8897  001EC0  0100               	movlb	0	; () banked
  8898  001EC2  356C               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  8899  001EC4  0100               	movlb	0	; () banked
  8900  001EC6  376E               	rlcf	??___ftmul& (0+255),f,b
  8901  001EC8  E301               	bnc	u3521
  8902  001ECA  816F               	bsf	(??___ftmul+1)& (0+255),0,b
  8903  001ECC                     u3521:
  8904  001ECC  0100               	movlb	0	; () banked
  8905  001ECE  516E               	movf	??___ftmul& (0+255),w,b
  8906  001ED0  0100               	movlb	0	; () banked
  8907  001ED2  6F76               	movwf	___ftmul@sign& (0+255),b
  8908  001ED4  0100               	movlb	0	; () banked
  8909  001ED6  5176               	movf	___ftmul@sign& (0+255),w,b
  8910  001ED8  A4D8               	btfss	status,2,c
  8911  001EDA  D00A               	goto	l4114
  8912  001EDC                     l4110:
  8913                           
  8914                           ; BSR set to: 0
  8915  001EDC  0E00               	movlw	0
  8916  001EDE  0100               	movlb	0	; () banked
  8917  001EE0  6F68               	movwf	?___ftmul& (0+255),b
  8918  001EE2  0E00               	movlw	0
  8919  001EE4  0100               	movlb	0	; () banked
  8920  001EE6  6F69               	movwf	(?___ftmul+1)& (0+255),b
  8921  001EE8  0E00               	movlw	0
  8922  001EEA  0100               	movlb	0	; () banked
  8923  001EEC  6F6A               	movwf	(?___ftmul+2)& (0+255),b
  8924                           
  8925                           ; BSR set to: 0
  8926  001EEE  D07B               	goto	l1032
  8927  001EF0                     l4114:
  8928                           
  8929                           ; BSR set to: 0
  8930  001EF0  0100               	movlb	0	; () banked
  8931  001EF2  5176               	movf	___ftmul@sign& (0+255),w,b
  8932  001EF4  0F7B               	addlw	123
  8933  001EF6  0100               	movlb	0	; () banked
  8934  001EF8  2771               	addwf	___ftmul@exp& (0+255),f,b
  8935                           
  8936                           ; BSR set to: 0
  8937  001EFA  C06A  F076         	movff	___ftmul@f1+2,___ftmul@sign
  8938  001EFE  0100               	movlb	0	; () banked
  8939  001F00  516D               	movf	(___ftmul@f2+2)& (0+255),w,b
  8940  001F02  0100               	movlb	0	; () banked
  8941  001F04  1B76               	xorwf	___ftmul@sign& (0+255),f,b
  8942  001F06  0E80               	movlw	128
  8943  001F08  0100               	movlb	0	; () banked
  8944  001F0A  1776               	andwf	___ftmul@sign& (0+255),f,b
  8945                           
  8946                           ; BSR set to: 0
  8947  001F0C  0100               	movlb	0	; () banked
  8948  001F0E  8F69               	bsf	(___ftmul@f1+1)& (0+255),7,b
  8949                           
  8950                           ; BSR set to: 0
  8951  001F10  0100               	movlb	0	; () banked
  8952  001F12  8F6C               	bsf	(___ftmul@f2+1)& (0+255),7,b
  8953                           
  8954                           ; BSR set to: 0
  8955  001F14  0EFF               	movlw	255
  8956  001F16  0100               	movlb	0	; () banked
  8957  001F18  176B               	andwf	___ftmul@f2& (0+255),f,b
  8958  001F1A  0EFF               	movlw	255
  8959  001F1C  0100               	movlb	0	; () banked
  8960  001F1E  176C               	andwf	(___ftmul@f2+1)& (0+255),f,b
  8961  001F20  0E00               	movlw	0
  8962  001F22  0100               	movlb	0	; () banked
  8963  001F24  176D               	andwf	(___ftmul@f2+2)& (0+255),f,b
  8964                           
  8965                           ; BSR set to: 0
  8966  001F26  0E00               	movlw	0
  8967  001F28  0100               	movlb	0	; () banked
  8968  001F2A  6F72               	movwf	___ftmul@f3_as_product& (0+255),b
  8969  001F2C  0E00               	movlw	0
  8970  001F2E  0100               	movlb	0	; () banked
  8971  001F30  6F73               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  8972  001F32  0E00               	movlw	0
  8973  001F34  0100               	movlb	0	; () banked
  8974  001F36  6F74               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  8975                           
  8976                           ; BSR set to: 0
  8977  001F38  0E07               	movlw	7
  8978  001F3A  0100               	movlb	0	; () banked
  8979  001F3C  6F75               	movwf	___ftmul@cntr& (0+255),b
  8980  001F3E  D000               	goto	l4128
  8981  001F40                     l4128:
  8982                           
  8983                           ; BSR set to: 0
  8984  001F40  0100               	movlb	0	; () banked
  8985  001F42  A168               	btfss	___ftmul@f1& (0+255),0,b
  8986  001F44  D00D               	goto	l4132
  8987                           
  8988                           ; BSR set to: 0
  8989  001F46  0100               	movlb	0	; () banked
  8990  001F48  516B               	movf	___ftmul@f2& (0+255),w,b
  8991  001F4A  0100               	movlb	0	; () banked
  8992  001F4C  2772               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8993  001F4E  0100               	movlb	0	; () banked
  8994  001F50  516C               	movf	(___ftmul@f2+1)& (0+255),w,b
  8995  001F52  0100               	movlb	0	; () banked
  8996  001F54  2373               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8997  001F56  0100               	movlb	0	; () banked
  8998  001F58  516D               	movf	(___ftmul@f2+2)& (0+255),w,b
  8999  001F5A  0100               	movlb	0	; () banked
  9000  001F5C  2374               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9001  001F5E  D000               	goto	l4132
  9002  001F60                     l4132:
  9003                           
  9004                           ; BSR set to: 0
  9005  001F60  0100               	movlb	0	; () banked
  9006  001F62  90D8               	bcf	status,0,c
  9007  001F64  336A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9008  001F66  3369               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9009  001F68  3368               	rrcf	___ftmul@f1& (0+255),f,b
  9010  001F6A  0100               	movlb	0	; () banked
  9011  001F6C  90D8               	bcf	status,0,c
  9012  001F6E  376B               	rlcf	___ftmul@f2& (0+255),f,b
  9013  001F70  376C               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  9014  001F72  376D               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  9015                           
  9016                           ; BSR set to: 0
  9017  001F74  0100               	movlb	0	; () banked
  9018  001F76  2F75               	decfsz	___ftmul@cntr& (0+255),f,b
  9019  001F78  D7E3               	goto	l4128
  9020  001F7A  D000               	goto	l4136
  9021  001F7C                     l4136:
  9022                           
  9023                           ; BSR set to: 0
  9024  001F7C  0E09               	movlw	9
  9025  001F7E  0100               	movlb	0	; () banked
  9026  001F80  6F75               	movwf	___ftmul@cntr& (0+255),b
  9027  001F82  D000               	goto	l4138
  9028  001F84                     l4138:
  9029                           
  9030                           ; BSR set to: 0
  9031  001F84  0100               	movlb	0	; () banked
  9032  001F86  A168               	btfss	___ftmul@f1& (0+255),0,b
  9033  001F88  D00D               	goto	l4142
  9034                           
  9035                           ; BSR set to: 0
  9036  001F8A  0100               	movlb	0	; () banked
  9037  001F8C  516B               	movf	___ftmul@f2& (0+255),w,b
  9038  001F8E  0100               	movlb	0	; () banked
  9039  001F90  2772               	addwf	___ftmul@f3_as_product& (0+255),f,b
  9040  001F92  0100               	movlb	0	; () banked
  9041  001F94  516C               	movf	(___ftmul@f2+1)& (0+255),w,b
  9042  001F96  0100               	movlb	0	; () banked
  9043  001F98  2373               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  9044  001F9A  0100               	movlb	0	; () banked
  9045  001F9C  516D               	movf	(___ftmul@f2+2)& (0+255),w,b
  9046  001F9E  0100               	movlb	0	; () banked
  9047  001FA0  2374               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  9048  001FA2  D000               	goto	l4142
  9049  001FA4                     l4142:
  9050                           
  9051                           ; BSR set to: 0
  9052  001FA4  0100               	movlb	0	; () banked
  9053  001FA6  90D8               	bcf	status,0,c
  9054  001FA8  336A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  9055  001FAA  3369               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  9056  001FAC  3368               	rrcf	___ftmul@f1& (0+255),f,b
  9057  001FAE  0100               	movlb	0	; () banked
  9058  001FB0  90D8               	bcf	status,0,c
  9059  001FB2  3374               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  9060  001FB4  3373               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  9061  001FB6  3372               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  9062                           
  9063                           ; BSR set to: 0
  9064  001FB8  0100               	movlb	0	; () banked
  9065  001FBA  2F75               	decfsz	___ftmul@cntr& (0+255),f,b
  9066  001FBC  D7E3               	goto	l4138
  9067  001FBE  D000               	goto	l4146
  9068  001FC0                     l4146:
  9069                           
  9070                           ; BSR set to: 0
  9071  001FC0  C072  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  9072  001FC4  C073  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  9073  001FC8  C074  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  9074  001FCC  C071  F063         	movff	___ftmul@exp,___ftpack@exp
  9075  001FD0  C076  F064         	movff	___ftmul@sign,___ftpack@sign
  9076  001FD4  ECC3  F011         	call	___ftpack	;wreg free
  9077  001FD8  C060  F068         	movff	?___ftpack,?___ftmul
  9078  001FDC  C061  F069         	movff	?___ftpack+1,?___ftmul+1
  9079  001FE0  C062  F06A         	movff	?___ftpack+2,?___ftmul+2
  9080  001FE4  D000               	goto	l1032
  9081  001FE6                     l1032:
  9082  001FE6  0012               	return		;funcret
  9083  001FE8                     __end_of___ftmul:
  9084                           	opt stack 0
  9085                           tblptru	equ	0xFF8
  9086                           tblptrh	equ	0xFF7
  9087                           tblptrl	equ	0xFF6
  9088                           tablat	equ	0xFF5
  9089                           intcon	equ	0xFF2
  9090                           intcon2	equ	0xFF1
  9091                           intcon3	equ	0xFF0
  9092                           postinc0	equ	0xFEE
  9093                           wreg	equ	0xFE8
  9094                           postinc1	equ	0xFE6
  9095                           postdec1	equ	0xFE5
  9096                           fsr1h	equ	0xFE2
  9097                           fsr1l	equ	0xFE1
  9098                           postinc2	equ	0xFDE
  9099                           postdec2	equ	0xFDD
  9100                           fsr2h	equ	0xFDA
  9101                           fsr2l	equ	0xFD9
  9102                           status	equ	0xFD8
  9103                           
  9104 ;; *************** function ___ftpack *****************
  9105 ;; Defined at:
  9106 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  9107 ;; Parameters:    Size  Location     Type
  9108 ;;  arg             3    0[BANK0 ] unsigned um
  9109 ;;  exp             1    3[BANK0 ] unsigned char 
  9110 ;;  sign            1    4[BANK0 ] unsigned char 
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;		None
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  3    0[BANK0 ] float 
  9115 ;; Registers used:
  9116 ;;		wreg, status,2, status,0
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9122 ;;      Params:         0       5       0       0
  9123 ;;      Locals:         0       0       0       0
  9124 ;;      Temps:          0       3       0       0
  9125 ;;      Totals:         0       8       0       0
  9126 ;;Total ram usage:        8 bytes
  9127 ;; Hardware stack levels used:    1
  9128 ;; Hardware stack levels required when called:    6
  9129 ;; This function calls:
  9130 ;;		Nothing
  9131 ;; This function is called by:
  9132 ;;		___altoft
  9133 ;;		___ftadd
  9134 ;;		___ftdiv
  9135 ;;		___ftmul
  9136 ;;		___lwtoft
  9137 ;; This function uses a non-reentrant model
  9138 ;;
  9139                           
  9140                           	psect	text38
  9141  002386                     __ptext38:
  9142                           	opt stack 0
  9143  002386                     ___ftpack:
  9144                           	opt stack 22
  9145                           
  9146                           ;incstack = 0
  9147  002386  0100               	movlb	0	; () banked
  9148  002388  5163               	movf	___ftpack@exp& (0+255),w,b
  9149  00238A  0100               	movlb	0	; () banked
  9150  00238C  B4D8               	btfsc	status,2,c
  9151  00238E  D008               	goto	l3978
  9152                           
  9153                           ; BSR set to: 0
  9154  002390  0100               	movlb	0	; () banked
  9155  002392  5160               	movf	___ftpack@arg& (0+255),w,b
  9156  002394  0100               	movlb	0	; () banked
  9157  002396  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  9158  002398  0100               	movlb	0	; () banked
  9159  00239A  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  9160  00239C  A4D8               	btfss	status,2,c
  9161  00239E  D013               	goto	l3984
  9162  0023A0                     l3978:
  9163                           
  9164                           ; BSR set to: 0
  9165  0023A0  0E00               	movlw	0
  9166  0023A2  0100               	movlb	0	; () banked
  9167  0023A4  6F60               	movwf	?___ftpack& (0+255),b
  9168  0023A6  0E00               	movlw	0
  9169  0023A8  0100               	movlb	0	; () banked
  9170  0023AA  6F61               	movwf	(?___ftpack+1)& (0+255),b
  9171  0023AC  0E00               	movlw	0
  9172  0023AE  0100               	movlb	0	; () banked
  9173  0023B0  6F62               	movwf	(?___ftpack+2)& (0+255),b
  9174                           
  9175                           ; BSR set to: 0
  9176  0023B2  D078               	goto	l945
  9177                           
  9178                           ; BSR set to: 0
  9179  0023B4  D008               	goto	l3984
  9180  0023B6                     l3982:
  9181                           
  9182                           ; BSR set to: 0
  9183  0023B6  0100               	movlb	0	; () banked
  9184  0023B8  2B63               	incf	___ftpack@exp& (0+255),f,b
  9185  0023BA  0100               	movlb	0	; () banked
  9186  0023BC  90D8               	bcf	status,0,c
  9187  0023BE  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9188  0023C0  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9189  0023C2  3360               	rrcf	___ftpack@arg& (0+255),f,b
  9190  0023C4  D000               	goto	l3984
  9191  0023C6                     l3984:
  9192                           
  9193                           ; BSR set to: 0
  9194  0023C6  0E00               	movlw	0
  9195  0023C8  0100               	movlb	0	; () banked
  9196  0023CA  1560               	andwf	___ftpack@arg& (0+255),w,b
  9197  0023CC  0100               	movlb	0	; () banked
  9198  0023CE  6F65               	movwf	??___ftpack& (0+255),b
  9199  0023D0  0E00               	movlw	0
  9200  0023D2  0100               	movlb	0	; () banked
  9201  0023D4  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9202  0023D6  0100               	movlb	0	; () banked
  9203  0023D8  6F66               	movwf	(??___ftpack+1)& (0+255),b
  9204  0023DA  0EFE               	movlw	254
  9205  0023DC  0100               	movlb	0	; () banked
  9206  0023DE  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9207  0023E0  0100               	movlb	0	; () banked
  9208  0023E2  6F67               	movwf	(??___ftpack+2)& (0+255),b
  9209  0023E4  0100               	movlb	0	; () banked
  9210  0023E6  5165               	movf	??___ftpack& (0+255),w,b
  9211  0023E8  0100               	movlb	0	; () banked
  9212  0023EA  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  9213  0023EC  0100               	movlb	0	; () banked
  9214  0023EE  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  9215  0023F0  B4D8               	btfsc	status,2,c
  9216  0023F2  D013               	goto	l3990
  9217  0023F4  D7E0               	goto	l3982
  9218                           
  9219                           ; BSR set to: 0
  9220  0023F6  D011               	goto	l3990
  9221  0023F8                     l3986:
  9222                           
  9223                           ; BSR set to: 0
  9224  0023F8  0100               	movlb	0	; () banked
  9225  0023FA  2B63               	incf	___ftpack@exp& (0+255),f,b
  9226                           
  9227                           ; BSR set to: 0
  9228  0023FC  0E01               	movlw	1
  9229  0023FE  0100               	movlb	0	; () banked
  9230  002400  2760               	addwf	___ftpack@arg& (0+255),f,b
  9231  002402  0E00               	movlw	0
  9232  002404  0100               	movlb	0	; () banked
  9233  002406  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  9234  002408  0E00               	movlw	0
  9235  00240A  0100               	movlb	0	; () banked
  9236  00240C  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  9237  00240E  0100               	movlb	0	; () banked
  9238  002410  90D8               	bcf	status,0,c
  9239  002412  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9240  002414  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9241  002416  3360               	rrcf	___ftpack@arg& (0+255),f,b
  9242  002418  D000               	goto	l3990
  9243  00241A                     l3990:
  9244                           
  9245                           ; BSR set to: 0
  9246  00241A  0E00               	movlw	0
  9247  00241C  0100               	movlb	0	; () banked
  9248  00241E  1560               	andwf	___ftpack@arg& (0+255),w,b
  9249  002420  0100               	movlb	0	; () banked
  9250  002422  6F65               	movwf	??___ftpack& (0+255),b
  9251  002424  0E00               	movlw	0
  9252  002426  0100               	movlb	0	; () banked
  9253  002428  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9254  00242A  0100               	movlb	0	; () banked
  9255  00242C  6F66               	movwf	(??___ftpack+1)& (0+255),b
  9256  00242E  0EFF               	movlw	255
  9257  002430  0100               	movlb	0	; () banked
  9258  002432  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9259  002434  0100               	movlb	0	; () banked
  9260  002436  6F67               	movwf	(??___ftpack+2)& (0+255),b
  9261  002438  0100               	movlb	0	; () banked
  9262  00243A  5165               	movf	??___ftpack& (0+255),w,b
  9263  00243C  0100               	movlb	0	; () banked
  9264  00243E  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  9265  002440  0100               	movlb	0	; () banked
  9266  002442  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  9267  002444  B4D8               	btfsc	status,2,c
  9268  002446  D00A               	goto	l3994
  9269  002448  D7D7               	goto	l3986
  9270                           
  9271                           ; BSR set to: 0
  9272  00244A  D008               	goto	l3994
  9273  00244C                     l3992:
  9274                           
  9275                           ; BSR set to: 0
  9276  00244C  0100               	movlb	0	; () banked
  9277  00244E  0763               	decf	___ftpack@exp& (0+255),f,b
  9278  002450  0100               	movlb	0	; () banked
  9279  002452  90D8               	bcf	status,0,c
  9280  002454  3760               	rlcf	___ftpack@arg& (0+255),f,b
  9281  002456  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  9282  002458  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  9283  00245A  D000               	goto	l3994
  9284  00245C                     l3994:
  9285                           
  9286                           ; BSR set to: 0
  9287  00245C  0100               	movlb	0	; () banked
  9288  00245E  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  9289  002460  D005               	goto	l956
  9290                           
  9291                           ; BSR set to: 0
  9292  002462  0E02               	movlw	2
  9293  002464  0100               	movlb	0	; () banked
  9294  002466  6163               	cpfslt	___ftpack@exp& (0+255),b
  9295  002468  D7F1               	goto	l3992
  9296  00246A  D000               	goto	l956
  9297  00246C                     l956:
  9298                           
  9299                           ; BSR set to: 0
  9300  00246C  0100               	movlb	0	; () banked
  9301  00246E  B163               	btfsc	___ftpack@exp& (0+255),0,b
  9302  002470  D003               	goto	l4000
  9303                           
  9304                           ; BSR set to: 0
  9305  002472  0100               	movlb	0	; () banked
  9306  002474  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
  9307  002476  D000               	goto	l4000
  9308  002478                     l4000:
  9309                           
  9310                           ; BSR set to: 0
  9311  002478  0100               	movlb	0	; () banked
  9312  00247A  90D8               	bcf	status,0,c
  9313  00247C  3363               	rrcf	___ftpack@exp& (0+255),f,b
  9314  00247E  0100               	movlb	0	; () banked
  9315  002480  5163               	movf	___ftpack@exp& (0+255),w,b
  9316  002482  0100               	movlb	0	; () banked
  9317  002484  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  9318                           
  9319                           ; BSR set to: 0
  9320  002486  0100               	movlb	0	; () banked
  9321  002488  5164               	movf	___ftpack@sign& (0+255),w,b
  9322  00248A  0100               	movlb	0	; () banked
  9323  00248C  B4D8               	btfsc	status,2,c
  9324  00248E  D003               	goto	l4006
  9325                           
  9326                           ; BSR set to: 0
  9327  002490  0100               	movlb	0	; () banked
  9328  002492  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
  9329  002494  D000               	goto	l4006
  9330  002496                     l4006:
  9331                           
  9332                           ; BSR set to: 0
  9333  002496  C060  F060         	movff	___ftpack@arg,?___ftpack
  9334  00249A  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
  9335  00249E  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
  9336  0024A2  D000               	goto	l945
  9337  0024A4                     l945:
  9338                           
  9339                           ; BSR set to: 0
  9340  0024A4  0012               	return		;funcret
  9341  0024A6                     __end_of___ftpack:
  9342                           	opt stack 0
  9343                           tblptru	equ	0xFF8
  9344                           tblptrh	equ	0xFF7
  9345                           tblptrl	equ	0xFF6
  9346                           tablat	equ	0xFF5
  9347                           intcon	equ	0xFF2
  9348                           intcon2	equ	0xFF1
  9349                           intcon3	equ	0xFF0
  9350                           postinc0	equ	0xFEE
  9351                           wreg	equ	0xFE8
  9352                           postinc1	equ	0xFE6
  9353                           postdec1	equ	0xFE5
  9354                           fsr1h	equ	0xFE2
  9355                           fsr1l	equ	0xFE1
  9356                           postinc2	equ	0xFDE
  9357                           postdec2	equ	0xFDD
  9358                           fsr2h	equ	0xFDA
  9359                           fsr2l	equ	0xFD9
  9360                           status	equ	0xFD8
  9361                           
  9362 ;; *************** function ___ftge *****************
  9363 ;; Defined at:
  9364 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  9365 ;; Parameters:    Size  Location     Type
  9366 ;;  ff1             3   26[BANK0 ] float 
  9367 ;;  ff2             3   29[BANK0 ] float 
  9368 ;; Auto vars:     Size  Location     Type
  9369 ;;		None
  9370 ;; Return value:  Size  Location     Type
  9371 ;;		None               void
  9372 ;; Registers used:
  9373 ;;		wreg, status,2, status,0
  9374 ;; Tracked objects:
  9375 ;;		On entry : 0/0
  9376 ;;		On exit  : 0/0
  9377 ;;		Unchanged: 0/0
  9378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9379 ;;      Params:         0       6       0       0
  9380 ;;      Locals:         0       0       0       0
  9381 ;;      Temps:          0       3       0       0
  9382 ;;      Totals:         0       9       0       0
  9383 ;;Total ram usage:        9 bytes
  9384 ;; Hardware stack levels used:    1
  9385 ;; Hardware stack levels required when called:    6
  9386 ;; This function calls:
  9387 ;;		Nothing
  9388 ;; This function is called by:
  9389 ;;		_envoit_pwm
  9390 ;;		_saturation
  9391 ;;		_check_divergence_angle
  9392 ;;		_check_divergence_position
  9393 ;;		_modulo_angle
  9394 ;;		_sqrt
  9395 ;;		_cos
  9396 ;;		_sin
  9397 ;;		_floor
  9398 ;;		_ecretage_consignes
  9399 ;;		_saturation_erreur_integralle_vitesse
  9400 ;; This function uses a non-reentrant model
  9401 ;;
  9402                           
  9403                           	psect	text39
  9404  002922                     __ptext39:
  9405                           	opt stack 0
  9406  002922                     ___ftge:
  9407                           	opt stack 22
  9408                           
  9409                           ; BSR set to: 0
  9410                           ;incstack = 0
  9411  002922  0100               	movlb	0	; () banked
  9412  002924  AF7C               	btfss	(___ftge@ff1+2)& (0+255),7,b
  9413  002926  D01E               	goto	l4154
  9414                           
  9415                           ; BSR set to: 0
  9416  002928  C07A  F080         	movff	___ftge@ff1,??___ftge
  9417  00292C  C07B  F081         	movff	___ftge@ff1+1,??___ftge+1
  9418  002930  C07C  F082         	movff	___ftge@ff1+2,??___ftge+2
  9419  002934  0100               	movlb	0	; () banked
  9420  002936  1F80               	comf	??___ftge& (0+255),f,b
  9421  002938  1F81               	comf	(??___ftge+1)& (0+255),f,b
  9422  00293A  1F82               	comf	(??___ftge+2)& (0+255),f,b
  9423  00293C  2B80               	incf	??___ftge& (0+255),f,b
  9424  00293E  0E00               	movlw	0
  9425  002940  2381               	addwfc	(??___ftge+1)& (0+255),f,b
  9426  002942  2382               	addwfc	(??___ftge+2)& (0+255),f,b
  9427  002944  0E00               	movlw	0
  9428  002946  0100               	movlb	0	; () banked
  9429  002948  2580               	addwf	??___ftge& (0+255),w,b
  9430  00294A  0100               	movlb	0	; () banked
  9431  00294C  6F7A               	movwf	___ftge@ff1& (0+255),b
  9432  00294E  0E00               	movlw	0
  9433  002950  0100               	movlb	0	; () banked
  9434  002952  2181               	addwfc	(??___ftge+1)& (0+255),w,b
  9435  002954  0100               	movlb	0	; () banked
  9436  002956  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  9437  002958  0E80               	movlw	128
  9438  00295A  0100               	movlb	0	; () banked
  9439  00295C  2182               	addwfc	(??___ftge+2)& (0+255),w,b
  9440  00295E  0100               	movlb	0	; () banked
  9441  002960  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  9442  002962  D000               	goto	l4154
  9443  002964                     l4154:
  9444                           
  9445                           ; BSR set to: 0
  9446  002964  0100               	movlb	0	; () banked
  9447  002966  AF7F               	btfss	(___ftge@ff2+2)& (0+255),7,b
  9448  002968  D01E               	goto	l4158
  9449                           
  9450                           ; BSR set to: 0
  9451  00296A  C07D  F080         	movff	___ftge@ff2,??___ftge
  9452  00296E  C07E  F081         	movff	___ftge@ff2+1,??___ftge+1
  9453  002972  C07F  F082         	movff	___ftge@ff2+2,??___ftge+2
  9454  002976  0100               	movlb	0	; () banked
  9455  002978  1F80               	comf	??___ftge& (0+255),f,b
  9456  00297A  1F81               	comf	(??___ftge+1)& (0+255),f,b
  9457  00297C  1F82               	comf	(??___ftge+2)& (0+255),f,b
  9458  00297E  2B80               	incf	??___ftge& (0+255),f,b
  9459  002980  0E00               	movlw	0
  9460  002982  2381               	addwfc	(??___ftge+1)& (0+255),f,b
  9461  002984  2382               	addwfc	(??___ftge+2)& (0+255),f,b
  9462  002986  0E00               	movlw	0
  9463  002988  0100               	movlb	0	; () banked
  9464  00298A  2580               	addwf	??___ftge& (0+255),w,b
  9465  00298C  0100               	movlb	0	; () banked
  9466  00298E  6F7D               	movwf	___ftge@ff2& (0+255),b
  9467  002990  0E00               	movlw	0
  9468  002992  0100               	movlb	0	; () banked
  9469  002994  2181               	addwfc	(??___ftge+1)& (0+255),w,b
  9470  002996  0100               	movlb	0	; () banked
  9471  002998  6F7E               	movwf	(___ftge@ff2+1)& (0+255),b
  9472  00299A  0E80               	movlw	128
  9473  00299C  0100               	movlb	0	; () banked
  9474  00299E  2182               	addwfc	(??___ftge+2)& (0+255),w,b
  9475  0029A0  0100               	movlb	0	; () banked
  9476  0029A2  6F7F               	movwf	(___ftge@ff2+2)& (0+255),b
  9477  0029A4  D000               	goto	l4158
  9478  0029A6                     l4158:
  9479                           
  9480                           ; BSR set to: 0
  9481  0029A6  0E00               	movlw	0
  9482  0029A8  0100               	movlb	0	; () banked
  9483  0029AA  1B7A               	xorwf	___ftge@ff1& (0+255),f,b
  9484  0029AC  0E00               	movlw	0
  9485  0029AE  0100               	movlb	0	; () banked
  9486  0029B0  1B7B               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  9487  0029B2  0E80               	movlw	128
  9488  0029B4  0100               	movlb	0	; () banked
  9489  0029B6  1B7C               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  9490                           
  9491                           ; BSR set to: 0
  9492  0029B8  0E00               	movlw	0
  9493  0029BA  0100               	movlb	0	; () banked
  9494  0029BC  1B7D               	xorwf	___ftge@ff2& (0+255),f,b
  9495  0029BE  0E00               	movlw	0
  9496  0029C0  0100               	movlb	0	; () banked
  9497  0029C2  1B7E               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  9498  0029C4  0E80               	movlw	128
  9499  0029C6  0100               	movlb	0	; () banked
  9500  0029C8  1B7F               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  9501  0029CA  0100               	movlb	0	; () banked
  9502  0029CC  517D               	movf	___ftge@ff2& (0+255),w,b
  9503  0029CE  0100               	movlb	0	; () banked
  9504  0029D0  5D7A               	subwf	___ftge@ff1& (0+255),w,b
  9505  0029D2  0100               	movlb	0	; () banked
  9506  0029D4  517E               	movf	(___ftge@ff2+1)& (0+255),w,b
  9507  0029D6  0100               	movlb	0	; () banked
  9508  0029D8  597B               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  9509  0029DA  0100               	movlb	0	; () banked
  9510  0029DC  517F               	movf	(___ftge@ff2+2)& (0+255),w,b
  9511  0029DE  0100               	movlb	0	; () banked
  9512  0029E0  597C               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  9513  0029E2  B0D8               	btfsc	status,0,c
  9514  0029E4  D002               	goto	l4164
  9515                           
  9516                           ; BSR set to: 0
  9517  0029E6  90D8               	bcf	status,0,c
  9518  0029E8  D002               	goto	l1026
  9519  0029EA                     l4164:
  9520                           
  9521                           ; BSR set to: 0
  9522  0029EA  80D8               	bsf	status,0,c
  9523                           
  9524                           ; BSR set to: 0
  9525  0029EC  D000               	goto	l1026
  9526  0029EE                     l1026:
  9527                           
  9528                           ; BSR set to: 0
  9529  0029EE  0012               	return		;funcret
  9530  0029F0                     __end_of___ftge:
  9531                           	opt stack 0
  9532                           tblptru	equ	0xFF8
  9533                           tblptrh	equ	0xFF7
  9534                           tblptrl	equ	0xFF6
  9535                           tablat	equ	0xFF5
  9536                           intcon	equ	0xFF2
  9537                           intcon2	equ	0xFF1
  9538                           intcon3	equ	0xFF0
  9539                           postinc0	equ	0xFEE
  9540                           wreg	equ	0xFE8
  9541                           postinc1	equ	0xFE6
  9542                           postdec1	equ	0xFE5
  9543                           fsr1h	equ	0xFE2
  9544                           fsr1l	equ	0xFE1
  9545                           postinc2	equ	0xFDE
  9546                           postdec2	equ	0xFDD
  9547                           fsr2h	equ	0xFDA
  9548                           fsr2l	equ	0xFD9
  9549                           status	equ	0xFD8
  9550                           
  9551 ;; *************** function ___ftneg *****************
  9552 ;; Defined at:
  9553 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  9554 ;; Parameters:    Size  Location     Type
  9555 ;;  f1              3   23[BANK0 ] float 
  9556 ;; Auto vars:     Size  Location     Type
  9557 ;;		None
  9558 ;; Return value:  Size  Location     Type
  9559 ;;                  3   23[BANK0 ] float 
  9560 ;; Registers used:
  9561 ;;		wreg, status,2, status,0
  9562 ;; Tracked objects:
  9563 ;;		On entry : 0/0
  9564 ;;		On exit  : 0/0
  9565 ;;		Unchanged: 0/0
  9566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9567 ;;      Params:         0       3       0       0
  9568 ;;      Locals:         0       0       0       0
  9569 ;;      Temps:          0       0       0       0
  9570 ;;      Totals:         0       3       0       0
  9571 ;;Total ram usage:        3 bytes
  9572 ;; Hardware stack levels used:    1
  9573 ;; Hardware stack levels required when called:    6
  9574 ;; This function calls:
  9575 ;;		Nothing
  9576 ;; This function is called by:
  9577 ;;		_envoit_pwm
  9578 ;;		_triangulation
  9579 ;;		_saturation
  9580 ;;		_check_divergence_angle
  9581 ;;		_check_divergence_position
  9582 ;;		_sin
  9583 ;;		_fonction_PID
  9584 ;; This function uses a non-reentrant model
  9585 ;;
  9586                           
  9587                           	psect	text40
  9588  003746                     __ptext40:
  9589                           	opt stack 0
  9590  003746                     ___ftneg:
  9591                           	opt stack 22
  9592                           
  9593                           ; BSR set to: 0
  9594                           ;incstack = 0
  9595  003746  0100               	movlb	0	; () banked
  9596  003748  5177               	movf	___ftneg@f1& (0+255),w,b
  9597  00374A  0100               	movlb	0	; () banked
  9598  00374C  1178               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  9599  00374E  0100               	movlb	0	; () banked
  9600  003750  1179               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  9601  003752  B4D8               	btfsc	status,2,c
  9602  003754  D009               	goto	l1042
  9603                           
  9604                           ; BSR set to: 0
  9605  003756  0E00               	movlw	0
  9606  003758  0100               	movlb	0	; () banked
  9607  00375A  1B77               	xorwf	___ftneg@f1& (0+255),f,b
  9608  00375C  0E00               	movlw	0
  9609  00375E  0100               	movlb	0	; () banked
  9610  003760  1B78               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  9611  003762  0E80               	movlw	128
  9612  003764  0100               	movlb	0	; () banked
  9613  003766  1B79               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  9614  003768                     l1042:
  9615                           
  9616                           ; BSR set to: 0
  9617  003768  C077  F077         	movff	___ftneg@f1,?___ftneg
  9618  00376C  C078  F078         	movff	___ftneg@f1+1,?___ftneg+1
  9619  003770  C079  F079         	movff	___ftneg@f1+2,?___ftneg+2
  9620                           
  9621                           ; BSR set to: 0
  9622  003774  0012               	return		;funcret
  9623  003776                     __end_of___ftneg:
  9624                           	opt stack 0
  9625                           tblptru	equ	0xFF8
  9626                           tblptrh	equ	0xFF7
  9627                           tblptrl	equ	0xFF6
  9628                           tablat	equ	0xFF5
  9629                           intcon	equ	0xFF2
  9630                           intcon2	equ	0xFF1
  9631                           intcon3	equ	0xFF0
  9632                           postinc0	equ	0xFEE
  9633                           wreg	equ	0xFE8
  9634                           postinc1	equ	0xFE6
  9635                           postdec1	equ	0xFE5
  9636                           fsr1h	equ	0xFE2
  9637                           fsr1l	equ	0xFE1
  9638                           postinc2	equ	0xFDE
  9639                           postdec2	equ	0xFDD
  9640                           fsr2h	equ	0xFDA
  9641                           fsr2l	equ	0xFD9
  9642                           status	equ	0xFD8
  9643                           
  9644 ;; *************** function _affichage_position *****************
  9645 ;; Defined at:
  9646 ;;		line 172 in file "triangulation.c"
  9647 ;; Parameters:    Size  Location     Type
  9648 ;;  x               3   38[BANK0 ] float 
  9649 ;;  y               3   41[BANK0 ] float 
  9650 ;; Auto vars:     Size  Location     Type
  9651 ;;		None
  9652 ;; Return value:  Size  Location     Type
  9653 ;;		None               void
  9654 ;; Registers used:
  9655 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9656 ;; Tracked objects:
  9657 ;;		On entry : 0/0
  9658 ;;		On exit  : 0/0
  9659 ;;		Unchanged: 0/0
  9660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9661 ;;      Params:         0       6       0       0
  9662 ;;      Locals:         0       0       0       0
  9663 ;;      Temps:          0       0       0       0
  9664 ;;      Totals:         0       6       0       0
  9665 ;;Total ram usage:        6 bytes
  9666 ;; Hardware stack levels used:    1
  9667 ;; Hardware stack levels required when called:   10
  9668 ;; This function calls:
  9669 ;;		_PutIntUART
  9670 ;;		_PutsUART
  9671 ;;		___fttol
  9672 ;; This function is called by:
  9673 ;;		_main
  9674 ;; This function uses a non-reentrant model
  9675 ;;
  9676                           
  9677                           	psect	text41
  9678  00319E                     __ptext41:
  9679                           	opt stack 0
  9680  00319E                     _affichage_position:
  9681                           	opt stack 20
  9682                           
  9683                           ;triangulation.c: 174: PutsUART(0, "Position : X : ");
  9684                           
  9685                           ; BSR set to: 0
  9686                           ;incstack = 0
  9687  00319E  0EE1               	movlw	low STR_17
  9688  0031A0  0100               	movlb	0	; () banked
  9689  0031A2  6F7E               	movwf	PutsUART@chaine& (0+255),b
  9690  0031A4  0E3F               	movlw	high STR_17
  9691  0031A6  0100               	movlb	0	; () banked
  9692  0031A8  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  9693  0031AA  0E00               	movlw	0
  9694  0031AC  EC09  F019         	call	_PutsUART
  9695                           
  9696                           ;triangulation.c: 175: PutIntUART(0, (int16_t) x);
  9697  0031B0  C086  F060         	movff	affichage_position@x,___fttol@f1
  9698  0031B4  C087  F061         	movff	affichage_position@x+1,___fttol@f1+1
  9699  0031B8  C088  F062         	movff	affichage_position@x+2,___fttol@f1+2
  9700  0031BC  EC95  F010         	call	___fttol	;wreg free
  9701  0031C0  C060  F083         	movff	?___fttol,PutIntUART@nb
  9702  0031C4  C061  F084         	movff	?___fttol+1,PutIntUART@nb+1
  9703  0031C8  0E00               	movlw	0
  9704  0031CA  EC0A  F01C         	call	_PutIntUART
  9705                           
  9706                           ;triangulation.c: 176: PutsUART(0, " Y : ");
  9707  0031CE  0EF9               	movlw	low STR_18
  9708  0031D0  0100               	movlb	0	; () banked
  9709  0031D2  6F7E               	movwf	PutsUART@chaine& (0+255),b
  9710  0031D4  0E3F               	movlw	high STR_18
  9711  0031D6  0100               	movlb	0	; () banked
  9712  0031D8  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  9713  0031DA  0E00               	movlw	0
  9714  0031DC  EC09  F019         	call	_PutsUART
  9715                           
  9716                           ;triangulation.c: 177: PutIntUART(0, (int16_t) y);
  9717  0031E0  C089  F060         	movff	affichage_position@y,___fttol@f1
  9718  0031E4  C08A  F061         	movff	affichage_position@y+1,___fttol@f1+1
  9719  0031E8  C08B  F062         	movff	affichage_position@y+2,___fttol@f1+2
  9720  0031EC  EC95  F010         	call	___fttol	;wreg free
  9721  0031F0  C060  F083         	movff	?___fttol,PutIntUART@nb
  9722  0031F4  C061  F084         	movff	?___fttol+1,PutIntUART@nb+1
  9723  0031F8  0E00               	movlw	0
  9724  0031FA  EC0A  F01C         	call	_PutIntUART
  9725                           
  9726                           ;triangulation.c: 178: PutsUART(0, "\r");
  9727  0031FE  0E8C               	movlw	low (STR_3+22)
  9728  003200  0100               	movlb	0	; () banked
  9729  003202  6F7E               	movwf	PutsUART@chaine& (0+255),b
  9730  003204  0E3F               	movlw	high (STR_3+22)
  9731  003206  0100               	movlb	0	; () banked
  9732  003208  6F7F               	movwf	(PutsUART@chaine+1)& (0+255),b
  9733  00320A  0E00               	movlw	0
  9734  00320C  EC09  F019         	call	_PutsUART
  9735  003210  0012               	return		;funcret
  9736  003212                     __end_of_affichage_position:
  9737                           	opt stack 0
  9738                           tblptru	equ	0xFF8
  9739                           tblptrh	equ	0xFF7
  9740                           tblptrl	equ	0xFF6
  9741                           tablat	equ	0xFF5
  9742                           intcon	equ	0xFF2
  9743                           intcon2	equ	0xFF1
  9744                           intcon3	equ	0xFF0
  9745                           postinc0	equ	0xFEE
  9746                           wreg	equ	0xFE8
  9747                           postinc1	equ	0xFE6
  9748                           postdec1	equ	0xFE5
  9749                           fsr1h	equ	0xFE2
  9750                           fsr1l	equ	0xFE1
  9751                           postinc2	equ	0xFDE
  9752                           postdec2	equ	0xFDD
  9753                           fsr2h	equ	0xFDA
  9754                           fsr2l	equ	0xFD9
  9755                           status	equ	0xFD8
  9756                           
  9757 ;; *************** function ___fttol *****************
  9758 ;; Defined at:
  9759 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;  f1              3    0[BANK0 ] float 
  9762 ;; Auto vars:     Size  Location     Type
  9763 ;;  lval            4   10[BANK0 ] unsigned long 
  9764 ;;  exp1            1   14[BANK0 ] unsigned char 
  9765 ;;  sign1           1    9[BANK0 ] unsigned char 
  9766 ;; Return value:  Size  Location     Type
  9767 ;;                  4    0[BANK0 ] long 
  9768 ;; Registers used:
  9769 ;;		wreg, status,2, status,0
  9770 ;; Tracked objects:
  9771 ;;		On entry : 0/0
  9772 ;;		On exit  : 0/0
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  9775 ;;      Params:         0       4       0       0
  9776 ;;      Locals:         0       6       0       0
  9777 ;;      Temps:          0       5       0       0
  9778 ;;      Totals:         0      15       0       0
  9779 ;;Total ram usage:       15 bytes
  9780 ;; Hardware stack levels used:    1
  9781 ;; Hardware stack levels required when called:    6
  9782 ;; This function calls:
  9783 ;;		Nothing
  9784 ;; This function is called by:
  9785 ;;		_envoit_pwm
  9786 ;;		_affichage_position
  9787 ;;		_floor
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791                           	psect	text42
  9792  00212A                     __ptext42:
  9793                           	opt stack 0
  9794  00212A                     ___fttol:
  9795                           	opt stack 19
  9796                           
  9797                           ;incstack = 0
  9798  00212A  C062  F064         	movff	___fttol@f1+2,??___fttol
  9799  00212E  0100               	movlb	0	; () banked
  9800  002130  6B65               	clrf	(??___fttol+1)& (0+255),b
  9801  002132  6B66               	clrf	(??___fttol+2)& (0+255),b
  9802  002134  0100               	movlb	0	; () banked
  9803  002136  3561               	rlcf	(___fttol@f1+1)& (0+255),w,b
  9804  002138  0100               	movlb	0	; () banked
  9805  00213A  3764               	rlcf	??___fttol& (0+255),f,b
  9806  00213C  E301               	bnc	u3591
  9807  00213E  8165               	bsf	(??___fttol+1)& (0+255),0,b
  9808  002140                     u3591:
  9809  002140  0100               	movlb	0	; () banked
  9810  002142  5164               	movf	??___fttol& (0+255),w,b
  9811  002144  0100               	movlb	0	; () banked
  9812  002146  6F6E               	movwf	___fttol@exp1& (0+255),b
  9813  002148  0100               	movlb	0	; () banked
  9814  00214A  516E               	movf	___fttol@exp1& (0+255),w,b
  9815  00214C  A4D8               	btfss	status,2,c
  9816  00214E  D002               	goto	l4174
  9817  002150  D051               	goto	l4198
  9818                           
  9819                           ; BSR set to: 0
  9820                           
  9821                           ; BSR set to: 0
  9822  002152  D083               	goto	l1053
  9823  002154                     l4174:
  9824                           
  9825                           ; BSR set to: 0
  9826  002154  0E17               	movlw	23
  9827  002156  0100               	movlb	0	; () banked
  9828  002158  6F64               	movwf	??___fttol& (0+255),b
  9829  00215A  C060  F065         	movff	___fttol@f1,??___fttol+1
  9830  00215E  C061  F066         	movff	___fttol@f1+1,??___fttol+2
  9831  002162  C062  F067         	movff	___fttol@f1+2,??___fttol+3
  9832  002166  0100               	movlb	0	; () banked
  9833  002168  2964               	incf	??___fttol& (0+255),w,b
  9834  00216A  0100               	movlb	0	; () banked
  9835  00216C  6F68               	movwf	(??___fttol+4)& (0+255),b
  9836  00216E  D005               	goto	u3610
  9837  002170                     u3615:
  9838  002170  0100               	movlb	0	; () banked
  9839  002172  90D8               	bcf	status,0,c
  9840  002174  3367               	rrcf	(??___fttol+3)& (0+255),f,b
  9841  002176  3366               	rrcf	(??___fttol+2)& (0+255),f,b
  9842  002178  3365               	rrcf	(??___fttol+1)& (0+255),f,b
  9843  00217A                     u3610:
  9844  00217A  0100               	movlb	0	; () banked
  9845  00217C  2F68               	decfsz	(??___fttol+4)& (0+255),f,b
  9846  00217E  D7F8               	goto	u3615
  9847  002180  0100               	movlb	0	; () banked
  9848  002182  5165               	movf	(??___fttol+1)& (0+255),w,b
  9849  002184  0100               	movlb	0	; () banked
  9850  002186  6F69               	movwf	___fttol@sign1& (0+255),b
  9851                           
  9852                           ; BSR set to: 0
  9853  002188  0100               	movlb	0	; () banked
  9854  00218A  8F61               	bsf	(___fttol@f1+1)& (0+255),7,b
  9855                           
  9856                           ; BSR set to: 0
  9857  00218C  0EFF               	movlw	255
  9858  00218E  0100               	movlb	0	; () banked
  9859  002190  1760               	andwf	___fttol@f1& (0+255),f,b
  9860  002192  0EFF               	movlw	255
  9861  002194  0100               	movlb	0	; () banked
  9862  002196  1761               	andwf	(___fttol@f1+1)& (0+255),f,b
  9863  002198  0E00               	movlw	0
  9864  00219A  0100               	movlb	0	; () banked
  9865  00219C  1762               	andwf	(___fttol@f1+2)& (0+255),f,b
  9866                           
  9867                           ; BSR set to: 0
  9868  00219E  0100               	movlb	0	; () banked
  9869  0021A0  5160               	movf	___fttol@f1& (0+255),w,b
  9870  0021A2  0100               	movlb	0	; () banked
  9871  0021A4  6F6A               	movwf	___fttol@lval& (0+255),b
  9872  0021A6  0100               	movlb	0	; () banked
  9873  0021A8  5161               	movf	(___fttol@f1+1)& (0+255),w,b
  9874  0021AA  0100               	movlb	0	; () banked
  9875  0021AC  6F6B               	movwf	(___fttol@lval+1)& (0+255),b
  9876  0021AE  0100               	movlb	0	; () banked
  9877  0021B0  5162               	movf	(___fttol@f1+2)& (0+255),w,b
  9878  0021B2  0100               	movlb	0	; () banked
  9879  0021B4  6F6C               	movwf	(___fttol@lval+2)& (0+255),b
  9880  0021B6  0100               	movlb	0	; () banked
  9881  0021B8  6B6D               	clrf	(___fttol@lval+3)& (0+255),b
  9882                           
  9883                           ; BSR set to: 0
  9884  0021BA  0E8E               	movlw	142
  9885  0021BC  0100               	movlb	0	; () banked
  9886  0021BE  5F6E               	subwf	___fttol@exp1& (0+255),f,b
  9887                           
  9888                           ; BSR set to: 0
  9889  0021C0  0100               	movlb	0	; () banked
  9890  0021C2  AF6E               	btfss	___fttol@exp1& (0+255),7,b
  9891  0021C4  D013               	goto	l4196
  9892                           
  9893                           ; BSR set to: 0
  9894  0021C6  0100               	movlb	0	; () banked
  9895  0021C8  516E               	movf	___fttol@exp1& (0+255),w,b
  9896  0021CA  0A80               	xorlw	128
  9897  0021CC  0F8F               	addlw	143
  9898  0021CE  B0D8               	btfsc	status,0,c
  9899  0021D0  D003               	goto	l4192
  9900  0021D2  D010               	goto	l4198
  9901                           
  9902                           ; BSR set to: 0
  9903                           
  9904                           ; BSR set to: 0
  9905  0021D4  D042               	goto	l1053
  9906                           
  9907                           ; BSR set to: 0
  9908  0021D6  D000               	goto	l4192
  9909  0021D8                     l4192:
  9910                           
  9911                           ; BSR set to: 0
  9912  0021D8  0100               	movlb	0	; () banked
  9913  0021DA  90D8               	bcf	status,0,c
  9914  0021DC  336D               	rrcf	(___fttol@lval+3)& (0+255),f,b
  9915  0021DE  336C               	rrcf	(___fttol@lval+2)& (0+255),f,b
  9916  0021E0  336B               	rrcf	(___fttol@lval+1)& (0+255),f,b
  9917  0021E2  336A               	rrcf	___fttol@lval& (0+255),f,b
  9918                           
  9919                           ; BSR set to: 0
  9920  0021E4  0100               	movlb	0	; () banked
  9921  0021E6  3F6E               	incfsz	___fttol@exp1& (0+255),f,b
  9922  0021E8  D7F7               	goto	l4192
  9923                           
  9924                           ; BSR set to: 0
  9925  0021EA  D01F               	goto	l4206
  9926  0021EC                     l4196:
  9927                           
  9928                           ; BSR set to: 0
  9929  0021EC  0E17               	movlw	23
  9930  0021EE  0100               	movlb	0	; () banked
  9931  0021F0  656E               	cpfsgt	___fttol@exp1& (0+255),b
  9932  0021F2  D014               	goto	l4204
  9933  0021F4                     l4198:
  9934                           
  9935                           ; BSR set to: 0
  9936  0021F4  0E00               	movlw	0
  9937  0021F6  0100               	movlb	0	; () banked
  9938  0021F8  6F60               	movwf	?___fttol& (0+255),b
  9939  0021FA  0E00               	movlw	0
  9940  0021FC  6F61               	movwf	(?___fttol+1)& (0+255),b
  9941  0021FE  0E00               	movlw	0
  9942  002200  6F62               	movwf	(?___fttol+2)& (0+255),b
  9943  002202  0E00               	movlw	0
  9944  002204  6F63               	movwf	(?___fttol+3)& (0+255),b
  9945                           
  9946                           ; BSR set to: 0
  9947  002206  D029               	goto	l1053
  9948                           
  9949                           ; BSR set to: 0
  9950  002208  D009               	goto	l4204
  9951  00220A                     l4202:
  9952                           
  9953                           ; BSR set to: 0
  9954  00220A  0100               	movlb	0	; () banked
  9955  00220C  90D8               	bcf	status,0,c
  9956  00220E  376A               	rlcf	___fttol@lval& (0+255),f,b
  9957  002210  376B               	rlcf	(___fttol@lval+1)& (0+255),f,b
  9958  002212  376C               	rlcf	(___fttol@lval+2)& (0+255),f,b
  9959  002214  376D               	rlcf	(___fttol@lval+3)& (0+255),f,b
  9960  002216  0100               	movlb	0	; () banked
  9961  002218  076E               	decf	___fttol@exp1& (0+255),f,b
  9962  00221A  D000               	goto	l4204
  9963  00221C                     l4204:
  9964                           
  9965                           ; BSR set to: 0
  9966  00221C  0100               	movlb	0	; () banked
  9967  00221E  516E               	movf	___fttol@exp1& (0+255),w,b
  9968  002220  0100               	movlb	0	; () banked
  9969  002222  B4D8               	btfsc	status,2,c
  9970  002224  D002               	goto	l4206
  9971  002226  D7F1               	goto	l4202
  9972                           
  9973                           ; BSR set to: 0
  9974  002228  D000               	goto	l4206
  9975  00222A                     l4206:
  9976                           
  9977                           ; BSR set to: 0
  9978  00222A  0100               	movlb	0	; () banked
  9979  00222C  5169               	movf	___fttol@sign1& (0+255),w,b
  9980  00222E  0100               	movlb	0	; () banked
  9981  002230  B4D8               	btfsc	status,2,c
  9982  002232  D00A               	goto	l4210
  9983                           
  9984                           ; BSR set to: 0
  9985  002234  0100               	movlb	0	; () banked
  9986  002236  1F6D               	comf	(___fttol@lval+3)& (0+255),f,b
  9987  002238  1F6C               	comf	(___fttol@lval+2)& (0+255),f,b
  9988  00223A  1F6B               	comf	(___fttol@lval+1)& (0+255),f,b
  9989  00223C  6D6A               	negf	___fttol@lval& (0+255),b
  9990  00223E  0E00               	movlw	0
  9991  002240  236B               	addwfc	(___fttol@lval+1)& (0+255),f,b
  9992  002242  236C               	addwfc	(___fttol@lval+2)& (0+255),f,b
  9993  002244  236D               	addwfc	(___fttol@lval+3)& (0+255),f,b
  9994  002246  D000               	goto	l4210
  9995  002248                     l4210:
  9996                           
  9997                           ; BSR set to: 0
  9998  002248  C06A  F060         	movff	___fttol@lval,?___fttol
  9999  00224C  C06B  F061         	movff	___fttol@lval+1,?___fttol+1
 10000  002250  C06C  F062         	movff	___fttol@lval+2,?___fttol+2
 10001  002254  C06D  F063         	movff	___fttol@lval+3,?___fttol+3
 10002  002258  D000               	goto	l1053
 10003  00225A                     l1053:
 10004                           
 10005                           ; BSR set to: 0
 10006  00225A  0012               	return		;funcret
 10007  00225C                     __end_of___fttol:
 10008                           	opt stack 0
 10009                           tblptru	equ	0xFF8
 10010                           tblptrh	equ	0xFF7
 10011                           tblptrl	equ	0xFF6
 10012                           tablat	equ	0xFF5
 10013                           intcon	equ	0xFF2
 10014                           intcon2	equ	0xFF1
 10015                           intcon3	equ	0xFF0
 10016                           postinc0	equ	0xFEE
 10017                           wreg	equ	0xFE8
 10018                           postinc1	equ	0xFE6
 10019                           postdec1	equ	0xFE5
 10020                           fsr1h	equ	0xFE2
 10021                           fsr1l	equ	0xFE1
 10022                           postinc2	equ	0xFDE
 10023                           postdec2	equ	0xFDD
 10024                           fsr2h	equ	0xFDA
 10025                           fsr2l	equ	0xFD9
 10026                           status	equ	0xFD8
 10027                           
 10028 ;; *************** function _PutIntUART *****************
 10029 ;; Defined at:
 10030 ;;		line 248 in file "uart.c"
 10031 ;; Parameters:    Size  Location     Type
 10032 ;;  type_uart       1    wreg     unsigned char 
 10033 ;;  nb              2   35[BANK0 ] int 
 10034 ;; Auto vars:     Size  Location     Type
 10035 ;;  type_uart       1   37[BANK0 ] unsigned char 
 10036 ;; Return value:  Size  Location     Type
 10037 ;;		None               void
 10038 ;; Registers used:
 10039 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10040 ;; Tracked objects:
 10041 ;;		On entry : 0/0
 10042 ;;		On exit  : 0/0
 10043 ;;		Unchanged: 0/0
 10044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10045 ;;      Params:         0       2       0       0
 10046 ;;      Locals:         0       1       0       0
 10047 ;;      Temps:          0       0       0       0
 10048 ;;      Totals:         0       3       0       0
 10049 ;;Total ram usage:        3 bytes
 10050 ;; Hardware stack levels used:    1
 10051 ;; Hardware stack levels required when called:    9
 10052 ;; This function calls:
 10053 ;;		_IntToC
 10054 ;;		_PutsUART
 10055 ;; This function is called by:
 10056 ;;		_main
 10057 ;;		_affichage_position
 10058 ;;		_traitement_reception
 10059 ;; This function uses a non-reentrant model
 10060 ;;
 10061                           
 10062                           	psect	text43
 10063  003814                     __ptext43:
 10064                           	opt stack 0
 10065  003814                     _PutIntUART:
 10066                           	opt stack 20
 10067                           
 10068                           ; BSR set to: 0
 10069                           ;incstack = 0
 10070                           ;PutIntUART@type_uart stored from wreg
 10071  003814  0100               	movlb	0	; () banked
 10072  003816  6F85               	movwf	PutIntUART@type_uart& (0+255),b
 10073                           
 10074                           ; BSR set to: 0
 10075                           ;uart.c: 250: PutsUART (type_uart, IntToC (nb));
 10076  003818  C083  F06E         	movff	PutIntUART@nb,IntToC@nb
 10077  00381C  C084  F06F         	movff	PutIntUART@nb+1,IntToC@nb+1
 10078  003820  EC33  F00A         	call	_IntToC	;wreg free
 10079  003824  C06E  F07E         	movff	?_IntToC,PutsUART@chaine
 10080  003828  C06F  F07F         	movff	?_IntToC+1,PutsUART@chaine+1
 10081  00382C  0100               	movlb	0	; () banked
 10082  00382E  5185               	movf	PutIntUART@type_uart& (0+255),w,b
 10083  003830  EC09  F019         	call	_PutsUART
 10084  003834  0012               	return		;funcret
 10085  003836                     __end_of_PutIntUART:
 10086                           	opt stack 0
 10087                           tblptru	equ	0xFF8
 10088                           tblptrh	equ	0xFF7
 10089                           tblptrl	equ	0xFF6
 10090                           tablat	equ	0xFF5
 10091                           intcon	equ	0xFF2
 10092                           intcon2	equ	0xFF1
 10093                           intcon3	equ	0xFF0
 10094                           postinc0	equ	0xFEE
 10095                           wreg	equ	0xFE8
 10096                           postinc1	equ	0xFE6
 10097                           postdec1	equ	0xFE5
 10098                           fsr1h	equ	0xFE2
 10099                           fsr1l	equ	0xFE1
 10100                           postinc2	equ	0xFDE
 10101                           postdec2	equ	0xFDD
 10102                           fsr2h	equ	0xFDA
 10103                           fsr2l	equ	0xFD9
 10104                           status	equ	0xFD8
 10105                           
 10106 ;; *************** function _PutsUART *****************
 10107 ;; Defined at:
 10108 ;;		line 148 in file "uart.c"
 10109 ;; Parameters:    Size  Location     Type
 10110 ;;  type_uart       1    wreg     unsigned char 
 10111 ;;  chaine          2   30[BANK0 ] PTR const unsigned char 
 10112 ;;		 -> STR_19(2), STR_18(6), STR_17(16), STR_16(24), 
 10113 ;;		 -> STR_15(24), IntToC@out(8), STR_14(20), STR_13(8), 
 10114 ;;		 -> STR_12(51), STR_11(39), STR_10(20), STR_9(39), 
 10115 ;;		 -> STR_8(19), STR_7(37), STR_6(25), STR_5(30), 
 10116 ;;		 -> STR_4(34), STR_3(24), STR_2(43), STR_1(24), 
 10117 ;; Auto vars:     Size  Location     Type
 10118 ;;  type_uart       1   34[BANK0 ] unsigned char 
 10119 ;; Return value:  Size  Location     Type
 10120 ;;		None               void
 10121 ;; Registers used:
 10122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10123 ;; Tracked objects:
 10124 ;;		On entry : 0/0
 10125 ;;		On exit  : 0/0
 10126 ;;		Unchanged: 0/0
 10127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10128 ;;      Params:         0       2       0       0
 10129 ;;      Locals:         0       1       0       0
 10130 ;;      Temps:          0       2       0       0
 10131 ;;      Totals:         0       5       0       0
 10132 ;;Total ram usage:        5 bytes
 10133 ;; Hardware stack levels used:    1
 10134 ;; Hardware stack levels required when called:    8
 10135 ;; This function calls:
 10136 ;;		_PutcUART
 10137 ;; This function is called by:
 10138 ;;		_main
 10139 ;;		_PutIntUART
 10140 ;;		_retrouver_balise_mere
 10141 ;;		_affichage_position
 10142 ;;		_traitement_reception
 10143 ;; This function uses a non-reentrant model
 10144 ;;
 10145                           
 10146                           	psect	text44
 10147  003212                     __ptext44:
 10148                           	opt stack 0
 10149  003212                     _PutsUART:
 10150                           	opt stack 21
 10151                           
 10152                           ;incstack = 0
 10153                           ;PutsUART@type_uart stored from wreg
 10154  003212  0100               	movlb	0	; () banked
 10155  003214  6F82               	movwf	PutsUART@type_uart& (0+255),b
 10156  003216                     
 10157                           ;uart.c: 151: {
 10158                           ;uart.c: 152: PutcUART (type_uart, *chaine);
 10159  003216  C07E  FFF6         	movff	PutsUART@chaine,tblptrl
 10160  00321A  C07F  FFF7         	movff	PutsUART@chaine+1,tblptrh
 10161  00321E  6AF8               	clrf	tblptru,c
 10162  003220  0E02               	movlw	(high __ramtop+-1)
 10163  003222  64F7               	cpfsgt	tblptrh,c
 10164  003224  D003               	bra	u3977
 10165  003226  0008               	tblrd		*
 10166  003228  50F5               	movf	tablat,w,c
 10167  00322A  D005               	bra	u3970
 10168  00322C                     u3977:
 10169  00322C  CFF6 FFE9          	movff	tblptrl,fsr0l
 10170  003230  CFF7 FFEA          	movff	tblptrh,fsr0h
 10171  003234  50EF               	movf	indf0,w,c
 10172  003236                     u3970:
 10173  003236  0100               	movlb	0	; () banked
 10174  003238  6F6E               	movwf	PutcUART@octet& (0+255),b
 10175  00323A  0100               	movlb	0	; () banked
 10176  00323C  5182               	movf	PutsUART@type_uart& (0+255),w,b
 10177  00323E  EC74  F008         	call	_PutcUART
 10178                           
 10179                           ;uart.c: 153: }
 10180                           ;uart.c: 154: while (*chaine++);
 10181  003242  0100               	movlb	0	; () banked
 10182  003244  517E               	movf	PutsUART@chaine& (0+255),w,b
 10183  003246  0100               	movlb	0	; () banked
 10184  003248  6F80               	movwf	??_PutsUART& (0+255),b
 10185  00324A  0100               	movlb	0	; () banked
 10186  00324C  517F               	movf	(PutsUART@chaine+1)& (0+255),w,b
 10187  00324E  0100               	movlb	0	; () banked
 10188  003250  6F81               	movwf	(??_PutsUART+1)& (0+255),b
 10189  003252  0100               	movlb	0	; () banked
 10190  003254  4B7E               	infsnz	PutsUART@chaine& (0+255),f,b
 10191  003256  2B7F               	incf	(PutsUART@chaine+1)& (0+255),f,b
 10192  003258  C080  FFF6         	movff	??_PutsUART,tblptrl
 10193  00325C  C081  FFF7         	movff	??_PutsUART+1,tblptrh
 10194  003260  6AF8               	clrf	tblptru,c
 10195  003262  0E02               	movlw	(high __ramtop+-1)
 10196  003264  64F7               	cpfsgt	tblptrh,c
 10197  003266  D003               	bra	u3987
 10198  003268  0008               	tblrd		*
 10199  00326A  50F5               	movf	tablat,w,c
 10200  00326C  D005               	bra	u3980
 10201  00326E                     u3987:
 10202  00326E  CFF6 FFE9          	movff	tblptrl,fsr0l
 10203  003272  CFF7 FFEA          	movff	tblptrh,fsr0h
 10204  003276  50EF               	movf	indf0,w,c
 10205  003278                     u3980:
 10206  003278  0900               	iorlw	0
 10207  00327A  A4D8               	btfss	status,2,c
 10208  00327C  D7CC               	goto	l4438
 10209  00327E  0012               	return		;funcret
 10210  003280                     __end_of_PutsUART:
 10211                           	opt stack 0
 10212                           tblptru	equ	0xFF8
 10213                           tblptrh	equ	0xFF7
 10214                           tblptrl	equ	0xFF6
 10215                           tablat	equ	0xFF5
 10216                           intcon	equ	0xFF2
 10217                           intcon2	equ	0xFF1
 10218                           intcon3	equ	0xFF0
 10219                           indf0	equ	0xFEF
 10220                           postinc0	equ	0xFEE
 10221                           fsr0h	equ	0xFEA
 10222                           fsr0l	equ	0xFE9
 10223                           wreg	equ	0xFE8
 10224                           postinc1	equ	0xFE6
 10225                           postdec1	equ	0xFE5
 10226                           fsr1h	equ	0xFE2
 10227                           fsr1l	equ	0xFE1
 10228                           postinc2	equ	0xFDE
 10229                           postdec2	equ	0xFDD
 10230                           fsr2h	equ	0xFDA
 10231                           fsr2l	equ	0xFD9
 10232                           status	equ	0xFD8
 10233                           
 10234 ;; *************** function _PutcUART *****************
 10235 ;; Defined at:
 10236 ;;		line 122 in file "uart.c"
 10237 ;; Parameters:    Size  Location     Type
 10238 ;;  type_uart       1    wreg     unsigned char 
 10239 ;;  octet           1   14[BANK0 ] unsigned char 
 10240 ;; Auto vars:     Size  Location     Type
 10241 ;;  type_uart       1   21[BANK0 ] unsigned char 
 10242 ;; Return value:  Size  Location     Type
 10243 ;;		None               void
 10244 ;; Registers used:
 10245 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10246 ;; Tracked objects:
 10247 ;;		On entry : 0/0
 10248 ;;		On exit  : 0/0
 10249 ;;		Unchanged: 0/0
 10250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10251 ;;      Params:         0       1       0       0
 10252 ;;      Locals:         0       1       0       0
 10253 ;;      Temps:          0       6       0       0
 10254 ;;      Totals:         0       8       0       0
 10255 ;;Total ram usage:        8 bytes
 10256 ;; Hardware stack levels used:    1
 10257 ;; Hardware stack levels required when called:    7
 10258 ;; This function calls:
 10259 ;;		___awdiv
 10260 ;; This function is called by:
 10261 ;;		_PutsUART
 10262 ;;		_traitement_reception
 10263 ;;		_Puts2UART
 10264 ;; This function uses a non-reentrant model
 10265 ;;
 10266                           
 10267                           	psect	text45
 10268  0010E8                     __ptext45:
 10269                           	opt stack 0
 10270  0010E8                     _PutcUART:
 10271                           	opt stack 21
 10272                           
 10273                           ;incstack = 0
 10274                           ;PutcUART@type_uart stored from wreg
 10275  0010E8  0100               	movlb	0	; () banked
 10276  0010EA  6F75               	movwf	PutcUART@type_uart& (0+255),b
 10277                           
 10278                           ; BSR set to: 0
 10279                           ;uart.c: 124: if (type_uart == 0)
 10280  0010EC  0100               	movlb	0	; () banked
 10281  0010EE  5175               	movf	PutcUART@type_uart& (0+255),w,b
 10282  0010F0  0100               	movlb	0	; () banked
 10283  0010F2  B4D8               	btfsc	status,2,c
 10284  0010F4  D002               	goto	l280
 10285  0010F6  D007               	goto	l4400
 10286                           
 10287                           ; BSR set to: 0
 10288                           ;uart.c: 125: {
 10289                           ;uart.c: 126: while (PIR1bits.TXIF == 0);
 10290  0010F8  D000               	goto	l280
 10291  0010FA                     l280:
 10292                           
 10293                           ; BSR set to: 0
 10294  0010FA  A89E               	btfss	3998,4,c	;volatile
 10295  0010FC  D7FE               	goto	l280
 10296                           
 10297                           ; BSR set to: 0
 10298                           ;uart.c: 127: TXREG = octet;
 10299  0010FE  C06E  FFAD         	movff	PutcUART@octet,4013	;volatile
 10300                           
 10301                           ;uart.c: 128: }
 10302  001102  D1B0               	goto	l287
 10303                           
 10304                           ; BSR set to: 0
 10305                           
 10306                           ; BSR set to: 0
 10307                           ;uart.c: 129: else
 10308                           ;uart.c: 130: {
 10309                           ;uart.c: 131: while(uart_logiciel.transmission_en_cours == 1);
 10310  001104  D000               	goto	l4400
 10311  001106                     l4400:
 10312                           
 10313                           ; BSR set to: 0
 10314  001106  0447               	decf	_uart_logiciel+11,w,c
 10315  001108  B4D8               	btfsc	status,2,c
 10316  00110A  D7FD               	goto	l4400
 10317                           
 10318                           ; BSR set to: 0
 10319                           ;uart.c: 132: uart_logiciel.indice = 0;
 10320                           
 10321                           ; BSR set to: 0
 10322  00110C  0E00               	movlw	0
 10323  00110E  6E48               	movwf	_uart_logiciel+12,c
 10324                           
 10325                           ;uart.c: 133: uart_logiciel.buffer_uart[10] = 1;
 10326  001110  0E01               	movlw	1
 10327  001112  6E46               	movwf	_uart_logiciel+10,c
 10328                           
 10329                           ;uart.c: 134: uart_logiciel.buffer_uart[9] = 1;
 10330  001114  0E01               	movlw	1
 10331  001116  6E45               	movwf	_uart_logiciel+9,c
 10332                           
 10333                           ; BSR set to: 0
 10334                           ;uart.c: 135: uart_logiciel.buffer_uart[8] = octet / 128;
 10335  001118  C06E  F066         	movff	PutcUART@octet,___awdiv@dividend
 10336  00111C  0100               	movlb	0	; () banked
 10337  00111E  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
 10338  001120  0E00               	movlw	0
 10339  001122  0100               	movlb	0	; () banked
 10340  001124  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10341  001126  0E80               	movlw	128
 10342  001128  6F68               	movwf	___awdiv@divisor& (0+255),b
 10343  00112A  EC29  F014         	call	___awdiv	;wreg free
 10344  00112E  0100               	movlb	0	; () banked
 10345  001130  5166               	movf	?___awdiv& (0+255),w,b
 10346  001132  6E44               	movwf	_uart_logiciel+8,c
 10347                           
 10348                           ; BSR set to: 0
 10349                           ;uart.c: 136: uart_logiciel.buffer_uart[7] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                          ) / 64;
 10350  001134  5044               	movf	_uart_logiciel+8,w,c
 10351  001136  0D80               	mullw	128
 10352  001138  1EF3               	comf	prodl,f,c
 10353  00113A  1EF4               	comf	prodh,f,c
 10354  00113C  4AF3               	infsnz	prodl,f,c
 10355  00113E  2AF4               	incf	prodh,f,c
 10356  001140  0100               	movlb	0	; () banked
 10357  001142  516E               	movf	PutcUART@octet& (0+255),w,b
 10358  001144  24F3               	addwf	prodl,w,c
 10359  001146  0100               	movlb	0	; () banked
 10360  001148  6F66               	movwf	___awdiv@dividend& (0+255),b
 10361  00114A  0E00               	movlw	0
 10362  00114C  20F4               	addwfc	prodh,w,c
 10363  00114E  0100               	movlb	0	; () banked
 10364  001150  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
 10365  001152  0E00               	movlw	0
 10366  001154  0100               	movlb	0	; () banked
 10367  001156  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10368  001158  0E40               	movlw	64
 10369  00115A  6F68               	movwf	___awdiv@divisor& (0+255),b
 10370  00115C  EC29  F014         	call	___awdiv	;wreg free
 10371  001160  0100               	movlb	0	; () banked
 10372  001162  5166               	movf	?___awdiv& (0+255),w,b
 10373  001164  6E43               	movwf	_uart_logiciel+7,c
 10374                           
 10375                           ; BSR set to: 0
 10376                           ;uart.c: 137: uart_logiciel.buffer_uart[6] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64) / 32;
 10377  001166  5044               	movf	_uart_logiciel+8,w,c
 10378  001168  0D80               	mullw	128
 10379  00116A  1EF3               	comf	prodl,f,c
 10380  00116C  1EF4               	comf	prodh,f,c
 10381  00116E  4AF3               	infsnz	prodl,f,c
 10382  001170  2AF4               	incf	prodh,f,c
 10383  001172  0100               	movlb	0	; () banked
 10384  001174  516E               	movf	PutcUART@octet& (0+255),w,b
 10385  001176  0100               	movlb	0	; () banked
 10386  001178  6F6F               	movwf	??_PutcUART& (0+255),b
 10387  00117A  6B70               	clrf	(??_PutcUART+1)& (0+255),b
 10388  00117C  50F3               	movf	prodl,w,c
 10389  00117E  0100               	movlb	0	; () banked
 10390  001180  276F               	addwf	??_PutcUART& (0+255),f,b
 10391  001182  50F4               	movf	prodh,w,c
 10392  001184  0100               	movlb	0	; () banked
 10393  001186  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
 10394  001188  5043               	movf	_uart_logiciel+7,w,c
 10395  00118A  0D40               	mullw	64
 10396  00118C  1EF3               	comf	prodl,f,c
 10397  00118E  1EF4               	comf	prodh,f,c
 10398  001190  4AF3               	infsnz	prodl,f,c
 10399  001192  2AF4               	incf	prodh,f,c
 10400  001194  50F3               	movf	prodl,w,c
 10401  001196  0100               	movlb	0	; () banked
 10402  001198  256F               	addwf	??_PutcUART& (0+255),w,b
 10403  00119A  0100               	movlb	0	; () banked
 10404  00119C  6F66               	movwf	___awdiv@dividend& (0+255),b
 10405  00119E  50F4               	movf	prodh,w,c
 10406  0011A0  0100               	movlb	0	; () banked
 10407  0011A2  2170               	addwfc	(??_PutcUART+1)& (0+255),w,b
 10408  0011A4  0100               	movlb	0	; () banked
 10409  0011A6  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
 10410  0011A8  0E00               	movlw	0
 10411  0011AA  0100               	movlb	0	; () banked
 10412  0011AC  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10413  0011AE  0E20               	movlw	32
 10414  0011B0  6F68               	movwf	___awdiv@divisor& (0+255),b
 10415  0011B2  EC29  F014         	call	___awdiv	;wreg free
 10416  0011B6  0100               	movlb	0	; () banked
 10417  0011B8  5166               	movf	?___awdiv& (0+255),w,b
 10418  0011BA  6E42               	movwf	_uart_logiciel+6,c
 10419                           
 10420                           ; BSR set to: 0
 10421                           ;uart.c: 138: uart_logiciel.buffer_uart[5] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64 - uart_logiciel.buffer_uart[6] * 32) / 16;
 10422  0011BC  5044               	movf	_uart_logiciel+8,w,c
 10423  0011BE  0D80               	mullw	128
 10424  0011C0  1EF3               	comf	prodl,f,c
 10425  0011C2  1EF4               	comf	prodh,f,c
 10426  0011C4  4AF3               	infsnz	prodl,f,c
 10427  0011C6  2AF4               	incf	prodh,f,c
 10428  0011C8  0100               	movlb	0	; () banked
 10429  0011CA  516E               	movf	PutcUART@octet& (0+255),w,b
 10430  0011CC  0100               	movlb	0	; () banked
 10431  0011CE  6F6F               	movwf	??_PutcUART& (0+255),b
 10432  0011D0  6B70               	clrf	(??_PutcUART+1)& (0+255),b
 10433  0011D2  50F3               	movf	prodl,w,c
 10434  0011D4  0100               	movlb	0	; () banked
 10435  0011D6  276F               	addwf	??_PutcUART& (0+255),f,b
 10436  0011D8  50F4               	movf	prodh,w,c
 10437  0011DA  0100               	movlb	0	; () banked
 10438  0011DC  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
 10439  0011DE  5043               	movf	_uart_logiciel+7,w,c
 10440  0011E0  0D40               	mullw	64
 10441  0011E2  1EF3               	comf	prodl,f,c
 10442  0011E4  1EF4               	comf	prodh,f,c
 10443  0011E6  4AF3               	infsnz	prodl,f,c
 10444  0011E8  2AF4               	incf	prodh,f,c
 10445  0011EA  50F3               	movf	prodl,w,c
 10446  0011EC  0100               	movlb	0	; () banked
 10447  0011EE  276F               	addwf	??_PutcUART& (0+255),f,b
 10448  0011F0  50F4               	movf	prodh,w,c
 10449  0011F2  0100               	movlb	0	; () banked
 10450  0011F4  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
 10451  0011F6  5042               	movf	_uart_logiciel+6,w,c
 10452  0011F8  0D20               	mullw	32
 10453  0011FA  1EF3               	comf	prodl,f,c
 10454  0011FC  1EF4               	comf	prodh,f,c
 10455  0011FE  4AF3               	infsnz	prodl,f,c
 10456  001200  2AF4               	incf	prodh,f,c
 10457  001202  50F3               	movf	prodl,w,c
 10458  001204  0100               	movlb	0	; () banked
 10459  001206  256F               	addwf	??_PutcUART& (0+255),w,b
 10460  001208  0100               	movlb	0	; () banked
 10461  00120A  6F66               	movwf	___awdiv@dividend& (0+255),b
 10462  00120C  50F4               	movf	prodh,w,c
 10463  00120E  0100               	movlb	0	; () banked
 10464  001210  2170               	addwfc	(??_PutcUART+1)& (0+255),w,b
 10465  001212  0100               	movlb	0	; () banked
 10466  001214  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
 10467  001216  0E00               	movlw	0
 10468  001218  0100               	movlb	0	; () banked
 10469  00121A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10470  00121C  0E10               	movlw	16
 10471  00121E  6F68               	movwf	___awdiv@divisor& (0+255),b
 10472  001220  EC29  F014         	call	___awdiv	;wreg free
 10473  001224  0100               	movlb	0	; () banked
 10474  001226  5166               	movf	?___awdiv& (0+255),w,b
 10475  001228  6E41               	movwf	_uart_logiciel+5,c
 10476                           
 10477                           ; BSR set to: 0
 10478                           ;uart.c: 139: uart_logiciel.buffer_uart[4] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64 - uart_logiciel.buffer_uart[6] * 32 - uart_logiciel
      +                          .buffer_uart[5] * 16) / 8;
 10479  00122A  5044               	movf	_uart_logiciel+8,w,c
 10480  00122C  0D80               	mullw	128
 10481  00122E  1EF3               	comf	prodl,f,c
 10482  001230  1EF4               	comf	prodh,f,c
 10483  001232  4AF3               	infsnz	prodl,f,c
 10484  001234  2AF4               	incf	prodh,f,c
 10485  001236  0100               	movlb	0	; () banked
 10486  001238  516E               	movf	PutcUART@octet& (0+255),w,b
 10487  00123A  0100               	movlb	0	; () banked
 10488  00123C  6F6F               	movwf	??_PutcUART& (0+255),b
 10489  00123E  6B70               	clrf	(??_PutcUART+1)& (0+255),b
 10490  001240  50F3               	movf	prodl,w,c
 10491  001242  0100               	movlb	0	; () banked
 10492  001244  276F               	addwf	??_PutcUART& (0+255),f,b
 10493  001246  50F4               	movf	prodh,w,c
 10494  001248  0100               	movlb	0	; () banked
 10495  00124A  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
 10496  00124C  5043               	movf	_uart_logiciel+7,w,c
 10497  00124E  0D40               	mullw	64
 10498  001250  1EF3               	comf	prodl,f,c
 10499  001252  1EF4               	comf	prodh,f,c
 10500  001254  4AF3               	infsnz	prodl,f,c
 10501  001256  2AF4               	incf	prodh,f,c
 10502  001258  50F3               	movf	prodl,w,c
 10503  00125A  0100               	movlb	0	; () banked
 10504  00125C  276F               	addwf	??_PutcUART& (0+255),f,b
 10505  00125E  50F4               	movf	prodh,w,c
 10506  001260  0100               	movlb	0	; () banked
 10507  001262  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
 10508  001264  5042               	movf	_uart_logiciel+6,w,c
 10509  001266  0D20               	mullw	32
 10510  001268  1EF3               	comf	prodl,f,c
 10511  00126A  1EF4               	comf	prodh,f,c
 10512  00126C  4AF3               	infsnz	prodl,f,c
 10513  00126E  2AF4               	incf	prodh,f,c
 10514  001270  50F3               	movf	prodl,w,c
 10515  001272  0100               	movlb	0	; () banked
 10516  001274  276F               	addwf	??_PutcUART& (0+255),f,b
 10517  001276  50F4               	movf	prodh,w,c
 10518  001278  0100               	movlb	0	; () banked
 10519  00127A  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
 10520  00127C  5041               	movf	_uart_logiciel+5,w,c
 10521  00127E  0D10               	mullw	16
 10522  001280  1EF3               	comf	prodl,f,c
 10523  001282  1EF4               	comf	prodh,f,c
 10524  001284  4AF3               	infsnz	prodl,f,c
 10525  001286  2AF4               	incf	prodh,f,c
 10526  001288  50F3               	movf	prodl,w,c
 10527  00128A  0100               	movlb	0	; () banked
 10528  00128C  256F               	addwf	??_PutcUART& (0+255),w,b
 10529  00128E  0100               	movlb	0	; () banked
 10530  001290  6F66               	movwf	___awdiv@dividend& (0+255),b
 10531  001292  50F4               	movf	prodh,w,c
 10532  001294  0100               	movlb	0	; () banked
 10533  001296  2170               	addwfc	(??_PutcUART+1)& (0+255),w,b
 10534  001298  0100               	movlb	0	; () banked
 10535  00129A  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
 10536  00129C  0E00               	movlw	0
 10537  00129E  0100               	movlb	0	; () banked
 10538  0012A0  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10539  0012A2  0E08               	movlw	8
 10540  0012A4  6F68               	movwf	___awdiv@divisor& (0+255),b
 10541  0012A6  EC29  F014         	call	___awdiv	;wreg free
 10542  0012AA  0100               	movlb	0	; () banked
 10543  0012AC  5166               	movf	?___awdiv& (0+255),w,b
 10544  0012AE  6E40               	movwf	_uart_logiciel+4,c
 10545                           
 10546                           ; BSR set to: 0
 10547                           ;uart.c: 140: uart_logiciel.buffer_uart[3] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64 - uart_logiciel.buffer_uart[6] * 32 - uart_logiciel
      +                          .buffer_uart[5] * 16 - uart_logiciel.buffer_uart[4] * 8) / 4;
 10548  0012B0  5044               	movf	_uart_logiciel+8,w,c
 10549  0012B2  0D80               	mullw	128
 10550  0012B4  1EF3               	comf	prodl,f,c
 10551  0012B6  1EF4               	comf	prodh,f,c
 10552  0012B8  4AF3               	infsnz	prodl,f,c
 10553  0012BA  2AF4               	incf	prodh,f,c
 10554  0012BC  0100               	movlb	0	; () banked
 10555  0012BE  516E               	movf	PutcUART@octet& (0+255),w,b
 10556  0012C0  0100               	movlb	0	; () banked
 10557  0012C2  6F6F               	movwf	??_PutcUART& (0+255),b
 10558  0012C4  6B70               	clrf	(??_PutcUART+1)& (0+255),b
 10559  0012C6  50F3               	movf	prodl,w,c
 10560  0012C8  0100               	movlb	0	; () banked
 10561  0012CA  276F               	addwf	??_PutcUART& (0+255),f,b
 10562  0012CC  50F4               	movf	prodh,w,c
 10563  0012CE  0100               	movlb	0	; () banked
 10564  0012D0  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
 10565  0012D2  5043               	movf	_uart_logiciel+7,w,c
 10566  0012D4  0D40               	mullw	64
 10567  0012D6  1EF3               	comf	prodl,f,c
 10568  0012D8  1EF4               	comf	prodh,f,c
 10569  0012DA  4AF3               	infsnz	prodl,f,c
 10570  0012DC  2AF4               	incf	prodh,f,c
 10571  0012DE  50F3               	movf	prodl,w,c
 10572  0012E0  0100               	movlb	0	; () banked
 10573  0012E2  276F               	addwf	??_PutcUART& (0+255),f,b
 10574  0012E4  50F4               	movf	prodh,w,c
 10575  0012E6  0100               	movlb	0	; () banked
 10576  0012E8  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
 10577  0012EA  5042               	movf	_uart_logiciel+6,w,c
 10578  0012EC  0D20               	mullw	32
 10579  0012EE  1EF3               	comf	prodl,f,c
 10580  0012F0  1EF4               	comf	prodh,f,c
 10581  0012F2  4AF3               	infsnz	prodl,f,c
 10582  0012F4  2AF4               	incf	prodh,f,c
 10583  0012F6  50F3               	movf	prodl,w,c
 10584  0012F8  0100               	movlb	0	; () banked
 10585  0012FA  276F               	addwf	??_PutcUART& (0+255),f,b
 10586  0012FC  50F4               	movf	prodh,w,c
 10587  0012FE  0100               	movlb	0	; () banked
 10588  001300  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
 10589  001302  5041               	movf	_uart_logiciel+5,w,c
 10590  001304  0D10               	mullw	16
 10591  001306  1EF3               	comf	prodl,f,c
 10592  001308  1EF4               	comf	prodh,f,c
 10593  00130A  4AF3               	infsnz	prodl,f,c
 10594  00130C  2AF4               	incf	prodh,f,c
 10595  00130E  50F3               	movf	prodl,w,c
 10596  001310  0100               	movlb	0	; () banked
 10597  001312  276F               	addwf	??_PutcUART& (0+255),f,b
 10598  001314  50F4               	movf	prodh,w,c
 10599  001316  0100               	movlb	0	; () banked
 10600  001318  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
 10601  00131A  5040               	movf	_uart_logiciel+4,w,c
 10602  00131C  0D08               	mullw	8
 10603  00131E  1EF3               	comf	prodl,f,c
 10604  001320  1EF4               	comf	prodh,f,c
 10605  001322  4AF3               	infsnz	prodl,f,c
 10606  001324  2AF4               	incf	prodh,f,c
 10607  001326  50F3               	movf	prodl,w,c
 10608  001328  0100               	movlb	0	; () banked
 10609  00132A  256F               	addwf	??_PutcUART& (0+255),w,b
 10610  00132C  0100               	movlb	0	; () banked
 10611  00132E  6F66               	movwf	___awdiv@dividend& (0+255),b
 10612  001330  50F4               	movf	prodh,w,c
 10613  001332  0100               	movlb	0	; () banked
 10614  001334  2170               	addwfc	(??_PutcUART+1)& (0+255),w,b
 10615  001336  0100               	movlb	0	; () banked
 10616  001338  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
 10617  00133A  0E00               	movlw	0
 10618  00133C  0100               	movlb	0	; () banked
 10619  00133E  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10620  001340  0E04               	movlw	4
 10621  001342  6F68               	movwf	___awdiv@divisor& (0+255),b
 10622  001344  EC29  F014         	call	___awdiv	;wreg free
 10623  001348  0100               	movlb	0	; () banked
 10624  00134A  5166               	movf	?___awdiv& (0+255),w,b
 10625  00134C  6E3F               	movwf	_uart_logiciel+3,c
 10626                           
 10627                           ; BSR set to: 0
 10628                           ;uart.c: 141: uart_logiciel.buffer_uart[2] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64 - uart_logiciel.buffer_uart[6] * 32 - uart_logiciel
      +                          .buffer_uart[5] * 16 - uart_logiciel.buffer_uart[4] * 8 - uart_logiciel.buffer_uart[3] *
 10629  00134E  5044               	movf	_uart_logiciel+8,w,c
 10630  001350  0D80               	mullw	128
 10631  001352  1EF3               	comf	prodl,f,c
 10632  001354  1EF4               	comf	prodh,f,c
 10633  001356  4AF3               	infsnz	prodl,f,c
 10634  001358  2AF4               	incf	prodh,f,c
 10635  00135A  0100               	movlb	0	; () banked
 10636  00135C  516E               	movf	PutcUART@octet& (0+255),w,b
 10637  00135E  0100               	movlb	0	; () banked
 10638  001360  6F6F               	movwf	??_PutcUART& (0+255),b
 10639  001362  6B70               	clrf	(??_PutcUART+1)& (0+255),b
 10640  001364  50F3               	movf	prodl,w,c
 10641  001366  0100               	movlb	0	; () banked
 10642  001368  276F               	addwf	??_PutcUART& (0+255),f,b
 10643  00136A  50F4               	movf	prodh,w,c
 10644  00136C  0100               	movlb	0	; () banked
 10645  00136E  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
 10646  001370  5043               	movf	_uart_logiciel+7,w,c
 10647  001372  0D40               	mullw	64
 10648  001374  1EF3               	comf	prodl,f,c
 10649  001376  1EF4               	comf	prodh,f,c
 10650  001378  4AF3               	infsnz	prodl,f,c
 10651  00137A  2AF4               	incf	prodh,f,c
 10652  00137C  50F3               	movf	prodl,w,c
 10653  00137E  0100               	movlb	0	; () banked
 10654  001380  276F               	addwf	??_PutcUART& (0+255),f,b
 10655  001382  50F4               	movf	prodh,w,c
 10656  001384  0100               	movlb	0	; () banked
 10657  001386  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
 10658  001388  5042               	movf	_uart_logiciel+6,w,c
 10659  00138A  0D20               	mullw	32
 10660  00138C  1EF3               	comf	prodl,f,c
 10661  00138E  1EF4               	comf	prodh,f,c
 10662  001390  4AF3               	infsnz	prodl,f,c
 10663  001392  2AF4               	incf	prodh,f,c
 10664  001394  50F3               	movf	prodl,w,c
 10665  001396  0100               	movlb	0	; () banked
 10666  001398  276F               	addwf	??_PutcUART& (0+255),f,b
 10667  00139A  50F4               	movf	prodh,w,c
 10668  00139C  0100               	movlb	0	; () banked
 10669  00139E  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
 10670  0013A0  5041               	movf	_uart_logiciel+5,w,c
 10671  0013A2  0D10               	mullw	16
 10672  0013A4  1EF3               	comf	prodl,f,c
 10673  0013A6  1EF4               	comf	prodh,f,c
 10674  0013A8  4AF3               	infsnz	prodl,f,c
 10675  0013AA  2AF4               	incf	prodh,f,c
 10676  0013AC  50F3               	movf	prodl,w,c
 10677  0013AE  0100               	movlb	0	; () banked
 10678  0013B0  276F               	addwf	??_PutcUART& (0+255),f,b
 10679  0013B2  50F4               	movf	prodh,w,c
 10680  0013B4  0100               	movlb	0	; () banked
 10681  0013B6  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
 10682  0013B8  5040               	movf	_uart_logiciel+4,w,c
 10683  0013BA  0D08               	mullw	8
 10684  0013BC  1EF3               	comf	prodl,f,c
 10685  0013BE  1EF4               	comf	prodh,f,c
 10686  0013C0  4AF3               	infsnz	prodl,f,c
 10687  0013C2  2AF4               	incf	prodh,f,c
 10688  0013C4  50F3               	movf	prodl,w,c
 10689  0013C6  0100               	movlb	0	; () banked
 10690  0013C8  276F               	addwf	??_PutcUART& (0+255),f,b
 10691  0013CA  50F4               	movf	prodh,w,c
 10692  0013CC  0100               	movlb	0	; () banked
 10693  0013CE  2370               	addwfc	(??_PutcUART+1)& (0+255),f,b
 10694  0013D0  503F               	movf	_uart_logiciel+3,w,c
 10695  0013D2  0D04               	mullw	4
 10696  0013D4  1EF3               	comf	prodl,f,c
 10697  0013D6  1EF4               	comf	prodh,f,c
 10698  0013D8  4AF3               	infsnz	prodl,f,c
 10699  0013DA  2AF4               	incf	prodh,f,c
 10700  0013DC  50F3               	movf	prodl,w,c
 10701  0013DE  0100               	movlb	0	; () banked
 10702  0013E0  256F               	addwf	??_PutcUART& (0+255),w,b
 10703  0013E2  0100               	movlb	0	; () banked
 10704  0013E4  6F66               	movwf	___awdiv@dividend& (0+255),b
 10705  0013E6  50F4               	movf	prodh,w,c
 10706  0013E8  0100               	movlb	0	; () banked
 10707  0013EA  2170               	addwfc	(??_PutcUART+1)& (0+255),w,b
 10708  0013EC  0100               	movlb	0	; () banked
 10709  0013EE  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
 10710  0013F0  0E00               	movlw	0
 10711  0013F2  0100               	movlb	0	; () banked
 10712  0013F4  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10713  0013F6  0E02               	movlw	2
 10714  0013F8  6F68               	movwf	___awdiv@divisor& (0+255),b
 10715  0013FA  EC29  F014         	call	___awdiv	;wreg free
 10716  0013FE  0100               	movlb	0	; () banked
 10717  001400  5166               	movf	?___awdiv& (0+255),w,b
 10718  001402  6E3E               	movwf	_uart_logiciel+2,c
 10719                           
 10720                           ; BSR set to: 0
 10721                           ;uart.c: 142: uart_logiciel.buffer_uart[1] = (octet - uart_logiciel.buffer_uart[8] * 128
      +                           - uart_logiciel.buffer_uart[7] * 64 - uart_logiciel.buffer_uart[6] * 32 - uart_logiciel
      +                          .buffer_uart[5] * 16 - uart_logiciel.buffer_uart[4] * 8 - uart_logiciel.buffer_uart[3] *
 10722  001404  503E               	movf	_uart_logiciel+2,w,c
 10723  001406  0D02               	mullw	2
 10724  001408  CFF3 F06F          	movff	prodl,??_PutcUART
 10725  00140C  503F               	movf	_uart_logiciel+3,w,c
 10726  00140E  0D04               	mullw	4
 10727  001410  CFF3 F070          	movff	prodl,??_PutcUART+1
 10728  001414  5040               	movf	_uart_logiciel+4,w,c
 10729  001416  0D08               	mullw	8
 10730  001418  CFF3 F071          	movff	prodl,??_PutcUART+2
 10731  00141C  5041               	movf	_uart_logiciel+5,w,c
 10732  00141E  0D10               	mullw	16
 10733  001420  CFF3 F072          	movff	prodl,??_PutcUART+3
 10734  001424  5042               	movf	_uart_logiciel+6,w,c
 10735  001426  0D20               	mullw	32
 10736  001428  CFF3 F073          	movff	prodl,??_PutcUART+4
 10737  00142C  5043               	movf	_uart_logiciel+7,w,c
 10738  00142E  0D40               	mullw	64
 10739  001430  CFF3 F074          	movff	prodl,??_PutcUART+5
 10740  001434  5044               	movf	_uart_logiciel+8,w,c
 10741  001436  0D80               	mullw	128
 10742  001438  50F3               	movf	prodl,w,c
 10743  00143A  0100               	movlb	0	; () banked
 10744  00143C  2574               	addwf	(??_PutcUART+5)& (0+255),w,b
 10745  00143E  0100               	movlb	0	; () banked
 10746  001440  2573               	addwf	(??_PutcUART+4)& (0+255),w,b
 10747  001442  0100               	movlb	0	; () banked
 10748  001444  2572               	addwf	(??_PutcUART+3)& (0+255),w,b
 10749  001446  0100               	movlb	0	; () banked
 10750  001448  2571               	addwf	(??_PutcUART+2)& (0+255),w,b
 10751  00144A  0100               	movlb	0	; () banked
 10752  00144C  2570               	addwf	(??_PutcUART+1)& (0+255),w,b
 10753  00144E  0100               	movlb	0	; () banked
 10754  001450  256F               	addwf	??_PutcUART& (0+255),w,b
 10755  001452  0800               	sublw	0
 10756  001454  0100               	movlb	0	; () banked
 10757  001456  256E               	addwf	PutcUART@octet& (0+255),w,b
 10758  001458  6E3D               	movwf	_uart_logiciel+1,c
 10759                           
 10760                           ; BSR set to: 0
 10761                           ;uart.c: 143: uart_logiciel.buffer_uart[0] = 0;
 10762  00145A  0E00               	movlw	0
 10763  00145C  6E3C               	movwf	_uart_logiciel,c
 10764                           
 10765                           ; BSR set to: 0
 10766                           ;uart.c: 144: uart_logiciel.transmission_en_cours = 1;
 10767  00145E  0E01               	movlw	1
 10768  001460  6E47               	movwf	_uart_logiciel+11,c
 10769  001462  D000               	goto	l287
 10770  001464                     l287:
 10771                           
 10772                           ; BSR set to: 0
 10773  001464  0012               	return		;funcret
 10774  001466                     __end_of_PutcUART:
 10775                           	opt stack 0
 10776                           tblptru	equ	0xFF8
 10777                           tblptrh	equ	0xFF7
 10778                           tblptrl	equ	0xFF6
 10779                           tablat	equ	0xFF5
 10780                           prodh	equ	0xFF4
 10781                           prodl	equ	0xFF3
 10782                           intcon	equ	0xFF2
 10783                           intcon2	equ	0xFF1
 10784                           intcon3	equ	0xFF0
 10785                           indf0	equ	0xFEF
 10786                           postinc0	equ	0xFEE
 10787                           fsr0h	equ	0xFEA
 10788                           fsr0l	equ	0xFE9
 10789                           wreg	equ	0xFE8
 10790                           postinc1	equ	0xFE6
 10791                           postdec1	equ	0xFE5
 10792                           fsr1h	equ	0xFE2
 10793                           fsr1l	equ	0xFE1
 10794                           postinc2	equ	0xFDE
 10795                           postdec2	equ	0xFDD
 10796                           fsr2h	equ	0xFDA
 10797                           fsr2l	equ	0xFD9
 10798                           status	equ	0xFD8
 10799                           
 10800 ;; *************** function _IntToC *****************
 10801 ;; Defined at:
 10802 ;;		line 167 in file "uart.c"
 10803 ;; Parameters:    Size  Location     Type
 10804 ;;  nb              2   14[BANK0 ] int 
 10805 ;; Auto vars:     Size  Location     Type
 10806 ;;  i              10   18[BANK0 ] int [5]
 10807 ;;  j               2   28[BANK0 ] int 
 10808 ;; Return value:  Size  Location     Type
 10809 ;;                  2   14[BANK0 ] PTR unsigned char 
 10810 ;; Registers used:
 10811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10812 ;; Tracked objects:
 10813 ;;		On entry : 0/0
 10814 ;;		On exit  : 0/0
 10815 ;;		Unchanged: 0/0
 10816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 10817 ;;      Params:         0       2       0       0
 10818 ;;      Locals:         0      12       0       0
 10819 ;;      Temps:          0       2       0       0
 10820 ;;      Totals:         0      16       0       0
 10821 ;;Total ram usage:       16 bytes
 10822 ;; Hardware stack levels used:    1
 10823 ;; Hardware stack levels required when called:    7
 10824 ;; This function calls:
 10825 ;;		___awdiv
 10826 ;;		___wmul
 10827 ;; This function is called by:
 10828 ;;		_PutIntUART
 10829 ;; This function uses a non-reentrant model
 10830 ;;
 10831                           
 10832                           	psect	text46
 10833  001466                     __ptext46:
 10834                           	opt stack 0
 10835  001466                     _IntToC:
 10836                           	opt stack 21
 10837                           
 10838                           ;uart.c: 170: int16_t i[5];
 10839                           ;uart.c: 171: int j = 0;
 10840                           
 10841                           ; BSR set to: 0
 10842                           ;incstack = 0
 10843  001466  0E00               	movlw	0
 10844  001468  0100               	movlb	0	; () banked
 10845  00146A  6F7D               	movwf	(IntToC@j+1)& (0+255),b
 10846  00146C  0E00               	movlw	0
 10847  00146E  6F7C               	movwf	IntToC@j& (0+255),b
 10848                           
 10849                           ; BSR set to: 0
 10850                           ;uart.c: 172: static char out[8];
 10851                           ;uart.c: 175: if (nb < 0)
 10852  001470  0100               	movlb	0	; () banked
 10853  001472  AF6F               	btfss	(IntToC@nb+1)& (0+255),7,b
 10854  001474  D01C               	goto	l4458
 10855                           
 10856                           ; BSR set to: 0
 10857                           ;uart.c: 176: {
 10858                           ;uart.c: 177: nb *= (-1);
 10859  001476  C06E  F060         	movff	IntToC@nb,___wmul@multiplier
 10860  00147A  C06F  F061         	movff	IntToC@nb+1,___wmul@multiplier+1
 10861  00147E  0EFF               	movlw	255
 10862  001480  0100               	movlb	0	; () banked
 10863  001482  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10864  001484  6962               	setf	___wmul@multiplicand& (0+255),b
 10865  001486  EC87  F01B         	call	___wmul	;wreg free
 10866  00148A  C060  F06E         	movff	?___wmul,IntToC@nb
 10867  00148E  C061  F06F         	movff	?___wmul+1,IntToC@nb+1
 10868                           
 10869                           ;uart.c: 178: out[j++] = '-';
 10870  001492  0E76               	movlw	low IntToC@out
 10871  001494  0100               	movlb	0	; () banked
 10872  001496  257C               	addwf	IntToC@j& (0+255),w,b
 10873  001498  6ED9               	movwf	fsr2l,c
 10874  00149A  0E01               	movlw	high IntToC@out
 10875  00149C  0100               	movlb	0	; () banked
 10876  00149E  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
 10877  0014A0  6EDA               	movwf	fsr2h,c
 10878  0014A2  0E2D               	movlw	45
 10879  0014A4  6EDF               	movwf	indf2,c
 10880                           
 10881                           ; BSR set to: 0
 10882  0014A6  0100               	movlb	0	; () banked
 10883  0014A8  4B7C               	infsnz	IntToC@j& (0+255),f,b
 10884  0014AA  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
 10885  0014AC  D000               	goto	l4458
 10886  0014AE                     l4458:
 10887                           
 10888                           ; BSR set to: 0
 10889                           ;uart.c: 179: }
 10890                           ;uart.c: 183: i[0] = (nb / 10000);
 10891  0014AE  C06E  F066         	movff	IntToC@nb,___awdiv@dividend
 10892  0014B2  C06F  F067         	movff	IntToC@nb+1,___awdiv@dividend+1
 10893  0014B6  0E27               	movlw	39
 10894  0014B8  0100               	movlb	0	; () banked
 10895  0014BA  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10896  0014BC  0E10               	movlw	16
 10897  0014BE  6F68               	movwf	___awdiv@divisor& (0+255),b
 10898  0014C0  EC29  F014         	call	___awdiv	;wreg free
 10899  0014C4  C066  F072         	movff	?___awdiv,IntToC@i
 10900  0014C8  C067  F073         	movff	?___awdiv+1,IntToC@i+1
 10901                           
 10902                           ;uart.c: 184: i[1] = (nb - i[0] * 10000) / 1000;
 10903  0014CC  C072  F060         	movff	IntToC@i,___wmul@multiplier
 10904  0014D0  C073  F061         	movff	IntToC@i+1,___wmul@multiplier+1
 10905  0014D4  0E27               	movlw	39
 10906  0014D6  0100               	movlb	0	; () banked
 10907  0014D8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10908  0014DA  0E10               	movlw	16
 10909  0014DC  6F62               	movwf	___wmul@multiplicand& (0+255),b
 10910  0014DE  EC87  F01B         	call	___wmul	;wreg free
 10911  0014E2  0100               	movlb	0	; () banked
 10912  0014E4  1F60               	comf	?___wmul& (0+255),f,b
 10913  0014E6  0100               	movlb	0	; () banked
 10914  0014E8  1F61               	comf	(?___wmul+1)& (0+255),f,b
 10915  0014EA  0100               	movlb	0	; () banked
 10916  0014EC  4B60               	infsnz	?___wmul& (0+255),f,b
 10917  0014EE  2B61               	incf	(?___wmul+1)& (0+255),f,b
 10918  0014F0  0100               	movlb	0	; () banked
 10919  0014F2  516E               	movf	IntToC@nb& (0+255),w,b
 10920  0014F4  0100               	movlb	0	; () banked
 10921  0014F6  2560               	addwf	?___wmul& (0+255),w,b
 10922  0014F8  0100               	movlb	0	; () banked
 10923  0014FA  6F66               	movwf	___awdiv@dividend& (0+255),b
 10924  0014FC  0100               	movlb	0	; () banked
 10925  0014FE  516F               	movf	(IntToC@nb+1)& (0+255),w,b
 10926  001500  0100               	movlb	0	; () banked
 10927  001502  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 10928  001504  0100               	movlb	0	; () banked
 10929  001506  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
 10930  001508  0E03               	movlw	3
 10931  00150A  0100               	movlb	0	; () banked
 10932  00150C  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10933  00150E  0EE8               	movlw	232
 10934  001510  6F68               	movwf	___awdiv@divisor& (0+255),b
 10935  001512  EC29  F014         	call	___awdiv	;wreg free
 10936  001516  C066  F074         	movff	?___awdiv,IntToC@i+2
 10937  00151A  C067  F075         	movff	?___awdiv+1,IntToC@i+3
 10938                           
 10939                           ;uart.c: 185: i[2] = (nb - i[0] * 10000 - i[1] * 1000) / 100;
 10940  00151E  C072  F060         	movff	IntToC@i,___wmul@multiplier
 10941  001522  C073  F061         	movff	IntToC@i+1,___wmul@multiplier+1
 10942  001526  0E27               	movlw	39
 10943  001528  0100               	movlb	0	; () banked
 10944  00152A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10945  00152C  0E10               	movlw	16
 10946  00152E  6F62               	movwf	___wmul@multiplicand& (0+255),b
 10947  001530  EC87  F01B         	call	___wmul	;wreg free
 10948  001534  C060  F070         	movff	?___wmul,??_IntToC
 10949  001538  C061  F071         	movff	?___wmul+1,??_IntToC+1
 10950  00153C  C074  F060         	movff	IntToC@i+2,___wmul@multiplier
 10951  001540  C075  F061         	movff	IntToC@i+3,___wmul@multiplier+1
 10952  001544  0E03               	movlw	3
 10953  001546  0100               	movlb	0	; () banked
 10954  001548  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10955  00154A  0EE8               	movlw	232
 10956  00154C  6F62               	movwf	___wmul@multiplicand& (0+255),b
 10957  00154E  EC87  F01B         	call	___wmul	;wreg free
 10958  001552  0100               	movlb	0	; () banked
 10959  001554  5160               	movf	?___wmul& (0+255),w,b
 10960  001556  0100               	movlb	0	; () banked
 10961  001558  2770               	addwf	??_IntToC& (0+255),f,b
 10962  00155A  0100               	movlb	0	; () banked
 10963  00155C  5161               	movf	(?___wmul+1)& (0+255),w,b
 10964  00155E  0100               	movlb	0	; () banked
 10965  001560  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
 10966  001562  0100               	movlb	0	; () banked
 10967  001564  1F70               	comf	??_IntToC& (0+255),f,b
 10968  001566  1F71               	comf	(??_IntToC+1)& (0+255),f,b
 10969  001568  4B70               	infsnz	??_IntToC& (0+255),f,b
 10970  00156A  2B71               	incf	(??_IntToC+1)& (0+255),f,b
 10971  00156C  0100               	movlb	0	; () banked
 10972  00156E  516E               	movf	IntToC@nb& (0+255),w,b
 10973  001570  0100               	movlb	0	; () banked
 10974  001572  2570               	addwf	??_IntToC& (0+255),w,b
 10975  001574  0100               	movlb	0	; () banked
 10976  001576  6F66               	movwf	___awdiv@dividend& (0+255),b
 10977  001578  0100               	movlb	0	; () banked
 10978  00157A  516F               	movf	(IntToC@nb+1)& (0+255),w,b
 10979  00157C  0100               	movlb	0	; () banked
 10980  00157E  2171               	addwfc	(??_IntToC+1)& (0+255),w,b
 10981  001580  0100               	movlb	0	; () banked
 10982  001582  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
 10983  001584  0E00               	movlw	0
 10984  001586  0100               	movlb	0	; () banked
 10985  001588  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 10986  00158A  0E64               	movlw	100
 10987  00158C  6F68               	movwf	___awdiv@divisor& (0+255),b
 10988  00158E  EC29  F014         	call	___awdiv	;wreg free
 10989  001592  C066  F076         	movff	?___awdiv,IntToC@i+4
 10990  001596  C067  F077         	movff	?___awdiv+1,IntToC@i+5
 10991                           
 10992                           ;uart.c: 186: i[3] = (nb - i[0] * 10000 - i[1] * 1000 - i[2] * 100) / 10;
 10993  00159A  C072  F060         	movff	IntToC@i,___wmul@multiplier
 10994  00159E  C073  F061         	movff	IntToC@i+1,___wmul@multiplier+1
 10995  0015A2  0E27               	movlw	39
 10996  0015A4  0100               	movlb	0	; () banked
 10997  0015A6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10998  0015A8  0E10               	movlw	16
 10999  0015AA  6F62               	movwf	___wmul@multiplicand& (0+255),b
 11000  0015AC  EC87  F01B         	call	___wmul	;wreg free
 11001  0015B0  C060  F070         	movff	?___wmul,??_IntToC
 11002  0015B4  C061  F071         	movff	?___wmul+1,??_IntToC+1
 11003  0015B8  C074  F060         	movff	IntToC@i+2,___wmul@multiplier
 11004  0015BC  C075  F061         	movff	IntToC@i+3,___wmul@multiplier+1
 11005  0015C0  0E03               	movlw	3
 11006  0015C2  0100               	movlb	0	; () banked
 11007  0015C4  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11008  0015C6  0EE8               	movlw	232
 11009  0015C8  6F62               	movwf	___wmul@multiplicand& (0+255),b
 11010  0015CA  EC87  F01B         	call	___wmul	;wreg free
 11011  0015CE  0100               	movlb	0	; () banked
 11012  0015D0  5160               	movf	?___wmul& (0+255),w,b
 11013  0015D2  0100               	movlb	0	; () banked
 11014  0015D4  2770               	addwf	??_IntToC& (0+255),f,b
 11015  0015D6  0100               	movlb	0	; () banked
 11016  0015D8  5161               	movf	(?___wmul+1)& (0+255),w,b
 11017  0015DA  0100               	movlb	0	; () banked
 11018  0015DC  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
 11019  0015DE  C076  F060         	movff	IntToC@i+4,___wmul@multiplier
 11020  0015E2  C077  F061         	movff	IntToC@i+5,___wmul@multiplier+1
 11021  0015E6  0E00               	movlw	0
 11022  0015E8  0100               	movlb	0	; () banked
 11023  0015EA  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11024  0015EC  0E64               	movlw	100
 11025  0015EE  6F62               	movwf	___wmul@multiplicand& (0+255),b
 11026  0015F0  EC87  F01B         	call	___wmul	;wreg free
 11027  0015F4  0100               	movlb	0	; () banked
 11028  0015F6  5160               	movf	?___wmul& (0+255),w,b
 11029  0015F8  0100               	movlb	0	; () banked
 11030  0015FA  2770               	addwf	??_IntToC& (0+255),f,b
 11031  0015FC  0100               	movlb	0	; () banked
 11032  0015FE  5161               	movf	(?___wmul+1)& (0+255),w,b
 11033  001600  0100               	movlb	0	; () banked
 11034  001602  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
 11035  001604  0100               	movlb	0	; () banked
 11036  001606  1F70               	comf	??_IntToC& (0+255),f,b
 11037  001608  1F71               	comf	(??_IntToC+1)& (0+255),f,b
 11038  00160A  4B70               	infsnz	??_IntToC& (0+255),f,b
 11039  00160C  2B71               	incf	(??_IntToC+1)& (0+255),f,b
 11040  00160E  0100               	movlb	0	; () banked
 11041  001610  516E               	movf	IntToC@nb& (0+255),w,b
 11042  001612  0100               	movlb	0	; () banked
 11043  001614  2570               	addwf	??_IntToC& (0+255),w,b
 11044  001616  0100               	movlb	0	; () banked
 11045  001618  6F66               	movwf	___awdiv@dividend& (0+255),b
 11046  00161A  0100               	movlb	0	; () banked
 11047  00161C  516F               	movf	(IntToC@nb+1)& (0+255),w,b
 11048  00161E  0100               	movlb	0	; () banked
 11049  001620  2171               	addwfc	(??_IntToC+1)& (0+255),w,b
 11050  001622  0100               	movlb	0	; () banked
 11051  001624  6F67               	movwf	(___awdiv@dividend+1)& (0+255),b
 11052  001626  0E00               	movlw	0
 11053  001628  0100               	movlb	0	; () banked
 11054  00162A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
 11055  00162C  0E0A               	movlw	10
 11056  00162E  6F68               	movwf	___awdiv@divisor& (0+255),b
 11057  001630  EC29  F014         	call	___awdiv	;wreg free
 11058  001634  C066  F078         	movff	?___awdiv,IntToC@i+6
 11059  001638  C067  F079         	movff	?___awdiv+1,IntToC@i+7
 11060                           
 11061                           ;uart.c: 187: i[4] = (nb - i[0] * 10000 - i[1] * 1000 - i[2] * 100 - i[3] * 10);
 11062  00163C  C072  F060         	movff	IntToC@i,___wmul@multiplier
 11063  001640  C073  F061         	movff	IntToC@i+1,___wmul@multiplier+1
 11064  001644  0E27               	movlw	39
 11065  001646  0100               	movlb	0	; () banked
 11066  001648  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11067  00164A  0E10               	movlw	16
 11068  00164C  6F62               	movwf	___wmul@multiplicand& (0+255),b
 11069  00164E  EC87  F01B         	call	___wmul	;wreg free
 11070  001652  C060  F070         	movff	?___wmul,??_IntToC
 11071  001656  C061  F071         	movff	?___wmul+1,??_IntToC+1
 11072  00165A  C074  F060         	movff	IntToC@i+2,___wmul@multiplier
 11073  00165E  C075  F061         	movff	IntToC@i+3,___wmul@multiplier+1
 11074  001662  0E03               	movlw	3
 11075  001664  0100               	movlb	0	; () banked
 11076  001666  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11077  001668  0EE8               	movlw	232
 11078  00166A  6F62               	movwf	___wmul@multiplicand& (0+255),b
 11079  00166C  EC87  F01B         	call	___wmul	;wreg free
 11080  001670  0100               	movlb	0	; () banked
 11081  001672  5160               	movf	?___wmul& (0+255),w,b
 11082  001674  0100               	movlb	0	; () banked
 11083  001676  2770               	addwf	??_IntToC& (0+255),f,b
 11084  001678  0100               	movlb	0	; () banked
 11085  00167A  5161               	movf	(?___wmul+1)& (0+255),w,b
 11086  00167C  0100               	movlb	0	; () banked
 11087  00167E  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
 11088  001680  C076  F060         	movff	IntToC@i+4,___wmul@multiplier
 11089  001684  C077  F061         	movff	IntToC@i+5,___wmul@multiplier+1
 11090  001688  0E00               	movlw	0
 11091  00168A  0100               	movlb	0	; () banked
 11092  00168C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11093  00168E  0E64               	movlw	100
 11094  001690  6F62               	movwf	___wmul@multiplicand& (0+255),b
 11095  001692  EC87  F01B         	call	___wmul	;wreg free
 11096  001696  0100               	movlb	0	; () banked
 11097  001698  5160               	movf	?___wmul& (0+255),w,b
 11098  00169A  0100               	movlb	0	; () banked
 11099  00169C  2770               	addwf	??_IntToC& (0+255),f,b
 11100  00169E  0100               	movlb	0	; () banked
 11101  0016A0  5161               	movf	(?___wmul+1)& (0+255),w,b
 11102  0016A2  0100               	movlb	0	; () banked
 11103  0016A4  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
 11104  0016A6  C078  F060         	movff	IntToC@i+6,___wmul@multiplier
 11105  0016AA  C079  F061         	movff	IntToC@i+7,___wmul@multiplier+1
 11106  0016AE  0E00               	movlw	0
 11107  0016B0  0100               	movlb	0	; () banked
 11108  0016B2  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11109  0016B4  0E0A               	movlw	10
 11110  0016B6  6F62               	movwf	___wmul@multiplicand& (0+255),b
 11111  0016B8  EC87  F01B         	call	___wmul	;wreg free
 11112  0016BC  0100               	movlb	0	; () banked
 11113  0016BE  5160               	movf	?___wmul& (0+255),w,b
 11114  0016C0  0100               	movlb	0	; () banked
 11115  0016C2  2770               	addwf	??_IntToC& (0+255),f,b
 11116  0016C4  0100               	movlb	0	; () banked
 11117  0016C6  5161               	movf	(?___wmul+1)& (0+255),w,b
 11118  0016C8  0100               	movlb	0	; () banked
 11119  0016CA  2371               	addwfc	(??_IntToC+1)& (0+255),f,b
 11120  0016CC  0100               	movlb	0	; () banked
 11121  0016CE  1F70               	comf	??_IntToC& (0+255),f,b
 11122  0016D0  1F71               	comf	(??_IntToC+1)& (0+255),f,b
 11123  0016D2  4B70               	infsnz	??_IntToC& (0+255),f,b
 11124  0016D4  2B71               	incf	(??_IntToC+1)& (0+255),f,b
 11125  0016D6  0100               	movlb	0	; () banked
 11126  0016D8  516E               	movf	IntToC@nb& (0+255),w,b
 11127  0016DA  0100               	movlb	0	; () banked
 11128  0016DC  2570               	addwf	??_IntToC& (0+255),w,b
 11129  0016DE  0100               	movlb	0	; () banked
 11130  0016E0  6F7A               	movwf	(IntToC@i+8)& (0+255),b
 11131  0016E2  0100               	movlb	0	; () banked
 11132  0016E4  516F               	movf	(IntToC@nb+1)& (0+255),w,b
 11133  0016E6  0100               	movlb	0	; () banked
 11134  0016E8  2171               	addwfc	(??_IntToC+1)& (0+255),w,b
 11135  0016EA  0100               	movlb	0	; () banked
 11136  0016EC  6F7B               	movwf	(IntToC@i+9)& (0+255),b
 11137                           
 11138                           ; BSR set to: 0
 11139                           ;uart.c: 189: out[j++] = (unsigned char)(i[0] + 48);
 11140  0016EE  0E76               	movlw	low IntToC@out
 11141  0016F0  0100               	movlb	0	; () banked
 11142  0016F2  257C               	addwf	IntToC@j& (0+255),w,b
 11143  0016F4  6ED9               	movwf	fsr2l,c
 11144  0016F6  0E01               	movlw	high IntToC@out
 11145  0016F8  0100               	movlb	0	; () banked
 11146  0016FA  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
 11147  0016FC  6EDA               	movwf	fsr2h,c
 11148  0016FE  0100               	movlb	0	; () banked
 11149  001700  5172               	movf	IntToC@i& (0+255),w,b
 11150  001702  0F30               	addlw	48
 11151  001704  6EDF               	movwf	indf2,c
 11152                           
 11153                           ; BSR set to: 0
 11154  001706  0100               	movlb	0	; () banked
 11155  001708  4B7C               	infsnz	IntToC@j& (0+255),f,b
 11156  00170A  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
 11157                           
 11158                           ; BSR set to: 0
 11159                           ;uart.c: 190: out[j++] = (unsigned char)(i[1] + 48);
 11160  00170C  0E76               	movlw	low IntToC@out
 11161  00170E  0100               	movlb	0	; () banked
 11162  001710  257C               	addwf	IntToC@j& (0+255),w,b
 11163  001712  6ED9               	movwf	fsr2l,c
 11164  001714  0E01               	movlw	high IntToC@out
 11165  001716  0100               	movlb	0	; () banked
 11166  001718  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
 11167  00171A  6EDA               	movwf	fsr2h,c
 11168  00171C  0100               	movlb	0	; () banked
 11169  00171E  5174               	movf	(IntToC@i+2)& (0+255),w,b
 11170  001720  0F30               	addlw	48
 11171  001722  6EDF               	movwf	indf2,c
 11172                           
 11173                           ; BSR set to: 0
 11174  001724  0100               	movlb	0	; () banked
 11175  001726  4B7C               	infsnz	IntToC@j& (0+255),f,b
 11176  001728  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
 11177                           
 11178                           ; BSR set to: 0
 11179                           ;uart.c: 191: out[j++] = (unsigned char)(i[2] + 48);
 11180  00172A  0E76               	movlw	low IntToC@out
 11181  00172C  0100               	movlb	0	; () banked
 11182  00172E  257C               	addwf	IntToC@j& (0+255),w,b
 11183  001730  6ED9               	movwf	fsr2l,c
 11184  001732  0E01               	movlw	high IntToC@out
 11185  001734  0100               	movlb	0	; () banked
 11186  001736  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
 11187  001738  6EDA               	movwf	fsr2h,c
 11188  00173A  0100               	movlb	0	; () banked
 11189  00173C  5176               	movf	(IntToC@i+4)& (0+255),w,b
 11190  00173E  0F30               	addlw	48
 11191  001740  6EDF               	movwf	indf2,c
 11192                           
 11193                           ; BSR set to: 0
 11194  001742  0100               	movlb	0	; () banked
 11195  001744  4B7C               	infsnz	IntToC@j& (0+255),f,b
 11196  001746  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
 11197                           
 11198                           ; BSR set to: 0
 11199                           ;uart.c: 192: out[j++] = (unsigned char)(i[3] + 48);
 11200  001748  0E76               	movlw	low IntToC@out
 11201  00174A  0100               	movlb	0	; () banked
 11202  00174C  257C               	addwf	IntToC@j& (0+255),w,b
 11203  00174E  6ED9               	movwf	fsr2l,c
 11204  001750  0E01               	movlw	high IntToC@out
 11205  001752  0100               	movlb	0	; () banked
 11206  001754  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
 11207  001756  6EDA               	movwf	fsr2h,c
 11208  001758  0100               	movlb	0	; () banked
 11209  00175A  5178               	movf	(IntToC@i+6)& (0+255),w,b
 11210  00175C  0F30               	addlw	48
 11211  00175E  6EDF               	movwf	indf2,c
 11212                           
 11213                           ; BSR set to: 0
 11214  001760  0100               	movlb	0	; () banked
 11215  001762  4B7C               	infsnz	IntToC@j& (0+255),f,b
 11216  001764  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
 11217                           
 11218                           ; BSR set to: 0
 11219                           ;uart.c: 193: out[j++] = (unsigned char)(i[4] + 48);
 11220  001766  0E76               	movlw	low IntToC@out
 11221  001768  0100               	movlb	0	; () banked
 11222  00176A  257C               	addwf	IntToC@j& (0+255),w,b
 11223  00176C  6ED9               	movwf	fsr2l,c
 11224  00176E  0E01               	movlw	high IntToC@out
 11225  001770  0100               	movlb	0	; () banked
 11226  001772  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
 11227  001774  6EDA               	movwf	fsr2h,c
 11228  001776  0100               	movlb	0	; () banked
 11229  001778  517A               	movf	(IntToC@i+8)& (0+255),w,b
 11230  00177A  0F30               	addlw	48
 11231  00177C  6EDF               	movwf	indf2,c
 11232                           
 11233                           ; BSR set to: 0
 11234  00177E  0100               	movlb	0	; () banked
 11235  001780  4B7C               	infsnz	IntToC@j& (0+255),f,b
 11236  001782  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
 11237                           
 11238                           ; BSR set to: 0
 11239                           ;uart.c: 194: out[j++] = '\0';
 11240  001784  0E76               	movlw	low IntToC@out
 11241  001786  0100               	movlb	0	; () banked
 11242  001788  257C               	addwf	IntToC@j& (0+255),w,b
 11243  00178A  6ED9               	movwf	fsr2l,c
 11244  00178C  0E01               	movlw	high IntToC@out
 11245  00178E  0100               	movlb	0	; () banked
 11246  001790  217D               	addwfc	(IntToC@j+1)& (0+255),w,b
 11247  001792  6EDA               	movwf	fsr2h,c
 11248  001794  0E00               	movlw	0
 11249  001796  6EDF               	movwf	indf2,c
 11250                           
 11251                           ; BSR set to: 0
 11252  001798  0100               	movlb	0	; () banked
 11253  00179A  4B7C               	infsnz	IntToC@j& (0+255),f,b
 11254  00179C  2B7D               	incf	(IntToC@j+1)& (0+255),f,b
 11255                           
 11256                           ; BSR set to: 0
 11257                           ;uart.c: 196: return out;
 11258  00179E  0E76               	movlw	low IntToC@out
 11259  0017A0  0100               	movlb	0	; () banked
 11260  0017A2  6F6E               	movwf	?_IntToC& (0+255),b
 11261  0017A4  0E01               	movlw	high IntToC@out
 11262  0017A6  0100               	movlb	0	; () banked
 11263  0017A8  6F6F               	movwf	(?_IntToC+1)& (0+255),b
 11264  0017AA  D000               	goto	l304
 11265  0017AC                     l304:
 11266                           
 11267                           ; BSR set to: 0
 11268  0017AC  0012               	return		;funcret
 11269  0017AE                     __end_of_IntToC:
 11270                           	opt stack 0
 11271                           tblptru	equ	0xFF8
 11272                           tblptrh	equ	0xFF7
 11273                           tblptrl	equ	0xFF6
 11274                           tablat	equ	0xFF5
 11275                           prodh	equ	0xFF4
 11276                           prodl	equ	0xFF3
 11277                           intcon	equ	0xFF2
 11278                           intcon2	equ	0xFF1
 11279                           intcon3	equ	0xFF0
 11280                           indf0	equ	0xFEF
 11281                           postinc0	equ	0xFEE
 11282                           fsr0h	equ	0xFEA
 11283                           fsr0l	equ	0xFE9
 11284                           wreg	equ	0xFE8
 11285                           postinc1	equ	0xFE6
 11286                           postdec1	equ	0xFE5
 11287                           fsr1h	equ	0xFE2
 11288                           fsr1l	equ	0xFE1
 11289                           indf2	equ	0xFDF
 11290                           postinc2	equ	0xFDE
 11291                           postdec2	equ	0xFDD
 11292                           fsr2h	equ	0xFDA
 11293                           fsr2l	equ	0xFD9
 11294                           status	equ	0xFD8
 11295                           
 11296 ;; *************** function ___wmul *****************
 11297 ;; Defined at:
 11298 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 11299 ;; Parameters:    Size  Location     Type
 11300 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11301 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11302 ;; Auto vars:     Size  Location     Type
 11303 ;;  product         2    4[BANK0 ] unsigned int 
 11304 ;; Return value:  Size  Location     Type
 11305 ;;                  2    0[BANK0 ] unsigned int 
 11306 ;; Registers used:
 11307 ;;		wreg, status,2, status,0, prodl, prodh
 11308 ;; Tracked objects:
 11309 ;;		On entry : 0/0
 11310 ;;		On exit  : 0/0
 11311 ;;		Unchanged: 0/0
 11312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11313 ;;      Params:         0       4       0       0
 11314 ;;      Locals:         0       2       0       0
 11315 ;;      Temps:          0       0       0       0
 11316 ;;      Totals:         0       6       0       0
 11317 ;;Total ram usage:        6 bytes
 11318 ;; Hardware stack levels used:    1
 11319 ;; Hardware stack levels required when called:    6
 11320 ;; This function calls:
 11321 ;;		Nothing
 11322 ;; This function is called by:
 11323 ;;		_main
 11324 ;;		_IntToC
 11325 ;;		_eval_poly
 11326 ;; This function uses a non-reentrant model
 11327 ;;
 11328                           
 11329                           	psect	text47
 11330  00370E                     __ptext47:
 11331                           	opt stack 0
 11332  00370E                     ___wmul:
 11333                           	opt stack 19
 11334                           
 11335                           ; BSR set to: 0
 11336                           ;incstack = 0
 11337  00370E  0100               	movlb	0	; () banked
 11338  003710  5160               	movf	___wmul@multiplier& (0+255),w,b
 11339  003712  0100               	movlb	0	; () banked
 11340  003714  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11341  003716  CFF3 F064          	movff	prodl,___wmul@product
 11342  00371A  CFF4 F065          	movff	prodh,___wmul@product+1
 11343  00371E  0100               	movlb	0	; () banked
 11344  003720  5160               	movf	___wmul@multiplier& (0+255),w,b
 11345  003722  0100               	movlb	0	; () banked
 11346  003724  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11347  003726  50F3               	movf	prodl,w,c
 11348  003728  0100               	movlb	0	; () banked
 11349  00372A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11350  00372C  0100               	movlb	0	; () banked
 11351  00372E  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11352  003730  0100               	movlb	0	; () banked
 11353  003732  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11354  003734  50F3               	movf	prodl,w,c
 11355  003736  0100               	movlb	0	; () banked
 11356  003738  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11357                           
 11358                           ; BSR set to: 0
 11359  00373A  C064  F060         	movff	___wmul@product,?___wmul
 11360  00373E  C065  F061         	movff	___wmul@product+1,?___wmul+1
 11361  003742  D000               	goto	l637
 11362  003744                     l637:
 11363                           
 11364                           ; BSR set to: 0
 11365  003744  0012               	return		;funcret
 11366  003746                     __end_of___wmul:
 11367                           	opt stack 0
 11368                           tblptru	equ	0xFF8
 11369                           tblptrh	equ	0xFF7
 11370                           tblptrl	equ	0xFF6
 11371                           tablat	equ	0xFF5
 11372                           prodh	equ	0xFF4
 11373                           prodl	equ	0xFF3
 11374                           intcon	equ	0xFF2
 11375                           intcon2	equ	0xFF1
 11376                           intcon3	equ	0xFF0
 11377                           indf0	equ	0xFEF
 11378                           postinc0	equ	0xFEE
 11379                           fsr0h	equ	0xFEA
 11380                           fsr0l	equ	0xFE9
 11381                           wreg	equ	0xFE8
 11382                           postinc1	equ	0xFE6
 11383                           postdec1	equ	0xFE5
 11384                           fsr1h	equ	0xFE2
 11385                           fsr1l	equ	0xFE1
 11386                           indf2	equ	0xFDF
 11387                           postinc2	equ	0xFDE
 11388                           postdec2	equ	0xFDD
 11389                           fsr2h	equ	0xFDA
 11390                           fsr2l	equ	0xFD9
 11391                           status	equ	0xFD8
 11392                           
 11393 ;; *************** function ___awdiv *****************
 11394 ;; Defined at:
 11395 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 11396 ;; Parameters:    Size  Location     Type
 11397 ;;  dividend        2    6[BANK0 ] int 
 11398 ;;  divisor         2    8[BANK0 ] int 
 11399 ;; Auto vars:     Size  Location     Type
 11400 ;;  quotient        2   12[BANK0 ] int 
 11401 ;;  sign            1   11[BANK0 ] unsigned char 
 11402 ;;  counter         1   10[BANK0 ] unsigned char 
 11403 ;; Return value:  Size  Location     Type
 11404 ;;                  2    6[BANK0 ] int 
 11405 ;; Registers used:
 11406 ;;		wreg, status,2, status,0
 11407 ;; Tracked objects:
 11408 ;;		On entry : 0/0
 11409 ;;		On exit  : 0/0
 11410 ;;		Unchanged: 0/0
 11411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11412 ;;      Params:         0       4       0       0
 11413 ;;      Locals:         0       4       0       0
 11414 ;;      Temps:          0       0       0       0
 11415 ;;      Totals:         0       8       0       0
 11416 ;;Total ram usage:        8 bytes
 11417 ;; Hardware stack levels used:    1
 11418 ;; Hardware stack levels required when called:    6
 11419 ;; This function calls:
 11420 ;;		Nothing
 11421 ;; This function is called by:
 11422 ;;		_PutcUART
 11423 ;;		_IntToC
 11424 ;; This function uses a non-reentrant model
 11425 ;;
 11426                           
 11427                           	psect	text48
 11428  002852                     __ptext48:
 11429                           	opt stack 0
 11430  002852                     ___awdiv:
 11431                           	opt stack 21
 11432                           
 11433                           ; BSR set to: 0
 11434                           ;incstack = 0
 11435  002852  0E00               	movlw	0
 11436  002854  0100               	movlb	0	; () banked
 11437  002856  6F6B               	movwf	___awdiv@sign& (0+255),b
 11438                           
 11439                           ; BSR set to: 0
 11440  002858  0100               	movlb	0	; () banked
 11441  00285A  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11442  00285C  D009               	goto	l4326
 11443                           
 11444                           ; BSR set to: 0
 11445  00285E  0100               	movlb	0	; () banked
 11446  002860  6D68               	negf	___awdiv@divisor& (0+255),b
 11447  002862  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
 11448  002864  B0D8               	btfsc	status,0,c
 11449  002866  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
 11450                           
 11451                           ; BSR set to: 0
 11452  002868  0E01               	movlw	1
 11453  00286A  0100               	movlb	0	; () banked
 11454  00286C  6F6B               	movwf	___awdiv@sign& (0+255),b
 11455  00286E  D000               	goto	l4326
 11456  002870                     l4326:
 11457                           
 11458                           ; BSR set to: 0
 11459  002870  0100               	movlb	0	; () banked
 11460  002872  AF67               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 11461  002874  D009               	goto	l4332
 11462                           
 11463                           ; BSR set to: 0
 11464  002876  0100               	movlb	0	; () banked
 11465  002878  6D66               	negf	___awdiv@dividend& (0+255),b
 11466  00287A  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
 11467  00287C  B0D8               	btfsc	status,0,c
 11468  00287E  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11469                           
 11470                           ; BSR set to: 0
 11471  002880  0E01               	movlw	1
 11472  002882  0100               	movlb	0	; () banked
 11473  002884  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
 11474  002886  D000               	goto	l4332
 11475  002888                     l4332:
 11476                           
 11477                           ; BSR set to: 0
 11478  002888  0E00               	movlw	0
 11479  00288A  0100               	movlb	0	; () banked
 11480  00288C  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
 11481  00288E  0E00               	movlw	0
 11482  002890  6F6C               	movwf	___awdiv@quotient& (0+255),b
 11483                           
 11484                           ; BSR set to: 0
 11485  002892  0100               	movlb	0	; () banked
 11486  002894  5168               	movf	___awdiv@divisor& (0+255),w,b
 11487  002896  0100               	movlb	0	; () banked
 11488  002898  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 11489  00289A  B4D8               	btfsc	status,2,c
 11490  00289C  D031               	goto	l4354
 11491                           
 11492                           ; BSR set to: 0
 11493  00289E  0E01               	movlw	1
 11494  0028A0  0100               	movlb	0	; () banked
 11495  0028A2  6F6A               	movwf	___awdiv@counter& (0+255),b
 11496  0028A4  D007               	goto	l4340
 11497  0028A6                     l4338:
 11498                           
 11499                           ; BSR set to: 0
 11500  0028A6  0100               	movlb	0	; () banked
 11501  0028A8  90D8               	bcf	status,0,c
 11502  0028AA  3768               	rlcf	___awdiv@divisor& (0+255),f,b
 11503  0028AC  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 11504  0028AE  0100               	movlb	0	; () banked
 11505  0028B0  2B6A               	incf	___awdiv@counter& (0+255),f,b
 11506  0028B2  D000               	goto	l4340
 11507  0028B4                     l4340:
 11508                           
 11509                           ; BSR set to: 0
 11510  0028B4  0100               	movlb	0	; () banked
 11511  0028B6  BF69               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 11512  0028B8  D002               	goto	l4342
 11513  0028BA  D7F5               	goto	l4338
 11514                           
 11515                           ; BSR set to: 0
 11516  0028BC  D000               	goto	l4342
 11517  0028BE                     l4342:
 11518                           
 11519                           ; BSR set to: 0
 11520  0028BE  0100               	movlb	0	; () banked
 11521  0028C0  90D8               	bcf	status,0,c
 11522  0028C2  376C               	rlcf	___awdiv@quotient& (0+255),f,b
 11523  0028C4  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 11524                           
 11525                           ; BSR set to: 0
 11526  0028C6  0100               	movlb	0	; () banked
 11527  0028C8  5168               	movf	___awdiv@divisor& (0+255),w,b
 11528  0028CA  0100               	movlb	0	; () banked
 11529  0028CC  5D66               	subwf	___awdiv@dividend& (0+255),w,b
 11530  0028CE  0100               	movlb	0	; () banked
 11531  0028D0  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11532  0028D2  0100               	movlb	0	; () banked
 11533  0028D4  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 11534  0028D6  A0D8               	btfss	status,0,c
 11535  0028D8  D00B               	goto	l4350
 11536                           
 11537                           ; BSR set to: 0
 11538  0028DA  0100               	movlb	0	; () banked
 11539  0028DC  5168               	movf	___awdiv@divisor& (0+255),w,b
 11540  0028DE  0100               	movlb	0	; () banked
 11541  0028E0  5F66               	subwf	___awdiv@dividend& (0+255),f,b
 11542  0028E2  0100               	movlb	0	; () banked
 11543  0028E4  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11544  0028E6  0100               	movlb	0	; () banked
 11545  0028E8  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 11546                           
 11547                           ; BSR set to: 0
 11548  0028EA  0100               	movlb	0	; () banked
 11549  0028EC  816C               	bsf	___awdiv@quotient& (0+255),0,b
 11550  0028EE  D000               	goto	l4350
 11551  0028F0                     l4350:
 11552                           
 11553                           ; BSR set to: 0
 11554  0028F0  0100               	movlb	0	; () banked
 11555  0028F2  90D8               	bcf	status,0,c
 11556  0028F4  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 11557  0028F6  3368               	rrcf	___awdiv@divisor& (0+255),f,b
 11558                           
 11559                           ; BSR set to: 0
 11560  0028F8  0100               	movlb	0	; () banked
 11561  0028FA  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
 11562  0028FC  D7E0               	goto	l4342
 11563                           
 11564                           ; BSR set to: 0
 11565  0028FE  D000               	goto	l4354
 11566  002900                     l4354:
 11567                           
 11568                           ; BSR set to: 0
 11569  002900  0100               	movlb	0	; () banked
 11570  002902  516B               	movf	___awdiv@sign& (0+255),w,b
 11571  002904  0100               	movlb	0	; () banked
 11572  002906  B4D8               	btfsc	status,2,c
 11573  002908  D006               	goto	l4358
 11574                           
 11575                           ; BSR set to: 0
 11576  00290A  0100               	movlb	0	; () banked
 11577  00290C  6D6C               	negf	___awdiv@quotient& (0+255),b
 11578  00290E  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 11579  002910  B0D8               	btfsc	status,0,c
 11580  002912  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 11581  002914  D000               	goto	l4358
 11582  002916                     l4358:
 11583                           
 11584                           ; BSR set to: 0
 11585  002916  C06C  F066         	movff	___awdiv@quotient,?___awdiv
 11586  00291A  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
 11587  00291E  D000               	goto	l830
 11588  002920                     l830:
 11589                           
 11590                           ; BSR set to: 0
 11591  002920  0012               	return		;funcret
 11592  002922                     __end_of___awdiv:
 11593                           	opt stack 0
 11594                           tblptru	equ	0xFF8
 11595                           tblptrh	equ	0xFF7
 11596                           tblptrl	equ	0xFF6
 11597                           tablat	equ	0xFF5
 11598                           prodh	equ	0xFF4
 11599                           prodl	equ	0xFF3
 11600                           intcon	equ	0xFF2
 11601                           intcon2	equ	0xFF1
 11602                           intcon3	equ	0xFF0
 11603                           indf0	equ	0xFEF
 11604                           postinc0	equ	0xFEE
 11605                           fsr0h	equ	0xFEA
 11606                           fsr0l	equ	0xFE9
 11607                           wreg	equ	0xFE8
 11608                           postinc1	equ	0xFE6
 11609                           postdec1	equ	0xFE5
 11610                           fsr1h	equ	0xFE2
 11611                           fsr1l	equ	0xFE1
 11612                           indf2	equ	0xFDF
 11613                           postinc2	equ	0xFDE
 11614                           postdec2	equ	0xFDD
 11615                           fsr2h	equ	0xFDA
 11616                           fsr2l	equ	0xFD9
 11617                           status	equ	0xFD8
 11618                           
 11619 ;; *************** function _low_isr *****************
 11620 ;; Defined at:
 11621 ;;		line 33 in file "interruptions.c"
 11622 ;; Parameters:    Size  Location     Type
 11623 ;;		None
 11624 ;; Auto vars:     Size  Location     Type
 11625 ;;		None
 11626 ;; Return value:  Size  Location     Type
 11627 ;;		None               void
 11628 ;; Registers used:
 11629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11630 ;; Tracked objects:
 11631 ;;		On entry : 0/0
 11632 ;;		On exit  : 0/0
 11633 ;;		Unchanged: 0/0
 11634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11635 ;;      Params:         0       0       0       0
 11636 ;;      Locals:         0       0       0       0
 11637 ;;      Temps:         17       0       0       0
 11638 ;;      Totals:        17       0       0       0
 11639 ;;Total ram usage:       17 bytes
 11640 ;; Hardware stack levels used:    1
 11641 ;; Hardware stack levels required when called:    5
 11642 ;; This function calls:
 11643 ;;		_subroutine_interruptions
 11644 ;; This function is called by:
 11645 ;;		Interrupt level 1
 11646 ;; This function uses a non-reentrant model
 11647 ;;
 11648                           
 11649                           	psect	intcodelo
 11650  000018                     __pintcodelo:
 11651                           	opt stack 0
 11652  000018                     _low_isr:
 11653                           	opt stack 17
 11654                           
 11655                           ; BSR set to: 0
 11656                           ;incstack = 0
 11657  000018  CFD8 F004          	movff	status,??_low_isr
 11658  00001C  CFE8 F005          	movff	wreg,??_low_isr+1
 11659  000020  CFE0 F006          	movff	bsr,??_low_isr+2
 11660  000024  CFFA F007          	movff	pclath,??_low_isr+3
 11661  000028  CFFB F008          	movff	pclatu,??_low_isr+4
 11662  00002C  CFE9 F009          	movff	fsr0l,??_low_isr+5
 11663  000030  CFEA F00A          	movff	fsr0h,??_low_isr+6
 11664  000034  CFE1 F00B          	movff	fsr1l,??_low_isr+7
 11665  000038  CFE2 F00C          	movff	fsr1h,??_low_isr+8
 11666  00003C  CFD9 F00D          	movff	fsr2l,??_low_isr+9
 11667  000040  CFDA F00E          	movff	fsr2h,??_low_isr+10
 11668  000044  CFF3 F00F          	movff	prodl,??_low_isr+11
 11669  000048  CFF4 F010          	movff	prodh,??_low_isr+12
 11670  00004C  CFF6 F011          	movff	tblptrl,??_low_isr+13
 11671  000050  CFF7 F012          	movff	tblptrh,??_low_isr+14
 11672  000054  CFF8 F013          	movff	tblptru,??_low_isr+15
 11673  000058  CFF5 F014          	movff	tablat,??_low_isr+16
 11674                           
 11675                           ;interruptions.c: 35: subroutine_interruptions(0b0);
 11676  00005C  0E00               	movlw	0
 11677  00005E  ECD1  F017         	call	_subroutine_interruptions
 11678  000062  C014  FFF5         	movff	??_low_isr+16,tablat
 11679  000066  C013  FFF8         	movff	??_low_isr+15,tblptru
 11680  00006A  C012  FFF7         	movff	??_low_isr+14,tblptrh
 11681  00006E  C011  FFF6         	movff	??_low_isr+13,tblptrl
 11682  000072  C010  FFF4         	movff	??_low_isr+12,prodh
 11683  000076  C00F  FFF3         	movff	??_low_isr+11,prodl
 11684  00007A  C00E  FFDA         	movff	??_low_isr+10,fsr2h
 11685  00007E  C00D  FFD9         	movff	??_low_isr+9,fsr2l
 11686  000082  C00C  FFE2         	movff	??_low_isr+8,fsr1h
 11687  000086  C00B  FFE1         	movff	??_low_isr+7,fsr1l
 11688  00008A  C00A  FFEA         	movff	??_low_isr+6,fsr0h
 11689  00008E  C009  FFE9         	movff	??_low_isr+5,fsr0l
 11690  000092  C008  FFFB         	movff	??_low_isr+4,pclatu
 11691  000096  C007  FFFA         	movff	??_low_isr+3,pclath
 11692  00009A  C006  FFE0         	movff	??_low_isr+2,bsr
 11693  00009E  C005  FFE8         	movff	??_low_isr+1,wreg
 11694  0000A2  C004  FFD8         	movff	??_low_isr,status
 11695  0000A6  0010               	retfie	
 11696  0000A8                     __end_of_low_isr:
 11697                           	opt stack 0
 11698                           pclatu	equ	0xFFB
 11699                           pclath	equ	0xFFA
 11700                           tblptru	equ	0xFF8
 11701                           tblptrh	equ	0xFF7
 11702                           tblptrl	equ	0xFF6
 11703                           tablat	equ	0xFF5
 11704                           prodh	equ	0xFF4
 11705                           prodl	equ	0xFF3
 11706                           intcon	equ	0xFF2
 11707                           intcon2	equ	0xFF1
 11708                           intcon3	equ	0xFF0
 11709                           indf0	equ	0xFEF
 11710                           postinc0	equ	0xFEE
 11711                           fsr0h	equ	0xFEA
 11712                           fsr0l	equ	0xFE9
 11713                           wreg	equ	0xFE8
 11714                           postinc1	equ	0xFE6
 11715                           postdec1	equ	0xFE5
 11716                           fsr1h	equ	0xFE2
 11717                           fsr1l	equ	0xFE1
 11718                           bsr	equ	0xFE0
 11719                           indf2	equ	0xFDF
 11720                           postinc2	equ	0xFDE
 11721                           postdec2	equ	0xFDD
 11722                           fsr2h	equ	0xFDA
 11723                           fsr2l	equ	0xFD9
 11724                           status	equ	0xFD8
 11725                           
 11726 ;; *************** function _subroutine_interruptions *****************
 11727 ;; Defined at:
 11728 ;;		line 43 in file "interruptions.c"
 11729 ;; Parameters:    Size  Location     Type
 11730 ;;  priorite        1    wreg     unsigned char 
 11731 ;; Auto vars:     Size  Location     Type
 11732 ;;  priorite        1    2[COMRAM] unsigned char 
 11733 ;; Return value:  Size  Location     Type
 11734 ;;		None               void
 11735 ;; Registers used:
 11736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11737 ;; Tracked objects:
 11738 ;;		On entry : 0/0
 11739 ;;		On exit  : 0/0
 11740 ;;		Unchanged: 0/0
 11741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11742 ;;      Params:         0       0       0       0
 11743 ;;      Locals:         1       0       0       0
 11744 ;;      Temps:          0       0       0       0
 11745 ;;      Totals:         1       0       0       0
 11746 ;;Total ram usage:        1 bytes
 11747 ;; Hardware stack levels used:    1
 11748 ;; Hardware stack levels required when called:    4
 11749 ;; This function calls:
 11750 ;;		_interrupt_RX
 11751 ;;		_interrupt_TX
 11752 ;;		_interruption_INT0
 11753 ;;		_interruption_QEI
 11754 ;;		_interruption_timer0
 11755 ;;		_interruption_timer1
 11756 ;;		_interruption_timer2
 11757 ;;		_interuption_QEI_sens
 11758 ;; This function is called by:
 11759 ;;		_low_isr
 11760 ;; This function uses a non-reentrant model
 11761 ;;
 11762                           
 11763                           	psect	text50
 11764  002FA2                     __ptext50:
 11765                           	opt stack 0
 11766  002FA2                     _subroutine_interruptions:
 11767                           	opt stack 17
 11768                           
 11769                           ;incstack = 0
 11770                           ;subroutine_interruptions@priorite stored from wreg
 11771  002FA2  6E03               	movwf	subroutine_interruptions@priorite,c
 11772                           
 11773                           ;interruptions.c: 45: if ( PIR3bits.IC2QEIF == 1 && 0b1 == 1 && priorite == 0b1)
 11774  002FA4  A4A4               	btfss	4004,2,c	;volatile
 11775  002FA6  D006               	goto	i1l366
 11776  002FA8  0403               	decf	subroutine_interruptions@priorite,w,c
 11777  002FAA  A4D8               	btfss	status,2,c
 11778  002FAC  D003               	goto	i1l366
 11779                           
 11780                           ;interruptions.c: 46: {
 11781                           ;interruptions.c: 47: interruption_QEI();
 11782  002FAE  ECE6  F01B         	call	_interruption_QEI	;wreg free
 11783                           
 11784                           ;interruptions.c: 48: }
 11785  002FB2  D038               	goto	i1l381
 11786  002FB4                     i1l366:
 11787                           
 11788                           ;interruptions.c: 49: else if ( PIR3bits.IC3DRIF == 1 && 0b0 == 1 && priorite == 0b1)
 11789  002FB4  50A4               	movf	4004,w,c	;volatile
 11790  002FB6  D006               	goto	i1l368
 11791  002FB8  0403               	decf	subroutine_interruptions@priorite,w,c
 11792  002FBA  A4D8               	btfss	status,2,c
 11793  002FBC  D003               	goto	i1l368
 11794                           
 11795                           ;interruptions.c: 50: {
 11796                           ;interruptions.c: 51: interuption_QEI_sens();
 11797  002FBE  EC69  F01C         	call	_interuption_QEI_sens	;wreg free
 11798                           
 11799                           ;interruptions.c: 52: }
 11800  002FC2  D030               	goto	i1l381
 11801  002FC4                     i1l368:
 11802                           
 11803                           ;interruptions.c: 53: else if ( INTCONbits.TMR0IF == 1 && 0b0 == 1 && priorite == 0b1)
 11804  002FC4  50F2               	movf	intcon,w,c	;volatile
 11805  002FC6  D006               	goto	i1l370
 11806  002FC8  0403               	decf	subroutine_interruptions@priorite,w,c
 11807  002FCA  A4D8               	btfss	status,2,c
 11808  002FCC  D003               	goto	i1l370
 11809                           
 11810                           ;interruptions.c: 54: {
 11811                           ;interruptions.c: 55: interruption_timer0();
 11812  002FCE  EC61  F01C         	call	_interruption_timer0	;wreg free
 11813                           
 11814                           ;interruptions.c: 56: }
 11815  002FD2  D028               	goto	i1l381
 11816  002FD4                     i1l370:
 11817                           
 11818                           ;interruptions.c: 57: else if ( PIR1bits.TMR1IF == 1 && 0b1 == 1 && priorite == 0b1)
 11819  002FD4  A09E               	btfss	3998,0,c	;volatile
 11820  002FD6  D006               	goto	i1l372
 11821  002FD8  0403               	decf	subroutine_interruptions@priorite,w,c
 11822  002FDA  A4D8               	btfss	status,2,c
 11823  002FDC  D003               	goto	i1l372
 11824                           
 11825                           ;interruptions.c: 58: {
 11826                           ;interruptions.c: 59: interruption_timer1();
 11827  002FDE  ECC9  F01A         	call	_interruption_timer1	;wreg free
 11828                           
 11829                           ;interruptions.c: 60: }
 11830  002FE2  D020               	goto	i1l381
 11831  002FE4                     i1l372:
 11832                           
 11833                           ;interruptions.c: 61: else if ( PIR1bits.TMR2IF == 1 && 0b0 == 1 && priorite == 0b0)
 11834  002FE4  509E               	movf	3998,w,c	;volatile
 11835  002FE6  D006               	goto	i1l374
 11836  002FE8  5003               	movf	subroutine_interruptions@priorite,w,c
 11837  002FEA  A4D8               	btfss	status,2,c
 11838  002FEC  D003               	goto	i1l374
 11839                           
 11840                           ;interruptions.c: 62: {
 11841                           ;interruptions.c: 63: interruption_timer2();
 11842  002FEE  EC6B  F01C         	call	_interruption_timer2	;wreg free
 11843                           
 11844                           ;interruptions.c: 64: }
 11845  002FF2  D018               	goto	i1l381
 11846  002FF4                     i1l374:
 11847                           
 11848                           ;interruptions.c: 65: else if (INTCONbits.INT0IF == 1 && 0b1 == 1 && priorite == 0b1)
 11849  002FF4  A2F2               	btfss	intcon,1,c	;volatile
 11850  002FF6  D006               	goto	i1l376
 11851  002FF8  0403               	decf	subroutine_interruptions@priorite,w,c
 11852  002FFA  A4D8               	btfss	status,2,c
 11853  002FFC  D003               	goto	i1l376
 11854                           
 11855                           ;interruptions.c: 66: {
 11856                           ;interruptions.c: 67: interruption_INT0();
 11857  002FFE  EC5B  F01A         	call	_interruption_INT0	;wreg free
 11858                           
 11859                           ;interruptions.c: 68: }
 11860  003002  D010               	goto	i1l381
 11861  003004                     i1l376:
 11862                           
 11863                           ;interruptions.c: 85: else if ( PIR1bits.RCIF == 1 && 0b1 == 1 && priorite == 0b1)
 11864  003004  AA9E               	btfss	3998,5,c	;volatile
 11865  003006  D006               	goto	i1l378
 11866  003008  0403               	decf	subroutine_interruptions@priorite,w,c
 11867  00300A  A4D8               	btfss	status,2,c
 11868  00300C  D003               	goto	i1l378
 11869                           
 11870                           ;interruptions.c: 86: {
 11871                           ;interruptions.c: 87: interrupt_RX();
 11872  00300E  EC2F  F01B         	call	_interrupt_RX	;wreg free
 11873                           
 11874                           ;interruptions.c: 88: }
 11875  003012  D008               	goto	i1l381
 11876  003014                     i1l378:
 11877                           
 11878                           ;interruptions.c: 89: else if (PIR1bits.TXIF == 1 && 0b0 == 1 && priorite == 0b0)
 11879  003014  509E               	movf	3998,w,c	;volatile
 11880  003016  D006               	goto	i1l381
 11881  003018  5003               	movf	subroutine_interruptions@priorite,w,c
 11882  00301A  A4D8               	btfss	status,2,c
 11883  00301C  D003               	goto	i1l381
 11884                           
 11885                           ;interruptions.c: 90: {
 11886                           ;interruptions.c: 91: interrupt_TX();
 11887  00301E  EC6D  F01C         	call	_interrupt_TX	;wreg free
 11888  003022  D000               	goto	i1l381
 11889  003024                     i1l381:
 11890  003024  0012               	return		;funcret
 11891  003026                     __end_of_subroutine_interruptions:
 11892                           	opt stack 0
 11893                           pclatu	equ	0xFFB
 11894                           pclath	equ	0xFFA
 11895                           tblptru	equ	0xFF8
 11896                           tblptrh	equ	0xFF7
 11897                           tblptrl	equ	0xFF6
 11898                           tablat	equ	0xFF5
 11899                           prodh	equ	0xFF4
 11900                           prodl	equ	0xFF3
 11901                           intcon	equ	0xFF2
 11902                           intcon2	equ	0xFF1
 11903                           intcon3	equ	0xFF0
 11904                           indf0	equ	0xFEF
 11905                           postinc0	equ	0xFEE
 11906                           fsr0h	equ	0xFEA
 11907                           fsr0l	equ	0xFE9
 11908                           wreg	equ	0xFE8
 11909                           postinc1	equ	0xFE6
 11910                           postdec1	equ	0xFE5
 11911                           fsr1h	equ	0xFE2
 11912                           fsr1l	equ	0xFE1
 11913                           bsr	equ	0xFE0
 11914                           indf2	equ	0xFDF
 11915                           postinc2	equ	0xFDE
 11916                           postdec2	equ	0xFDD
 11917                           fsr2h	equ	0xFDA
 11918                           fsr2l	equ	0xFD9
 11919                           status	equ	0xFD8
 11920                           
 11921 ;; *************** function _interuption_QEI_sens *****************
 11922 ;; Defined at:
 11923 ;;		line 193 in file "interruptions.c"
 11924 ;; Parameters:    Size  Location     Type
 11925 ;;		None
 11926 ;; Auto vars:     Size  Location     Type
 11927 ;;		None
 11928 ;; Return value:  Size  Location     Type
 11929 ;;		None               void
 11930 ;; Registers used:
 11931 ;;		None
 11932 ;; Tracked objects:
 11933 ;;		On entry : 0/0
 11934 ;;		On exit  : 0/0
 11935 ;;		Unchanged: 0/0
 11936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 11937 ;;      Params:         0       0       0       0
 11938 ;;      Locals:         0       0       0       0
 11939 ;;      Temps:          0       0       0       0
 11940 ;;      Totals:         0       0       0       0
 11941 ;;Total ram usage:        0 bytes
 11942 ;; Hardware stack levels used:    1
 11943 ;; Hardware stack levels required when called:    3
 11944 ;; This function calls:
 11945 ;;		Nothing
 11946 ;; This function is called by:
 11947 ;;		_subroutine_interruptions
 11948 ;; This function uses a non-reentrant model
 11949 ;;
 11950                           
 11951                           	psect	text51
 11952  0038D2                     __ptext51:
 11953                           	opt stack 0
 11954  0038D2                     _interuption_QEI_sens:
 11955                           	opt stack 17
 11956                           
 11957                           ;interruptions.c: 195: PIR3bits.IC3DRIF = 0;
 11958                           
 11959                           ;incstack = 0
 11960  0038D2  96A4               	bcf	4004,3,c	;volatile
 11961  0038D4  0012               	return		;funcret
 11962  0038D6                     __end_of_interuption_QEI_sens:
 11963                           	opt stack 0
 11964                           pclatu	equ	0xFFB
 11965                           pclath	equ	0xFFA
 11966                           tblptru	equ	0xFF8
 11967                           tblptrh	equ	0xFF7
 11968                           tblptrl	equ	0xFF6
 11969                           tablat	equ	0xFF5
 11970                           prodh	equ	0xFF4
 11971                           prodl	equ	0xFF3
 11972                           intcon	equ	0xFF2
 11973                           intcon2	equ	0xFF1
 11974                           intcon3	equ	0xFF0
 11975                           indf0	equ	0xFEF
 11976                           postinc0	equ	0xFEE
 11977                           fsr0h	equ	0xFEA
 11978                           fsr0l	equ	0xFE9
 11979                           wreg	equ	0xFE8
 11980                           postinc1	equ	0xFE6
 11981                           postdec1	equ	0xFE5
 11982                           fsr1h	equ	0xFE2
 11983                           fsr1l	equ	0xFE1
 11984                           bsr	equ	0xFE0
 11985                           indf2	equ	0xFDF
 11986                           postinc2	equ	0xFDE
 11987                           postdec2	equ	0xFDD
 11988                           fsr2h	equ	0xFDA
 11989                           fsr2l	equ	0xFD9
 11990                           status	equ	0xFD8
 11991                           
 11992 ;; *************** function _interruption_timer2 *****************
 11993 ;; Defined at:
 11994 ;;		line 129 in file "interruptions.c"
 11995 ;; Parameters:    Size  Location     Type
 11996 ;;		None
 11997 ;; Auto vars:     Size  Location     Type
 11998 ;;		None
 11999 ;; Return value:  Size  Location     Type
 12000 ;;		None               void
 12001 ;; Registers used:
 12002 ;;		None
 12003 ;; Tracked objects:
 12004 ;;		On entry : 0/0
 12005 ;;		On exit  : 0/0
 12006 ;;		Unchanged: 0/0
 12007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12008 ;;      Params:         0       0       0       0
 12009 ;;      Locals:         0       0       0       0
 12010 ;;      Temps:          0       0       0       0
 12011 ;;      Totals:         0       0       0       0
 12012 ;;Total ram usage:        0 bytes
 12013 ;; Hardware stack levels used:    1
 12014 ;; Hardware stack levels required when called:    3
 12015 ;; This function calls:
 12016 ;;		Nothing
 12017 ;; This function is called by:
 12018 ;;		_subroutine_interruptions
 12019 ;; This function uses a non-reentrant model
 12020 ;;
 12021                           
 12022                           	psect	text52
 12023  0038D6                     __ptext52:
 12024                           	opt stack 0
 12025  0038D6                     _interruption_timer2:
 12026                           	opt stack 17
 12027                           
 12028                           ;interruptions.c: 131: PIR1bits.TMR2IF = 0;
 12029                           
 12030                           ;incstack = 0
 12031  0038D6  929E               	bcf	3998,1,c	;volatile
 12032  0038D8  0012               	return		;funcret
 12033  0038DA                     __end_of_interruption_timer2:
 12034                           	opt stack 0
 12035                           pclatu	equ	0xFFB
 12036                           pclath	equ	0xFFA
 12037                           tblptru	equ	0xFF8
 12038                           tblptrh	equ	0xFF7
 12039                           tblptrl	equ	0xFF6
 12040                           tablat	equ	0xFF5
 12041                           prodh	equ	0xFF4
 12042                           prodl	equ	0xFF3
 12043                           intcon	equ	0xFF2
 12044                           intcon2	equ	0xFF1
 12045                           intcon3	equ	0xFF0
 12046                           indf0	equ	0xFEF
 12047                           postinc0	equ	0xFEE
 12048                           fsr0h	equ	0xFEA
 12049                           fsr0l	equ	0xFE9
 12050                           wreg	equ	0xFE8
 12051                           postinc1	equ	0xFE6
 12052                           postdec1	equ	0xFE5
 12053                           fsr1h	equ	0xFE2
 12054                           fsr1l	equ	0xFE1
 12055                           bsr	equ	0xFE0
 12056                           indf2	equ	0xFDF
 12057                           postinc2	equ	0xFDE
 12058                           postdec2	equ	0xFDD
 12059                           fsr2h	equ	0xFDA
 12060                           fsr2l	equ	0xFD9
 12061                           status	equ	0xFD8
 12062                           
 12063 ;; *************** function _interruption_timer1 *****************
 12064 ;; Defined at:
 12065 ;;		line 112 in file "interruptions.c"
 12066 ;; Parameters:    Size  Location     Type
 12067 ;;		None
 12068 ;; Auto vars:     Size  Location     Type
 12069 ;;		None
 12070 ;; Return value:  Size  Location     Type
 12071 ;;		None               void
 12072 ;; Registers used:
 12073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12074 ;; Tracked objects:
 12075 ;;		On entry : 0/0
 12076 ;;		On exit  : 0/0
 12077 ;;		Unchanged: 0/0
 12078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12079 ;;      Params:         0       0       0       0
 12080 ;;      Locals:         0       0       0       0
 12081 ;;      Temps:          1       0       0       0
 12082 ;;      Totals:         1       0       0       0
 12083 ;;Total ram usage:        1 bytes
 12084 ;; Hardware stack levels used:    1
 12085 ;; Hardware stack levels required when called:    3
 12086 ;; This function calls:
 12087 ;;		Nothing
 12088 ;; This function is called by:
 12089 ;;		_subroutine_interruptions
 12090 ;; This function uses a non-reentrant model
 12091 ;;
 12092                           
 12093                           	psect	text53
 12094  003592                     __ptext53:
 12095                           	opt stack 0
 12096  003592                     _interruption_timer1:
 12097                           	opt stack 17
 12098                           
 12099                           ;interruptions.c: 114: PIR1bits.TMR1IF = 0;
 12100                           
 12101                           ;incstack = 0
 12102  003592  909E               	bcf	3998,0,c	;volatile
 12103                           
 12104                           ;interruptions.c: 115: TMR1 = 65535 - 810;
 12105  003594  0EFC               	movlw	252
 12106  003596  6ECF               	movwf	4047,c	;volatile
 12107  003598  0ED5               	movlw	213
 12108  00359A  6ECE               	movwf	4046,c	;volatile
 12109                           
 12110                           ;interruptions.c: 117: if (uart_logiciel.transmission_en_cours == 1)
 12111  00359C  0447               	decf	_uart_logiciel+11,w,c
 12112  00359E  A4D8               	btfss	status,2,c
 12113  0035A0  D018               	goto	i1l387
 12114                           
 12115                           ;interruptions.c: 118: {
 12116                           ;interruptions.c: 119: PORTCbits.RC5 = uart_logiciel.buffer_uart[uart_logiciel.indice];
 12117  0035A2  5048               	movf	_uart_logiciel+12,w,c
 12118  0035A4  0D01               	mullw	1
 12119  0035A6  0E3C               	movlw	low _uart_logiciel
 12120  0035A8  24F3               	addwf	prodl,w,c
 12121  0035AA  6ED9               	movwf	fsr2l,c
 12122  0035AC  0E00               	movlw	high _uart_logiciel
 12123  0035AE  20F4               	addwfc	prodh,w,c
 12124  0035B0  6EDA               	movwf	fsr2h,c
 12125  0035B2  50DF               	movf	indf2,w,c
 12126  0035B4  6E01               	movwf	??_interruption_timer1& (0+255),c
 12127  0035B6  3A01               	swapf	??_interruption_timer1,f,c
 12128  0035B8  4601               	rlncf	??_interruption_timer1,f,c
 12129  0035BA  5082               	movf	3970,w,c	;volatile
 12130  0035BC  1801               	xorwf	??_interruption_timer1,w,c
 12131  0035BE  0BDF               	andlw	-33
 12132  0035C0  1801               	xorwf	??_interruption_timer1,w,c
 12133  0035C2  6E82               	movwf	3970,c	;volatile
 12134                           
 12135                           ;interruptions.c: 120: uart_logiciel.indice++;
 12136  0035C4  2A48               	incf	_uart_logiciel+12,f,c
 12137                           
 12138                           ;interruptions.c: 122: if (uart_logiciel.indice > 10)
 12139  0035C6  0E0A               	movlw	10
 12140  0035C8  6448               	cpfsgt	_uart_logiciel+12,c
 12141  0035CA  D005               	goto	i1l390
 12142                           
 12143                           ;interruptions.c: 123: uart_logiciel.transmission_en_cours = 0;
 12144  0035CC  0E00               	movlw	0
 12145  0035CE  6E47               	movwf	_uart_logiciel+11,c
 12146                           
 12147                           ;interruptions.c: 124: }
 12148  0035D0  D002               	goto	i1l390
 12149  0035D2                     i1l387:
 12150                           
 12151                           ;interruptions.c: 125: else
 12152                           ;interruptions.c: 126: PORTCbits.RC5 = 1;
 12153  0035D2  8A82               	bsf	3970,5,c	;volatile
 12154  0035D4  D000               	goto	i1l390
 12155  0035D6                     i1l390:
 12156  0035D6  0012               	return		;funcret
 12157  0035D8                     __end_of_interruption_timer1:
 12158                           	opt stack 0
 12159                           pclatu	equ	0xFFB
 12160                           pclath	equ	0xFFA
 12161                           tblptru	equ	0xFF8
 12162                           tblptrh	equ	0xFF7
 12163                           tblptrl	equ	0xFF6
 12164                           tablat	equ	0xFF5
 12165                           prodh	equ	0xFF4
 12166                           prodl	equ	0xFF3
 12167                           intcon	equ	0xFF2
 12168                           intcon2	equ	0xFF1
 12169                           intcon3	equ	0xFF0
 12170                           indf0	equ	0xFEF
 12171                           postinc0	equ	0xFEE
 12172                           fsr0h	equ	0xFEA
 12173                           fsr0l	equ	0xFE9
 12174                           wreg	equ	0xFE8
 12175                           postinc1	equ	0xFE6
 12176                           postdec1	equ	0xFE5
 12177                           fsr1h	equ	0xFE2
 12178                           fsr1l	equ	0xFE1
 12179                           bsr	equ	0xFE0
 12180                           indf2	equ	0xFDF
 12181                           postinc2	equ	0xFDE
 12182                           postdec2	equ	0xFDD
 12183                           fsr2h	equ	0xFDA
 12184                           fsr2l	equ	0xFD9
 12185                           status	equ	0xFD8
 12186                           
 12187 ;; *************** function _interruption_timer0 *****************
 12188 ;; Defined at:
 12189 ;;		line 104 in file "interruptions.c"
 12190 ;; Parameters:    Size  Location     Type
 12191 ;;		None
 12192 ;; Auto vars:     Size  Location     Type
 12193 ;;		None
 12194 ;; Return value:  Size  Location     Type
 12195 ;;		None               void
 12196 ;; Registers used:
 12197 ;;		wreg, status,2
 12198 ;; Tracked objects:
 12199 ;;		On entry : 0/0
 12200 ;;		On exit  : 0/0
 12201 ;;		Unchanged: 0/0
 12202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12203 ;;      Params:         0       0       0       0
 12204 ;;      Locals:         0       0       0       0
 12205 ;;      Temps:          0       0       0       0
 12206 ;;      Totals:         0       0       0       0
 12207 ;;Total ram usage:        0 bytes
 12208 ;; Hardware stack levels used:    1
 12209 ;; Hardware stack levels required when called:    3
 12210 ;; This function calls:
 12211 ;;		Nothing
 12212 ;; This function is called by:
 12213 ;;		_subroutine_interruptions
 12214 ;; This function uses a non-reentrant model
 12215 ;;
 12216                           
 12217                           	psect	text54
 12218  0038C2                     __ptext54:
 12219                           	opt stack 0
 12220  0038C2                     _interruption_timer0:
 12221                           	opt stack 17
 12222                           
 12223                           ;interruptions.c: 106: INTCONbits.TMR0IF = 0;
 12224                           
 12225                           ;incstack = 0
 12226  0038C2  94F2               	bcf	intcon,2,c	;volatile
 12227                           
 12228                           ;interruptions.c: 107: TMR0L = 131;
 12229  0038C4  0E83               	movlw	131
 12230  0038C6  6ED6               	movwf	4054,c	;volatile
 12231  0038C8  0012               	return		;funcret
 12232  0038CA                     __end_of_interruption_timer0:
 12233                           	opt stack 0
 12234                           pclatu	equ	0xFFB
 12235                           pclath	equ	0xFFA
 12236                           tblptru	equ	0xFF8
 12237                           tblptrh	equ	0xFF7
 12238                           tblptrl	equ	0xFF6
 12239                           tablat	equ	0xFF5
 12240                           prodh	equ	0xFF4
 12241                           prodl	equ	0xFF3
 12242                           intcon	equ	0xFF2
 12243                           intcon2	equ	0xFF1
 12244                           intcon3	equ	0xFF0
 12245                           indf0	equ	0xFEF
 12246                           postinc0	equ	0xFEE
 12247                           fsr0h	equ	0xFEA
 12248                           fsr0l	equ	0xFE9
 12249                           wreg	equ	0xFE8
 12250                           postinc1	equ	0xFE6
 12251                           postdec1	equ	0xFE5
 12252                           fsr1h	equ	0xFE2
 12253                           fsr1l	equ	0xFE1
 12254                           bsr	equ	0xFE0
 12255                           indf2	equ	0xFDF
 12256                           postinc2	equ	0xFDE
 12257                           postdec2	equ	0xFDD
 12258                           fsr2h	equ	0xFDA
 12259                           fsr2l	equ	0xFD9
 12260                           status	equ	0xFD8
 12261                           
 12262 ;; *************** function _interruption_QEI *****************
 12263 ;; Defined at:
 12264 ;;		line 168 in file "interruptions.c"
 12265 ;; Parameters:    Size  Location     Type
 12266 ;;		None
 12267 ;; Auto vars:     Size  Location     Type
 12268 ;;		None
 12269 ;; Return value:  Size  Location     Type
 12270 ;;		None               void
 12271 ;; Registers used:
 12272 ;;		wreg, status,2, status,0
 12273 ;; Tracked objects:
 12274 ;;		On entry : 0/0
 12275 ;;		On exit  : 0/0
 12276 ;;		Unchanged: 0/0
 12277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12278 ;;      Params:         0       0       0       0
 12279 ;;      Locals:         0       0       0       0
 12280 ;;      Temps:          0       0       0       0
 12281 ;;      Totals:         0       0       0       0
 12282 ;;Total ram usage:        0 bytes
 12283 ;; Hardware stack levels used:    1
 12284 ;; Hardware stack levels required when called:    3
 12285 ;; This function calls:
 12286 ;;		Nothing
 12287 ;; This function is called by:
 12288 ;;		_subroutine_interruptions
 12289 ;; This function uses a non-reentrant model
 12290 ;;
 12291                           
 12292                           	psect	text55
 12293  0037CC                     __ptext55:
 12294                           	opt stack 0
 12295  0037CC                     _interruption_QEI:
 12296                           	opt stack 17
 12297                           
 12298                           ;interruptions.c: 170: PIR3bits.IC2QEIF = 0;
 12299                           
 12300                           ;incstack = 0
 12301  0037CC  94A4               	bcf	4004,2,c	;volatile
 12302                           
 12303                           ;interruptions.c: 171: QEICONbits.QERR = 0;
 12304  0037CE  9CB6               	bcf	4022,6,c	;volatile
 12305                           
 12306                           ;interruptions.c: 173: if (capteur.synchro_debut_tour == 1)
 12307  0037D0  0100               	movlb	0	; () banked
 12308  0037D2  05D9               	decf	(_capteur+1)& (0+255),w,b
 12309  0037D4  A4D8               	btfss	status,2,c
 12310  0037D6  D007               	goto	i1l3268
 12311                           
 12312                           ; BSR set to: 0
 12313                           ;interruptions.c: 174: {
 12314                           ;interruptions.c: 175: capteur.tour_en_cours = 1;
 12315  0037D8  0E01               	movlw	1
 12316  0037DA  0100               	movlb	0	; () banked
 12317  0037DC  6FD8               	movwf	_capteur& (0+255),b
 12318                           
 12319                           ;interruptions.c: 176: capteur.synchro_debut_tour = 0;
 12320  0037DE  0E00               	movlw	0
 12321  0037E0  0100               	movlb	0	; () banked
 12322  0037E2  6FD9               	movwf	(_capteur+1)& (0+255),b
 12323                           
 12324                           ;interruptions.c: 177: }
 12325  0037E4  D004               	goto	i1l413
 12326  0037E6                     i1l3268:
 12327                           
 12328                           ; BSR set to: 0
 12329                           ;interruptions.c: 178: else
 12330                           ;interruptions.c: 179: capteur.tour_en_cours = 0;
 12331  0037E6  0E00               	movlw	0
 12332  0037E8  0100               	movlb	0	; () banked
 12333  0037EA  6FD8               	movwf	_capteur& (0+255),b
 12334  0037EC  D000               	goto	i1l413
 12335  0037EE                     i1l413:
 12336                           
 12337                           ; BSR set to: 0
 12338  0037EE  0012               	return		;funcret
 12339  0037F0                     __end_of_interruption_QEI:
 12340                           	opt stack 0
 12341                           pclatu	equ	0xFFB
 12342                           pclath	equ	0xFFA
 12343                           tblptru	equ	0xFF8
 12344                           tblptrh	equ	0xFF7
 12345                           tblptrl	equ	0xFF6
 12346                           tablat	equ	0xFF5
 12347                           prodh	equ	0xFF4
 12348                           prodl	equ	0xFF3
 12349                           intcon	equ	0xFF2
 12350                           intcon2	equ	0xFF1
 12351                           intcon3	equ	0xFF0
 12352                           indf0	equ	0xFEF
 12353                           postinc0	equ	0xFEE
 12354                           fsr0h	equ	0xFEA
 12355                           fsr0l	equ	0xFE9
 12356                           wreg	equ	0xFE8
 12357                           postinc1	equ	0xFE6
 12358                           postdec1	equ	0xFE5
 12359                           fsr1h	equ	0xFE2
 12360                           fsr1l	equ	0xFE1
 12361                           bsr	equ	0xFE0
 12362                           indf2	equ	0xFDF
 12363                           postinc2	equ	0xFDE
 12364                           postdec2	equ	0xFDD
 12365                           fsr2h	equ	0xFDA
 12366                           fsr2l	equ	0xFD9
 12367                           status	equ	0xFD8
 12368                           
 12369 ;; *************** function _interruption_INT0 *****************
 12370 ;; Defined at:
 12371 ;;		line 141 in file "interruptions.c"
 12372 ;; Parameters:    Size  Location     Type
 12373 ;;		None
 12374 ;; Auto vars:     Size  Location     Type
 12375 ;;		None
 12376 ;; Return value:  Size  Location     Type
 12377 ;;		None               void
 12378 ;; Registers used:
 12379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12380 ;; Tracked objects:
 12381 ;;		On entry : 0/0
 12382 ;;		On exit  : 0/0
 12383 ;;		Unchanged: 0/0
 12384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12385 ;;      Params:         0       0       0       0
 12386 ;;      Locals:         0       0       0       0
 12387 ;;      Temps:          2       0       0       0
 12388 ;;      Totals:         2       0       0       0
 12389 ;;Total ram usage:        2 bytes
 12390 ;; Hardware stack levels used:    1
 12391 ;; Hardware stack levels required when called:    3
 12392 ;; This function calls:
 12393 ;;		Nothing
 12394 ;; This function is called by:
 12395 ;;		_subroutine_interruptions
 12396 ;; This function uses a non-reentrant model
 12397 ;;
 12398                           
 12399                           	psect	text56
 12400  0034B6                     __ptext56:
 12401                           	opt stack 0
 12402  0034B6                     _interruption_INT0:
 12403                           	opt stack 17
 12404                           
 12405                           ;interruptions.c: 143: if (capteur.tour_en_cours == 1)
 12406                           
 12407                           ; BSR set to: 0
 12408                           ;incstack = 0
 12409  0034B6  0100               	movlb	0	; () banked
 12410  0034B8  05D8               	decf	_capteur& (0+255),w,b
 12411  0034BA  A4D8               	btfss	status,2,c
 12412  0034BC  D01F               	goto	i1l3280
 12413                           
 12414                           ; BSR set to: 0
 12415                           ;interruptions.c: 144: {
 12416                           ;interruptions.c: 145: if (capteur.indice < 3)
 12417  0034BE  0E03               	movlw	3
 12418  0034C0  0100               	movlb	0	; () banked
 12419  0034C2  61F3               	cpfslt	(_capteur+27)& (0+255),b
 12420  0034C4  D018               	goto	i1l3278
 12421                           
 12422                           ; BSR set to: 0
 12423                           ;interruptions.c: 146: {
 12424                           ;interruptions.c: 147: capteur.position[capteur.indice++] = POSCNTH * 256 + POSCNTL;
 12425  0034C6  5066               	movf	3942,w,c	;volatile
 12426  0034C8  CF67 F001          	movff	3943,??_interruption_INT0	;volatile
 12427  0034CC  6A02               	clrf	(??_interruption_INT0+1)& (0+255),c
 12428  0034CE  C001  F002         	movff	??_interruption_INT0,??_interruption_INT0+1
 12429  0034D2  6A01               	clrf	??_interruption_INT0,c
 12430  0034D4  2601               	addwf	??_interruption_INT0,f,c
 12431  0034D6  0E00               	movlw	0
 12432  0034D8  2202               	addwfc	??_interruption_INT0+1,f,c
 12433  0034DA  0100               	movlb	0	; () banked
 12434  0034DC  51F3               	movf	(_capteur+27)& (0+255),w,b
 12435  0034DE  0D02               	mullw	2
 12436  0034E0  0EED               	movlw	low (_capteur+21)
 12437  0034E2  24F3               	addwf	prodl,w,c
 12438  0034E4  6ED9               	movwf	fsr2l,c
 12439  0034E6  0E00               	movlw	high (_capteur+21)
 12440  0034E8  20F4               	addwfc	prodh,w,c
 12441  0034EA  6EDA               	movwf	fsr2h,c
 12442  0034EC  C001  FFDE         	movff	??_interruption_INT0,postinc2
 12443  0034F0  C002  FFDD         	movff	??_interruption_INT0+1,postdec2
 12444  0034F4  D000               	goto	i1l3278
 12445  0034F6                     i1l3278:
 12446                           
 12447                           ; BSR set to: 0
 12448                           ;interruptions.c: 149: else
 12449                           ;interruptions.c: 150: capteur.indice++;
 12450  0034F6  0100               	movlb	0	; () banked
 12451  0034F8  2BF3               	incf	(_capteur+27)& (0+255),f,b
 12452                           
 12453                           ; BSR set to: 0
 12454  0034FA  D000               	goto	i1l3280
 12455  0034FC                     i1l3280:
 12456                           
 12457                           ; BSR set to: 0
 12458                           ;interruptions.c: 151: }
 12459                           ;interruptions.c: 152: INTCONbits.INT0IF = 0;
 12460  0034FC  92F2               	bcf	intcon,1,c	;volatile
 12461                           
 12462                           ; BSR set to: 0
 12463  0034FE  0012               	return		;funcret
 12464  003500                     __end_of_interruption_INT0:
 12465                           	opt stack 0
 12466                           pclatu	equ	0xFFB
 12467                           pclath	equ	0xFFA
 12468                           tblptru	equ	0xFF8
 12469                           tblptrh	equ	0xFF7
 12470                           tblptrl	equ	0xFF6
 12471                           tablat	equ	0xFF5
 12472                           prodh	equ	0xFF4
 12473                           prodl	equ	0xFF3
 12474                           intcon	equ	0xFF2
 12475                           intcon2	equ	0xFF1
 12476                           intcon3	equ	0xFF0
 12477                           indf0	equ	0xFEF
 12478                           postinc0	equ	0xFEE
 12479                           fsr0h	equ	0xFEA
 12480                           fsr0l	equ	0xFE9
 12481                           wreg	equ	0xFE8
 12482                           postinc1	equ	0xFE6
 12483                           postdec1	equ	0xFE5
 12484                           fsr1h	equ	0xFE2
 12485                           fsr1l	equ	0xFE1
 12486                           bsr	equ	0xFE0
 12487                           indf2	equ	0xFDF
 12488                           postinc2	equ	0xFDE
 12489                           postdec2	equ	0xFDD
 12490                           fsr2h	equ	0xFDA
 12491                           fsr2l	equ	0xFD9
 12492                           status	equ	0xFD8
 12493                           
 12494 ;; *************** function _interrupt_TX *****************
 12495 ;; Defined at:
 12496 ;;		line 226 in file "interruptions.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;		None
 12499 ;; Auto vars:     Size  Location     Type
 12500 ;;		None
 12501 ;; Return value:  Size  Location     Type
 12502 ;;		None               void
 12503 ;; Registers used:
 12504 ;;		None
 12505 ;; Tracked objects:
 12506 ;;		On entry : 0/0
 12507 ;;		On exit  : 0/0
 12508 ;;		Unchanged: 0/0
 12509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12510 ;;      Params:         0       0       0       0
 12511 ;;      Locals:         0       0       0       0
 12512 ;;      Temps:          0       0       0       0
 12513 ;;      Totals:         0       0       0       0
 12514 ;;Total ram usage:        0 bytes
 12515 ;; Hardware stack levels used:    1
 12516 ;; Hardware stack levels required when called:    3
 12517 ;; This function calls:
 12518 ;;		Nothing
 12519 ;; This function is called by:
 12520 ;;		_subroutine_interruptions
 12521 ;; This function uses a non-reentrant model
 12522 ;;
 12523                           
 12524                           	psect	text57
 12525  0038DA                     __ptext57:
 12526                           	opt stack 0
 12527  0038DA                     _interrupt_TX:
 12528                           	opt stack 17
 12529                           
 12530                           ;interruptions.c: 228: PIR1bits.TXIF = 0;
 12531                           
 12532                           ; BSR set to: 0
 12533                           ;incstack = 0
 12534  0038DA  989E               	bcf	3998,4,c	;volatile
 12535  0038DC  0012               	return		;funcret
 12536  0038DE                     __end_of_interrupt_TX:
 12537                           	opt stack 0
 12538                           pclatu	equ	0xFFB
 12539                           pclath	equ	0xFFA
 12540                           tblptru	equ	0xFF8
 12541                           tblptrh	equ	0xFF7
 12542                           tblptrl	equ	0xFF6
 12543                           tablat	equ	0xFF5
 12544                           prodh	equ	0xFF4
 12545                           prodl	equ	0xFF3
 12546                           intcon	equ	0xFF2
 12547                           intcon2	equ	0xFF1
 12548                           intcon3	equ	0xFF0
 12549                           indf0	equ	0xFEF
 12550                           postinc0	equ	0xFEE
 12551                           fsr0h	equ	0xFEA
 12552                           fsr0l	equ	0xFE9
 12553                           wreg	equ	0xFE8
 12554                           postinc1	equ	0xFE6
 12555                           postdec1	equ	0xFE5
 12556                           fsr1h	equ	0xFE2
 12557                           fsr1l	equ	0xFE1
 12558                           bsr	equ	0xFE0
 12559                           indf2	equ	0xFDF
 12560                           postinc2	equ	0xFDE
 12561                           postdec2	equ	0xFDD
 12562                           fsr2h	equ	0xFDA
 12563                           fsr2l	equ	0xFD9
 12564                           status	equ	0xFD8
 12565                           
 12566 ;; *************** function _interrupt_RX *****************
 12567 ;; Defined at:
 12568 ;;		line 207 in file "interruptions.c"
 12569 ;; Parameters:    Size  Location     Type
 12570 ;;		None
 12571 ;; Auto vars:     Size  Location     Type
 12572 ;;  temp            1    0[COMRAM] unsigned char 
 12573 ;; Return value:  Size  Location     Type
 12574 ;;		None               void
 12575 ;; Registers used:
 12576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12577 ;; Tracked objects:
 12578 ;;		On entry : 0/0
 12579 ;;		On exit  : 0/0
 12580 ;;		Unchanged: 0/0
 12581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12582 ;;      Params:         0       0       0       0
 12583 ;;      Locals:         1       0       0       0
 12584 ;;      Temps:          0       0       0       0
 12585 ;;      Totals:         1       0       0       0
 12586 ;;Total ram usage:        1 bytes
 12587 ;; Hardware stack levels used:    1
 12588 ;; Hardware stack levels required when called:    3
 12589 ;; This function calls:
 12590 ;;		Nothing
 12591 ;; This function is called by:
 12592 ;;		_subroutine_interruptions
 12593 ;; This function uses a non-reentrant model
 12594 ;;
 12595                           
 12596                           	psect	text58
 12597  00365E                     __ptext58:
 12598                           	opt stack 0
 12599  00365E                     _interrupt_RX:
 12600                           	opt stack 17
 12601                           
 12602                           ;interruptions.c: 209: PIR1bits.RCIF = 0;
 12603                           
 12604                           ;incstack = 0
 12605  00365E  9A9E               	bcf	3998,5,c	;volatile
 12606                           
 12607                           ;interruptions.c: 210: PORTBbits.RB0 = 1;
 12608  003660  8081               	bsf	3969,0,c	;volatile
 12609                           
 12610                           ;interruptions.c: 212: if (uart_reception.indice < 100)
 12611  003662  0E64               	movlw	100
 12612  003664  0101               	movlb	1	; () banked
 12613  003666  6173               	cpfslt	(_uart_reception+100)& (0+255),b
 12614  003668  D011               	goto	i1l3292
 12615                           
 12616                           ; BSR set to: 1
 12617                           ;interruptions.c: 213: {
 12618                           ;interruptions.c: 214: uart_reception.buffer_reeption[uart_reception.indice] = RCREG;
 12619  00366A  0101               	movlb	1	; () banked
 12620  00366C  5173               	movf	(_uart_reception+100)& (0+255),w,b
 12621  00366E  0D01               	mullw	1
 12622  003670  0E0F               	movlw	low _uart_reception
 12623  003672  24F3               	addwf	prodl,w,c
 12624  003674  6ED9               	movwf	fsr2l,c
 12625  003676  0E01               	movlw	high _uart_reception
 12626  003678  20F4               	addwfc	prodh,w,c
 12627  00367A  6EDA               	movwf	fsr2h,c
 12628  00367C  CFAE FFDF          	movff	4014,indf2	;volatile
 12629                           
 12630                           ; BSR set to: 1
 12631                           ;interruptions.c: 215: uart_reception.buffer_vide = 0;
 12632  003680  0E00               	movlw	0
 12633  003682  0101               	movlb	1	; () banked
 12634  003684  6F75               	movwf	(_uart_reception+102)& (0+255),b
 12635                           
 12636                           ; BSR set to: 1
 12637                           ;interruptions.c: 216: uart_reception.indice++;
 12638  003686  0101               	movlb	1	; () banked
 12639  003688  2B73               	incf	(_uart_reception+100)& (0+255),f,b
 12640                           
 12641                           ;interruptions.c: 217: }
 12642  00368A  D006               	goto	i1l424
 12643  00368C                     i1l3292:
 12644                           
 12645                           ; BSR set to: 1
 12646                           ;interruptions.c: 218: else
 12647                           ;interruptions.c: 219: {
 12648                           ;interruptions.c: 220: uart_reception.buffer_plein = 1;
 12649  00368C  0E01               	movlw	1
 12650  00368E  0101               	movlb	1	; () banked
 12651  003690  6F74               	movwf	(_uart_reception+101)& (0+255),b
 12652                           
 12653                           ; BSR set to: 1
 12654                           ;interruptions.c: 221: uint8_t temp = RCREG;
 12655  003692  CFAE F001          	movff	4014,interrupt_RX@temp	;volatile
 12656  003696  D000               	goto	i1l424
 12657  003698                     i1l424:
 12658                           
 12659                           ; BSR set to: 1
 12660  003698  0012               	return		;funcret
 12661  00369A                     __end_of_interrupt_RX:
 12662                           	opt stack 0
 12663                           pclatu	equ	0xFFB
 12664                           pclath	equ	0xFFA
 12665                           tblptru	equ	0xFF8
 12666                           tblptrh	equ	0xFF7
 12667                           tblptrl	equ	0xFF6
 12668                           tablat	equ	0xFF5
 12669                           prodh	equ	0xFF4
 12670                           prodl	equ	0xFF3
 12671                           intcon	equ	0xFF2
 12672                           intcon2	equ	0xFF1
 12673                           intcon3	equ	0xFF0
 12674                           indf0	equ	0xFEF
 12675                           postinc0	equ	0xFEE
 12676                           fsr0h	equ	0xFEA
 12677                           fsr0l	equ	0xFE9
 12678                           wreg	equ	0xFE8
 12679                           postinc1	equ	0xFE6
 12680                           postdec1	equ	0xFE5
 12681                           fsr1h	equ	0xFE2
 12682                           fsr1l	equ	0xFE1
 12683                           bsr	equ	0xFE0
 12684                           indf2	equ	0xFDF
 12685                           postinc2	equ	0xFDE
 12686                           postdec2	equ	0xFDD
 12687                           fsr2h	equ	0xFDA
 12688                           fsr2l	equ	0xFD9
 12689                           status	equ	0xFD8
 12690                           
 12691 ;; *************** function _high_isr *****************
 12692 ;; Defined at:
 12693 ;;		line 27 in file "interruptions.c"
 12694 ;; Parameters:    Size  Location     Type
 12695 ;;		None
 12696 ;; Auto vars:     Size  Location     Type
 12697 ;;		None
 12698 ;; Return value:  Size  Location     Type
 12699 ;;		None               void
 12700 ;; Registers used:
 12701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12702 ;; Tracked objects:
 12703 ;;		On entry : 0/0
 12704 ;;		On exit  : 0/0
 12705 ;;		Unchanged: 0/0
 12706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12707 ;;      Params:         0       0       0       0
 12708 ;;      Locals:         0       0       0       0
 12709 ;;      Temps:         14       0       0       0
 12710 ;;      Totals:        14       0       0       0
 12711 ;;Total ram usage:       14 bytes
 12712 ;; Hardware stack levels used:    1
 12713 ;; Hardware stack levels required when called:    2
 12714 ;; This function calls:
 12715 ;;		i2_subroutine_interruptions
 12716 ;; This function is called by:
 12717 ;;		Interrupt level 2
 12718 ;; This function uses a non-reentrant model
 12719 ;;
 12720                           
 12721                           	psect	intcode
 12722  000008                     __pintcode:
 12723                           	opt stack 0
 12724  000008                     _high_isr:
 12725                           	opt stack 17
 12726                           
 12727                           ; BSR set to: 1
 12728                           ;incstack = 0
 12729  000008  CFFA F018          	movff	pclath,??_high_isr
 12730  00000C  CFFB F019          	movff	pclatu,??_high_isr+1
 12731  000010  CFE9 F01A          	movff	fsr0l,??_high_isr+2
 12732  000014  EF40  F019         	goto	int_func
 12733                           pclatu	equ	0xFFB
 12734                           pclath	equ	0xFFA
 12735                           tblptru	equ	0xFF8
 12736                           tblptrh	equ	0xFF7
 12737                           tblptrl	equ	0xFF6
 12738                           tablat	equ	0xFF5
 12739                           prodh	equ	0xFF4
 12740                           prodl	equ	0xFF3
 12741                           intcon	equ	0xFF2
 12742                           intcon2	equ	0xFF1
 12743                           intcon3	equ	0xFF0
 12744                           indf0	equ	0xFEF
 12745                           postinc0	equ	0xFEE
 12746                           fsr0h	equ	0xFEA
 12747                           fsr0l	equ	0xFE9
 12748                           wreg	equ	0xFE8
 12749                           postinc1	equ	0xFE6
 12750                           postdec1	equ	0xFE5
 12751                           fsr1h	equ	0xFE2
 12752                           fsr1l	equ	0xFE1
 12753                           bsr	equ	0xFE0
 12754                           indf2	equ	0xFDF
 12755                           postinc2	equ	0xFDE
 12756                           postdec2	equ	0xFDD
 12757                           fsr2h	equ	0xFDA
 12758                           fsr2l	equ	0xFD9
 12759                           status	equ	0xFD8
 12760                           
 12761                           	psect	intcode_body
 12762  003280                     __pintcode_body:
 12763                           	opt stack 17
 12764  003280                     int_func:
 12765                           	opt stack 17
 12766  003280  CFEA F01B          	movff	fsr0h,??_high_isr+3
 12767  003284  CFE1 F01C          	movff	fsr1l,??_high_isr+4
 12768  003288  CFE2 F01D          	movff	fsr1h,??_high_isr+5
 12769  00328C  CFD9 F01E          	movff	fsr2l,??_high_isr+6
 12770  003290  CFDA F01F          	movff	fsr2h,??_high_isr+7
 12771  003294  CFF3 F020          	movff	prodl,??_high_isr+8
 12772  003298  CFF4 F021          	movff	prodh,??_high_isr+9
 12773  00329C  CFF6 F022          	movff	tblptrl,??_high_isr+10
 12774  0032A0  CFF7 F023          	movff	tblptrh,??_high_isr+11
 12775  0032A4  CFF8 F024          	movff	tblptru,??_high_isr+12
 12776  0032A8  CFF5 F025          	movff	tablat,??_high_isr+13
 12777                           
 12778                           ;interruptions.c: 29: subroutine_interruptions(0b1);
 12779  0032AC  0E01               	movlw	1
 12780  0032AE  EC13  F018         	call	i2_subroutine_interruptions
 12781  0032B2  C025  FFF5         	movff	??_high_isr+13,tablat
 12782  0032B6  C024  FFF8         	movff	??_high_isr+12,tblptru
 12783  0032BA  C023  FFF7         	movff	??_high_isr+11,tblptrh
 12784  0032BE  C022  FFF6         	movff	??_high_isr+10,tblptrl
 12785  0032C2  C021  FFF4         	movff	??_high_isr+9,prodh
 12786  0032C6  C020  FFF3         	movff	??_high_isr+8,prodl
 12787  0032CA  C01F  FFDA         	movff	??_high_isr+7,fsr2h
 12788  0032CE  C01E  FFD9         	movff	??_high_isr+6,fsr2l
 12789  0032D2  C01D  FFE2         	movff	??_high_isr+5,fsr1h
 12790  0032D6  C01C  FFE1         	movff	??_high_isr+4,fsr1l
 12791  0032DA  C01B  FFEA         	movff	??_high_isr+3,fsr0h
 12792  0032DE  C01A  FFE9         	movff	??_high_isr+2,fsr0l
 12793  0032E2  C019  FFFB         	movff	??_high_isr+1,pclatu
 12794  0032E6  C018  FFFA         	movff	??_high_isr,pclath
 12795  0032EA  0011               	retfie		f
 12796  0032EC                     __end_of_high_isr:
 12797                           	opt stack 0
 12798                           pclatu	equ	0xFFB
 12799                           pclath	equ	0xFFA
 12800                           tblptru	equ	0xFF8
 12801                           tblptrh	equ	0xFF7
 12802                           tblptrl	equ	0xFF6
 12803                           tablat	equ	0xFF5
 12804                           prodh	equ	0xFF4
 12805                           prodl	equ	0xFF3
 12806                           intcon	equ	0xFF2
 12807                           intcon2	equ	0xFF1
 12808                           intcon3	equ	0xFF0
 12809                           indf0	equ	0xFEF
 12810                           postinc0	equ	0xFEE
 12811                           fsr0h	equ	0xFEA
 12812                           fsr0l	equ	0xFE9
 12813                           wreg	equ	0xFE8
 12814                           postinc1	equ	0xFE6
 12815                           postdec1	equ	0xFE5
 12816                           fsr1h	equ	0xFE2
 12817                           fsr1l	equ	0xFE1
 12818                           bsr	equ	0xFE0
 12819                           indf2	equ	0xFDF
 12820                           postinc2	equ	0xFDE
 12821                           postdec2	equ	0xFDD
 12822                           fsr2h	equ	0xFDA
 12823                           fsr2l	equ	0xFD9
 12824                           status	equ	0xFD8
 12825                           
 12826 ;; *************** function i2_subroutine_interruptions *****************
 12827 ;; Defined at:
 12828 ;;		line 43 in file "interruptions.c"
 12829 ;; Parameters:    Size  Location     Type
 12830 ;;  priorite        1    wreg     unsigned char 
 12831 ;; Auto vars:     Size  Location     Type
 12832 ;;  priorite        1   22[COMRAM] unsigned char 
 12833 ;; Return value:  Size  Location     Type
 12834 ;;		None               void
 12835 ;; Registers used:
 12836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12837 ;; Tracked objects:
 12838 ;;		On entry : 0/0
 12839 ;;		On exit  : 0/0
 12840 ;;		Unchanged: 0/0
 12841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 12842 ;;      Params:         0       0       0       0
 12843 ;;      Locals:         1       0       0       0
 12844 ;;      Temps:          0       0       0       0
 12845 ;;      Totals:         1       0       0       0
 12846 ;;Total ram usage:        1 bytes
 12847 ;; Hardware stack levels used:    1
 12848 ;; Hardware stack levels required when called:    1
 12849 ;; This function calls:
 12850 ;;		i2_interrupt_RX
 12851 ;;		i2_interrupt_TX
 12852 ;;		i2_interruption_INT0
 12853 ;;		i2_interruption_QEI
 12854 ;;		i2_interruption_timer0
 12855 ;;		i2_interruption_timer1
 12856 ;;		i2_interruption_timer2
 12857 ;;		i2_interuption_QEI_sens
 12858 ;; This function is called by:
 12859 ;;		_high_isr
 12860 ;; This function uses a non-reentrant model
 12861 ;;
 12862                           
 12863                           	psect	text60
 12864  003026                     __ptext60:
 12865                           	opt stack 0
 12866  003026                     i2_subroutine_interruptions:
 12867                           	opt stack 17
 12868                           
 12869                           ;incstack = 0
 12870                           ;i2subroutine_interruptions@priorite stored from wreg
 12871  003026  6E17               	movwf	i2subroutine_interruptions@priorite,c
 12872                           
 12873                           ;interruptions.c: 45: if ( PIR3bits.IC2QEIF == 1 && 0b1 == 1 && priorite == 0b1)
 12874  003028  A4A4               	btfss	4004,2,c	;volatile
 12875  00302A  D006               	goto	i2l366
 12876  00302C  0417               	decf	i2subroutine_interruptions@priorite,w,c
 12877  00302E  A4D8               	btfss	status,2,c
 12878  003030  D003               	goto	i2l366
 12879                           
 12880                           ;interruptions.c: 46: {
 12881                           ;interruptions.c: 47: interruption_QEI();
 12882  003032  ECF8  F01B         	call	i2_interruption_QEI	;wreg free
 12883                           
 12884                           ;interruptions.c: 48: }
 12885  003036  D038               	goto	i2l381
 12886  003038                     i2l366:
 12887                           
 12888                           ;interruptions.c: 49: else if ( PIR3bits.IC3DRIF == 1 && 0b0 == 1 && priorite == 0b1)
 12889  003038  50A4               	movf	4004,w,c	;volatile
 12890  00303A  D006               	goto	i2l368
 12891  00303C  0417               	decf	i2subroutine_interruptions@priorite,w,c
 12892  00303E  A4D8               	btfss	status,2,c
 12893  003040  D003               	goto	i2l368
 12894                           
 12895                           ;interruptions.c: 50: {
 12896                           ;interruptions.c: 51: interuption_QEI_sens();
 12897  003042  EC6F  F01C         	call	i2_interuption_QEI_sens	;wreg free
 12898                           
 12899                           ;interruptions.c: 52: }
 12900  003046  D030               	goto	i2l381
 12901  003048                     i2l368:
 12902                           
 12903                           ;interruptions.c: 53: else if ( INTCONbits.TMR0IF == 1 && 0b0 == 1 && priorite == 0b1)
 12904  003048  50F2               	movf	intcon,w,c	;volatile
 12905  00304A  D006               	goto	i2l370
 12906  00304C  0417               	decf	i2subroutine_interruptions@priorite,w,c
 12907  00304E  A4D8               	btfss	status,2,c
 12908  003050  D003               	goto	i2l370
 12909                           
 12910                           ;interruptions.c: 54: {
 12911                           ;interruptions.c: 55: interruption_timer0();
 12912  003052  EC65  F01C         	call	i2_interruption_timer0	;wreg free
 12913                           
 12914                           ;interruptions.c: 56: }
 12915  003056  D028               	goto	i2l381
 12916  003058                     i2l370:
 12917                           
 12918                           ;interruptions.c: 57: else if ( PIR1bits.TMR1IF == 1 && 0b1 == 1 && priorite == 0b1)
 12919  003058  A09E               	btfss	3998,0,c	;volatile
 12920  00305A  D006               	goto	i2l372
 12921  00305C  0417               	decf	i2subroutine_interruptions@priorite,w,c
 12922  00305E  A4D8               	btfss	status,2,c
 12923  003060  D003               	goto	i2l372
 12924                           
 12925                           ;interruptions.c: 58: {
 12926                           ;interruptions.c: 59: interruption_timer1();
 12927  003062  ECEC  F01A         	call	i2_interruption_timer1	;wreg free
 12928                           
 12929                           ;interruptions.c: 60: }
 12930  003066  D020               	goto	i2l381
 12931  003068                     i2l372:
 12932                           
 12933                           ;interruptions.c: 61: else if ( PIR1bits.TMR2IF == 1 && 0b0 == 1 && priorite == 0b0)
 12934  003068  509E               	movf	3998,w,c	;volatile
 12935  00306A  D006               	goto	i2l374
 12936  00306C  5017               	movf	i2subroutine_interruptions@priorite,w,c
 12937  00306E  A4D8               	btfss	status,2,c
 12938  003070  D003               	goto	i2l374
 12939                           
 12940                           ;interruptions.c: 62: {
 12941                           ;interruptions.c: 63: interruption_timer2();
 12942  003072  EC71  F01C         	call	i2_interruption_timer2	;wreg free
 12943                           
 12944                           ;interruptions.c: 64: }
 12945  003076  D018               	goto	i2l381
 12946  003078                     i2l374:
 12947                           
 12948                           ;interruptions.c: 65: else if (INTCONbits.INT0IF == 1 && 0b1 == 1 && priorite == 0b1)
 12949  003078  A2F2               	btfss	intcon,1,c	;volatile
 12950  00307A  D006               	goto	i2l376
 12951  00307C  0417               	decf	i2subroutine_interruptions@priorite,w,c
 12952  00307E  A4D8               	btfss	status,2,c
 12953  003080  D003               	goto	i2l376
 12954                           
 12955                           ;interruptions.c: 66: {
 12956                           ;interruptions.c: 67: interruption_INT0();
 12957  003082  EC80  F01A         	call	i2_interruption_INT0	;wreg free
 12958                           
 12959                           ;interruptions.c: 68: }
 12960  003086  D010               	goto	i2l381
 12961  003088                     i2l376:
 12962                           
 12963                           ;interruptions.c: 85: else if ( PIR1bits.RCIF == 1 && 0b1 == 1 && priorite == 0b1)
 12964  003088  AA9E               	btfss	3998,5,c	;volatile
 12965  00308A  D006               	goto	i2l378
 12966  00308C  0417               	decf	i2subroutine_interruptions@priorite,w,c
 12967  00308E  A4D8               	btfss	status,2,c
 12968  003090  D003               	goto	i2l378
 12969                           
 12970                           ;interruptions.c: 86: {
 12971                           ;interruptions.c: 87: interrupt_RX();
 12972  003092  EC4D  F01B         	call	i2_interrupt_RX	;wreg free
 12973                           
 12974                           ;interruptions.c: 88: }
 12975  003096  D008               	goto	i2l381
 12976  003098                     i2l378:
 12977                           
 12978                           ;interruptions.c: 89: else if (PIR1bits.TXIF == 1 && 0b0 == 1 && priorite == 0b0)
 12979  003098  509E               	movf	3998,w,c	;volatile
 12980  00309A  D006               	goto	i2l381
 12981  00309C  5017               	movf	i2subroutine_interruptions@priorite,w,c
 12982  00309E  A4D8               	btfss	status,2,c
 12983  0030A0  D003               	goto	i2l381
 12984                           
 12985                           ;interruptions.c: 90: {
 12986                           ;interruptions.c: 91: interrupt_TX();
 12987  0030A2  EC73  F01C         	call	i2_interrupt_TX	;wreg free
 12988  0030A6  D000               	goto	i2l381
 12989  0030A8                     i2l381:
 12990  0030A8  0012               	return		;funcret
 12991  0030AA                     __end_ofi2_subroutine_interruptions:
 12992                           	opt stack 0
 12993                           pclatu	equ	0xFFB
 12994                           pclath	equ	0xFFA
 12995                           tblptru	equ	0xFF8
 12996                           tblptrh	equ	0xFF7
 12997                           tblptrl	equ	0xFF6
 12998                           tablat	equ	0xFF5
 12999                           prodh	equ	0xFF4
 13000                           prodl	equ	0xFF3
 13001                           intcon	equ	0xFF2
 13002                           intcon2	equ	0xFF1
 13003                           intcon3	equ	0xFF0
 13004                           indf0	equ	0xFEF
 13005                           postinc0	equ	0xFEE
 13006                           fsr0h	equ	0xFEA
 13007                           fsr0l	equ	0xFE9
 13008                           wreg	equ	0xFE8
 13009                           postinc1	equ	0xFE6
 13010                           postdec1	equ	0xFE5
 13011                           fsr1h	equ	0xFE2
 13012                           fsr1l	equ	0xFE1
 13013                           bsr	equ	0xFE0
 13014                           indf2	equ	0xFDF
 13015                           postinc2	equ	0xFDE
 13016                           postdec2	equ	0xFDD
 13017                           fsr2h	equ	0xFDA
 13018                           fsr2l	equ	0xFD9
 13019                           status	equ	0xFD8
 13020                           
 13021 ;; *************** function i2_interuption_QEI_sens *****************
 13022 ;; Defined at:
 13023 ;;		line 193 in file "interruptions.c"
 13024 ;; Parameters:    Size  Location     Type
 13025 ;;		None
 13026 ;; Auto vars:     Size  Location     Type
 13027 ;;		None
 13028 ;; Return value:  Size  Location     Type
 13029 ;;		None               void
 13030 ;; Registers used:
 13031 ;;		None
 13032 ;; Tracked objects:
 13033 ;;		On entry : 0/0
 13034 ;;		On exit  : 0/0
 13035 ;;		Unchanged: 0/0
 13036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 13037 ;;      Params:         0       0       0       0
 13038 ;;      Locals:         0       0       0       0
 13039 ;;      Temps:          0       0       0       0
 13040 ;;      Totals:         0       0       0       0
 13041 ;;Total ram usage:        0 bytes
 13042 ;; Hardware stack levels used:    1
 13043 ;; This function calls:
 13044 ;;		Nothing
 13045 ;; This function is called by:
 13046 ;;		i2_subroutine_interruptions
 13047 ;; This function uses a non-reentrant model
 13048 ;;
 13049                           
 13050                           	psect	text61
 13051  0038DE                     __ptext61:
 13052                           	opt stack 0
 13053  0038DE                     i2_interuption_QEI_sens:
 13054                           	opt stack 17
 13055                           
 13056                           ;interruptions.c: 195: PIR3bits.IC3DRIF = 0;
 13057                           
 13058                           ;incstack = 0
 13059  0038DE  96A4               	bcf	4004,3,c	;volatile
 13060  0038E0  0012               	return		;funcret
 13061  0038E2                     __end_ofi2_interuption_QEI_sens:
 13062                           	opt stack 0
 13063                           pclatu	equ	0xFFB
 13064                           pclath	equ	0xFFA
 13065                           tblptru	equ	0xFF8
 13066                           tblptrh	equ	0xFF7
 13067                           tblptrl	equ	0xFF6
 13068                           tablat	equ	0xFF5
 13069                           prodh	equ	0xFF4
 13070                           prodl	equ	0xFF3
 13071                           intcon	equ	0xFF2
 13072                           intcon2	equ	0xFF1
 13073                           intcon3	equ	0xFF0
 13074                           indf0	equ	0xFEF
 13075                           postinc0	equ	0xFEE
 13076                           fsr0h	equ	0xFEA
 13077                           fsr0l	equ	0xFE9
 13078                           wreg	equ	0xFE8
 13079                           postinc1	equ	0xFE6
 13080                           postdec1	equ	0xFE5
 13081                           fsr1h	equ	0xFE2
 13082                           fsr1l	equ	0xFE1
 13083                           bsr	equ	0xFE0
 13084                           indf2	equ	0xFDF
 13085                           postinc2	equ	0xFDE
 13086                           postdec2	equ	0xFDD
 13087                           fsr2h	equ	0xFDA
 13088                           fsr2l	equ	0xFD9
 13089                           status	equ	0xFD8
 13090                           
 13091 ;; *************** function i2_interruption_timer2 *****************
 13092 ;; Defined at:
 13093 ;;		line 129 in file "interruptions.c"
 13094 ;; Parameters:    Size  Location     Type
 13095 ;;		None
 13096 ;; Auto vars:     Size  Location     Type
 13097 ;;		None
 13098 ;; Return value:  Size  Location     Type
 13099 ;;		None               void
 13100 ;; Registers used:
 13101 ;;		None
 13102 ;; Tracked objects:
 13103 ;;		On entry : 0/0
 13104 ;;		On exit  : 0/0
 13105 ;;		Unchanged: 0/0
 13106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 13107 ;;      Params:         0       0       0       0
 13108 ;;      Locals:         0       0       0       0
 13109 ;;      Temps:          0       0       0       0
 13110 ;;      Totals:         0       0       0       0
 13111 ;;Total ram usage:        0 bytes
 13112 ;; Hardware stack levels used:    1
 13113 ;; This function calls:
 13114 ;;		Nothing
 13115 ;; This function is called by:
 13116 ;;		i2_subroutine_interruptions
 13117 ;; This function uses a non-reentrant model
 13118 ;;
 13119                           
 13120                           	psect	text62
 13121  0038E2                     __ptext62:
 13122                           	opt stack 0
 13123  0038E2                     i2_interruption_timer2:
 13124                           	opt stack 17
 13125                           
 13126                           ;interruptions.c: 131: PIR1bits.TMR2IF = 0;
 13127                           
 13128                           ;incstack = 0
 13129  0038E2  929E               	bcf	3998,1,c	;volatile
 13130  0038E4  0012               	return		;funcret
 13131  0038E6                     __end_ofi2_interruption_timer2:
 13132                           	opt stack 0
 13133                           pclatu	equ	0xFFB
 13134                           pclath	equ	0xFFA
 13135                           tblptru	equ	0xFF8
 13136                           tblptrh	equ	0xFF7
 13137                           tblptrl	equ	0xFF6
 13138                           tablat	equ	0xFF5
 13139                           prodh	equ	0xFF4
 13140                           prodl	equ	0xFF3
 13141                           intcon	equ	0xFF2
 13142                           intcon2	equ	0xFF1
 13143                           intcon3	equ	0xFF0
 13144                           indf0	equ	0xFEF
 13145                           postinc0	equ	0xFEE
 13146                           fsr0h	equ	0xFEA
 13147                           fsr0l	equ	0xFE9
 13148                           wreg	equ	0xFE8
 13149                           postinc1	equ	0xFE6
 13150                           postdec1	equ	0xFE5
 13151                           fsr1h	equ	0xFE2
 13152                           fsr1l	equ	0xFE1
 13153                           bsr	equ	0xFE0
 13154                           indf2	equ	0xFDF
 13155                           postinc2	equ	0xFDE
 13156                           postdec2	equ	0xFDD
 13157                           fsr2h	equ	0xFDA
 13158                           fsr2l	equ	0xFD9
 13159                           status	equ	0xFD8
 13160                           
 13161 ;; *************** function i2_interruption_timer1 *****************
 13162 ;; Defined at:
 13163 ;;		line 112 in file "interruptions.c"
 13164 ;; Parameters:    Size  Location     Type
 13165 ;;		None
 13166 ;; Auto vars:     Size  Location     Type
 13167 ;;		None
 13168 ;; Return value:  Size  Location     Type
 13169 ;;		None               void
 13170 ;; Registers used:
 13171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13172 ;; Tracked objects:
 13173 ;;		On entry : 0/0
 13174 ;;		On exit  : 0/0
 13175 ;;		Unchanged: 0/0
 13176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 13177 ;;      Params:         0       0       0       0
 13178 ;;      Locals:         0       0       0       0
 13179 ;;      Temps:          1       0       0       0
 13180 ;;      Totals:         1       0       0       0
 13181 ;;Total ram usage:        1 bytes
 13182 ;; Hardware stack levels used:    1
 13183 ;; This function calls:
 13184 ;;		Nothing
 13185 ;; This function is called by:
 13186 ;;		i2_subroutine_interruptions
 13187 ;; This function uses a non-reentrant model
 13188 ;;
 13189                           
 13190                           	psect	text63
 13191  0035D8                     __ptext63:
 13192                           	opt stack 0
 13193  0035D8                     i2_interruption_timer1:
 13194                           	opt stack 17
 13195                           
 13196                           ;interruptions.c: 114: PIR1bits.TMR1IF = 0;
 13197                           
 13198                           ;incstack = 0
 13199  0035D8  909E               	bcf	3998,0,c	;volatile
 13200                           
 13201                           ;interruptions.c: 115: TMR1 = 65535 - 810;
 13202  0035DA  0EFC               	movlw	252
 13203  0035DC  6ECF               	movwf	4047,c	;volatile
 13204  0035DE  0ED5               	movlw	213
 13205  0035E0  6ECE               	movwf	4046,c	;volatile
 13206                           
 13207                           ;interruptions.c: 117: if (uart_logiciel.transmission_en_cours == 1)
 13208  0035E2  0447               	decf	_uart_logiciel+11,w,c
 13209  0035E4  A4D8               	btfss	status,2,c
 13210  0035E6  D018               	goto	i2l387
 13211                           
 13212                           ;interruptions.c: 118: {
 13213                           ;interruptions.c: 119: PORTCbits.RC5 = uart_logiciel.buffer_uart[uart_logiciel.indice];
 13214  0035E8  5048               	movf	_uart_logiciel+12,w,c
 13215  0035EA  0D01               	mullw	1
 13216  0035EC  0E3C               	movlw	low _uart_logiciel
 13217  0035EE  24F3               	addwf	prodl,w,c
 13218  0035F0  6ED9               	movwf	fsr2l,c
 13219  0035F2  0E00               	movlw	high _uart_logiciel
 13220  0035F4  20F4               	addwfc	prodh,w,c
 13221  0035F6  6EDA               	movwf	fsr2h,c
 13222  0035F8  50DF               	movf	indf2,w,c
 13223  0035FA  6E15               	movwf	??i2_interruption_timer1& (0+255),c
 13224  0035FC  3A15               	swapf	??i2_interruption_timer1,f,c
 13225  0035FE  4615               	rlncf	??i2_interruption_timer1,f,c
 13226  003600  5082               	movf	3970,w,c	;volatile
 13227  003602  1815               	xorwf	??i2_interruption_timer1,w,c
 13228  003604  0BDF               	andlw	-33
 13229  003606  1815               	xorwf	??i2_interruption_timer1,w,c
 13230  003608  6E82               	movwf	3970,c	;volatile
 13231                           
 13232                           ;interruptions.c: 120: uart_logiciel.indice++;
 13233  00360A  2A48               	incf	_uart_logiciel+12,f,c
 13234                           
 13235                           ;interruptions.c: 122: if (uart_logiciel.indice > 10)
 13236  00360C  0E0A               	movlw	10
 13237  00360E  6448               	cpfsgt	_uart_logiciel+12,c
 13238  003610  D005               	goto	i2l390
 13239                           
 13240                           ;interruptions.c: 123: uart_logiciel.transmission_en_cours = 0;
 13241  003612  0E00               	movlw	0
 13242  003614  6E47               	movwf	_uart_logiciel+11,c
 13243                           
 13244                           ;interruptions.c: 124: }
 13245  003616  D002               	goto	i2l390
 13246  003618                     i2l387:
 13247                           
 13248                           ;interruptions.c: 125: else
 13249                           ;interruptions.c: 126: PORTCbits.RC5 = 1;
 13250  003618  8A82               	bsf	3970,5,c	;volatile
 13251  00361A  D000               	goto	i2l390
 13252  00361C                     i2l390:
 13253  00361C  0012               	return		;funcret
 13254  00361E                     __end_ofi2_interruption_timer1:
 13255                           	opt stack 0
 13256                           pclatu	equ	0xFFB
 13257                           pclath	equ	0xFFA
 13258                           tblptru	equ	0xFF8
 13259                           tblptrh	equ	0xFF7
 13260                           tblptrl	equ	0xFF6
 13261                           tablat	equ	0xFF5
 13262                           prodh	equ	0xFF4
 13263                           prodl	equ	0xFF3
 13264                           intcon	equ	0xFF2
 13265                           intcon2	equ	0xFF1
 13266                           intcon3	equ	0xFF0
 13267                           indf0	equ	0xFEF
 13268                           postinc0	equ	0xFEE
 13269                           fsr0h	equ	0xFEA
 13270                           fsr0l	equ	0xFE9
 13271                           wreg	equ	0xFE8
 13272                           postinc1	equ	0xFE6
 13273                           postdec1	equ	0xFE5
 13274                           fsr1h	equ	0xFE2
 13275                           fsr1l	equ	0xFE1
 13276                           bsr	equ	0xFE0
 13277                           indf2	equ	0xFDF
 13278                           postinc2	equ	0xFDE
 13279                           postdec2	equ	0xFDD
 13280                           fsr2h	equ	0xFDA
 13281                           fsr2l	equ	0xFD9
 13282                           status	equ	0xFD8
 13283                           
 13284 ;; *************** function i2_interruption_timer0 *****************
 13285 ;; Defined at:
 13286 ;;		line 104 in file "interruptions.c"
 13287 ;; Parameters:    Size  Location     Type
 13288 ;;		None
 13289 ;; Auto vars:     Size  Location     Type
 13290 ;;		None
 13291 ;; Return value:  Size  Location     Type
 13292 ;;		None               void
 13293 ;; Registers used:
 13294 ;;		wreg, status,2
 13295 ;; Tracked objects:
 13296 ;;		On entry : 0/0
 13297 ;;		On exit  : 0/0
 13298 ;;		Unchanged: 0/0
 13299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 13300 ;;      Params:         0       0       0       0
 13301 ;;      Locals:         0       0       0       0
 13302 ;;      Temps:          0       0       0       0
 13303 ;;      Totals:         0       0       0       0
 13304 ;;Total ram usage:        0 bytes
 13305 ;; Hardware stack levels used:    1
 13306 ;; This function calls:
 13307 ;;		Nothing
 13308 ;; This function is called by:
 13309 ;;		i2_subroutine_interruptions
 13310 ;; This function uses a non-reentrant model
 13311 ;;
 13312                           
 13313                           	psect	text64
 13314  0038CA                     __ptext64:
 13315                           	opt stack 0
 13316  0038CA                     i2_interruption_timer0:
 13317                           	opt stack 17
 13318                           
 13319                           ;interruptions.c: 106: INTCONbits.TMR0IF = 0;
 13320                           
 13321                           ;incstack = 0
 13322  0038CA  94F2               	bcf	intcon,2,c	;volatile
 13323                           
 13324                           ;interruptions.c: 107: TMR0L = 131;
 13325  0038CC  0E83               	movlw	131
 13326  0038CE  6ED6               	movwf	4054,c	;volatile
 13327  0038D0  0012               	return		;funcret
 13328  0038D2                     __end_ofi2_interruption_timer0:
 13329                           	opt stack 0
 13330                           pclatu	equ	0xFFB
 13331                           pclath	equ	0xFFA
 13332                           tblptru	equ	0xFF8
 13333                           tblptrh	equ	0xFF7
 13334                           tblptrl	equ	0xFF6
 13335                           tablat	equ	0xFF5
 13336                           prodh	equ	0xFF4
 13337                           prodl	equ	0xFF3
 13338                           intcon	equ	0xFF2
 13339                           intcon2	equ	0xFF1
 13340                           intcon3	equ	0xFF0
 13341                           indf0	equ	0xFEF
 13342                           postinc0	equ	0xFEE
 13343                           fsr0h	equ	0xFEA
 13344                           fsr0l	equ	0xFE9
 13345                           wreg	equ	0xFE8
 13346                           postinc1	equ	0xFE6
 13347                           postdec1	equ	0xFE5
 13348                           fsr1h	equ	0xFE2
 13349                           fsr1l	equ	0xFE1
 13350                           bsr	equ	0xFE0
 13351                           indf2	equ	0xFDF
 13352                           postinc2	equ	0xFDE
 13353                           postdec2	equ	0xFDD
 13354                           fsr2h	equ	0xFDA
 13355                           fsr2l	equ	0xFD9
 13356                           status	equ	0xFD8
 13357                           
 13358 ;; *************** function i2_interruption_QEI *****************
 13359 ;; Defined at:
 13360 ;;		line 168 in file "interruptions.c"
 13361 ;; Parameters:    Size  Location     Type
 13362 ;;		None
 13363 ;; Auto vars:     Size  Location     Type
 13364 ;;		None
 13365 ;; Return value:  Size  Location     Type
 13366 ;;		None               void
 13367 ;; Registers used:
 13368 ;;		wreg, status,2, status,0
 13369 ;; Tracked objects:
 13370 ;;		On entry : 0/0
 13371 ;;		On exit  : 0/0
 13372 ;;		Unchanged: 0/0
 13373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 13374 ;;      Params:         0       0       0       0
 13375 ;;      Locals:         0       0       0       0
 13376 ;;      Temps:          0       0       0       0
 13377 ;;      Totals:         0       0       0       0
 13378 ;;Total ram usage:        0 bytes
 13379 ;; Hardware stack levels used:    1
 13380 ;; This function calls:
 13381 ;;		Nothing
 13382 ;; This function is called by:
 13383 ;;		i2_subroutine_interruptions
 13384 ;; This function uses a non-reentrant model
 13385 ;;
 13386                           
 13387                           	psect	text65
 13388  0037F0                     __ptext65:
 13389                           	opt stack 0
 13390  0037F0                     i2_interruption_QEI:
 13391                           	opt stack 17
 13392                           
 13393                           ;interruptions.c: 170: PIR3bits.IC2QEIF = 0;
 13394                           
 13395                           ;incstack = 0
 13396  0037F0  94A4               	bcf	4004,2,c	;volatile
 13397                           
 13398                           ;interruptions.c: 171: QEICONbits.QERR = 0;
 13399  0037F2  9CB6               	bcf	4022,6,c	;volatile
 13400                           
 13401                           ;interruptions.c: 173: if (capteur.synchro_debut_tour == 1)
 13402  0037F4  0100               	movlb	0	; () banked
 13403  0037F6  05D9               	decf	(_capteur+1)& (0+255),w,b
 13404  0037F8  A4D8               	btfss	status,2,c
 13405  0037FA  D007               	goto	i2l3424
 13406                           
 13407                           ; BSR set to: 0
 13408                           ;interruptions.c: 174: {
 13409                           ;interruptions.c: 175: capteur.tour_en_cours = 1;
 13410  0037FC  0E01               	movlw	1
 13411  0037FE  0100               	movlb	0	; () banked
 13412  003800  6FD8               	movwf	_capteur& (0+255),b
 13413                           
 13414                           ;interruptions.c: 176: capteur.synchro_debut_tour = 0;
 13415  003802  0E00               	movlw	0
 13416  003804  0100               	movlb	0	; () banked
 13417  003806  6FD9               	movwf	(_capteur+1)& (0+255),b
 13418                           
 13419                           ;interruptions.c: 177: }
 13420  003808  D004               	goto	i2l413
 13421  00380A                     i2l3424:
 13422                           
 13423                           ; BSR set to: 0
 13424                           ;interruptions.c: 178: else
 13425                           ;interruptions.c: 179: capteur.tour_en_cours = 0;
 13426  00380A  0E00               	movlw	0
 13427  00380C  0100               	movlb	0	; () banked
 13428  00380E  6FD8               	movwf	_capteur& (0+255),b
 13429  003810  D000               	goto	i2l413
 13430  003812                     i2l413:
 13431                           
 13432                           ; BSR set to: 0
 13433  003812  0012               	return		;funcret
 13434  003814                     __end_ofi2_interruption_QEI:
 13435                           	opt stack 0
 13436                           pclatu	equ	0xFFB
 13437                           pclath	equ	0xFFA
 13438                           tblptru	equ	0xFF8
 13439                           tblptrh	equ	0xFF7
 13440                           tblptrl	equ	0xFF6
 13441                           tablat	equ	0xFF5
 13442                           prodh	equ	0xFF4
 13443                           prodl	equ	0xFF3
 13444                           intcon	equ	0xFF2
 13445                           intcon2	equ	0xFF1
 13446                           intcon3	equ	0xFF0
 13447                           indf0	equ	0xFEF
 13448                           postinc0	equ	0xFEE
 13449                           fsr0h	equ	0xFEA
 13450                           fsr0l	equ	0xFE9
 13451                           wreg	equ	0xFE8
 13452                           postinc1	equ	0xFE6
 13453                           postdec1	equ	0xFE5
 13454                           fsr1h	equ	0xFE2
 13455                           fsr1l	equ	0xFE1
 13456                           bsr	equ	0xFE0
 13457                           indf2	equ	0xFDF
 13458                           postinc2	equ	0xFDE
 13459                           postdec2	equ	0xFDD
 13460                           fsr2h	equ	0xFDA
 13461                           fsr2l	equ	0xFD9
 13462                           status	equ	0xFD8
 13463                           
 13464 ;; *************** function i2_interruption_INT0 *****************
 13465 ;; Defined at:
 13466 ;;		line 141 in file "interruptions.c"
 13467 ;; Parameters:    Size  Location     Type
 13468 ;;		None
 13469 ;; Auto vars:     Size  Location     Type
 13470 ;;		None
 13471 ;; Return value:  Size  Location     Type
 13472 ;;		None               void
 13473 ;; Registers used:
 13474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13475 ;; Tracked objects:
 13476 ;;		On entry : 0/0
 13477 ;;		On exit  : 0/0
 13478 ;;		Unchanged: 0/0
 13479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 13480 ;;      Params:         0       0       0       0
 13481 ;;      Locals:         0       0       0       0
 13482 ;;      Temps:          2       0       0       0
 13483 ;;      Totals:         2       0       0       0
 13484 ;;Total ram usage:        2 bytes
 13485 ;; Hardware stack levels used:    1
 13486 ;; This function calls:
 13487 ;;		Nothing
 13488 ;; This function is called by:
 13489 ;;		i2_subroutine_interruptions
 13490 ;; This function uses a non-reentrant model
 13491 ;;
 13492                           
 13493                           	psect	text66
 13494  003500                     __ptext66:
 13495                           	opt stack 0
 13496  003500                     i2_interruption_INT0:
 13497                           	opt stack 17
 13498                           
 13499                           ;interruptions.c: 143: if (capteur.tour_en_cours == 1)
 13500                           
 13501                           ; BSR set to: 0
 13502                           ;incstack = 0
 13503  003500  0100               	movlb	0	; () banked
 13504  003502  05D8               	decf	_capteur& (0+255),w,b
 13505  003504  A4D8               	btfss	status,2,c
 13506  003506  D01F               	goto	i2l3416
 13507                           
 13508                           ; BSR set to: 0
 13509                           ;interruptions.c: 144: {
 13510                           ;interruptions.c: 145: if (capteur.indice < 3)
 13511  003508  0E03               	movlw	3
 13512  00350A  0100               	movlb	0	; () banked
 13513  00350C  61F3               	cpfslt	(_capteur+27)& (0+255),b
 13514  00350E  D018               	goto	i2l3414
 13515                           
 13516                           ; BSR set to: 0
 13517                           ;interruptions.c: 146: {
 13518                           ;interruptions.c: 147: capteur.position[capteur.indice++] = POSCNTH * 256 + POSCNTL;
 13519  003510  5066               	movf	3942,w,c	;volatile
 13520  003512  CF67 F015          	movff	3943,??i2_interruption_INT0	;volatile
 13521  003516  6A16               	clrf	(??i2_interruption_INT0+1)& (0+255),c
 13522  003518  C015  F016         	movff	??i2_interruption_INT0,??i2_interruption_INT0+1
 13523  00351C  6A15               	clrf	??i2_interruption_INT0,c
 13524  00351E  2615               	addwf	??i2_interruption_INT0,f,c
 13525  003520  0E00               	movlw	0
 13526  003522  2216               	addwfc	??i2_interruption_INT0+1,f,c
 13527  003524  0100               	movlb	0	; () banked
 13528  003526  51F3               	movf	(_capteur+27)& (0+255),w,b
 13529  003528  0D02               	mullw	2
 13530  00352A  0EED               	movlw	low (_capteur+21)
 13531  00352C  24F3               	addwf	prodl,w,c
 13532  00352E  6ED9               	movwf	fsr2l,c
 13533  003530  0E00               	movlw	high (_capteur+21)
 13534  003532  20F4               	addwfc	prodh,w,c
 13535  003534  6EDA               	movwf	fsr2h,c
 13536  003536  C015  FFDE         	movff	??i2_interruption_INT0,postinc2
 13537  00353A  C016  FFDD         	movff	??i2_interruption_INT0+1,postdec2
 13538  00353E  D000               	goto	i2l3414
 13539  003540                     i2l3414:
 13540                           
 13541                           ; BSR set to: 0
 13542                           ;interruptions.c: 149: else
 13543                           ;interruptions.c: 150: capteur.indice++;
 13544  003540  0100               	movlb	0	; () banked
 13545  003542  2BF3               	incf	(_capteur+27)& (0+255),f,b
 13546                           
 13547                           ; BSR set to: 0
 13548  003544  D000               	goto	i2l3416
 13549  003546                     i2l3416:
 13550                           
 13551                           ; BSR set to: 0
 13552                           ;interruptions.c: 151: }
 13553                           ;interruptions.c: 152: INTCONbits.INT0IF = 0;
 13554  003546  92F2               	bcf	intcon,1,c	;volatile
 13555                           
 13556                           ; BSR set to: 0
 13557  003548  0012               	return		;funcret
 13558  00354A                     __end_ofi2_interruption_INT0:
 13559                           	opt stack 0
 13560                           pclatu	equ	0xFFB
 13561                           pclath	equ	0xFFA
 13562                           tblptru	equ	0xFF8
 13563                           tblptrh	equ	0xFF7
 13564                           tblptrl	equ	0xFF6
 13565                           tablat	equ	0xFF5
 13566                           prodh	equ	0xFF4
 13567                           prodl	equ	0xFF3
 13568                           intcon	equ	0xFF2
 13569                           intcon2	equ	0xFF1
 13570                           intcon3	equ	0xFF0
 13571                           indf0	equ	0xFEF
 13572                           postinc0	equ	0xFEE
 13573                           fsr0h	equ	0xFEA
 13574                           fsr0l	equ	0xFE9
 13575                           wreg	equ	0xFE8
 13576                           postinc1	equ	0xFE6
 13577                           postdec1	equ	0xFE5
 13578                           fsr1h	equ	0xFE2
 13579                           fsr1l	equ	0xFE1
 13580                           bsr	equ	0xFE0
 13581                           indf2	equ	0xFDF
 13582                           postinc2	equ	0xFDE
 13583                           postdec2	equ	0xFDD
 13584                           fsr2h	equ	0xFDA
 13585                           fsr2l	equ	0xFD9
 13586                           status	equ	0xFD8
 13587                           
 13588 ;; *************** function i2_interrupt_TX *****************
 13589 ;; Defined at:
 13590 ;;		line 226 in file "interruptions.c"
 13591 ;; Parameters:    Size  Location     Type
 13592 ;;		None
 13593 ;; Auto vars:     Size  Location     Type
 13594 ;;		None
 13595 ;; Return value:  Size  Location     Type
 13596 ;;		None               void
 13597 ;; Registers used:
 13598 ;;		None
 13599 ;; Tracked objects:
 13600 ;;		On entry : 0/0
 13601 ;;		On exit  : 0/0
 13602 ;;		Unchanged: 0/0
 13603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 13604 ;;      Params:         0       0       0       0
 13605 ;;      Locals:         0       0       0       0
 13606 ;;      Temps:          0       0       0       0
 13607 ;;      Totals:         0       0       0       0
 13608 ;;Total ram usage:        0 bytes
 13609 ;; Hardware stack levels used:    1
 13610 ;; This function calls:
 13611 ;;		Nothing
 13612 ;; This function is called by:
 13613 ;;		i2_subroutine_interruptions
 13614 ;; This function uses a non-reentrant model
 13615 ;;
 13616                           
 13617                           	psect	text67
 13618  0038E6                     __ptext67:
 13619                           	opt stack 0
 13620  0038E6                     i2_interrupt_TX:
 13621                           	opt stack 17
 13622                           
 13623                           ;interruptions.c: 228: PIR1bits.TXIF = 0;
 13624                           
 13625                           ; BSR set to: 0
 13626                           ;incstack = 0
 13627  0038E6  989E               	bcf	3998,4,c	;volatile
 13628  0038E8  0012               	return		;funcret
 13629  0038EA                     __end_ofi2_interrupt_TX:
 13630                           	opt stack 0
 13631                           pclatu	equ	0xFFB
 13632                           pclath	equ	0xFFA
 13633                           tblptru	equ	0xFF8
 13634                           tblptrh	equ	0xFF7
 13635                           tblptrl	equ	0xFF6
 13636                           tablat	equ	0xFF5
 13637                           prodh	equ	0xFF4
 13638                           prodl	equ	0xFF3
 13639                           intcon	equ	0xFF2
 13640                           intcon2	equ	0xFF1
 13641                           intcon3	equ	0xFF0
 13642                           indf0	equ	0xFEF
 13643                           postinc0	equ	0xFEE
 13644                           fsr0h	equ	0xFEA
 13645                           fsr0l	equ	0xFE9
 13646                           wreg	equ	0xFE8
 13647                           postinc1	equ	0xFE6
 13648                           postdec1	equ	0xFE5
 13649                           fsr1h	equ	0xFE2
 13650                           fsr1l	equ	0xFE1
 13651                           bsr	equ	0xFE0
 13652                           indf2	equ	0xFDF
 13653                           postinc2	equ	0xFDE
 13654                           postdec2	equ	0xFDD
 13655                           fsr2h	equ	0xFDA
 13656                           fsr2l	equ	0xFD9
 13657                           status	equ	0xFD8
 13658                           
 13659 ;; *************** function i2_interrupt_RX *****************
 13660 ;; Defined at:
 13661 ;;		line 207 in file "interruptions.c"
 13662 ;; Parameters:    Size  Location     Type
 13663 ;;		None
 13664 ;; Auto vars:     Size  Location     Type
 13665 ;;  interrupt_RX    1   20[COMRAM] unsigned char 
 13666 ;; Return value:  Size  Location     Type
 13667 ;;		None               void
 13668 ;; Registers used:
 13669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13670 ;; Tracked objects:
 13671 ;;		On entry : 0/0
 13672 ;;		On exit  : 0/0
 13673 ;;		Unchanged: 0/0
 13674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
 13675 ;;      Params:         0       0       0       0
 13676 ;;      Locals:         1       0       0       0
 13677 ;;      Temps:          0       0       0       0
 13678 ;;      Totals:         1       0       0       0
 13679 ;;Total ram usage:        1 bytes
 13680 ;; Hardware stack levels used:    1
 13681 ;; This function calls:
 13682 ;;		Nothing
 13683 ;; This function is called by:
 13684 ;;		i2_subroutine_interruptions
 13685 ;; This function uses a non-reentrant model
 13686 ;;
 13687                           
 13688                           	psect	text68
 13689  00369A                     __ptext68:
 13690                           	opt stack 0
 13691  00369A                     i2_interrupt_RX:
 13692                           	opt stack 17
 13693                           
 13694                           ;interruptions.c: 209: PIR1bits.RCIF = 0;
 13695                           
 13696                           ;incstack = 0
 13697  00369A  9A9E               	bcf	3998,5,c	;volatile
 13698                           
 13699                           ;interruptions.c: 210: PORTBbits.RB0 = 1;
 13700  00369C  8081               	bsf	3969,0,c	;volatile
 13701                           
 13702                           ;interruptions.c: 212: if (uart_reception.indice < 100)
 13703  00369E  0E64               	movlw	100
 13704  0036A0  0101               	movlb	1	; () banked
 13705  0036A2  6173               	cpfslt	(_uart_reception+100)& (0+255),b
 13706  0036A4  D011               	goto	i2l3438
 13707                           
 13708                           ; BSR set to: 1
 13709                           ;interruptions.c: 213: {
 13710                           ;interruptions.c: 214: uart_reception.buffer_reeption[uart_reception.indice] = RCREG;
 13711  0036A6  0101               	movlb	1	; () banked
 13712  0036A8  5173               	movf	(_uart_reception+100)& (0+255),w,b
 13713  0036AA  0D01               	mullw	1
 13714  0036AC  0E0F               	movlw	low _uart_reception
 13715  0036AE  24F3               	addwf	prodl,w,c
 13716  0036B0  6ED9               	movwf	fsr2l,c
 13717  0036B2  0E01               	movlw	high _uart_reception
 13718  0036B4  20F4               	addwfc	prodh,w,c
 13719  0036B6  6EDA               	movwf	fsr2h,c
 13720  0036B8  CFAE FFDF          	movff	4014,indf2	;volatile
 13721                           
 13722                           ; BSR set to: 1
 13723                           ;interruptions.c: 215: uart_reception.buffer_vide = 0;
 13724  0036BC  0E00               	movlw	0
 13725  0036BE  0101               	movlb	1	; () banked
 13726  0036C0  6F75               	movwf	(_uart_reception+102)& (0+255),b
 13727                           
 13728                           ; BSR set to: 1
 13729                           ;interruptions.c: 216: uart_reception.indice++;
 13730  0036C2  0101               	movlb	1	; () banked
 13731  0036C4  2B73               	incf	(_uart_reception+100)& (0+255),f,b
 13732                           
 13733                           ;interruptions.c: 217: }
 13734  0036C6  D006               	goto	i2l424
 13735  0036C8                     i2l3438:
 13736                           
 13737                           ; BSR set to: 1
 13738                           ;interruptions.c: 218: else
 13739                           ;interruptions.c: 219: {
 13740                           ;interruptions.c: 220: uart_reception.buffer_plein = 1;
 13741  0036C8  0E01               	movlw	1
 13742  0036CA  0101               	movlb	1	; () banked
 13743  0036CC  6F74               	movwf	(_uart_reception+101)& (0+255),b
 13744                           
 13745                           ; BSR set to: 1
 13746                           ;interruptions.c: 221: uint8_t temp = RCREG;
 13747  0036CE  CFAE F015          	movff	4014,i2interrupt_RX@temp	;volatile
 13748  0036D2  D000               	goto	i2l424
 13749  0036D4                     i2l424:
 13750                           
 13751                           ; BSR set to: 1
 13752  0036D4  0012               	return		;funcret
 13753  0036D6                     __end_ofi2_interrupt_RX:
 13754                           	opt stack 0
 13755                           pclatu	equ	0xFFB
 13756                           pclath	equ	0xFFA
 13757                           tblptru	equ	0xFF8
 13758                           tblptrh	equ	0xFF7
 13759                           tblptrl	equ	0xFF6
 13760                           tablat	equ	0xFF5
 13761                           prodh	equ	0xFF4
 13762                           prodl	equ	0xFF3
 13763                           intcon	equ	0xFF2
 13764                           intcon2	equ	0xFF1
 13765                           intcon3	equ	0xFF0
 13766                           indf0	equ	0xFEF
 13767                           postinc0	equ	0xFEE
 13768                           fsr0h	equ	0xFEA
 13769                           fsr0l	equ	0xFE9
 13770                           wreg	equ	0xFE8
 13771                           postinc1	equ	0xFE6
 13772                           postdec1	equ	0xFE5
 13773                           fsr1h	equ	0xFE2
 13774                           fsr1l	equ	0xFE1
 13775                           bsr	equ	0xFE0
 13776                           indf2	equ	0xFDF
 13777                           postinc2	equ	0xFDE
 13778                           postdec2	equ	0xFDD
 13779                           fsr2h	equ	0xFDA
 13780                           fsr2l	equ	0xFD9
 13781                           status	equ	0xFD8
 13782                           pclatu	equ	0xFFB
 13783                           pclath	equ	0xFFA
 13784                           tblptru	equ	0xFF8
 13785                           tblptrh	equ	0xFF7
 13786                           tblptrl	equ	0xFF6
 13787                           tablat	equ	0xFF5
 13788                           prodh	equ	0xFF4
 13789                           prodl	equ	0xFF3
 13790                           intcon	equ	0xFF2
 13791                           intcon2	equ	0xFF1
 13792                           intcon3	equ	0xFF0
 13793                           indf0	equ	0xFEF
 13794                           postinc0	equ	0xFEE
 13795                           fsr0h	equ	0xFEA
 13796                           fsr0l	equ	0xFE9
 13797                           wreg	equ	0xFE8
 13798                           postinc1	equ	0xFE6
 13799                           postdec1	equ	0xFE5
 13800                           fsr1h	equ	0xFE2
 13801                           fsr1l	equ	0xFE1
 13802                           bsr	equ	0xFE0
 13803                           indf2	equ	0xFDF
 13804                           postinc2	equ	0xFDE
 13805                           postdec2	equ	0xFDD
 13806                           fsr2h	equ	0xFDA
 13807                           fsr2l	equ	0xFD9
 13808                           status	equ	0xFD8
 13809                           
 13810                           	psect	rparam
 13811  0000                     pclatu	equ	0xFFB
 13812                           pclath	equ	0xFFA
 13813                           tblptru	equ	0xFF8
 13814                           tblptrh	equ	0xFF7
 13815                           tblptrl	equ	0xFF6
 13816                           tablat	equ	0xFF5
 13817                           prodh	equ	0xFF4
 13818                           prodl	equ	0xFF3
 13819                           intcon	equ	0xFF2
 13820                           intcon2	equ	0xFF1
 13821                           intcon3	equ	0xFF0
 13822                           indf0	equ	0xFEF
 13823                           postinc0	equ	0xFEE
 13824                           fsr0h	equ	0xFEA
 13825                           fsr0l	equ	0xFE9
 13826                           wreg	equ	0xFE8
 13827                           postinc1	equ	0xFE6
 13828                           postdec1	equ	0xFE5
 13829                           fsr1h	equ	0xFE2
 13830                           fsr1l	equ	0xFE1
 13831                           bsr	equ	0xFE0
 13832                           indf2	equ	0xFDF
 13833                           postinc2	equ	0xFDE
 13834                           postdec2	equ	0xFDD
 13835                           fsr2h	equ	0xFDA
 13836                           fsr2l	equ	0xFD9
 13837                           status	equ	0xFD8


Data Sizes:
    Strings     483
    Constant    27
    Data        1
    BSS         214
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      73
    BANK0           160    105     158
    BANK1           256    105     231
    BANK2           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 15
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), 

    triangulation@y	PTR  size(2) Largest target is 3
		 -> main@y_temp(BANK1[3]), main@y(BANK0[3]), 

    triangulation@x	PTR  size(2) Largest target is 3
		 -> main@x_temp(BANK1[3]), main@x(BANK0[3]), 

    sp__IntToC	PTR unsigned char  size(2) Largest target is 8
		 -> IntToC@out(BANK1[8]), 

    PutsUART@chaine	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_19(CODE[2]), STR_18(CODE[6]), STR_17(CODE[16]), STR_16(CODE[24]), 
		 -> STR_15(CODE[24]), IntToC@out(BANK1[8]), STR_14(CODE[20]), STR_13(CODE[8]), 
		 -> STR_12(CODE[51]), STR_11(CODE[39]), STR_10(CODE[20]), STR_9(CODE[39]), 
		 -> STR_8(CODE[19]), STR_7(CODE[37]), STR_6(CODE[25]), STR_5(CODE[30]), 
		 -> STR_4(CODE[34]), STR_3(CODE[24]), STR_2(CODE[43]), STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_subroutine_interruptions
    i2_subroutine_interruptions->i2_interruption_INT0

Critical Paths under _low_isr in COMRAM

    _low_isr->_subroutine_interruptions
    _subroutine_interruptions->_interruption_INT0

Critical Paths under _main in BANK0

    _triangulation->_Cot
    _saturation->___ftge
    _Cot->_tan
    _tan->_cos
    _cos->_sin
    _sin->___ftdiv
    _floor->___ftadd
    ___altoft->___fttol
    _eval_poly->___ftadd
    _conversion_degre_radian->___ftdiv
    _retrouver_balise_mere->_check_divergence_angle
    _check_divergence_angle->_modulo_angle
    _modulo_angle->___ftsub
    _obtention_angle->___ftdiv
    ___lwtoft->___ftpack
    ___ftdiv->_eval_poly
    _envoit_pwm->___ftge
    _check_divergence_position->_sqrt
    _sqrt->___ftsub
    ___ftsub->_floor
    ___ftadd->___ftneg
    ___ftmul->___ftpack
    ___ftge->___ftneg
    ___ftneg->___ftmul
    _affichage_position->_PutIntUART
    _PutIntUART->_PutsUART
    _PutsUART->_IntToC
    _PutcUART->___awdiv
    _IntToC->___awdiv
    ___awdiv->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_triangulation

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14     9      5  408382
                                             99 BANK0      6     1      5
                                             97 BANK1      8     8      0
                         _PutIntUART
                           _PutsUART
                             ___wmul
                 _affichage_position
          _check_divergence_position
                         _envoit_pwm
                        _init_system
                  _inversion_balises
              _modulo_id_balise_mere
                    _obtention_angle
              _retrouver_balise_mere
                      _triangulation
 ---------------------------------------------------------------------------------
 (1) _triangulation                                      118   105     13  242628
                                              0 BANK1     97    84     13
                                _Cot
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                         _saturation
 ---------------------------------------------------------------------------------
 (2) _saturation                                           6     0      6    6107
                                             35 BANK0      6     0      6
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (2) _Cot                                                  6     3      3  204879
                                             93 BANK0      6     3      3
                            ___ftdiv
            _conversion_degre_radian
                                _tan
 ---------------------------------------------------------------------------------
 (3) _tan                                                  9     6      3  186806
                                             84 BANK0      9     6      3
                            ___ftdiv
                                _cos
                                _sin
 ---------------------------------------------------------------------------------
 (4) _cos                                                  9     6      3   98189
                                             78 BANK0      6     3      3
                            ___ftadd
                             ___ftge
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 13    10      3   83966
                                             65 BANK0     13    10      3
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                                8     5      3   18452
                                             38 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                7     2      5     452
                                              0 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (6) ___altoft                                            10     6      4    2882
                                             15 BANK0     10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           12     5      7   23183
                                             38 BANK0     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _conversion_degre_radian                              3     0      3   13376
                                             65 BANK0      3     0      3
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (1) _retrouver_balise_mere                                0     0      0   47425
                           _PutsUART
             _check_divergence_angle
                  _inversion_balises
              _modulo_id_balise_mere
 ---------------------------------------------------------------------------------
 (2) _modulo_id_balise_mere                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _inversion_balises                                    4     4      0     130
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _check_divergence_angle                              12     6      6   42982
                                             55 BANK0     12     6      6
                            ___ftadd
                             ___ftge
                            ___ftneg
                       _modulo_angle
 ---------------------------------------------------------------------------------
 (3) _modulo_angle                                         3     0      3   25928
                                             52 BANK0      3     0      3
                            ___ftadd
                             ___ftge
                            ___ftneg (ARG)
                            ___ftsub
 ---------------------------------------------------------------------------------
 (1) _obtention_angle                                      6     3      3   16153
                                             65 BANK0      6     3      3
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2709
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    4444
                                             50 BANK0     15     9      6
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_system                                          0     0      0       0
                    _ConfigInterrupt
                        _ConfigPorts
                         _config_QEI
                         _config_pwm
                        _config_uart
                       _init_capteur
                       _init_timer_0
                 _init_uart_logiciel
                _init_uart_reception
                        _reglage_PID
 ---------------------------------------------------------------------------------
 (2) _reglage_PID                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_uart_reception                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_uart_logiciel                                   0     0      0       0
                       _init_timer_1
 ---------------------------------------------------------------------------------
 (3) _init_timer_1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_capteur                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_uart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_pwm                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_QEI                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ConfigPorts                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ConfigInterrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _envoit_pwm                                           6     3      3   15416
                                             35 BANK0      6     3      3
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _check_divergence_position                           24    12     12   50643
                                             71 BANK0     24    12     12
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _sqrt                                                19    16      3   24204
                                             52 BANK0     19    16      3
                             ___ftge
                            ___ftmul
                            ___ftsub
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6   11773
                                             46 BANK0      6     0      6
                            ___ftadd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6   10947
                                             26 BANK0     12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    8824
                                              8 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2524
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    2970
                                             26 BANK0      9     3      6
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3    2452
                                             23 BANK0      3     0      3
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _affichage_position                                   6     0      6   17065
                                             38 BANK0      6     0      6
                         _PutIntUART
                           _PutsUART
                            ___fttol
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             15    11      4     756
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (2) _PutIntUART                                           3     1      2   10702
                                             35 BANK0      3     1      2
                             _IntToC
                           _PutsUART
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _PutsUART                                             5     3      2    4313
                                             30 BANK0      5     3      2
                             _IntToC (ARG)
                           _PutcUART
 ---------------------------------------------------------------------------------
 (3) _PutcUART                                             8     7      1    2680
                                             14 BANK0      8     7      1
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _IntToC                                              16    14      2    6019
                                             14 BANK0     16    14      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    2696
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    2139
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                             17    17      0     177
                                              3 COMRAM    17    17      0
           _subroutine_interruptions
 ---------------------------------------------------------------------------------
 (10) _subroutine_interruptions                            1     1      0     177
                                              2 COMRAM     1     1      0
                       _interrupt_RX
                       _interrupt_TX
                  _interruption_INT0
                   _interruption_QEI
                _interruption_timer0
                _interruption_timer1
                _interruption_timer2
               _interuption_QEI_sens
 ---------------------------------------------------------------------------------
 (11) _interuption_QEI_sens                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _interruption_timer2                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _interruption_timer1                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _interruption_timer0                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _interruption_QEI                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _interruption_INT0                                   2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _interrupt_TX                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _interrupt_RX                                        1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _high_isr                                           14    14      0     177
                                             23 COMRAM    14    14      0
         i2_subroutine_interruptions
 ---------------------------------------------------------------------------------
 (13) i2_subroutine_interruptions                          1     1      0     177
                                             22 COMRAM     1     1      0
                     i2_interrupt_RX
                     i2_interrupt_TX
                i2_interruption_INT0
                 i2_interruption_QEI
              i2_interruption_timer0
              i2_interruption_timer1
              i2_interruption_timer2
             i2_interuption_QEI_sens
 ---------------------------------------------------------------------------------
 (14) i2_interuption_QEI_sens                              0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_interruption_timer2                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_interruption_timer1                               1     1      0       0
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) i2_interruption_timer0                               0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_interruption_QEI                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_interruption_INT0                                 2     2      0       0
                                             20 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (14) i2_interrupt_TX                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (14) i2_interrupt_RX                                      1     1      0       1
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PutIntUART
     _IntToC
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _PutsUART
       _IntToC (ARG)
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _PutcUART (ARG)
         ___awdiv
           ___wmul (ARG)
     ___fttol (ARG)
   _PutsUART
     _IntToC (ARG)
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _PutcUART (ARG)
       ___awdiv
         ___wmul (ARG)
   ___wmul
   _affichage_position
     _PutIntUART
       _IntToC
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _PutsUART
         _IntToC (ARG)
           ___awdiv
             ___wmul (ARG)
           ___wmul
         _PutcUART (ARG)
           ___awdiv
             ___wmul (ARG)
       ___fttol (ARG)
     _PutsUART
       _IntToC (ARG)
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _PutcUART (ARG)
         ___awdiv
           ___wmul (ARG)
     ___fttol
   _check_divergence_position
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftge
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftmul (ARG)
         ___ftpack
     _sqrt
       ___ftge
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftmul
         ___ftpack
       ___ftsub
         ___ftadd
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftge
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___fttol
           _frexp
   _envoit_pwm
     ___ftge
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftmul (ARG)
         ___ftpack
     ___fttol
   _init_system
     _ConfigInterrupt
     _ConfigPorts
     _config_QEI
     _config_pwm
     _config_uart
     _init_capteur
     _init_timer_0
     _init_uart_logiciel
       _init_timer_1
     _init_uart_reception
     _reglage_PID
   _inversion_balises
   _modulo_id_balise_mere
   _obtention_angle
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _eval_poly (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul
           ___ftpack
         ___wmul
     ___ftmul
       ___ftpack
     ___lwtoft
       ___ftpack
   _retrouver_balise_mere
     _PutsUART
       _IntToC (ARG)
         ___awdiv
           ___wmul (ARG)
         ___wmul
       _PutcUART (ARG)
         ___awdiv
           ___wmul (ARG)
     _check_divergence_angle
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftge
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftneg
         ___ftmul (ARG)
           ___ftpack
       _modulo_angle
         ___ftadd
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftge
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftsub (ARG)
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           _floor (ARG)
             ___altoft
               ___ftpack
               ___fttol (ARG)
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftge
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
             ___fttol
             _frexp
     _inversion_balises
     _modulo_id_balise_mere
   _triangulation
     _Cot
       ___ftdiv
         ___ftadd (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _eval_poly (ARG)
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul
             ___ftpack
           ___wmul
       _conversion_degre_radian
         ___ftdiv
           ___ftadd (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _eval_poly (ARG)
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul
               ___ftpack
             ___wmul
         ___ftmul
           ___ftpack
       _tan
         ___ftdiv
           ___ftadd (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
           _eval_poly (ARG)
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul
               ___ftpack
             ___wmul
         _cos
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftge
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
           _sin
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftdiv
               ___ftadd (ARG)
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
               _eval_poly (ARG)
                 ___ftadd
                   ___ftmul (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftmul
                   ___ftpack
                 ___wmul
             ___ftge
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
             ___ftmul
               ___ftpack
             ___ftneg
               ___ftmul (ARG)
                 ___ftpack
             ___ftsub
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               _floor (ARG)
                 ___altoft
                   ___ftpack
                   ___fttol (ARG)
                 ___ftadd
                   ___ftmul (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 ___ftge
                   ___ftneg (ARG)
                     ___ftmul (ARG)
                       ___ftpack
                 ___fttol
                 _frexp
             _eval_poly
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___ftpack
               ___wmul
             _floor
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftge
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
               ___fttol
               _frexp
         _sin
           ___ftadd
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
           ___ftdiv
             ___ftadd (ARG)
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
             _eval_poly (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftmul
                 ___ftpack
               ___wmul
           ___ftge
             ___ftneg (ARG)
               ___ftmul (ARG)
                 ___ftpack
           ___ftmul
             ___ftpack
           ___ftneg
             ___ftmul (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             _floor (ARG)
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
               ___ftadd
                 ___ftmul (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
               ___ftge
                 ___ftneg (ARG)
                   ___ftmul (ARG)
                     ___ftpack
               ___fttol
               _frexp
           _eval_poly
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftmul
               ___ftpack
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
             ___ftadd
               ___ftmul (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
             ___ftge
               ___ftneg (ARG)
                 ___ftmul (ARG)
                   ___ftpack
             ___fttol
             _frexp
     ___ftadd
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
     ___ftdiv
       ___ftadd (ARG)
         ___ftmul (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
       ___ftmul (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___ftmul (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _eval_poly (ARG)
         ___ftadd
           ___ftmul (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___ftmul (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
         ___ftmul
           ___ftpack
         ___wmul
     ___ftmul
       ___ftpack
     ___ftneg
       ___ftmul (ARG)
         ___ftpack
     _saturation
       ___ftge
         ___ftneg (ARG)
           ___ftmul (ARG)
             ___ftpack
       ___ftneg
         ___ftmul (ARG)
           ___ftpack

 _low_isr (ROOT)
   _subroutine_interruptions
     _interrupt_RX
     _interrupt_TX
     _interruption_INT0
     _interruption_QEI
     _interruption_timer0
     _interruption_timer1
     _interruption_timer2
     _interuption_QEI_sens

 _high_isr (ROOT)
   i2_subroutine_interruptions
     i2_interrupt_RX
     i2_interrupt_TX
     i2_interruption_INT0
     i2_interruption_QEI
     i2_interruption_timer0
     i2_interruption_timer1
     i2_interruption_timer2
     i2_interuption_QEI_sens

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     69      E7       7       90.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     69      9E       5       98.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     25      49       1       76.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1CE       3        0.0%
DATA                 0      0     1CE      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon May 04 00:04:01 2015

                       ___altoft@exp 0077               __end_ofi2_interrupt_RX 36D6  
             __end_ofi2_interrupt_TX 38EA                       _ERREUR_VITESSE 00C9  
                      ___altoft@sign 0078                                   l37 0A18  
                                 l74 10E2                         ___awdiv@sign 006B  
                                 bsr 000FE0                 ?_init_uart_reception 0001  
                ___wmul@multiplicand 0062                         __CFG_CP0$OFF 000000  
                       __CFG_CP1$OFF 000000                         __CFG_CP2$OFF 000000  
                       __CFG_CP3$OFF 000000                         ___ftadd@exp1 0085  
                       ___ftadd@exp2 0084                         ___ftadd@sign 0083  
                                l304 17AC                                  l280 10FA  
                                l505 319C                                  l602 237C  
                                l603 2384                                  l287 1464  
                                l631 3854                                  l625 3124  
                                l609 2C1E                                  l619 2AAE  
                                l637 3744                                  l485 26B4  
                                l830 2920                                  l734 2D6A  
                                l583 3354                                  l488 2736  
                                l592 3464                    _inversion_balises 30AA  
                                l596 2850                                  l589 2DFA  
                                l945 24A4                                  l956 246C  
                                l991 1B16                                  l985 1AB2  
                                l986 1CC6                                  l989 1AEC  
                       __CFG_CPB$OFF 000000                                  _PID 0100  
                       __CFG_CPD$OFF 000000                                  _Cot 32EC  
                                _cos 2AB0                                  _tan 3356  
                                _sin 17AE                                  prod 000FF3  
                                wreg 000FE8                   ?_inversion_balises 0001  
__size_ofi2_subroutine_interruptions 0084                         __CFG_LVP$OFF 000000  
                       ___ftdiv@cntr 009B                                 ?_Cot 00BD  
                       ___ftdiv@sign 00A0                                 l1000 1BFA  
                               l1020 20F0                                 l1032 1FE6  
                               l1009 1C24                                 l1017 2128  
                               l1042 3768                                 l1026 29EE  
                               l1220 1A3C                                 l1204 2B66  
                               l1053 225A                                 l1221 1A48  
                               l1049 34B4                                 l1242 2E8A  
                               l1234 25A0                                 l1219 1944  
                               l1236 2594                                 l1182 37A0  
                               l4000 2478                                 l1187 1D14  
                               l1188 1D00                                 l1189 1E8A  
                               l4006 2496                                 l4110 1EDC  
                               l1198 33B8                                 l4040 1AC0  
                               l4024 2CF6                                 l4210 2248  
                               l4202 220A                                 l4114 1EF0  
                               l4026 2D08                                 l4204 221C  
                               l4132 1F60                                 l4108 1EB6  
                               l4052 1B0C                                 l4220 2E1E  
                               l5012 0F4A                                 l4206 222A  
                               l4142 1FA4                                 l4070 1B8E  
                               l4062 1B4E                                 l4046 1AFA  
                               l4302 24F4                                 l4400 1106  
                               l4136 1F7C                                 l4128 1F40  
                               l4080 1BDA                                 l4072 1B9E  
                               l5040 1074                                 l5032 103C  
                               l4154 2964                                 l4146 1FC0  
                               l4138 1F84                                 l4082 1BEA  
                               l4074 1BAA                                 l4242 204C  
                               l4314 25EC                                 l4306 2512  
                               l5034 1050                                 l4340 28B4  
                               l4332 2888                                 l4164 29EA  
                               l4068 1B7E                                 l4236 2012  
                               l4316 2676                                 l5028 102E  
                               ?_cos 00AE                                 l4350 28F0  
                               l4342 28BE                                 l4326 2870  
                               l4174 2154                                 l4158 29A6  
                               l4262 20AE                                 l4238 2038  
                               l4510 2A48                                 l4192 21D8  
                               l4088 1C50                                 l4280 348A  
                               l4272 2102                                 l4432 2B1A  
                               l4338 28A6                                 l4354 2900  
                               l4098 1CA0                                 l4514 2AA0  
                               l4370 17DE                                 l4196 21EC  
                               l4524 30E8                                 l4532 3844  
                               l4612 2D9C                                 l4358 2916  
                               l4438 3216                                 l4198 21F4  
                               l4630 27F8                                 l4382 18DE  
                               l4712 273A                                 l4704 26C2  
                               l4640 284C                                 l4616 2DEC  
                               l4458 14AE                                 l4298 24E0  
                               l4660 1D7E                                 l4708 272C  
                               l4674 1E60                                 l4754 2C16  
                               l4738 2BD0                                 l4932 0BB6  
                               l3990 241A                                 l3982 23B6  
                               l4758 2C1A                                 l4950 0C2C  
                               l4934 0BC2                                 l3992 244C  
                               l3984 23C6                                 l4944 0C08  
                               l4928 0BA8                                 l3994 245C  
                               l3986 23F8                                 l3978 23A0  
                               l4946 0C12                                 l4956 0C8A  
                               l4990 0E54                                 l4992 0E62  
                               l4968 0D12                                 ?_tan 00B4  
                               ?_sin 00A1                                 STR_1 3F8E  
                               STR_2 3E4F                                 STR_3 3F76  
                               STR_4 3EED                                 STR_5 3F0F  
                               STR_6 3F2D                                 STR_7 3EC8  
                               STR_8 3FCE                                 STR_9 3E7A  
                               u3301 1A7E                                 u3501 1EA2  
                               u3521 1ECC                                 u3610 217A  
                               u3291 1A60                                 u3615 2170  
                               u3711 2028                                 u4360 1072  
                               u4417 0A3E                                 u4370 10E0  
                               u4507 0ACE                                 u4427 0A4E  
                               u3900 18D8                                 u4517 0ADE  
                               u4437 0A5E                                 u3591 2140  
                               u4607 0B6E                                 u4527 0AEE  
                               u4447 0A6E                                 u3680 2E50  
                               u4617 0B7E                                 u4537 0AFE  
                               u4457 0A7E                                 u3691 1FFE  
                               u4627 0B8E                                 u4547 0B0E  
                               u4467 0A8E                                 u3780 2504  
                               u4637 0B9E                                 u4557 0B1E  
                               u4477 0A9E                                 u4567 0B2E  
                               u4487 0AAE                                 u3688 2E54  
                               u4577 0B3E                                 u4497 0ABE  
                               u3970 3236                                 u3890 18D6  
                               u4587 0B4E                                 u3980 3278  
                               u4597 0B5E          _check_divergence_angle$3251 009D  
                               u3977 322C                                 u3987 326E  
                ??_inversion_balises 0060                                 _TMR1 000FCE  
                               _main 09F0                         ___ftpack@arg 0060  
                               cos@f 00AE                         ___ftpack@exp 0063  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               indf0 000FEF                                 fsr0l 000FE9  
                               fsr2h 000FDA                                 fsr1l 000FE1  
                               indf2 000FDF                                 fsr2l 000FD9  
                               _sqrt 1CC8                                 tan@x 00B4  
                               pclat 000FFA                                 sin@f 00A1  
                               sin@y 00A4                                 prodh 000FF4  
                               prodl 000FF3                                 start 00A8  
                      __CFG_IESO$OFF 000000                     ?_obtention_angle 00A1  
                 _triangulation$3245 01B2                   _triangulation$3246 01C4  
                 _triangulation$3247 01CA                   _triangulation$3248 01B5  
                 _triangulation$3249 01A6                        __CFG_MCLRE$ON 000000  
                       ___ftmul@cntr 0075                         ___param_bank 000010  
                       ___ftmul@sign 0076                  __end_of_ConfigPorts 2F1A  
            ??i2_interruption_timer0 0015              ??i2_interruption_timer1 0015  
            ??i2_interruption_timer2 0015                         main@ancien_x 00D2  
                       main@ancien_y 00D5                    modulo_angle@angle 0094  
                              ??_Cot 00C0                      ?i2_interrupt_RX 0001  
                    ?i2_interrupt_TX 0001                         ___fttol@exp1 006E  
                              ??_cos 00B1                         ___fttol@lval 006A  
                              ??_tan 00B7                                ??_sin 00A4  
              ??_init_uart_reception 0060            __end_of_inversion_balises 3126  
            __end_of_ConfigInterrupt 2FA2                                ?_main 00C3  
                    __end_of___awdiv 2922                      __end_of___ftadd 1CC8  
                              STR_10 3FBA                                STR_11 3EA1  
                              STR_12 3E1C                                STR_13 3FF1  
                              STR_14 3FA6                                STR_15 3F46  
                              STR_16 3F5E                                STR_17 3FE1  
                              STR_18 3FF9                                STR_19 3F8C  
                    __end_of___ftdiv 212A                      __end_of___ftneg 3776  
                              ?_sqrt 0094                      __end_of___ftmul 1FE8  
                    ___awdiv@divisor 0068                      __end_of___ftsub 34B6  
                    __end_of___fttol 225C                                _LATA0 007C48  
                              _LATA1 007C49                                _LATB0 007C50  
                              _LATA2 007C4A                                _LATB1 007C51  
                              _LATA3 007C4B                                _LATC0 007C58  
                              _LATB2 007C52                                _LATA4 007C4C  
                              _LATC1 007C59                                _LATB3 007C53  
                              _LATA5 007C4D                                _LATD0 007C60  
                              _LATC2 007C5A                                _LATB4 007C54  
                              _LATA6 007C4E                                _LATD1 007C61  
                              _LATC3 007C5B                                _LATB5 007C55  
                              _LATA7 007C4F                                _LATE0 007C68  
                              _LATD2 007C62                                _LATC4 007C5C  
                              _LATB6 007C56                                _LATE1 007C69  
                              _LATD3 007C63                                _LATC5 007C5D  
                              _LATB7 007C57                                _LATE2 007C6A  
                              _LATD4 007C64                                _LATC6 007C5E  
                              _PDC0H 000F78                                _LATD5 007C65  
                              _LATC7 007C5F                                _LATD6 007C66  
                              _PDC1H 000F76                                _LATD7 007C67  
                              _PDC2H 000F74                                _PDC0L 000F79  
                              _PDC3H 000F72                                _PDC1L 000F77  
                              _PDC2L 000F75                                _PDC3L 000F73  
                              i1l413 37EE                                i1l424 3698  
                              i1l370 2FD4                                i1l372 2FE4  
                              i1l381 3024                                i1l390 35D6  
                              i1l374 2FF4                                i1l366 2FB4  
                              i1l376 3004                                i1l368 2FC4  
                              i1l378 3014                                i1l387 35D2  
                              i2l413 3812                                i2l424 36D4  
                              i2l370 3058                                i2l372 3068  
                              i2l381 30A8                                i2l390 361C  
                              i2l374 3078                                i2l366 3038  
                              i2l376 3088                                i2l368 3048  
                              i2l378 3098                                i2l387 3618  
                    ___awdiv@counter 006A      __end_of_conversion_degre_radian 3466  
                              _RCREG 000FAE             __end_of_interruption_QEI 37F0  
                              _TMR0L 000FD6                                _SPBRG 000FAF  
                 __end_ofsin@coeff_a 3E10                   __end_ofsin@coeff_b 3E1C  
                              _TXREG 000FAD                        _triangulation 00AC  
                      __CFG_WRT0$OFF 000000                        __CFG_WRT1$OFF 000000  
                      __CFG_WRT2$OFF 000000                        __CFG_WRT3$OFF 000000  
                     __CFG_EBTR0$OFF 000000                       __CFG_FCMEN$OFF 000000  
                     __CFG_EBTR1$OFF 000000              obtention_angle@position 00A1  
                     __CFG_EBTR2$OFF 000000                       __CFG_EBTR3$OFF 000000  
                      __CFG_WRTB$OFF 000000                        __CFG_WRTC$OFF 000000  
                      __CFG_WRTD$OFF 000000                         ?_init_system 0001  
                     __CFG_EBTRB$OFF 000000           ??_subroutine_interruptions 0003  
                              _floor 24A6                                _frexp 2DFC  
                              _errno 010D                        ___ftpack@sign 0064  
                              main@i 01DF                                main@x 00F8  
                              main@y 00FB             ??i2_interuption_QEI_sens 0015  
                    __end_of_low_isr 00A8                       __CFG_BOREN$OFF 000000  
                              sin@x2 00AA                                tablat 000FF5  
                              sqrt@i 00A0                                sqrt@q 00A1  
                              sqrt@x 00A4                                sqrt@y 0094  
                              sqrt@z 009D                                status 000FD8  
              _retrouver_balise_mere 2B68                     saturation@valeur 0083  
                    __initialization 361E                       __CFG_HPOL$HIGH 000000  
                       ?_reglage_PID 0001                         __end_of_main 10E8  
                       __end_of_sqrt 1E8C                       __CFG_OSC$HSPLL 000000  
                     __CFG_LPOL$HIGH 000000                               ??_main 00C8  
                      ___fttol@sign1 0069                _modulo_id_balise_mere 3836  
                             ??_sqrt 0097                        __activetblptr 000002  
                     ?_triangulation 017E                   i2interrupt_RX@temp 0015  
                   __end_of_PutcUART 1466          ??_check_divergence_position 00B3  
                   __end_of_PutsUART 3280                               ?_floor 0086  
                             ?_frexp 0060                     __end_of___altoft 2D6C  
                   ___awdiv@dividend 0066                               _ANSEL0 000FB8  
                   __end_of___ftpack 24A6                        ?_init_capteur 0001  
       __size_ofi2_interruption_INT0 004A                               i1l3280 34FC  
                             i1l3292 368C                               i1l3268 37E6  
                             i1l3278 34F6                               i2l3414 3540  
                     __CFG_WDTEN$OFF 000000                               i2l3416 3546  
                             i2l3424 380A                               i2l3438 36C8  
                   __end_of___lwtoft 37A2                       __CFG_WINEN$OFF 000000  
                             _TMR0ON 007EAF                               _TMR1ON 007E68  
                             _PTPERH 000F7A                               _PTPERL 000F7B  
                        _ConfigPorts 2E8C         check_divergence_angle@derive 00A0  
 check_divergence_angle@nouvel_angle 009A                        ?_init_timer_0 0001  
                      ?_init_timer_1 0001                               _IntToC 1466  
         __end_of_init_uart_logiciel 38C2                       __CFG_SSPMX$RC7 000000  
                   __end_of_high_isr 32EC                               ___ftge 2922  
                             ___wmul 370E                            ??___awdiv 006A  
                          ??___ftadd 0080                   i2_interruption_QEI 37F0  
                          ??___ftdiv 0098                            ??___ftneg 007A  
               __size_of_config_uart 001C                            ??___ftmul 006E  
                          ??___ftsub 0094                            ??___fttol 0064  
                         _PutIntUART 3814           __size_of_inversion_balises 007C  
                             clear_0 3624                               clear_1 3630  
                             clear_2 363C                     ___awdiv@quotient 006C  
                   ?_ConfigInterrupt 0001                               floor@i 0089  
                             floor@x 0086                ___ftmul@f3_as_product 0072  
                ?i2_interruption_QEI 0001                         __pdataCOMRAM 0049  
                             sin@sgn 00AD                         __mediumconst 3E00  
                          ??_low_isr 0004                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                             sqrt@og 009A                       ??_init_capteur 0060  
    __size_ofi2_interuption_QEI_sens 0004                   _affichage_position 319E  
                         __accesstop 0060              __end_of__initialization 3654  
                         ___altoft@c 006F               ?_retrouver_balise_mere 0001  
                         ___ftadd@f1 007A                           ___ftadd@f2 007D  
                    __CFG_FLTAMX$RC1 000000                 ??i2_interruption_QEI 0015  
                         ___ftge@ff1 007A                           ___ftge@ff2 007D  
                     ??_init_timer_0 0060                       ??_init_timer_1 0060  
                       eval_poly@res 008F                        ___rparam_used 000001  
                         ___ftdiv@f1 0092                           ___ftdiv@f2 0095  
                         ___ftdiv@f3 009C                           ___ftneg@f1 0077  
                  saturation@maximum 0086            _check_divergence_position 225C  
                         ___ftmul@f1 0068                           ___ftmul@f2 006B  
                ?_affichage_position 0086                           ___ftsub@f1 008E  
                         ___ftsub@f2 0091                           ___fttol@f1 0060  
                     __pcstackCOMRAM 0001                        ?_interrupt_RX 0001  
                      ?_interrupt_TX 0001                        __end_of_floor 25A2  
                      __end_of_frexp 2E8C        __size_of_interuption_QEI_sens 0004  
             ?_modulo_id_balise_mere 0001                  affichage_position@x 0086  
                affichage_position@y 0089                      ??_triangulation 00C3  
                         ___lwtoft@c 0068                 ??_affichage_position 008C  
   __end_of_subroutine_interruptions 3026          __end_of_interruption_timer0 38CA  
        __end_of_interruption_timer1 35D8          __end_of_interruption_timer2 38DA  
                            ??_floor 0089                              ??_frexp 0065  
                         __pbssBANK0 00C9                           __pbssBANK1 0100  
               __size_of_init_system 002A                   __size_of_eval_poly 00EE  
                      ?_modulo_angle 0094                     ??i2_interrupt_RX 0015  
                   ??i2_interrupt_TX 0015                              ?_IntToC 006E  
       conversion_degre_radian@angle 00A1                       ??_interrupt_RX 0001  
                     ??_interrupt_TX 0001                              ?___ftge 007A  
                          ?_PutcUART 006E                              ?___wmul 0060  
                          ?_PutsUART 007E                      __CFG_WDPS$32768 000000  
             i2_interuption_QEI_sens 38DE       __size_ofi2_interruption_timer0 0008  
     __size_ofi2_interruption_timer1 0046       __size_ofi2_interruption_timer2 0004  
           ??_check_divergence_angle 009D                          ?_PutIntUART 0083  
                          ?___altoft 006F        __end_ofi2_interruption_timer0 38D2  
      __end_ofi2_interruption_timer1 361E        __end_ofi2_interruption_timer2 38E6  
               __size_of_reglage_PID 0038                            ?___ftpack 0060  
                          ?___lwtoft 0068                      __CFG_PWM4MX$RB5 000000  
                            _MAXCNTH 000F65                              _MAXCNTL 000F64  
                  ?_interruption_QEI 0001                           _config_QEI 33BA  
                  PutcUART@type_uart 0075                           _config_pwm 354A  
                            _POSCNTH 000F67                              _POSCNTL 000F66  
                 ??_interruption_QEI 0001                              _VITESSE 0031  
                          ?_high_isr 0001                              IntToC@i 0072  
                            IntToC@j 007C             ?_conversion_degre_radian 00A1  
                    __CFG_PWMPIN$OFF 000000    check_divergence_position@ancien_x 00A7  
  check_divergence_position@ancien_y 00AA                       ??_modulo_angle 0097  
                       _flag_cpateur 003B                      __CFG_PWRTEN$OFF 000000  
       ??i2_subroutine_interruptions 0017    check_divergence_position@distance 00B3  
                            __Hparam 0000          __end_of_init_uart_reception 38B4  
                    __size_of_IntToC 0348                              __Lparam 0000  
   check_divergence_position@delta_x 00B9     check_divergence_position@delta_y 00BC  
                  triangulation@c12x 01A9                    triangulation@c12y 01AC  
                  triangulation@c23x 01BE                    triangulation@c31x 0197  
                  triangulation@c23y 01C1                    triangulation@c31y 019A  
                         ??_PutcUART 006F                      __size_of___ftge 00CE  
                  triangulation@invD 01A3                              ___awdiv 2852  
                            ___ftadd 1A4A                              ___ftdiv 1FE8  
                         ??_PutsUART 0080                              ___ftneg 3746  
                    __size_of___wmul 0038                              ___ftmul 1E8C  
                            ___ftsub 3466                              ___fttol 212A  
                         _envoit_pwm 2690                 __end_of_init_capteur 2CCA  
                         ??___altoft 0073                  i2_interruption_INT0 3500  
                    __CFG_STVREN$OFF 000000                              __pcinit 361E  
                         ??___ftpack 0065                    __end_of_eval_poly 2690  
                            _capteur 00D8                              __ramtop 0300  
           __size_of_obtention_angle 0078                              __ptext0 09F0  
                            __ptext1 00AC                              __ptext2 2D6C  
                            __ptext3 32EC                              __ptext4 3356  
                            __ptext5 2AB0                              __ptext6 17AE  
                            __ptext7 24A6                              __ptext8 2DFC  
                            __ptext9 2CCA                           ??___lwtoft 006B  
                          _T0CONbits 000FD5                  PutIntUART@type_uart 0085  
                          _T1CONbits 000FCD                         __size_of_Cot 006A  
                       __size_of_cos 00B8                         __size_of_tan 0064  
                       __size_of_sin 029C                 __end_of_init_timer_0 38A0  
               __end_of_init_timer_1 388A                              _low_isr 0018  
               fonction_PID@commande 0037                           ??_high_isr 0018  
                     __pintcode_body 3280                 end_of_initialization 3654  
               ?i2_interruption_INT0 0001                  __size_of_PutIntUART 0022  
                      __Lmediumconst 3E00                              int_func 3280  
                       ?_ConfigPorts 0001    __size_of_subroutine_interruptions 0084  
                          _RCSTAbits 000FAB            ?_subroutine_interruptions 0001  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc1 000FE6  
                            postinc2 000FDE                      _OVERFLOW_CODEUR 003A  
                         _saturation 2D6C      __size_of_check_divergence_angle 00E0  
                          _PORTBbits 000F81                            _PORTCbits 000F82  
 __size_of_check_divergence_position 012A                            _PORTDbits 000F83  
                 _init_uart_logiciel 38B4                          ?_config_QEI 0001  
                          _TRISAbits 000F92                            _TRISBbits 000F93  
                          _TRISCbits 000F94                          ?_config_pwm 0001  
                          _TRISDbits 000F95                            _TRISEbits 000F96  
                        _CAP1CONbits 000F63                 __end_of_interrupt_RX 369A  
               __end_of_interrupt_TX 38DE                  ?_init_uart_logiciel 0001  
                   envoit_pwm@valeur 0083                 obtention_angle@angle 00A4  
            ??_retrouver_balise_mere 00A3                ??i2_interruption_INT0 0015  
                          IntToC@out 0176                          ___ftdiv@exp 009F  
                          _TXSTAbits 000FAC                     __CFG_T1OSCMX$OFF 000000  
                         main@x_temp 01E1                           main@y_temp 01E4  
                      ??_config_uart 0060   check_divergence_angle@ancien_angle 0097  
                        ___ftmul@exp 0071                       __end_of_IntToC 17AE  
            ??_modulo_id_balise_mere 0060                 ??_init_uart_logiciel 0060  
                        ?_envoit_pwm 0083                       __end_of___ftge 29F0  
                   __CFG_EXCLKMX$RC3 000000                       __end_of___wmul 3746  
                        _BAUDCONbits 000FAA                        __pidataCOMRAM 38EA  
                  main@premiere_fois 0049                           floor@expon 008C  
               __end_of_modulo_angle 2AB0    __end_of_check_divergence_position 2386  
                start_initialization 361E                           eval_poly@d 0089  
                         eval_poly@n 008B                           eval_poly@x 0086  
                        __end_of_Cot 3356                    ??_obtention_angle 00A4  
                        __end_of_cos 2B68                          __end_of_tan 33BA  
                        __end_of_sin 1A4A             __size_of_ConfigInterrupt 0088  
       __end_of_interuption_QEI_sens 38D6               _check_divergence_angle 2772  
                         frexp@value 0060   __end_ofi2_subroutine_interruptions 30AA  
         i2_subroutine_interruptions 3026          __size_ofi2_interruption_QEI 0024  
                           ??_IntToC 0070                __size_of_init_capteur 00AA  
                __size_of_config_QEI 0058              ?i2_interuption_QEI_sens 0001  
                           ??___ftge 0080                  __size_of_config_pwm 0048  
                           ??___wmul 0064                          ?_saturation 0083  
                       ??_PutIntUART 0085                    __size_of_PutcUART 037E  
              __size_of_init_timer_0 0016                __size_of_init_timer_1 0018  
                __end_of_config_uart 3872                    __size_of_PutsUART 006E  
                        _DFLTCONbits 000F60                  triangulation@angle1 0182  
                triangulation@angle2 0185                  triangulation@angle3 0188  
                  __size_of___altoft 00A2                  triangulation@cot_12 01CD  
                triangulation@cot_23 01D0                  triangulation@cot_31 01C7  
                  __size_of___ftpack 0120                __end_of_triangulation 09F0  
                        __pbssCOMRAM 0026                    __size_of___lwtoft 002C  
                      __pcstackBANK0 0060                        __pcstackBANK1 017E  
        __size_of_affichage_position 0074                        ??_init_system 0060  
                       _init_capteur 2C20                  __size_of_envoit_pwm 00E2  
                  __size_of_high_isr 32E4                           sin@coeff_a 3E01  
                         sin@coeff_b 3E10                   __end_of_PutIntUART 3836  
 i2subroutine_interruptions@priorite 0017     subroutine_interruptions@priorite 0003  
       __size_of_interruption_timer0 0008         __size_of_interruption_timer1 0046  
       __size_of_interruption_timer2 0004            __size_of_interruption_QEI 0024  
     __end_ofi2_interuption_QEI_sens 38E2                 __size_of_ConfigPorts 008E  
                       _init_timer_0 388A                         _init_timer_1 3872  
                      ??_reglage_PID 0060                            __pintcode 0008  
                      __pmediumconst 3E00                             ?___awdiv 0066  
                           ?___ftadd 007A                             ?___ftdiv 0092  
                           ?___ftneg 0077     __size_of_conversion_degre_radian 0054  
                           ?___ftmul 0068                             ?___ftsub 008E  
                           ?___fttol 0060                          __pintcodelo 0018  
                     _uart_reception 010F                i2_interruption_timer0 38CA  
              i2_interruption_timer1 35D8                i2_interruption_timer2 38E2  
              __size_of_interrupt_RX 003C                __size_of_interrupt_TX 0004  
                     asserv@commande 00F5                            _eval_poly 25A2  
                  PutsUART@type_uart 0082                             ?_low_isr 0001  
                   triangulation@k31 019D                     triangulation@x1_ 01D3  
                   triangulation@x3_ 01D9                     triangulation@y1_ 01D6  
                   triangulation@y3_ 01DC                 get_valeur_codeur@res 0109  
                      PutcUART@octet 006E                       __size_of_floor 00FC  
                     __size_of_frexp 0090                    _interruption_INT0 34B6  
                __size_of_saturation 0090                  __end_of_init_system 37CC  
                     ___wmul@product 0064                             _LATCbits 000F8B  
                 ?_interruption_INT0 0001                    ??_ConfigInterrupt 0060  
                           _IPR1bits 000F9F                             _IPR2bits 000FA2  
                           _PIE1bits 000F9D                             _IPR3bits 000FA5  
                           _PIE2bits 000FA0                             _PIE3bits 000FA3  
                           Cot@angle 00BD                             _PIR1bits 000F9E  
                           _PIR2bits 000FA1                             _PIR3bits 000FA4  
                        _config_uart 3856                             _RCONbits 000FD0  
                ??_interruption_INT0 0001                         _interrupt_RX 365E  
                       _interrupt_TX 38DA                __size_of_modulo_angle 00C0  
                           _Cot$3250 00C0                 _interuption_QEI_sens 38D2  
       __size_of_init_uart_reception 0014              __size_ofi2_interrupt_RX 003C  
            __size_ofi2_interrupt_TX 0004                    ___wmul@multiplier 0060  
                __end_of_reglage_PID 370E                             IntToC@nb 006E  
                       ??_config_QEI 0060                           ?_eval_poly 0086  
                       ??_config_pwm 0060            __end_of_interruption_INT0 3500  
                        _INTCON2bits 000FF1                          _INTCON3bits 000FF0  
     __size_of_retrouver_balise_mere 00B8        __end_of_retrouver_balise_mere 2C20  
                          frexp@eptr 0063                         _modulo_angle 29F0  
                           __Hrparam 0000                             __Lrparam 0000  
                 __end_of_config_QEI 3412                             _PutcUART 10E8  
                 __end_of_config_pwm 3592                         ??_envoit_pwm 0086  
                           _PutsUART 3212       __size_of_modulo_id_balise_mere 0020  
                   __size_of___awdiv 00D0        __end_of_modulo_id_balise_mere 3856  
                   interrupt_RX@temp 0001                      _obtention_angle 3126  
                   __size_of___ftadd 027E                ?_interuption_QEI_sens 0001  
                   __size_of___ftdiv 0142                     __size_of___ftneg 0030  
                           ___altoft 2CCA                     __size_of___ftmul 015C  
                   __size_of___ftsub 0050                     __size_of___fttol 0132  
                           _cos$3255 00B1                             ___ftpack 2386  
             ?i2_interruption_timer0 0001               ?i2_interruption_timer1 0001  
             ?i2_interruption_timer2 0001                             ___lwtoft 3776  
        __end_ofi2_interruption_INT0 354A                             _tan$3253 00B7  
                           _tan$3254 00BA              ?_check_divergence_angle 0097  
                   __size_of_low_isr 0090                             __ptext10 25A2  
                           __ptext11 3412                             __ptext20 37A2  
                           __ptext12 2B68                             __ptext21 36D6  
                           __ptext13 3836                             __ptext30 2E8C  
                           __ptext22 38A0                             __ptext14 30AA  
                           __ptext31 2F1A                             __ptext23 38B4  
                           __ptext15 2772                             __ptext40 3746  
                           __ptext32 2690                             __ptext24 3872  
                           __ptext16 29F0                             __ptext41 319E  
                           __ptext33 225C                             __ptext25 388A  
                           __ptext17 3126                             __ptext50 2FA2  
                           __ptext42 212A                             __ptext34 1CC8  
                           __ptext26 2C20                             __ptext18 3776  
                           __ptext51 38D2                             __ptext43 3814  
                           __ptext35 3466                             __ptext27 3856  
                           __ptext19 1FE8                             __ptext60 3026  
                           __ptext52 38D6                             __ptext44 3212  
                           __ptext36 1A4A                             __ptext28 354A  
                           __ptext61 38DE                             __ptext53 3592  
                           __ptext45 10E8                             __ptext37 1E8C  
                           __ptext29 33BA                             __ptext62 38E2  
                           __ptext54 38C2                             __ptext46 1466  
                           __ptext38 2386                             __ptext63 35D8  
                           __ptext55 37CC                             __ptext47 370E  
                           __ptext39 2922                             __ptext64 38CA  
                           __ptext56 34B6                             __ptext48 2852  
                           __ptext65 37F0                             __ptext57 38DA  
                        _init_system 37A2                             __ptext66 3500  
                           __ptext58 365E                             __ptext67 38E6  
                           __ptext68 369A                             _sin$3256 00A7  
                       PutIntUART@nb 0083                        _uart_logiciel 003C  
                           _high_isr 0008                inversion_balises@temp 0061  
                 __end_of_envoit_pwm 2772                      triangulation@x1 018B  
                    triangulation@x2 01B8                      triangulation@x3 0191  
                    triangulation@y1 018E                      triangulation@y2 01BB  
                    triangulation@y3 0194                        __size_of_main 06F8  
                      __size_of_sqrt 01C4                     _interruption_QEI 37CC  
        ?i2_subroutine_interruptions 0001             _subroutine_interruptions 2FA2  
            _conversion_degre_radian 3412                          _reglage_PID 36D6  
        __size_of_init_uart_logiciel 000E                             _position 0026  
                       ??_saturation 0089                             main@argc 00C3  
                           main@argv 00C5       _check_divergence_position$3252 00B6  
                _interruption_timer0 38C2                  _interruption_timer1 3592  
                _interruption_timer2 38D6                           _INTCONbits 000FF2  
     __end_of_check_divergence_angle 2852                          ??_eval_poly 008D  
         ?_check_divergence_position 00A7                           _QEICONbits 000FB6  
         __size_of_interruption_INT0 004A                             intlevel1 0000  
                           intlevel2 0000           __end_ofi2_interruption_QEI 3814  
                 __end_of_saturation 2DFC                 ?_interruption_timer0 0001  
               ?_interruption_timer1 0001                 ?_interruption_timer2 0001  
                     triangulation@D 01A0                       triangulation@K 01AF  
                     triangulation@x 017E                       triangulation@y 0180  
            __end_of_obtention_angle 319E                          _PWMCON0bits 000F6F  
                        _PWMCON1bits 000F6E               ??_interuption_QEI_sens 0001  
               envoit_pwm@abs_valeur 0086                           _PTCON0bits 000F7F  
                     PutsUART@chaine 007E                           _PTCON1bits 000F7E  
                     i2_interrupt_RX 369A                       i2_interrupt_TX 38E6  
         __end_of_affichage_position 3212                      _ConfigInterrupt 2F1A  
    inversion_balises@id_balise_mere 0060           check_divergence_position@x 00AD  
         check_divergence_position@y 00B0                  _init_uart_reception 38A0  
                      ??_ConfigPorts 0060                ??_interruption_timer0 0001  
              ??_interruption_timer1 0001                ??_interruption_timer2 0001  
          ??_conversion_degre_radian 00A4               __size_of_triangulation 0944  
                       ?_config_uart 0001  
